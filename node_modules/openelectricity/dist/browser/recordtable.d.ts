/**
 * RecordTable implementation for OpenElectricity API
 * Provides a simple interface for navigating record-style data like facilities
 */
export interface IRecord {
    [key: string]: string | number | boolean | null;
}
export declare class RecordTable<T extends IRecord = IRecord> {
    private records;
    private columnNames;
    constructor(records: T[]);
    /**
     * Get all records
     */
    getRecords(): T[];
    /**
     * Get available column names
     */
    getColumns(): string[];
    /**
     * Get a subset of columns
     */
    select(columns: string[]): RecordTable<T>;
    /**
     * Filter records based on a condition
     */
    filter(condition: (record: T) => boolean): RecordTable<T>;
    /**
     * Sort records by specified columns
     */
    sortBy(columns: string[], ascending?: boolean): RecordTable<T>;
    /**
     * Get unique values in a column
     */
    unique(column: string): (string | number | boolean | null)[];
    /**
     * Get a slice of records
     */
    slice(start?: number, end?: number): RecordTable<T>;
    /**
     * Convert to array format
     */
    toArray(): T[];
    /**
     * Convert to JSON string with pretty formatting
     */
    toString(): string;
}
