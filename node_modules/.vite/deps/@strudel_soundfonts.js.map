{
  "version": 3,
  "sources": ["webpack://SoundFont2/webpack/universalModuleDefinition", "webpack://SoundFont2/webpack/bootstrap", "webpack://SoundFont2/src/chunk.ts", "webpack://SoundFont2/src/chunks/generators.ts", "webpack://SoundFont2/src/chunks/index.ts", "webpack://SoundFont2/src/chunks/instruments/headers.ts", "webpack://SoundFont2/src/chunks/instruments/index.ts", "webpack://SoundFont2/src/chunks/modulators.ts", "webpack://SoundFont2/src/chunks/presets/headers.ts", "webpack://SoundFont2/src/chunks/presets/index.ts", "webpack://SoundFont2/src/chunks/samples/headers.ts", "webpack://SoundFont2/src/chunks/samples/index.ts", "webpack://SoundFont2/src/chunks/zones.ts", "webpack://SoundFont2/src/constants.ts", "webpack://SoundFont2/src/index.ts", "webpack://SoundFont2/src/riff/chunkIterator.ts", "webpack://SoundFont2/src/riff/index.ts", "webpack://SoundFont2/src/riff/parseError.ts", "webpack://SoundFont2/src/riff/parser.ts", "webpack://SoundFont2/src/riff/riffChunk.ts", "webpack://SoundFont2/src/soundFont2.ts", "webpack://SoundFont2/src/types/generator.ts", "webpack://SoundFont2/src/types/index.ts", "webpack://SoundFont2/src/types/modulator.ts", "webpack://SoundFont2/src/types/sample.ts", "webpack://SoundFont2/src/utils/buffer.ts", "webpack://SoundFont2/src/utils/index.ts", "webpack://SoundFont2/src/utils/memoize.ts", "../../nanostores/clean-stores/index.js", "../../nanostores/atom/index.js", "../../nanostores/map/index.js", "../../superdough/dist/index.mjs", "../../@strudel/draw/dist/index.mjs", "../../@strudel/webaudio/dist/index.mjs", "../../sfumato/dist/sfumato.js", "../../@strudel/soundfonts/dist/index.mjs"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SoundFont2\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SoundFont2\"] = factory();\n\telse\n\t\troot[\"SoundFont2\"] = factory();\n})(window, function() {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n", "import { ParseError, RIFFChunk } from './riff';\nimport { MetaData, PresetData } from './types';\nimport { SF_INFO_CHUNKS, SF_VERSION_LENGTH } from './constants';\nimport {\n  getGenerators,\n  getInstrumentHeaders,\n  getModulators,\n  getPresetHeaders,\n  getSampleHeaders,\n  getZones\n} from './chunks';\n\nexport class SF2Chunk extends RIFFChunk {\n  /**\n   * All sub-chunks of this `SF2Chunk` as `SF2Chunk`.\n   */\n  public readonly subChunks: SF2Chunk[];\n\n  public constructor(chunk: RIFFChunk) {\n    super(chunk.id, chunk.length, chunk.buffer, chunk.subChunks);\n\n    this.subChunks = chunk.subChunks.map(subChunk => new SF2Chunk(subChunk));\n  }\n\n  /**\n   * Get meta data from the chunk. This assumes the chunk is a LIST chunk, containing INFO\n   * sub-chunks.\n   */\n  public getMetaData(): MetaData {\n    if (this.id !== 'LIST') {\n      throw new ParseError('Unexpected chunk ID', `'LIST'`, `'${this.id}'`);\n    }\n\n    const info = this.subChunks.reduce<{ [key in SF_INFO_CHUNKS]?: string }>((target, chunk) => {\n      if (chunk.id === 'ifil' || chunk.id === 'iver') {\n        // ifil and iver length must be 4 bytes\n        if (chunk.length !== SF_VERSION_LENGTH) {\n          throw new ParseError(`Invalid size for the '${chunk.id}' sub-chunk`);\n        }\n        target[chunk.id as SF_INFO_CHUNKS] = `${chunk.getInt16()}.${chunk.getInt16(2)}`;\n      } else {\n        target[chunk.id as SF_INFO_CHUNKS] = chunk.getString();\n      }\n\n      return target;\n    }, {});\n\n    if (!info.ifil) {\n      throw new ParseError(`Missing required 'ifil' sub-chunk`);\n    }\n\n    if (!info.INAM) {\n      throw new ParseError(`Missing required 'INAM' sub-chunk`);\n    }\n\n    return {\n      version: info.ifil,\n      soundEngine: info.isng || 'EMU8000',\n      name: info.INAM,\n      rom: info.irom,\n      romVersion: info.iver,\n      creationDate: info.ICRD,\n      author: info.IENG,\n      product: info.IPRD,\n      copyright: info.ICOP,\n      comments: info.ICMT,\n      createdBy: info.ISFT\n    };\n  }\n\n  /**\n   * Get the sample data as a unsigned 8-bit buffer from the chunk. This assumes the chunk is a\n   * LIST chunk containing a smpl sub-chunk.\n   */\n  public getSampleData(): Uint8Array {\n    if (this.id !== 'LIST') {\n      throw new ParseError('Unexpected chunk ID', `'LIST'`, `'${this.id}'`);\n    }\n\n    const sampleChunk = this.subChunks[0];\n    if (sampleChunk.id !== 'smpl') {\n      throw new ParseError('Invalid chunk signature', `'smpl'`, `'${sampleChunk.id}'`);\n    }\n\n    return sampleChunk.buffer;\n  }\n\n  /**\n   * Get the preset data from the chunk. This assumes the chunk is a LIST chunk containing the\n   * preset data sub-chunks.\n   */\n  public getPresetData(): PresetData {\n    if (this.id !== 'LIST') {\n      throw new ParseError('Unexpected chunk ID', `'LIST'`, `'${this.id}'`);\n    }\n\n    return {\n      presetHeaders: getPresetHeaders(this.subChunks[0]),\n      presetZones: getZones(this.subChunks[1], 'pbag'),\n      presetModulators: getModulators(this.subChunks[2], 'pmod'),\n      presetGenerators: getGenerators(this.subChunks[3], 'pgen'),\n      instrumentHeaders: getInstrumentHeaders(this.subChunks[4]),\n      instrumentZones: getZones(this.subChunks[5], 'ibag'),\n      instrumentModulators: getModulators(this.subChunks[6], 'imod'),\n      instrumentGenerators: getGenerators(this.subChunks[7], 'igen'),\n      sampleHeaders: getSampleHeaders(this.subChunks[8])\n    };\n  }\n}\n", "import { SF2Chunk } from '~/chunk';\nimport { ParseError } from '~/riff';\nimport { Generator, GeneratorType } from '~/types';\nimport { SF_GENERATOR_SIZE } from '~/constants';\n\n/**\n * An array of GeneratorTypes that cannot be specified for presets. If one of these generator types\n * is found, the generator should be ignored.\n */\nconst PRESET_TYPES_BLACKLIST: number[] = [\n  GeneratorType.StartAddrsOffset,\n  GeneratorType.EndAddrsOffset,\n  GeneratorType.StartLoopAddrsOffset,\n  GeneratorType.EndLoopAddrsOffset,\n  GeneratorType.StartAddrsCoarseOffset,\n  GeneratorType.EndAddrsCoarseOffset,\n  GeneratorType.StartLoopAddrsCoarseOffset,\n  GeneratorType.KeyNum,\n  GeneratorType.Velocity,\n  GeneratorType.EndLoopAddrsCoarseOffset,\n  GeneratorType.SampleModes,\n  GeneratorType.ExclusiveClass,\n  GeneratorType.OverridingRootKey\n];\n\n/**\n * An array of GeneratorTypes that cannot be specified for instruments. If one of these generator\n * types is found, the generator should be ignored.\n */\nconst INSTRUMENT_TYPES_BLACKLIST: number[] = [\n  GeneratorType.Unused1,\n  GeneratorType.Unused2,\n  GeneratorType.Unused3,\n  GeneratorType.Unused4,\n  GeneratorType.Reserved1,\n  GeneratorType.Reserved2,\n  GeneratorType.Reserved3\n];\n\n/**\n * These GeneratorTypes specify a range of key numbers or velocity.\n */\nconst RANGE_TYPES: number[] = [GeneratorType.KeyRange, GeneratorType.VelRange];\n\n/**\n * Get all generators for either an preset generator chunk or a instrument generator chunk.\n *\n * TODO: Check if generator chunk is valid, by following the rules defined in the spec. See for\n * example: https://github.com/FluidSynth/fluidsynth/blob/v2.0.3/src/sfloader/fluid_sffile.c\n *\n * @param {SF2Chunk} chunk - The input chunk\n * @param {string} type - The type, can be 'pgen' or 'igen'\n */\nexport const getGenerators = (chunk: SF2Chunk, type: 'pgen' | 'igen'): Generator[] => {\n  if (chunk.id !== type) {\n    throw new ParseError('Unexpected chunk ID', `'${type}'`, `'${chunk.id}'`);\n  }\n\n  if (chunk.length % SF_GENERATOR_SIZE) {\n    throw new ParseError(`Invalid size for the '${type}' sub-chunk`);\n  }\n\n  return chunk.iterate<Generator>(iterator => {\n    const id = iterator.getInt16();\n\n    // Ignore invalid IDs\n    if (!GeneratorType[id]) {\n      return null;\n    }\n\n    if (type === 'pgen' && PRESET_TYPES_BLACKLIST.includes(id)) {\n      return null;\n    }\n\n    if (type === 'igen' && INSTRUMENT_TYPES_BLACKLIST.includes(id)) {\n      return null;\n    }\n\n    if (RANGE_TYPES.includes(id)) {\n      return {\n        id,\n        range: {\n          lo: iterator.getByte(),\n          hi: iterator.getByte()\n        }\n      };\n    }\n\n    return {\n      id,\n      value: iterator.getInt16BE()\n    };\n  });\n};\n", "export * from './instruments';\nexport * from './presets';\nexport * from './samples';\nexport * from './generators';\nexport * from './modulators';\nexport * from './zones';\n", "import { SF2Chunk } from '~/chunk';\nimport { ParseError } from '~/riff';\nimport { SF_INSTRUMENT_HEADER_SIZE } from '~/constants';\nimport { InstrumentHeader } from '~/types';\n\n/**\n * Get all instrument headers from a `inst` sub-chunk.\n *\n * @param {SF2Chunk} chunk - The input chunk\n */\nexport const getInstrumentHeaders = (chunk: SF2Chunk): InstrumentHeader[] => {\n  if (chunk.id !== 'inst') {\n    throw new ParseError('Unexpected chunk ID', `'inst'`, `'${chunk.id}'`);\n  }\n\n  if (chunk.length % SF_INSTRUMENT_HEADER_SIZE) {\n    throw new ParseError(`Invalid size for the 'inst' sub-chunk`);\n  }\n\n  return chunk.iterate<InstrumentHeader>(iterator => {\n    return {\n      name: iterator.getString(),\n      bagIndex: iterator.getInt16()\n    };\n  });\n};\n", "export * from './headers';\n", "import { SF2Chunk } from '~/chunk';\nimport { Modulator, ControllerValue } from '~/types';\nimport { ParseError } from '~/riff';\nimport { SF_MODULATOR_SIZE } from '~/constants';\n\n/**\n * Get the modulator enumerator value from a 16-bit integer.\n *\n * @param {number} value - The 16-bit integer\n */\nconst getModulatorValue = (value: number): ControllerValue => {\n  return {\n    type: (value >> 10) & 0x3f,\n    polarity: (value >> 9) & 1,\n    direction: (value >> 8) & 1,\n    palette: (value >> 7) & 1,\n    index: value & 0x7f\n  };\n};\n\n/**\n * Get the modulators from either a `pmod` (presets) or `imod` (instruments) chunk.\n *\n * @param {SF2Chunk} chunk - The input chunk\n * @param {string} type - The type of chunk, either 'pmod' or 'imod'\n */\nexport const getModulators = (chunk: SF2Chunk, type: 'pmod' | 'imod'): Modulator[] => {\n  if (chunk.id !== type) {\n    throw new ParseError('Unexpected chunk ID', `'${type}'`, `'${chunk.id}'`);\n  }\n\n  if (chunk.length % SF_MODULATOR_SIZE) {\n    throw new ParseError(`Invalid size for the '${type}' sub-chunk`);\n  }\n\n  return chunk.iterate<Modulator>(iterator => {\n    return {\n      source: getModulatorValue(iterator.getInt16BE()),\n      id: iterator.getInt16BE(),\n      value: iterator.getInt16BE(),\n      valueSource: getModulatorValue(iterator.getInt16BE()),\n      transform: iterator.getInt16BE()\n    };\n  });\n};\n", "import { SF2Chunk } from '~/chunk';\nimport { ParseError } from '~/riff';\nimport { SF_PRESET_HEADER_SIZE } from '~/constants';\nimport { PresetHeader } from '~/types';\n\n/**\n * Get all preset headers from a `phdr` sub-chunk.\n *\n * @param {SF2Chunk} chunk - The input chunk\n */\nexport const getPresetHeaders = (chunk: SF2Chunk): PresetHeader[] => {\n  if (chunk.id !== 'phdr') {\n    throw new ParseError('Invalid chunk ID', `'phdr'`, `'${chunk.id}'`);\n  }\n\n  if (chunk.length % SF_PRESET_HEADER_SIZE) {\n    throw new ParseError(`Invalid size for the 'phdr' sub-chunk`);\n  }\n\n  return chunk.iterate<PresetHeader>(iterator => {\n    return {\n      name: iterator.getString(),\n      preset: iterator.getInt16(),\n      bank: iterator.getInt16(),\n      bagIndex: iterator.getInt16(),\n      library: iterator.getUInt32(),\n      genre: iterator.getUInt32(),\n      morphology: iterator.getUInt32()\n    };\n  });\n};\n", "export * from './headers';\n", "import { SF2Chunk } from '~/chunk';\nimport { ParseError } from '~/riff';\nimport { SF_SAMPLE_HEADER_SIZE } from '~/constants';\nimport { SampleHeader } from '~/types';\n\n/**\n * Get all sample headers from a `shdr` sub-chunk.\n *\n * @param {SF2Chunk} chunk - The input chunk\n */\nexport const getSampleHeaders = (chunk: SF2Chunk): SampleHeader[] => {\n  if (chunk.id !== 'shdr') {\n    throw new ParseError('Unexpected chunk ID', `'shdr'`, `'${chunk.id}'`);\n  }\n\n  if (chunk.length % SF_SAMPLE_HEADER_SIZE) {\n    throw new ParseError(`Invalid size for the 'shdr' sub-chunk`);\n  }\n\n  return chunk.iterate<SampleHeader>(iterator => {\n    return {\n      name: iterator.getString(),\n      start: iterator.getUInt32(),\n      end: iterator.getUInt32(),\n      startLoop: iterator.getUInt32(),\n      endLoop: iterator.getUInt32(),\n      sampleRate: iterator.getUInt32(),\n      originalPitch: iterator.getByte(),\n      pitchCorrection: iterator.getChar(),\n      link: iterator.getInt16(),\n      type: iterator.getInt16()\n    };\n  });\n};\n", "export * from './headers';\n", "import { SF2Chunk } from '~/chunk';\nimport { ParseError } from '~/riff';\nimport { SF_BAG_SIZE } from '~/constants';\nimport {\n  Generator,\n  GeneratorType,\n  Modulator,\n  Zone,\n  ZoneItems,\n  ZoneItemsWithReference,\n  ZoneMap\n} from '~/types';\n\n/**\n * Get the preset or instrument zones from a chunk.\n *\n * @param {SF2Chunk} chunk - The input chunk\n * @param {string} type - The type of chunk ('pbag' or 'ibag')\n */\nexport const getZones = (chunk: SF2Chunk, type: 'pbag' | 'ibag'): Zone[] => {\n  if (chunk.id !== type) {\n    throw new ParseError('Unexpected chunk ID', `'${type}'`, `'${chunk.id}'`);\n  }\n\n  if (chunk.length % SF_BAG_SIZE) {\n    throw new ParseError(`Invalid size for the '${type}' sub-chunk`);\n  }\n\n  return chunk.iterate<Zone>(iterator => ({\n    generatorIndex: iterator.getInt16(),\n    modulatorIndex: iterator.getInt16()\n  }));\n};\n\n/**\n * Get all modulators, generators and the instrument (for presets) or sample (for instruments) in a\n * preset or instrument.\n *\n * @template T\n * @template R\n * @param {T} headers - The preset or instrument headers\n * @param {Zone[]} zones - All zones for the preset or instrument\n * @param {Modulator[]} itemModulators - All modulators for the preset or instrument\n * @param {Generator[]} itemGenerators - All generators for the preset or instrument\n * @param {R[]} references - The instruments or samples to reference in the zone\n * @param {GeneratorType} referenceType - The generator type to reference it by\n */\nexport const getItemsInZone = <T extends { bagIndex: number }, R>(\n  headers: T[],\n  zones: Zone[],\n  itemModulators: Modulator[],\n  itemGenerators: Generator[],\n  references: R[],\n  referenceType: GeneratorType\n): { header: T; zones: ZoneItemsWithReference<R>[]; globalZone?: ZoneItems }[] => {\n  const items: { header: T; zones: ZoneItemsWithReference<R>[]; globalZone?: ZoneItems }[] = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    const header = headers[i];\n    const next = headers[i + 1];\n\n    const start = header.bagIndex;\n    const end = next ? next.bagIndex : zones.length;\n\n    const zoneItems: ZoneItemsWithReference<R>[] = [];\n    let globalZone;\n    for (let j = start; j < end; j++) {\n      const modulators = getModulators(j, zones, itemModulators);\n      const generators = getGenerators(j, zones, itemGenerators);\n\n      const keyRange =\n        generators[GeneratorType.KeyRange] && generators[GeneratorType.KeyRange]!.range;\n      const referenceId = generators[referenceType];\n      if (!referenceId) {\n        if (j - start === 0) {\n          // first item without reference = global zone\n          // Spec 7.3: If a preset has more than one zone, the first zone may be a global zone.\n          // A global zone is determined by the fact that the last generator in the list is not an Instrument generator.\n          // Spec 7.9: \"Unless the zone is a global zone, the last generator in the list is a “sampleID” generator\"\n          globalZone = {\n            keyRange,\n            modulators,\n            generators\n          };\n        }\n        continue;\n      }\n\n      const reference = references[referenceId.value!];\n      if (!reference) {\n        continue;\n      }\n\n      zoneItems.push({\n        keyRange,\n        modulators,\n        generators,\n        reference\n      });\n    }\n\n    items.push({\n      header,\n      globalZone,\n      zones: zoneItems\n    });\n  }\n\n  return items;\n};\n\n/**\n * Get all modulators from a zone, based on the index. The end index is the modulator index of the\n * next zone, or the total zone length if the current zone is the last one.\n *\n * @param {number} index - The index\n * @param {Zone[]} zones - ALl zones for the preset or instrument\n * @param {Modulator[]} modulators - All modulators for the preset or instrument\n */\nconst getModulators = (\n  index: number,\n  zones: Zone[],\n  modulators: Modulator[]\n): ZoneMap<Modulator> => {\n  const zone = zones[index];\n  const next = zones[index + 1];\n\n  const start = zone.modulatorIndex;\n  const end = next ? next.modulatorIndex : zones.length;\n\n  return getZone(start, end, modulators);\n};\n\n/**\n * Get all generators from a zone, based on the index. The end index is the generators index of the\n * next zone, or the total zone length if the current zone is the last one.\n *\n * @param {number} index - The index\n * @param {Zone[]} zones - ALl zones for the preset or instrument\n * @param {Generator[]} generators - All generators for the preset or instrument\n */\nconst getGenerators = (\n  index: number,\n  zones: Zone[],\n  generators: Generator[]\n): ZoneMap<Generator> => {\n  const zone = zones[index];\n  const next = zones[index + 1];\n\n  const start = zone.generatorIndex;\n  const end = next ? next.generatorIndex : zones.length;\n\n  return getZone(start, end, generators);\n};\n\n/**\n * Returns all modulators or generators as a key-value object, where the key is the `GeneratorType`\n * of the modulator or generator.\n *\n * @template T\n * @param {number} start - The start index\n * @param {number} end - The end index\n * @param {T[]} items - The modulators or generators\n */\nconst getZone = <T extends { id: GeneratorType }>(\n  start: number,\n  end: number,\n  items: T[]\n): { [key in GeneratorType]?: T } => {\n  const itemsObject: ZoneMap<T> = {};\n\n  for (let i = start; i < end; i++) {\n    const item = items[i];\n    if (item) {\n      itemsObject[item.id] = item;\n    }\n  }\n\n  return itemsObject;\n};\n", "export const SF_VERSION_LENGTH = 4;\nexport const SF_PRESET_HEADER_SIZE = 38;\nexport const SF_BAG_SIZE = 4;\nexport const SF_MODULATOR_SIZE = 10;\nexport const SF_GENERATOR_SIZE = 4;\nexport const SF_INSTRUMENT_HEADER_SIZE = 22;\nexport const SF_SAMPLE_HEADER_SIZE = 46;\n\nexport const DEFAULT_SAMPLE_RATE = 22050;\n\nexport type SF_INFO_CHUNKS =\n  | 'ifil'\n  | 'isng'\n  | 'INAM'\n  | 'irom'\n  | 'iver'\n  | 'ICRD'\n  | 'IENG'\n  | 'IPRD'\n  | 'ICOP'\n  | 'ICMT'\n  | 'ISFT';\n", "export * from './types';\nexport * from './chunk';\nexport * from './constants';\nexport * from './soundFont2';\n", "import { RIFFChunk } from './riffChunk';\nimport { getStringFromBuffer } from '~/utils';\n\n/**\n * A utility class to quickly iterate over a buffer.\n */\nexport class ChunkIterator<T = any> {\n  public readonly target: T[] = [];\n  private readonly chunk: RIFFChunk;\n  private position: number = 0;\n\n  public constructor(chunk: RIFFChunk, start: number = 0) {\n    this.chunk = chunk;\n    this.position = start;\n  }\n\n  /**\n   * Get the position from the iterator.\n   */\n  public get currentPosition(): number {\n    return this.position;\n  }\n\n  /**\n   * Iterate over the chunk.\n   *\n   * @param {Function} callback - The callback that is called every iteration\n   */\n  public iterate(callback: (iterator: ChunkIterator<T>) => T | null) {\n    while (this.position < this.chunk.length) {\n      const object = callback(this);\n      if (object) {\n        this.target.push(object);\n      }\n    }\n  }\n\n  /**\n   * Get a string from the buffer.\n   *\n   * @param {number} length - The length of the string. If no length is specified, a default of 20\n   *   is assumed\n   */\n  public getString(length: number = 20): string {\n    const text = getStringFromBuffer(this.getBuffer(this.position, length));\n    this.position += length;\n    return text;\n  }\n\n  /**\n   * Get a signed 16-bit integer from the chunk.\n   */\n  public getInt16(): number {\n    return this.chunk.buffer[this.position++] | (this.chunk.buffer[this.position++] << 8);\n  }\n\n  /**\n   * Get a signed 16-bit integer from the chunk in the big-endian format.\n   */\n  public getInt16BE(): number {\n    return (this.getInt16() << 16) >> 16;\n  }\n\n  /**\n   * Get an unsigned 32-bit integer from the chunk.\n   */\n  public getUInt32(): number {\n    return (\n      (this.chunk.buffer[this.position++] |\n        (this.chunk.buffer[this.position++] << 8) |\n        (this.chunk.buffer[this.position++] << 16) |\n        (this.chunk.buffer[this.position++] << 24)) >>>\n      0\n    );\n  }\n\n  /**\n   * Get a single byte from the chunk.\n   */\n  public getByte(): number {\n    return this.chunk.buffer[this.position++];\n  }\n\n  /**\n   * Get a signed char from the chunk.\n   */\n  public getChar(): number {\n    return (this.chunk.buffer[this.position++] << 24) >> 24;\n  }\n\n  /**\n   * Skip ahead in the buffer.\n   *\n   * @param {number} length\n   */\n  public skip(length: number): void {\n    this.position += length;\n  }\n\n  /**\n   * Get a part of the buffer from start to start + length.\n   *\n   * @param {number} start\n   * @param {number} length\n   */\n  private getBuffer(start: number, length: number): Uint8Array {\n    return this.chunk.buffer.subarray(start, start + length);\n  }\n}\n", "export * from './chunkIterator';\nexport * from './parseError';\nexport * from './parser';\nexport * from './riffChunk';\n", "/**\n * Error class used for all errors encountered during the parsing of the SoundFont 2 file.\n */\nexport class ParseError extends Error {\n  public constructor(message: string);\n  public constructor(message: string, expected: string, received: string);\n  public constructor(message: string, expected?: string, received?: string) {\n    super(\n      `${message}${expected && received ? `, expected ${expected}, received ${received}` : ``}`\n    );\n  }\n}\n", "import { ParseError } from './parseError';\nimport { getStringFromBuffer } from '~/utils/buffer';\nimport { RIFFChunk } from './riffChunk';\n\n/**\n * Attempts to parse a RIFF file from a raw buffer.\n *\n * @param {Uint8Array} buffer - The input buffer\n */\nexport const parseBuffer = (buffer: Uint8Array): RIFFChunk => {\n  const id = getChunkId(buffer);\n  if (id !== 'RIFF') {\n    throw new ParseError('Invalid file format', 'RIFF', id);\n  }\n\n  const signature = getChunkId(buffer, 8);\n  if (signature !== 'sfbk') {\n    throw new ParseError('Invalid signature', 'sfbk', signature);\n  }\n\n  const newBuffer = buffer.subarray(8);\n  const subChunks = getSubChunks(newBuffer.subarray(4));\n  return new RIFFChunk(id, newBuffer.length, newBuffer, subChunks);\n};\n\n/**\n * Get a RIFF chunk from a buffer.\n *\n * @param {Buffer} buffer - The input buffer\n * @param {number} start - Where to start reading the buffer\n */\nexport const getChunk = (buffer: Uint8Array, start: number): RIFFChunk => {\n  const id = getChunkId(buffer, start);\n  const length = getChunkLength(buffer, start + 4);\n\n  // RIFF and LIST chunks can have sub-chunks\n  let subChunks: RIFFChunk[] = [];\n  if (id === 'RIFF' || id === 'LIST') {\n    subChunks = getSubChunks(buffer.subarray(start + 12));\n  }\n\n  return new RIFFChunk(id, length, buffer.subarray(start + 8), subChunks);\n};\n\n/**\n * Get the length of a chunk, based on the RIFF length specifier.\n *\n * @param {Buffer} buffer - The input buffer\n * @param {number} start - Where to start reading the buffer for the length\n */\nexport const getChunkLength = (buffer: Uint8Array, start: number) => {\n  buffer = buffer.subarray(start, start + 4);\n\n  return (buffer[0] | (buffer[1] << 8) | (buffer[2] << 16) | (buffer[3] << 24)) >>> 0;\n};\n\n/**\n * Get all sub-chunks in a buffer. This will read until the end of the buffer and return any\n * sub-chunks found in it.\n *\n * @param {Buffer} buffer - The input buffer\n */\nexport const getSubChunks = (buffer: Uint8Array): RIFFChunk[] => {\n  const chunks: RIFFChunk[] = [];\n  let index = 0;\n\n  while (index <= buffer.length - 8) {\n    const subChunk = getChunk(buffer, index);\n    chunks.push(subChunk);\n\n    index += 8 + subChunk.length;\n    index = index % 2 ? index + 1 : index;\n  }\n\n  return chunks;\n};\n\n/**\n * Get the chunk ID (fourCC) from the buffer. This assumes the fourCC code is formatted as an UTF-8\n * string.\n *\n * @param {Buffer} buffer - The input buffer\n * @param {number} start - Where to start reading the chunk ID from the buffer\n */\nexport const getChunkId = (buffer: Uint8Array, start: number = 0) => {\n  return getStringFromBuffer(buffer.subarray(start, start + 4));\n};\n", "import { ChunkIterator } from './chunkIterator';\nimport { getStringFromBuffer } from '~/utils';\n\nexport class RIFFChunk {\n  /**\n   * The chunk ID (fourCC).\n   */\n  public readonly id: string;\n\n  /**\n   * The length of the chunk.\n   */\n  public readonly length: number;\n\n  /**\n   * The raw buffer of the chunk.\n   */\n  public readonly buffer: Uint8Array;\n\n  /**\n   * The sub-chunks of the chunk. If the chunk is not a RIFF or LIST chunk, this will be an empty\n   * array.\n   */\n  public readonly subChunks: RIFFChunk[];\n\n  public constructor(id: string, length: number, buffer: Uint8Array, subChunks: RIFFChunk[]) {\n    this.id = id;\n    this.length = length;\n    this.buffer = buffer;\n    this.subChunks = subChunks;\n  }\n\n  /**\n   * Get a string from the buffer. If no position and no length is specified, it returns the whole\n   * buffer as a string.\n   *\n   * @param {number} [position]\n   * @param {number} [length]\n   */\n  public getString(position: number = 0, length?: number): string {\n    return getStringFromBuffer(this.getBuffer(position, length || this.length - position));\n  }\n\n  /**\n   * Get a signed 16-bit integer from the buffer.\n   *\n   * @param {number} [position]\n   */\n  public getInt16(position: number = 0): number {\n    return this.buffer[position++] | (this.buffer[position] << 8);\n  }\n\n  /**\n   * Get an unsigned 32-bit integer from the buffer.\n   *\n   * @param {number} [position]\n   */\n  public getUInt32(position: number = 0): number {\n    return (\n      (this.buffer[position++] |\n        (this.buffer[position++] << 8) |\n        (this.buffer[position++] << 16) |\n        (this.buffer[position] << 24)) >>>\n      0\n    );\n  }\n\n  /**\n   * Get a byte from the buffer.\n   *\n   * @param {number} [position]\n   */\n  public getByte(position: number = 0): number {\n    return this.buffer[position];\n  }\n\n  /**\n   * Get a char from the buffer.\n   *\n   * @param {number} [position]\n   */\n  public getChar(position: number = 0): number {\n    return (this.buffer[position] << 24) >> 24;\n  }\n\n  /**\n   * Get a chunk iterator for the chunk.\n   *\n   * @param {number} [start] - The position where to start iterating. Defaults to 0.\n   */\n  public iterator<T = any>(start: number = 0): ChunkIterator<T> {\n    return new ChunkIterator<T>(this, start);\n  }\n\n  /**\n   * Utility function to quickly iterate over a function.\n   *\n   * @template T\n   * @param {(iterator: ChunkIterator): T} callback - The callback that returns an instance of the\n   *   specified return type\n   * @param {number} [start] - The optional index where to start iterating over the chunk\n   */\n  public iterate<T = any>(callback: (iterator: ChunkIterator) => T | null, start: number = 0): T[] {\n    const iterator = new ChunkIterator<T>(this, start);\n    iterator.iterate(callback);\n    return iterator.target;\n  }\n\n  /**\n   * Get a buffer from `start` to `start` + `length`. The buffer is not copied (e.g. when using\n   * .slice()), so any modifications to the buffer are done to the original buffer too.\n   *\n   * @param {number} start\n   * @param {number} length\n   */\n  private getBuffer(start: number, length: number): Uint8Array {\n    return this.buffer.subarray(start, start + length);\n  }\n}\n", "import {\n  Bank,\n  GeneratorType,\n  Instrument,\n  Key,\n  MetaData,\n  Preset,\n  PresetData,\n  Sample,\n  ZoneItems\n} from './types';\nimport { SF2Chunk } from './chunk';\nimport { parseBuffer, ParseError } from './riff';\nimport { getItemsInZone } from './chunks';\nimport { memoize } from './utils';\n\nexport class SoundFont2 {\n  /**\n   * Create a new `SoundFont2` instance from a raw input buffer.\n   *\n   * @param {Uint8Array} buffer\n   * @deprecated Replaced with `new SoundFont2(buffer: Uint8Array);`\n   */\n  public static from(buffer: Uint8Array): SoundFont2 {\n    return new SoundFont2(buffer);\n  }\n\n  /**\n   * The raw RIFF chunk data.\n   */\n  public readonly chunk: SF2Chunk;\n\n  /**\n   * The meta data.\n   */\n  public readonly metaData: MetaData;\n\n  /**\n   * The raw sample data.\n   */\n  public readonly sampleData: Uint8Array;\n\n  /**\n   * The parsed samples.\n   */\n  public readonly samples: Sample[];\n\n  /**\n   * The unparsed preset data.\n   */\n  public readonly presetData: PresetData;\n\n  /**\n   * The parsed instuments.\n   */\n  public readonly instruments: Instrument[];\n\n  /**\n   * The parsed presets.\n   */\n  public readonly presets: Preset[];\n\n  /**\n   * The parsed banks.\n   */\n  public readonly banks: Bank[];\n\n  /**\n   * Load a SoundFont2 file from a `Uint8Array` or a `SF2Chunk`. The recommended way is to use a\n   * Uint8Array, loading a SoundFont2 from a `SF2Chunk` only exists for backwards compatibility and\n   * will likely be removed in a future version.\n   *\n   * @param {Uint8Array|SF2Chunk} chunk\n   */\n  public constructor(chunk: Uint8Array | SF2Chunk) {\n    if (!(chunk instanceof SF2Chunk)) {\n      const parsedBuffer = parseBuffer(chunk);\n      chunk = new SF2Chunk(parsedBuffer);\n    }\n\n    if (chunk.subChunks.length !== 3) {\n      throw new ParseError(\n        'Invalid sfbk structure',\n        '3 chunks',\n        `${chunk.subChunks.length} chunks`\n      );\n    }\n\n    this.chunk = chunk;\n    this.metaData = chunk.subChunks[0].getMetaData();\n    this.sampleData = chunk.subChunks[1].getSampleData();\n    this.presetData = chunk.subChunks[2].getPresetData();\n\n    this.samples = this.getSamples();\n    this.instruments = this.getInstruments();\n    this.presets = this.getPresets();\n    this.banks = this.getBanks();\n  }\n\n  /**\n   * Get the key data by MIDI bank, preset and key number. May return null if no instrument was\n   * found for the given inputs. Note that this does not process any of the generators that are\n   * specific to the key number.\n   *\n   * The result is memoized based on all arguments, to prevent having to check all presets,\n   * instruments etc. every time.\n   *\n   * @param {number} memoizedKeyNumber - The MIDI key number\n   * @param {number} [memoizedBankNumber] - The bank index number, defaults to 0\n   * @param {number} [memoizedPresetNumber] - The preset number, defaults to 0\n   */\n  public getKeyData(\n    memoizedKeyNumber: number,\n    memoizedBankNumber: number = 0,\n    memoizedPresetNumber: number = 0\n  ): Key | null {\n    // Get a memoized version of the function\n    return memoize((keyNumber: number, bankNumber: number, presetNumber: number): Key | null => {\n      const bank = this.banks[bankNumber];\n      if (bank) {\n        const preset = bank.presets[presetNumber];\n        if (preset) {\n          const presetZone = preset.zones.find(zone => this.isKeyInRange(zone, keyNumber));\n          if (presetZone) {\n            const instrument = presetZone.instrument;\n            const instrumentZone = instrument.zones.find(zone =>\n              this.isKeyInRange(zone, keyNumber)\n            );\n            if (instrumentZone) {\n              const sample = instrumentZone.sample;\n              const generators = { ...presetZone.generators, ...instrumentZone.generators };\n              const modulators = { ...presetZone.modulators, ...instrumentZone.modulators };\n\n              return {\n                keyNumber,\n                preset,\n                instrument,\n                sample,\n                generators,\n                modulators\n              };\n            }\n          }\n        }\n      }\n\n      return null;\n    })(memoizedKeyNumber, memoizedBankNumber, memoizedPresetNumber);\n  }\n\n  /**\n   * Checks if a MIDI key number is in the range of a zone.\n   *\n   * @param {ZoneItems} zone - The zone to check\n   * @param {number} keyNumber - The MIDI key number, must be between 0 and 127\n   */\n  private isKeyInRange(zone: ZoneItems, keyNumber: number): boolean {\n    return (\n      zone.keyRange === undefined ||\n      (zone.keyRange.lo <= keyNumber && zone.keyRange.hi >= keyNumber)\n    );\n  }\n\n  /**\n   * Parse the presets to banks.\n   */\n  private getBanks(): Bank[] {\n    return this.presets.reduce<Bank[]>((target, preset) => {\n      const bankNumber = preset.header.bank;\n\n      if (!target[bankNumber]) {\n        target[bankNumber] = {\n          presets: []\n        };\n      }\n\n      target[bankNumber].presets[preset.header.preset] = preset;\n      return target;\n    }, []);\n  }\n\n  /**\n   * Parse the raw preset data to presets.\n   */\n  private getPresets(): Preset[] {\n    const { presetHeaders, presetZones, presetGenerators, presetModulators } = this.presetData;\n\n    const presets = getItemsInZone(\n      presetHeaders,\n      presetZones,\n      presetModulators,\n      presetGenerators,\n      this.instruments,\n      GeneratorType.Instrument\n    );\n\n    return presets\n      .filter(preset => preset.header.name !== 'EOP')\n      .map(preset => {\n        return {\n          header: preset.header,\n          globalZone: preset.globalZone,\n          zones: preset.zones.map(zone => {\n            return {\n              keyRange: zone.keyRange,\n              generators: zone.generators,\n              modulators: zone.modulators,\n              instrument: zone.reference\n            };\n          })\n        };\n      });\n  }\n\n  /**\n   * Parse the raw instrument data (found in the preset data) to instruments.\n   */\n  private getInstruments(): Instrument[] {\n    const {\n      instrumentHeaders,\n      instrumentZones,\n      instrumentModulators,\n      instrumentGenerators\n    } = this.presetData;\n\n    const instruments = getItemsInZone(\n      instrumentHeaders,\n      instrumentZones,\n      instrumentModulators,\n      instrumentGenerators,\n      this.samples,\n      GeneratorType.SampleId\n    );\n\n    return instruments\n      .filter(instrument => instrument.header.name !== 'EOI')\n      .map(instrument => {\n        return {\n          header: instrument.header,\n          globalZone: instrument.globalZone,\n          zones: instrument.zones.map(zone => {\n            return {\n              keyRange: zone.keyRange,\n              generators: zone.generators,\n              modulators: zone.modulators,\n              sample: zone.reference\n            };\n          })\n        };\n      });\n  }\n\n  /**\n   * Parse the raw sample data and sample headers to samples.\n   */\n  private getSamples(): Sample[] {\n    return this.presetData.sampleHeaders\n      .filter(sample => sample.name !== 'EOS')\n      .map(header => {\n        // Sample rate must be above 0\n        if (header.name !== 'EOS' && header.sampleRate <= 0) {\n          throw new Error(\n            `Illegal sample rate of ${header.sampleRate} hz in sample '${header.name}'`\n          );\n        }\n\n        // Original pitch cannot be between 128 and 254\n        if (header.originalPitch >= 128 && header.originalPitch <= 254) {\n          header.originalPitch = 60;\n        }\n\n        header.startLoop -= header.start;\n        header.endLoop -= header.start;\n\n        // Turns the Uint8Array into a Int16Array\n        const data = new Int16Array(\n          new Uint8Array(this.sampleData.subarray(header.start * 2, header.end * 2)).buffer\n        );\n\n        return {\n          header,\n          data\n        };\n      });\n  }\n}\n", "/**\n * Generator (or modulator) types. These are defined in a specific order, following the spec. The\n * enum ID corresponds with the ID in the spec, so the unused and reserved fields should not be\n * removed.\n */\nexport enum GeneratorType {\n  /**\n   * The offset in sample data points beyond the `start` sample header.\n   */\n  StartAddrsOffset,\n\n  /**\n   * The offset in sample data points beyond the `end` sample header.\n   */\n  EndAddrsOffset,\n\n  /**\n   * The offset in sample data points beyond the `startLoop` sample header to the first sample data\n   * point to be repeated in the loop for the instrument.\n   */\n  StartLoopAddrsOffset,\n\n  /**\n   * The offset in sample data points beyond the `endLoop` sample header to the sample data point\n   * considered equivalent to the `startLoop` sample data point for the loop for this instrument.\n   */\n  EndLoopAddrsOffset,\n\n  /**\n   * The offset in 32768 sample data point increments beyond the `start` sample header and the\n   * first sample data point to be played in the instrument.\n   */\n  StartAddrsCoarseOffset,\n\n  /**\n   * The degree (in cents) to which a full scale excursion of the modulation LFO will influence the\n   * pitch.\n   */\n  ModLFOToPitch,\n\n  /**\n   * The degree (in cents) to which a full scale excursion of the vibrato LFO will influence the\n   * pitch.\n   */\n  VibLFOToPitch,\n\n  /**\n   * The degree (in cents) to which a full scale excursion of the modulation envelope will\n   * influence pitch.\n   */\n  ModEnvToPitch,\n\n  /**\n   * The cutoff and resonant frequency of the lowpass filter in absolute cent units.\n   */\n  InitialFilterFc,\n\n  /**\n   * The height above DC gain in centibels which the filter resonance exhibits at the cutoff\n   * latency.\n   */\n  InitialFilterQ,\n\n  /**\n   * The degree (in cents) to which a full scale excursion of the modulation LFO will influence the\n   * filter cutoff frequency.\n   */\n  ModLFOToFilterFc,\n\n  /**\n   * The degree (in cents) to which a full scale excursion of the modulation envelope will\n   * influence the filter cutoff frequency.\n   */\n  ModEnvToFilterFc,\n\n  /**\n   * The offset in 32768 sample data point increments beyond the `end` sample header and the last\n   * sample data point to be played in this instrument.\n   */\n  EndAddrsCoarseOffset,\n\n  /**\n   * The degree (in centibels) to which a full scale excursion of the modulation LFO will influence\n   * volume.\n   */\n  ModLFOToVolume,\n\n  /**\n   * Unused generator. If this generator is encountered, it should be ignored.\n   */\n  Unused1,\n\n  /**\n   * The degree (in 0.1% units) to which the audio output of the note is sent to the chorus effects\n   * processor.\n   */\n  ChorusEffectsSend,\n\n  /**\n   * The degree (in 0.1% units) to which the audio output of the note is sent to the reverb effects\n   * processor.\n   */\n  ReverbEffectsSend,\n\n  /**\n   * The degree (in 0.1% units) to which the dry audio output of the note is positioned to the left\n   * or right output.\n   */\n  Pan,\n\n  /**\n   * Unused generator. If this generator is encountered, it should be ignored.\n   */\n  Unused2,\n\n  /**\n   * Unused generator. If this generator is encountered, it should be ignored.\n   */\n  Unused3,\n\n  /**\n   * Unused generator. If this generator is encountered, it should be ignored.\n   */\n  Unused4,\n\n  /**\n   * The delay time (in absolute timecents) from key on until the modulation LFO begins its upward\n   * ramp from zero value. A value of zero indicates a one second delay.\n   */\n  DelayModLFO,\n\n  /**\n   * The frequency (in absolute cents) of the modulation LFO's triangular period. A value of 0\n   * indicates a frequency of 8.176 Hz.\n   */\n  FreqModLFO,\n\n  /**\n   * The delay time (in absolute timecents) from key on until the vibrato LFO begins its upwards\n   * ramp from zero value. A value of zero indicates a one second delay.\n   */\n  DelayVibLFO,\n\n  /**\n   * The frequency (in absolute cents) of the vibrato LFO's triangular period. A value of zero\n   * indicates a frequency of 8.176 Hz.\n   */\n  FreqVibLFO,\n\n  /**\n   * The delay time (in absolute timecents) between key on and the start of the attack phase on the\n   * modulation envelope. A value of zero indicates a one second delay.\n   */\n  DelayModEnv,\n\n  /**\n   * The time (in absolute timecents) from the end of the modulation envelope delay time until the\n   * point at which the modulation envelope value reaches its peak.\n   */\n  AttackModEnv,\n\n  /**\n   * The time (in absolute timecents) from the end of the attack phase to the entry into decay\n   * phase, during which the envelope value is held at its peak. A value of zero indicates a one\n   * second hold time.\n   */\n  HoldModEnv,\n\n  /**\n   * The time (in absolute timecents) for a 100% change in the modulation envelope value during\n   * decay phase.\n   */\n  DecayModEnv,\n\n  /**\n   * The decrease in level (expressed in 0.1% units) to which the modulation envelope ramps during\n   * the decay phase.\n   */\n  SustainModEnv,\n\n  /**\n   * The time (in absolute timecents) for a 100% change in the modulation envelope value during\n   * release phase.\n   */\n  ReleaseModEnv,\n\n  /**\n   * The degree (in timecents per key number units) to which the hold time of the modulation\n   * envelope is decreased by increasing the MIDI key number.\n   */\n  KeyNumToModEnvHold,\n\n  /**\n   * The degree (in timecents per key number units) to which the hold time of the modulation\n   * envelope is decreased by increasing the MIDI key number.\n   */\n  KeyNumToModEnvDecay,\n\n  /**\n   * The delay time (in absolute timecents) between key on and the start of the attack phase of the\n   * volume envelope. A value of zero indicates a one second delay.\n   */\n  DelayVolEnv,\n\n  /**\n   * The delay time (in absolute timecents) from the end of the volume envelope delay time until\n   * the point at which the volume envelope value reaches its peak.\n   */\n  AttackVolEnv,\n\n  /**\n   * The time (in absolute timecents) from the end of the attack phase to the entry into decay\n   * phase during which the volume envelope value is held at its peak. A value of zero indicates a\n   * one second hold time.\n   */\n  HoldVolEnv,\n\n  /**\n   * The time (in absolute timecents) for a 100% change in the volume envelope value during decay\n   * phase.\n   */\n  DecayVolEnv,\n\n  /**\n   * The decrease in level (expressed in centibels) to which the volume envelope value ramps during\n   * the decay phase.\n   */\n  SustainVolEnv,\n\n  /**\n   * The time (in absolute centibels) for a 100% change in the volume envelope during release\n   * phase. A value of zero indicates a one second decay time.\n   */\n  ReleaseVolEnv,\n\n  /**\n   * The degree (in timecents per key number units) to which the hold time of the volume envelope\n   * is increased by increasing the MIDI key number.\n   */\n  KeyNumToVolEnvHold,\n\n  /**\n   * The degree (in timecents per key number units) to which the hold time of the volume envelope\n   * is decreased by increasing the MIDI key number.\n   */\n  KeyNumToVolEnvDecay,\n\n  /**\n   * Index of an instrument in the `INST` sub-chunk. This generator and `SampleId` are the only\n   * Index generators.\n   */\n  Instrument,\n\n  /**\n   * Unused generator, reserved for future implementation. If this generator is encountered, it\n   * should be ignored.\n   */\n  Reserved1,\n\n  /**\n   * The key range that the preset or instrument zone applies to. This generator and `VelRange` are\n   * the only Range generators.\n   */\n  KeyRange,\n\n  /**\n   * The velocity range that the preset or instrument zone applies to. This generator and\n   * `KeyRange` are the only Range generators.\n   */\n  VelRange,\n\n  /**\n   * The offset in 32768 sample data point increments beyond the `startLoop` sample header and the\n   * first sample data point to be repeated in this instrument's loop.\n   */\n  StartLoopAddrsCoarseOffset,\n\n  /**\n   * Forces the MIDI key number to be interpreted as the value given. This can only appear at\n   * instrument level and must be between 0 and 127.\n   */\n  KeyNum,\n\n  /**\n   * Forces the MIDI velocity to be interpreted as the value given. This can only appear at\n   * instrument level and must be between 0 and 127.\n   */\n  Velocity,\n\n  /**\n   * The attenuation (in centibels) by which a note is attenuated below full scale.\n   */\n  InitialAttenuation,\n\n  /**\n   * Unused generator, reserved for future implementation. If this generator is encountered, it\n   * should be ignored.\n   */\n  Reserved2,\n\n  /**\n   * The offset in 32768 sample data point increments beyond the `endLoop` sample header to the\n   * sample data point considered equivalent to the `startLoop`.\n   */\n  EndLoopAddrsCoarseOffset,\n\n  /**\n   * The pitch offset (in semitones) which should be applied to the note. It is additive with\n   * `FineTune`.\n   */\n  CoarseTune,\n\n  /**\n   * The pitch offset (in cents) which should be applied to the note. It is additive with\n   * `CoarseTune`.\n   */\n  FineTune,\n\n  /**\n   * Index of a sample in the `SHDR` sub-chunk. This generator and `Instrument` are the only Index\n   * generators.\n   */\n  SampleId,\n\n  /**\n   * The value which gives a variety of boolean flags describing the sample for the current\n   * instrument zone. A zero indicates a sound reproduced with no loop, one indicates a sound which\n   * loops continuously and three indicates a sound which loops for the duration of key depression,\n   * then proceeds to play the remainder of the sample.\n   */\n  SampleModes,\n\n  /**\n   * Unused generator, reserved for future implementation. If this generator is encountered, it\n   * should be ignored.\n   */\n  Reserved3,\n\n  /**\n   * The degree to which the MIDI key number influences pitch.\n   */\n  ScaleTuning,\n\n  /**\n   * The capability for key depression in a given instrument to terminate the playback of other\n   * instruments.\n   */\n  ExclusiveClass,\n\n  /**\n   * The MIDI key number at which the sample is to be played back at its original sample rate. If\n   * not present, or if present with a value of -1, the sample header parameter original key is\n   * used in its place.\n   */\n  OverridingRootKey,\n\n  /**\n   * Unused generator. If this generator is encountered, it should be ignored.\n   */\n  Unused5,\n\n  /**\n   * Unused generator. If this generator is encountered, it should be ignored.\n   */\n  EndOper\n}\n\n/**\n * All unused generators.\n */\nexport type UnusedGenerator =\n  | GeneratorType.Unused1\n  | GeneratorType.Unused2\n  | GeneratorType.Unused3\n  | GeneratorType.Unused4\n  | GeneratorType.Unused5\n  | GeneratorType.Reserved1\n  | GeneratorType.Reserved2\n  | GeneratorType.Reserved3\n  | GeneratorType.EndOper;\n\n/**\n * All range generators.\n */\nexport type RangeGenerator = GeneratorType.KeyRange | GeneratorType.VelRange;\n\n/**\n * All index generators.\n */\nexport type IndexGenerator = GeneratorType.Instrument | GeneratorType.SampleId;\n\n/**\n * All value generators.\n */\nexport type ValueGenerator = Exclude<\n  GeneratorType,\n  UnusedGenerator | RangeGenerator | IndexGenerator\n>;\n\n/**\n * The default value for all generator types (where applicable).\n */\nexport const DEFAULT_GENERATOR_VALUES: { [key in ValueGenerator]: number } = {\n  [GeneratorType.StartAddrsOffset]: 0,\n  [GeneratorType.EndAddrsOffset]: 0,\n  [GeneratorType.StartLoopAddrsOffset]: 0,\n  [GeneratorType.EndLoopAddrsOffset]: 0,\n  [GeneratorType.StartAddrsCoarseOffset]: 0,\n  [GeneratorType.ModLFOToPitch]: 0,\n  [GeneratorType.VibLFOToPitch]: 0,\n  [GeneratorType.ModEnvToPitch]: 0,\n  [GeneratorType.InitialFilterFc]: 13500,\n  [GeneratorType.InitialFilterQ]: 0,\n  [GeneratorType.ModLFOToFilterFc]: 0,\n  [GeneratorType.ModEnvToFilterFc]: 0,\n  [GeneratorType.EndAddrsCoarseOffset]: 0,\n  [GeneratorType.ModLFOToVolume]: 0,\n  [GeneratorType.ChorusEffectsSend]: 0,\n  [GeneratorType.ReverbEffectsSend]: 0,\n  [GeneratorType.Pan]: 0,\n  [GeneratorType.DelayModLFO]: -12000,\n  [GeneratorType.FreqModLFO]: 0,\n  [GeneratorType.DelayVibLFO]: -12000,\n  [GeneratorType.FreqVibLFO]: 0,\n  [GeneratorType.DelayModEnv]: -12000,\n  [GeneratorType.AttackModEnv]: -12000,\n  [GeneratorType.HoldModEnv]: -12000,\n  [GeneratorType.DecayModEnv]: -12000,\n  [GeneratorType.SustainModEnv]: 0,\n  [GeneratorType.ReleaseModEnv]: -12000,\n  [GeneratorType.KeyNumToModEnvHold]: 0,\n  [GeneratorType.KeyNumToModEnvDecay]: 0,\n  [GeneratorType.DelayVolEnv]: -12000,\n  [GeneratorType.AttackVolEnv]: -12000,\n  [GeneratorType.HoldVolEnv]: -12000,\n  [GeneratorType.DecayVolEnv]: -12000,\n  [GeneratorType.SustainVolEnv]: 0,\n  [GeneratorType.ReleaseVolEnv]: -12000,\n  [GeneratorType.KeyNumToVolEnvHold]: 0,\n  [GeneratorType.KeyNumToVolEnvDecay]: 0,\n  [GeneratorType.StartLoopAddrsCoarseOffset]: 0,\n  [GeneratorType.KeyNum]: -1,\n  [GeneratorType.Velocity]: -1,\n  [GeneratorType.InitialAttenuation]: 0,\n  [GeneratorType.EndLoopAddrsCoarseOffset]: 0,\n  [GeneratorType.CoarseTune]: 0,\n  [GeneratorType.FineTune]: 0,\n  [GeneratorType.SampleModes]: 0,\n  [GeneratorType.ScaleTuning]: 100,\n  [GeneratorType.ExclusiveClass]: 0,\n  [GeneratorType.OverridingRootKey]: -1\n};\n\n/**\n * Describes a range of MIDI key numbers (for the `keyRange` generator) or MIDI velocities (for the\n * `velRange` generator) with a minimum (lo) and maximum (hi) value.\n */\nexport interface Range {\n  /**\n   * Low value for the range.\n   */\n  lo: number;\n\n  /**\n   * High value for the range.\n   */\n  hi: number;\n}\n\nexport interface Generator {\n  /**\n   * The ID of the generator.\n   */\n  id: GeneratorType;\n\n  /**\n   * Generator value. If the range is not specified, this should be set.\n   */\n  value?: number;\n\n  /**\n   * The range of the generator. If the value is not specified, this should be set.\n   */\n  range?: Range;\n}\n", "export * from './bank';\nexport * from './generator';\nexport * from './instrument';\nexport * from './key';\nexport * from './metaData';\nexport * from './modulator';\nexport * from './preset';\nexport * from './presetData';\nexport * from './sample';\nexport * from './zone';\n", "import { GeneratorType } from './generator';\n\nexport enum ControllerType {\n  /**\n   * The controller moves linearly from the minimum to the maximum value, with the direction and\n   * polarity specified by the modulator.\n   */\n  Linear = 0,\n\n  /**\n   * The controller moves in a concave fashion from the minimum to the maximum value, with the\n   * direction and polarity specified by the modulator.\n   *\n   * `output = Math.log(Math.sqrt(value ** 2) / [max value] ** 2)`\n   */\n  Concave = 1,\n\n  /**\n   * The controller moves in a convex fashion from the minimum to the maximum value, with the\n   * direction and polarity specified by the modulator. This is the same as the concave curve, but\n   * with the start and end points reversed.\n   */\n  Convex = 2,\n\n  /**\n   * The controller output is at a minimum value while the controller input moves from the minimum\n   * to half of the maximum, after which the controller output is at a maximum. The direction and\n   * polarity are specified by the modulator.\n   */\n  Switch = 3\n}\n\nexport enum ControllerPolarity {\n  /**\n   * The controller should be mapped with a minimum value of 0 and a maximum value of 1. It behaves\n   * similar to the modulation wheel controller of the MIDI specification.\n   */\n  Unipolar = 0,\n\n  /**\n   * The controller should be mapped with a minimum value of -1 and a maximum value of 1. It\n   * behaves similar to the pitch wheel controller of the MIDI specification.\n   */\n  Bipolar = 1\n}\n\nexport enum ControllerDirection {\n  /**\n   * The direction of the controller should be from the minimum to the maximum value.\n   */\n  Increasing = 0,\n\n  /**\n   * The direction of the controller should be from the maximum to the minimum value.\n   */\n  Decreasing = 1\n}\n\nexport enum ControllerPalette {\n  /**\n   * Use the general controller palette as described by the `Controller` enum.\n   */\n  GeneralController = 0,\n\n  /**\n   * Use the MIDI controller palette.\n   */\n  MidiController = 1\n}\n\nexport enum Controller {\n  /**\n   * No controller is to be used.\n   */\n  NoController = 0,\n\n  /**\n   * The controller source to be used is the velocity value which is sent from the MIDI note-on\n   * command.\n   */\n  NoteOnVelocity = 2,\n\n  /**\n   * The controller source to be used is the key number value which was sent from the MIDI note-on\n   * command.\n   */\n  NoteOnKeyNumber = 3,\n\n  /**\n   * The controller source to be used is the poly pressure amount that is sent from the MIDI\n   * poly-pressure command.\n   */\n  PolyPressure = 10,\n\n  /**\n   * The controller source to be used is the channel pressure amount that is sent from the MIDI\n   * channel-pressure command.\n   */\n  ChannelPressure = 13,\n\n  /**\n   * The controller source to be used is the pitch wheel amount which is sent from the MIDI pitch\n   * wheel command.\n   */\n  PitchWheel = 14,\n\n  /**\n   * The controller source to be used is the pitch wheel sensitivity amount which is sent from the\n   * MIDI RPN 0 pitch wheel sensitivity command.\n   */\n  PitchWheelSensitivity = 16,\n\n  /**\n   * The controller source is the output of another modulator. This is only supported as `value`,\n   * not as `valueSource`.\n   */\n  Link = 127\n}\n\nexport interface ControllerValue {\n  /**\n   * The type of modulator.\n   */\n  type: ControllerType;\n\n  /**\n   * The polarity of the modulator.\n   */\n  polarity: ControllerPolarity;\n\n  /**\n   * The direction of the modulator.\n   */\n  direction: ControllerDirection;\n\n  /**\n   * The controller palette used for the modulator.\n   */\n  palette: ControllerPalette;\n\n  /**\n   * The index of the general or MIDI controller. If the palette is set to `GeneralController`,\n   * this refers to a type in the `Controller` type. Otherwise, its a MIDI continuous controller.\n   */\n  index: Controller | number;\n}\n\nexport enum TransformType {\n  /**\n   * The output value of the multiplier is fed directly to the summing node of the given\n   * destination.\n   */\n  Linear = 0,\n\n  /**\n   * The output value of the multiplier is to be the absolute value of the input value, as defined\n   * by the relationship:\n   *\n   * `output = Math.sqrt(input ** 2)` or simply `output = Math.abs(input)`\n   */\n  Absolute = 2\n}\n\nexport interface Modulator {\n  /**\n   * Destination generator.\n   */\n  id: GeneratorType;\n\n  /**\n   * Source modulator.\n   */\n  source: ControllerValue;\n\n  /**\n   * Degree of modulation.\n   */\n  value: number;\n\n  /**\n   * Source controls value of first.\n   *\n   * TODO: Description is unclear. Should be improved.\n   */\n  valueSource: ControllerValue;\n\n  /**\n   * Transform applied to source.\n   */\n  transform: TransformType;\n}\n\n/**\n * The default modulators at instrument level. Implementing these is up to the consumer of this\n * library. To override these modulators, other modulators have to be defined explicitly.\n */\nexport const DEFAULT_INSTRUMENT_MODULATORS: Modulator[] = [\n  // MIDI note-on velocity to initial attenuation\n  {\n    id: GeneratorType.InitialAttenuation,\n    source: {\n      type: ControllerType.Concave,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Decreasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoteOnVelocity\n    },\n    value: 960,\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI note-on velocity to filter cutoff\n  {\n    id: GeneratorType.InitialFilterFc,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Decreasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoteOnVelocity\n    },\n    value: -2400, // cents\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI channel pressure to vibrato LFO pitch depth\n  {\n    id: GeneratorType.VibLFOToPitch,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.ChannelPressure\n    },\n    value: 50, // cents / max excursion\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI continuous controller 1 to vibrato LFO pitch depth\n  {\n    id: GeneratorType.VibLFOToPitch,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.MidiController,\n      index: 1\n    },\n    value: 50,\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI continuous controller 7 to initial attenuation\n  {\n    id: GeneratorType.InitialAttenuation,\n    source: {\n      type: ControllerType.Concave,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Decreasing,\n      palette: ControllerPalette.MidiController,\n      index: 7\n    },\n    value: 960,\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI continuous controller 10 to pan position\n  {\n    id: GeneratorType.InitialAttenuation,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Bipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.MidiController,\n      index: 10\n    },\n    value: 1000, // tenths of a percent\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI continuous controller 11 to initial attenuation\n  {\n    id: GeneratorType.InitialAttenuation,\n    source: {\n      type: ControllerType.Concave,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Decreasing,\n      palette: ControllerPalette.MidiController,\n      index: 11\n    },\n    value: 960,\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI continuous controller 91 to reverb effects send\n  {\n    id: GeneratorType.ReverbEffectsSend,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.MidiController,\n      index: 91\n    },\n    value: 200, // tenths of a percent\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI continuous controller 93 to chorus effects send\n  {\n    id: GeneratorType.ChorusEffectsSend,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.MidiController,\n      index: 93\n    },\n    value: 200, // tenths of a percent\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.NoController\n    },\n    transform: TransformType.Linear\n  },\n\n  // MIDI pitch wheel to initial pitch controlled by MIDI pitch wheel sensitivity\n  {\n    id: GeneratorType.CoarseTune,\n    source: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Bipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.PitchWheel\n    },\n    value: 12700, // cents\n    valueSource: {\n      type: ControllerType.Linear,\n      polarity: ControllerPolarity.Unipolar,\n      direction: ControllerDirection.Increasing,\n      palette: ControllerPalette.GeneralController,\n      index: Controller.PitchWheelSensitivity\n    },\n    transform: TransformType.Linear\n  }\n];\n", "/**\n * SoundFont2 samples are in the WAV format, meaning that they consist of a signed 16-bit array,\n * instead of a unsigned 8-bit array, which is read by default. The sample data in the `smpl`\n * sub-chunk is parsed as Int16Array before creating a sample.\n */\nexport type SampleData = Int16Array;\n\n/**\n * The sample type, found in the `type` field in the header.\n */\nexport enum SampleType {\n  EOS = 0,\n  Mono = 1,\n  Right = 2,\n  Left = 4,\n  Linked = 8,\n  RomMono = 32769,\n  RomRight = 32770,\n  RomLeft = 32772,\n  RomLinked = 32776\n}\n\nexport interface SampleHeader {\n  /**\n   * The name of the sample. This may be EOS, indicating end of samples, with all of the other\n   * values set to zero.\n   */\n  name: string;\n\n  /**\n   * The start of the sample in data points, from the beginning of the sample data field to the\n   * first data point of the sample.\n   */\n  start: number;\n\n  /**\n   * The end of the sample in data points, from the beginning of the sample data field to the first\n   * set of 46 zero valued data points following this sample.\n   */\n  end: number;\n\n  /**\n   * The index in sample data points, from the beginning of the sample data field to the first data\n   * point in the loop of this sample.\n   */\n  startLoop: number;\n\n  /**\n   * The index in sample data points, from the beginning of the sample data field to the first data\n   * point following the loop of this sample.\n   */\n  endLoop: number;\n\n  /**\n   * The sample rate in hertz, at which the sample was acquired or to which it was most recently\n   * converted. The value should be between 400 and 50000 hertz, but this is not a strict\n   * requirement. A value of zero is illegal.\n   */\n  sampleRate: number;\n\n  /**\n   * The MIDI key number of the recorded pitch of the sample. For unpitched sounds, this should be\n   * a value of 255. Values between 128 and 254 are illegal and a value of 60 should be used\n   * instead.\n   */\n  originalPitch: number;\n\n  /**\n   * The pitch correction in cents that should be applied to the sample on playback, to compensate\n   * for any pitch errors during the sample recording.\n   */\n  pitchCorrection: number;\n\n  /**\n   * The sample header index of the associated left or right sample, if the sample type is a left\n   * or right type. Both samples should be played at the same time, with the pitch controlled by\n   * the right sample's generators.\n   */\n  link: number;\n\n  /**\n   * Indicates the type of sample.\n   */\n  type: SampleType;\n}\n\nexport interface Sample {\n  /**\n   * The sample header containing the meta data.\n   */\n  header: SampleHeader;\n\n  /**\n   * The sample data parsed as Int16Array.\n   */\n  data: SampleData;\n}\n", "/**\n * Convert a UTF-8 encoded buffer into a string. This will read the full buffer as UTF-8 encoded\n * string and return anything before the first NULL character. The output text is trimmed of any\n * preceding or following spaces.\n *\n * @param {Buffer} buffer - The input buffer\n */\nexport const getStringFromBuffer = (buffer: Uint8Array): string => {\n  const decoded = new TextDecoder('utf8').decode(buffer);\n  return decoded.split(/\\0/)[0].trim();\n};\n", "export * from './buffer';\nexport * from './memoize';\n", "/**\n * Returns a memoized function for the original function. Function arguments are serialized as a\n * JSON string and stored in an in-memory object.\n *\n * @template T\n * @template U\n * @param {(...originalArgs: T[]) => U} originalFunction\n */\nexport const memoize = <T, U>(\n  originalFunction: (...originalArgs: T[]) => U\n): ((...args: T[]) => U) => {\n  const memo: { [key: string]: U } = {};\n\n  return (...args: T[]) => {\n    const serializedArgs = JSON.stringify(args);\n    if (serializedArgs in memo) {\n      return memo[serializedArgs];\n    }\n\n    const output = originalFunction(...args);\n    memo[serializedArgs] = output;\n    return output;\n  };\n};\n", "import { cleanTasks } from '../task/index.js'\n\nexport let clean = Symbol('clean')\n\nexport let cleanStores = (...stores) => {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      'cleanStores() can be used only during development or tests'\n    )\n  }\n  cleanTasks()\n  for (let $store of stores) {\n    if ($store) {\n      if ($store.mocked) delete $store.mocked\n      if ($store[clean]) $store[clean]()\n    }\n  }\n}\n", "import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\nlet lqIndex = 0\nconst QUEUE_ITEMS_PER_LISTENER = 4\nexport let epoch = 0\n\nexport let atom = (initialValue) => {\n  let listeners = []\n  let $atom = {\n    get() {\n      if (!$atom.lc) {\n        $atom.listen(() => {})()\n      }\n      return $atom.value\n    },\n    lc: 0,\n    listen(listener) {\n      $atom.lc = listeners.push(listener)\n\n      return () => {\n        for (let i = lqIndex + QUEUE_ITEMS_PER_LISTENER; i < listenerQueue.length;) {\n          if (listenerQueue[i] === listener) {\n            listenerQueue.splice(i, QUEUE_ITEMS_PER_LISTENER)\n          } else {\n            i += QUEUE_ITEMS_PER_LISTENER\n          }\n        }\n\n        let index = listeners.indexOf(listener)\n        if (~index) {\n          listeners.splice(index, 1)\n          if (!--$atom.lc) $atom.off()\n        }\n      }\n    },\n    notify(oldValue, changedKey) {\n      epoch++\n      let runListenerQueue = !listenerQueue.length\n      for (let listener of listeners) {\n        listenerQueue.push(\n          listener,\n          $atom.value,\n          oldValue,\n          changedKey\n        )\n      }\n\n      if (runListenerQueue) {\n        for (lqIndex = 0; lqIndex < listenerQueue.length; lqIndex += QUEUE_ITEMS_PER_LISTENER) {\n            listenerQueue[lqIndex](\n              listenerQueue[lqIndex + 1],\n              listenerQueue[lqIndex + 2],\n              listenerQueue[lqIndex + 3]\n            )\n        }\n        listenerQueue.length = 0\n      }\n    },\n    /* It will be called on last listener unsubscribing.\n       We will redefine it in onMount and onStop. */\n    off() {},\n    set(newValue) {\n      let oldValue = $atom.value\n      if (oldValue !== newValue) {\n        $atom.value = newValue\n        $atom.notify(oldValue)\n      }\n    },\n    subscribe(listener) {\n      let unbind = $atom.listen(listener)\n      listener($atom.value)\n      return unbind\n    },\n    value: initialValue\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    $atom[clean] = () => {\n      listeners = []\n      $atom.lc = 0\n      $atom.off()\n    }\n  }\n\n  return $atom\n}\n", "import { atom } from '../atom/index.js'\n\nexport let map = (initial = {}) => {\n  let $map = atom(initial)\n\n  $map.setKey = function (key, value) {\n    let oldMap = $map.value\n    if (typeof value === 'undefined' && key in $map.value) {\n      $map.value = { ...$map.value }\n      delete $map.value[key]\n      $map.notify(oldMap, key)\n    } else if ($map.value[key] !== value) {\n      $map.value = {\n        ...$map.value,\n        [key]: value\n      }\n      $map.notify(oldMap, key)\n    }\n  }\n\n  return $map\n}\n", "import { map as on } from \"nanostores\";\nif (typeof DelayNode < \"u\") {\n  class t extends DelayNode {\n    constructor(n, o, a, c) {\n      super(n), o = Math.abs(o), this.delayTime.value = a;\n      const s = n.createGain();\n      s.gain.value = Math.min(Math.abs(c), 0.995), this.feedback = s.gain;\n      const d = n.createGain();\n      return d.gain.value = o, this.delayGain = d, this.connect(s), this.connect(d), s.connect(this), this.connect = (l) => d.connect(l), this;\n    }\n    start(n) {\n      this.delayGain.gain.setValueAtTime(this.delayGain.gain.value, n + this.delayTime.value);\n    }\n  }\n  AudioContext.prototype.createFeedbackDelay = function(e, n, o) {\n    return new t(this, e, n, o);\n  };\n}\nvar Pt = {};\nPt.generateReverb = function(t, e) {\n  for (var n = t.audioContext || new AudioContext(), o = n.sampleRate, a = t.numChannels || 2, c = t.decayTime * 1.5, s = Math.round(t.decayTime * o), d = Math.round(c * o), l = Math.round((t.fadeInTime || 0) * o), i = Math.pow(1 / 1e3, 1 / s), r = n.createBuffer(a, d, o), h = 0; h < a; h++) {\n    for (var m = r.getChannelData(h), u = 0; u < d; u++)\n      m[u] = an() * Math.pow(i, u);\n    for (var u = 0; u < l; u++)\n      m[u] *= u / l;\n  }\n  cn(r, t.lpFreqStart || 0, t.lpFreqEnd || 0, t.decayTime, e);\n};\nPt.generateGraph = function(t, e, n, o, a) {\n  var c = document.createElement(\"canvas\");\n  c.width = e, c.height = n;\n  var s = c.getContext(\"2d\");\n  s.fillStyle = \"#000\", s.fillRect(0, 0, c.width, c.height), s.fillStyle = \"#fff\";\n  for (var d = e / t.length, l = n / (a - o), i = 0; i < t.length; i++)\n    s.fillRect(i * d, n - (t[i] - o) * l, 1, 1);\n  return c;\n};\nvar cn = function(t, e, n, o, a) {\n  if (e == 0) {\n    a(t);\n    return;\n  }\n  var c = sn(t), s = new OfflineAudioContext(t.numberOfChannels, c[0].length, t.sampleRate), d = s.createBufferSource();\n  d.buffer = t;\n  var l = s.createBiquadFilter();\n  e = Math.min(e, t.sampleRate / 2), n = Math.min(n, t.sampleRate / 2), l.type = \"lowpass\", l.Q.value = 1e-4, l.frequency.setValueAtTime(e, 0), l.frequency.linearRampToValueAtTime(n, o), d.connect(l), l.connect(s.destination), d.start(), s.oncomplete = function(i) {\n    a(i.renderedBuffer);\n  }, s.startRendering(), window.filterNode = l;\n}, sn = function(t) {\n  for (var e = [], n = 0; n < t.numberOfChannels; n++)\n    e[n] = t.getChannelData(n);\n  return e;\n}, an = function() {\n  return Math.random() * 2 - 1;\n};\nlet be = (t) => console.log(t);\nfunction Xe(t, e = \"cyclist\") {\n  J(`[${e}] error: ${t.message}`);\n}\nconst J = (...t) => be(...t), so = (t) => {\n  be = t;\n}, dn = (t) => {\n  if (typeof t != \"string\")\n    return [];\n  const [e, n = \"\", o] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];\n  return e ? [e, n, o ? Number(o) : void 0] : [];\n}, ln = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, rn = { \"#\": 1, b: -1, s: 1, f: -1 }, Wt = (t, e = 3) => {\n  const [n, o, a = e] = dn(t);\n  if (!n)\n    throw new Error('not a note: \"' + t + '\"');\n  const c = ln[n.toLowerCase()], s = o?.split(\"\").reduce((d, l) => d + rn[l], 0) || 0;\n  return (Number(a) + 1) * 12 + c + s;\n}, ye = (t) => Math.pow(2, (t - 69) / 12) * 440, $ = (t, e, n) => Math.min(Math.max(t, e), n), un = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, mn = (t, e) => {\n  if (typeof t != \"object\")\n    throw new Error(\"valueToMidi: expected object value\");\n  let { freq: n, note: o } = t;\n  return typeof n == \"number\" ? un(n) : typeof o == \"string\" ? Wt(o) : typeof o == \"number\" ? o : e;\n};\nfunction U(t, e = 0, n) {\n  return isNaN(Number(t)) ? (!n && J(`\"${t}\" is not a number, falling back to ${e}`, \"warning\"), e) : t;\n}\nconst Ge = (t, e) => (t % e + e) % e, re = (t, e) => Ge(Math.round(U(t, 0)), e);\nfunction hn(t, e) {\n  return t / e;\n}\ntypeof AudioContext < \"u\" && (AudioContext.prototype.adjustLength = function(t, e, n = 1, o = 0) {\n  const a = Math.floor($(o, 0, 1) * e.length), c = e.sampleRate * t, s = this.createBuffer(e.numberOfChannels, e.length, e.sampleRate);\n  for (let d = 0; d < e.numberOfChannels; d++) {\n    let l = e.getChannelData(d), i = s.getChannelData(d);\n    for (let r = 0; r < c; r++) {\n      let h = (a + r * Math.abs(n)) % l.length;\n      n < 1 && (h = h * -1), i[r] = l.at(h) || 0;\n    }\n  }\n  return s;\n}, AudioContext.prototype.createReverb = function(t, e, n, o, a, c, s) {\n  const d = this.createConvolver();\n  return d.generate = (l = 2, i = 0.1, r = 15e3, h = 1e3, m, u, p) => {\n    d.duration = l, d.fade = i, d.lp = r, d.dim = h, d.ir = m, d.irspeed = u, d.irbegin = p, m ? d.buffer = this.adjustLength(l, m, u, p) : Pt.generateReverb(\n      {\n        audioContext: this,\n        numChannels: 2,\n        decayTime: l,\n        fadeInTime: i,\n        lpFreqStart: r,\n        lpFreqEnd: h\n      },\n      (Z) => {\n        d.buffer = Z;\n      }\n    );\n  }, d.generate(t, e, n, o, a, c, s), d;\n});\nvar ue = {\n  a: { freqs: [660, 1120, 2750, 3e3, 3350], gains: [1, 0.5012, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  e: { freqs: [440, 1800, 2700, 3e3, 3300], gains: [1, 0.1995, 0.1259, 0.1, 0.1], qs: [70, 80, 100, 120, 120] },\n  i: { freqs: [270, 1850, 2900, 3350, 3590], gains: [1, 0.0631, 0.0631, 0.0158, 0.0158], qs: [40, 90, 100, 120, 120] },\n  o: { freqs: [430, 820, 2700, 3e3, 3300], gains: [1, 0.3162, 0.0501, 0.0794, 0.01995], qs: [40, 80, 100, 120, 120] },\n  u: { freqs: [370, 630, 2750, 3e3, 3400], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n  ae: { freqs: [650, 1515, 2400, 3e3, 3350], gains: [1, 0.5, 0.1008, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  aa: { freqs: [560, 900, 2570, 3e3, 3300], gains: [1, 0.5, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  oe: { freqs: [500, 1430, 2300, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n  ue: { freqs: [250, 1750, 2150, 3200, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n  y: { freqs: [400, 1460, 2400, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  uh: { freqs: [600, 1250, 2100, 3100, 3500], gains: [1, 0.3, 0.0608, 0.0316, 0.01995], qs: [40, 70, 100, 120, 130] },\n  un: { freqs: [500, 1240, 2280, 3e3, 3500], gains: [1, 0.1, 0.1708, 0.0216, 0.02995], qs: [40, 60, 100, 120, 120] },\n  en: { freqs: [600, 1480, 2450, 3200, 3300], gains: [1, 0.15, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  an: { freqs: [700, 1050, 2500, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  on: { freqs: [500, 1080, 2350, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  get æ() {\n    return this.ae;\n  },\n  get ø() {\n    return this.oe;\n  },\n  get ɑ() {\n    return this.aa;\n  },\n  get å() {\n    return this.aa;\n  },\n  get ö() {\n    return this.oe;\n  },\n  get ü() {\n    return this.ue;\n  },\n  get ı() {\n    return this.y;\n  }\n};\nif (typeof GainNode < \"u\") {\n  class t extends GainNode {\n    constructor(n, o) {\n      if (super(n), !ue[o])\n        throw new Error(\"vowel: unknown vowel \" + o);\n      const { gains: a, qs: c, freqs: s } = ue[o], d = n.createGain();\n      for (let l = 0; l < 5; l++) {\n        const i = n.createGain();\n        i.gain.value = a[l];\n        const r = n.createBiquadFilter();\n        r.type = \"bandpass\", r.Q.value = c[l], r.frequency.value = s[l], this.connect(r), r.connect(i), i.connect(d);\n      }\n      return d.gain.value = 8, this.connect = (l) => d.connect(l), this;\n    }\n  }\n  AudioContext.prototype.createVowelFilter = function(e) {\n    return new t(this, e);\n  };\n}\nconst pn = \"data:text/javascript;base64,\";\nlet Yt = {};\nfunction Ve(t, e) {\n  const n = W();\n  if (Yt[t])\n    return Yt[t];\n  const o = 2 * n.sampleRate, a = n.createBuffer(1, o, n.sampleRate), c = a.getChannelData(0);\n  let s = 0, d, l, i, r, h, m, u;\n  d = l = i = r = h = m = u = 0;\n  for (let p = 0; p < o; p++)\n    if (t === \"white\")\n      c[p] = Math.random() * 2 - 1;\n    else if (t === \"brown\") {\n      let Z = Math.random() * 2 - 1;\n      c[p] = (s + 0.02 * Z) / 1.02, s = c[p];\n    } else if (t === \"pink\") {\n      let Z = Math.random() * 2 - 1;\n      d = 0.99886 * d + Z * 0.0555179, l = 0.99332 * l + Z * 0.0750759, i = 0.969 * i + Z * 0.153852, r = 0.8665 * r + Z * 0.3104856, h = 0.55 * h + Z * 0.5329522, m = -0.7616 * m - Z * 0.016898, c[p] = d + l + i + r + h + m + u + Z * 0.5362, c[p] *= 0.11, u = Z * 0.115926;\n    } else if (t === \"crackle\") {\n      const Z = e * 0.01;\n      Math.random() < Z ? c[p] = Math.random() * 2 - 1 : c[p] = 0;\n    }\n  return t !== \"crackle\" && (Yt[t] = a), a;\n}\nfunction Jt(t = \"white\", e, n = 0.02) {\n  const a = W().createBufferSource();\n  return a.buffer = Ve(t, n), a.loop = !0, a.start(e), {\n    node: a,\n    stop: (c) => a.stop(c)\n  };\n}\nfunction Zn(t, e, n) {\n  const o = Jt(\"pink\", n);\n  return {\n    node: Xn(t, o.node, e),\n    stop: (c) => o?.stop(c)\n  };\n}\nconst fe = [\"pink\", \"white\", \"brown\", \"crackle\"];\nfunction H(t) {\n  const e = W().createGain();\n  return e.gain.value = t, e;\n}\nconst me = (t, e, n, o) => o - n === 0 ? 0 : (e - t) / (o - n);\nfunction I(t, e, n, o) {\n  const a = new AudioWorkletNode(t, e, o);\n  return Object.entries(n).forEach(([c, s]) => {\n    a.parameters.get(c).value = s;\n  }), a;\n}\nconst Q = (t, e, n, o, a, c, s, d, l, i = \"exponential\") => {\n  e = U(e), n = U(n), o = U(o), a = U(a);\n  const r = i === \"exponential\" ? \"exponentialRampToValueAtTime\" : \"linearRampToValueAtTime\";\n  i === \"exponential\" && (c = c === 0 ? 1e-3 : c, s = s === 0 ? 1e-3 : s);\n  const h = s - c, m = s, u = c + o * h, p = l - d, Z = (X) => {\n    let y;\n    if (e > X) {\n      let b = me(c, m, 0, e);\n      y = X * b + (c > m ? c : 0);\n    } else\n      y = (X - e) * me(m, u, 0, n) + m;\n    return i === \"exponential\" && (y = y || 1e-3), y;\n  };\n  t.setValueAtTime(c, d), e > p ? t[r](Z(p), l) : e + n > p ? (t[r](Z(e), d + e), t[r](Z(p), l)) : (t[r](Z(e), d + e), t[r](Z(e + n), d + e + n), t.setValueAtTime(u, l)), t[r](c, l + a);\n};\nfunction bn(t, e, n, o, a, c) {\n  const s = {\n    threshold: e ?? -3,\n    ratio: n ?? 10,\n    knee: o ?? 10,\n    attack: a ?? 5e-3,\n    release: c ?? 0.05\n  };\n  return new DynamicsCompressorNode(t, s);\n}\nconst B = (t, e = \"linear\", n) => {\n  const [s, d, l, i] = t;\n  if (s == null && d == null && l == null && i == null)\n    return n ?? [1e-3, 1e-3, 1, 0.01];\n  const r = l ?? (s != null && d == null || s == null && d == null ? 1 : 1e-3);\n  return [Math.max(s ?? 0, 1e-3), Math.max(d ?? 0, 1e-3), Math.min(r, 1), Math.max(i ?? 0, 0.01)];\n};\nfunction St(t, e, n, o, a, c, s, d, l, i, r, h, m, u) {\n  const p = \"exponential\", [Z, X, y, b] = B([a, c, s, d], p, [5e-3, 0.14, 0, 0.1]);\n  let V, g;\n  if (m === \"ladder\" ? (V = I(t, \"ladder-processor\", { frequency: n, q: o, drive: u }), g = V.parameters.get(\"frequency\")) : (V = t.createBiquadFilter(), V.type = e, V.Q.value = o, V.frequency.value = n, g = V.frequency), (a ?? c ?? s ?? d ?? l) !== void 0) {\n    l = U(l, 1, !0), h = U(h, 0, !0);\n    const M = Math.abs(l), w = M * h;\n    let Y = $(2 ** -w * n, 0, 2e4), F = $(2 ** (M - w) * n, 0, 2e4);\n    return l < 0 && ([Y, F] = [F, Y]), Q(g, Z, X, y, b, Y, F, i, r, p), V;\n  }\n  return V;\n}\nlet he = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5;\nfunction Xn(t, e, n = 0) {\n  const o = W();\n  if (!n)\n    return t;\n  let a = o.createGain(), c = o.createGain();\n  t.connect(a), e.connect(c), a.gain.value = he(n), c.gain.value = he(1 - n);\n  let s = o.createGain();\n  return a.connect(s), c.connect(s), s;\n}\nlet yn = [\"linear\", \"exponential\"];\nfunction Xt(t, e, n, o) {\n  if (!(e.pattack ?? e.pdecay ?? e.psustain ?? e.prelease ?? e.penv))\n    return;\n  const c = U(e.penv, 1, !0), s = yn[e.pcurve ?? 0];\n  let [d, l, i, r] = B(\n    [e.pattack, e.pdecay, e.psustain, e.prelease],\n    s,\n    [0.2, 1e-3, 1, 1e-3]\n  ), h = e.panchor ?? i;\n  const m = c * 100, u = 0 - m * h, p = m - m * h;\n  Q(t, d, l, i, r, u, p, n, o, s);\n}\nfunction yt(t, e, n) {\n  const { vibmod: o = 0.5, vib: a } = e;\n  let c;\n  if (a > 0) {\n    c = W().createOscillator(), c.frequency.value = a;\n    const s = W().createGain();\n    return s.gain.value = o * 100, c.connect(s), s.connect(t), c.start(n), c;\n  }\n}\nfunction bt(t, e, n, o) {\n  const a = new ConstantSourceNode(t), c = H(0);\n  return c.connect(t.destination), a.connect(c), a.onended = () => {\n    try {\n      c.disconnect();\n    } catch {\n    }\n    try {\n      a.disconnect();\n    } catch {\n    }\n    e();\n  }, a.start(n), a.stop(o), a;\n}\nconst Gn = (t, e = 1, n = \"sine\") => {\n  const o = W();\n  let a;\n  fe.includes(n) ? (a = o.createBufferSource(), a.buffer = Ve(n, 2), a.loop = !0) : (a = o.createOscillator(), a.type = n, a.frequency.value = t), a.start();\n  const c = new GainNode(o, { gain: e });\n  return a.connect(c), { node: c, stop: (s) => a.stop(s) };\n}, Vn = (t, e, n, o = \"sine\") => {\n  const c = t.value * e, s = c * n;\n  return Gn(c, s, o);\n};\nfunction Nt(t, e, n) {\n  const {\n    fmh: o = 1,\n    fmi: a,\n    fmenv: c = \"exp\",\n    fmattack: s,\n    fmdecay: d,\n    fmsustain: l,\n    fmrelease: i,\n    fmvelocity: r,\n    fmwave: h = \"sine\",\n    duration: m\n  } = e;\n  let u, p = () => {\n  };\n  if (a) {\n    const X = W().createGain(), y = Vn(t, o, a, h);\n    if (u = y.node, p = y.stop, ![s, d, l, i, r].some((b) => b !== void 0))\n      u.connect(t);\n    else {\n      const [b, V, g, f] = B([s, d, l, i]), M = n + m;\n      Q(\n        X.gain,\n        b,\n        V,\n        g,\n        f,\n        0,\n        1,\n        n,\n        M,\n        c === \"exp\" ? \"exponential\" : \"linear\"\n      ), u.connect(X), X.connect(t);\n    }\n  }\n  return { stop: p };\n}\nconst It = {}, Ft = {}, ao = (t) => It[t];\nfunction fn(t, e) {\n  var n = 1024;\n  if (t < n) return t + \" B\";\n  var o = [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"], a = -1;\n  do\n    t /= n, ++a;\n  while (t >= n);\n  return t.toFixed(1) + \" \" + o[a];\n}\nfunction Wn(t, e) {\n  const { s: n, n: o = 0, speed: a = 1 } = t;\n  let c = mn(t, 36), s = c - 36, d, l = 0;\n  if (Array.isArray(e))\n    l = re(o, e.length), d = e[l];\n  else {\n    const h = (u) => Wt(u) - c, m = Object.keys(e).filter((u) => !u.startsWith(\"_\")).reduce(\n      (u, p, Z) => !u || Math.abs(h(p)) < Math.abs(h(u)) ? p : u,\n      null\n    );\n    s = -h(m), l = re(o, e[m].length), d = e[m][l];\n  }\n  const i = `${n}:${l}`;\n  let r = Math.abs(a) * Math.pow(2, s / 12);\n  return { transpose: s, sampleUrl: d, index: l, midi: c, label: i, playbackRate: r };\n}\nconst xn = async (t, e, n) => {\n  let { sampleUrl: o, label: a, playbackRate: c } = Wn(t, e);\n  n && (o = await n(o));\n  const s = W(), d = await We(o, s, a);\n  return t.unit === \"c\" && (c = c * d.duration), { buffer: d, playbackRate: c };\n}, gn = async (t, e, n) => {\n  let { buffer: o, playbackRate: a } = await xn(t, e, n);\n  t.speed < 0 && (o = Mn(o));\n  const s = W().createBufferSource();\n  s.buffer = o, s.playbackRate.value = a;\n  const { s: d, loopBegin: l = 0, loopEnd: i = 1, begin: r = 0, end: h = 1 } = t, m = r * s.buffer.duration;\n  (d.startsWith(\"wt_\") ? 1 : t.loop) && (s.loop = !0, s.loopStart = l * s.buffer.duration - m, s.loopEnd = i * s.buffer.duration - m);\n  const p = s.buffer.duration / s.playbackRate.value, Z = (h - r) * p;\n  return { bufferSource: s, offset: m, bufferDuration: p, sliceDuration: Z };\n}, We = (t, e, n, o = 0) => {\n  const a = n ? `sound \"${n}:${o}\"` : \"sample\";\n  if (t = t.replace(\"#\", \"%23\"), !Ft[t]) {\n    J(`[sampler] load ${a}..`, \"load-sample\", { url: t });\n    const c = Date.now();\n    Ft[t] = fetch(t).then((s) => s.arrayBuffer()).then(async (s) => {\n      const d = Date.now() - c, l = fn(s.byteLength);\n      J(`[sampler] load ${a}... done! loaded ${l} in ${d}ms`, \"loaded-sample\", { url: t });\n      const i = await e.decodeAudioData(s);\n      return It[t] = i, i;\n    });\n  }\n  return Ft[t];\n};\nfunction Mn(t) {\n  const e = W(), n = e.createBuffer(t.numberOfChannels, t.length, e.sampleRate);\n  for (let o = 0; o < t.numberOfChannels; o++)\n    n.copyToChannel(t.getChannelData(o).slice().reverse(), o, o);\n  return n;\n}\nconst lo = (t) => It[t];\nfunction xe(t) {\n  if (t.startsWith(\"bubo:\")) {\n    const [e, n] = t.split(\":\");\n    t = `github:Bubobubobubobubo/dough-${n}`;\n  }\n  return t;\n}\nfunction ge(t, e = \"\") {\n  if (!t.startsWith(\"github:\"))\n    throw new Error('expected \"github:\" at the start of pseudoUrl');\n  let [n, o] = t.split(\"github:\");\n  return o = o.endsWith(\"/\") ? o.slice(0, -1) : o, o.split(\"/\").length === 2 && (o += \"/main\"), `https://raw.githubusercontent.com/${o}/${e}`;\n}\nconst Rn = (t, e, n = t._base || \"\") => Object.entries(t).forEach(([o, a]) => {\n  if (typeof a == \"string\" && (a = [a]), typeof a != \"object\")\n    throw new Error(\"wrong sample map format for \" + o);\n  n = a._base || n, n = xe(n), n.startsWith(\"github:\") && (n = ge(n, \"\"));\n  const c = (s) => n + s;\n  Array.isArray(a) ? a = a.map(c) : a = Object.fromEntries(\n    Object.entries(a).map(([s, d]) => [s, (typeof d == \"string\" ? [d] : d).map(c)])\n  ), e(o, a);\n});\nlet Me = {};\nfunction io(t, e) {\n  Me[t] = e;\n}\nfunction zn(t) {\n  const e = Object.entries(Me).find(([n]) => t.startsWith(n));\n  if (e)\n    return e[1];\n}\nconst Ln = async (t, e = t._base || \"\", n = {}) => {\n  if (typeof t == \"string\") {\n    const c = zn(t);\n    if (c)\n      return c(t);\n    if (t = xe(t), t.startsWith(\"github:\") && (t = ge(t, \"strudel.json\")), t.startsWith(\"local:\") && (t = \"http://localhost:5432\"), t.startsWith(\"shabda:\")) {\n      let [d, l] = t.split(\"shabda:\");\n      t = `https://shabda.ndre.gr/${l}.json?strudel=1`;\n    }\n    if (t.startsWith(\"shabda/speech\")) {\n      let [d, l] = t.split(\"shabda/speech\");\n      l = l.startsWith(\"/\") ? l.substring(1) : l;\n      let [i, r] = l.split(\":\"), h = \"f\", m = \"en-GB\";\n      i && ([m, h] = i.split(\"/\")), t = `https://shabda.ndre.gr/speech/${r}.json?gender=${h}&language=${m}&strudel=1'`;\n    }\n    if (typeof fetch != \"function\")\n      return;\n    const s = t.split(\"/\").slice(0, -1).join(\"/\");\n    return typeof fetch > \"u\" ? void 0 : fetch(t).then((d) => d.json()).then((d) => Ln(d, e || d._base || s, n)).catch((d) => {\n      throw console.error(d), new Error(`error loading \"${t}\"`);\n    });\n  }\n  const { prebake: o, tag: a } = n;\n  Rn(\n    t,\n    (c, s) => q(c, (d, l, i) => Yn(d, l, i, s), {\n      type: \"sample\",\n      samples: s,\n      baseUrl: e,\n      prebake: o,\n      tag: a\n    }),\n    e\n  );\n}, pe = [];\nasync function Yn(t, e, n, o, a) {\n  let {\n    s: c,\n    nudge: s = 0,\n    // TODO: is this in seconds?\n    cut: d,\n    loop: l,\n    clip: i = void 0,\n    // if set, samples will be cut off when the hap ends\n    n: r = 0,\n    speed: h = 1,\n    // sample playback speed\n    duration: m\n  } = e;\n  if (h === 0)\n    return;\n  const u = W();\n  let [p, Z, X, y] = B([e.attack, e.decay, e.sustain, e.release]);\n  const { bufferSource: b, sliceDuration: V, offset: g } = await gn(e, o, a);\n  if (u.currentTime > t) {\n    J(`[sampler] still loading sound \"${c}:${r}\"`, \"highlight\");\n    return;\n  }\n  if (!b) {\n    J(`[sampler] could not load \"${c}:${r}\"`, \"error\");\n    return;\n  }\n  let f = yt(b.detune, e, t);\n  const M = t + s;\n  b.start(M, g);\n  const w = u.createGain(), Y = b.connect(w);\n  i == null && l == null && e.release == null && (m = V);\n  let F = t + m;\n  Q(Y.gain, p, Z, X, y, 0, 1, t, F, \"linear\"), Xt(b.detune, e, t, F);\n  const S = u.createGain();\n  Y.connect(S), b.onended = function() {\n    b.disconnect(), f?.stop(), Y.disconnect(), S.disconnect(), n();\n  };\n  let O = F + y + 0.01;\n  b.stop(O);\n  const T = { node: S, bufferSource: b, stop: (k) => {\n    b.stop(k);\n  } };\n  if (d !== void 0) {\n    const k = pe[d];\n    k && (k.node.gain.setValueAtTime(1, M), k.node.gain.linearRampToValueAtTime(0, M + 0.01)), pe[d] = T;\n  }\n  return T;\n}\nconst Re = 128, Ct = \"System Standard\";\nlet ze = Re;\nfunction Sn(t) {\n  ze = parseInt(t) ?? Re;\n}\nlet Le = !1;\nfunction Fn(t) {\n  Le = t == !0;\n}\nfunction Tn(t) {\n  return typeof t == \"number\" ? t % 5 : { tri: 0, triangle: 0, sine: 1, ramp: 2, saw: 3, square: 4 }[t] ?? 0;\n}\nconst j = on();\nfunction q(t, e, n = {}) {\n  t = t.toLowerCase().replace(/\\s+/g, \"_\"), j.setKey(t, { onTrigger: e, data: n });\n}\nlet Ye = (t) => t;\nfunction A(t) {\n  return Ye(t);\n}\nfunction ro(t) {\n  Ye = t;\n}\nfunction vt(t) {\n  for (const n in t)\n    t[n.toLowerCase()] = t[n];\n  const e = j.get();\n  for (const n in e) {\n    const [o, a] = n.split(\"_\");\n    if (!a) continue;\n    const c = t[o];\n    if (c) {\n      if (typeof c == \"string\")\n        e[`${c}_${a}`.toLowerCase()] = e[n];\n      else if (Array.isArray(c))\n        for (const s of c)\n          e[`${s}_${a}`.toLowerCase()] = e[n];\n    }\n  }\n  j.set({ ...e });\n}\nasync function Hn(t) {\n  const n = await (await fetch(t)).json();\n  vt(n);\n}\nasync function uo(...t) {\n  switch (t.length) {\n    case 1:\n      return typeof t[0] == \"string\" ? Hn(t[0]) : vt(t[0]);\n    case 2:\n      return vt({ [t[0]]: t[1] });\n    default:\n      throw new Error(\"aliasMap expects 1 or 2 arguments, received \" + t.length);\n  }\n}\nfunction Tt(t) {\n  return typeof t != \"string\" ? (console.warn(`getSound: expected string got \"${t}\". fall back to triangle`), j.get().triangle) : j.get()[t.toLowerCase()];\n}\nconst wn = async () => {\n  await navigator.mediaDevices.getUserMedia({ audio: !0 });\n  let t = await navigator.mediaDevices.enumerateDevices();\n  t = t.filter((n) => n.kind === \"audiooutput\" && n.deviceId !== \"default\");\n  const e = /* @__PURE__ */ new Map();\n  return e.set(Ct, \"\"), t.forEach((n) => {\n    e.set(n.label, n.deviceId);\n  }), e;\n};\nlet lt = {\n  s: \"triangle\",\n  gain: 0.8,\n  postgain: 1,\n  density: \".03\",\n  ftype: \"12db\",\n  fanchor: 0,\n  resonance: 1,\n  hresonance: 1,\n  bandq: 1,\n  channels: [1, 2],\n  phaserdepth: 0.75,\n  shapevol: 1,\n  distortvol: 1,\n  delay: 0,\n  byteBeatExpression: \"0\",\n  delayfeedback: 0.5,\n  delaysync: 3 / 16,\n  orbit: 1,\n  i: 1,\n  velocity: 1,\n  fft: 8\n};\nconst Kn = Object.freeze({ ...lt });\nfunction mo(t, e) {\n  lt[t] = e;\n}\nfunction ho() {\n  lt = { ...Kn };\n}\nlet kt = new Map(Object.entries(lt));\nfunction Se(t, e) {\n  kt.set(t, e);\n}\nfunction L(t) {\n  return kt.get(t);\n}\nfunction po(t) {\n  Object.keys(t).forEach((e) => {\n    Se(e, t[e]);\n  });\n}\nfunction Jn() {\n  kt = new Map(Object.entries(lt));\n}\nfunction Zo(t) {\n  Jn(), t === \"1.0\" && Se(\"fanchor\", 0.5);\n}\nconst bo = () => j.set({});\nlet Gt;\nconst Nn = () => (Gt = new AudioContext(), Gt), W = () => Gt || Nn();\nfunction Xo() {\n  return W().currentTime;\n}\nlet Ht;\nfunction Cn() {\n  return Ht || (Ht = W().audioWorklet.addModule(pn)), Ht;\n}\nasync function vn(t = {}) {\n  const {\n    disableWorklets: e = !1,\n    maxPolyphony: n,\n    audioDeviceName: o = Ct,\n    multiChannelOrbits: a = !1\n  } = t;\n  if (Sn(n), Fn(a), typeof window > \"u\")\n    return;\n  const c = W();\n  if (o != null && o != Ct)\n    try {\n      const d = (await wn()).get(o), l = (d ?? \"\").length > 0;\n      c.sinkId !== d && l && await c.setSinkId(d), J(\n        `[superdough] Audio Device set to ${o}, it might take a few seconds before audio plays on all output channels`\n      );\n    } catch {\n      J(\"[superdough] failed to set audio interface\", \"warning\");\n    }\n  if (await c.resume(), e) {\n    J(\"[superdough]: AudioWorklets disabled with disableWorklets\");\n    return;\n  }\n  try {\n    await Cn(), J(\"[superdough] AudioWorklets loaded\");\n  } catch (s) {\n    console.warn(\"could not load AudioWorklet effects\", s);\n  }\n  J(\"[superdough] ready\");\n}\nlet wt;\nasync function yo(t) {\n  return wt || (wt = new Promise((e) => {\n    document.addEventListener(\"click\", async function n() {\n      document.removeEventListener(\"click\", n), await vn(t), e();\n    });\n  })), wt;\n}\nlet Vt, nt;\nfunction Pn() {\n  const t = W(), e = t.destination.maxChannelCount;\n  t.destination.channelCount = e, Vt = new ChannelMergerNode(t, { numberOfInputs: t.destination.channelCount }), nt = new GainNode(t), Vt.connect(nt), nt.connect(t.destination);\n}\nconst In = (t, e = [0, 1]) => {\n  const n = W();\n  Vt == null && Pn();\n  const o = new StereoPannerNode(n);\n  t.connect(o);\n  const a = new ChannelSplitterNode(n, {\n    numberOfOutputs: o.channelCount\n  });\n  o.connect(a), e.forEach((c, s) => {\n    a.connect(Vt, s % o.channelCount, c % n.destination.channelCount);\n  });\n}, Go = () => {\n  nt != null && (nt.gain.linearRampToValueAtTime(0, W().currentTime + 0.01), nt = null);\n};\nfunction kn(t, e, n, o) {\n  if (n = $(n, 0, 0.98), !x[t].delayNode) {\n    const c = W().createFeedbackDelay(1, e, n);\n    c.start?.(o), ft(c, t), x[t].delayNode = c;\n  }\n  return x[t].delayNode.delayTime.value !== e && x[t].delayNode.delayTime.setValueAtTime(e, o), x[t].delayNode.feedback.value !== n && x[t].delayNode.feedback.setValueAtTime(n, o), x[t].delayNode;\n}\nfunction Qt(t, e, n, o = {}) {\n  const { shape: a = 0, ...c } = o, { dcoffset: s = -0.5, depth: d = 1 } = o, l = {\n    frequency: 1,\n    depth: d,\n    skew: 0.5,\n    phaseoffset: 0,\n    time: e,\n    begin: e,\n    end: n,\n    shape: Tn(a),\n    dcoffset: s,\n    min: s * d,\n    max: s * d + d,\n    curve: 1,\n    ...c\n  };\n  return I(t, \"lfo-processor\", l);\n}\nfunction Qn(t, e, n = 1, o = 0.5, a = 1e3, c = 2e3) {\n  const s = W(), d = Qt(s, t, e, { frequency: n, depth: c * 2 }), l = 2;\n  let i = 0;\n  const r = [];\n  for (let h = 0; h < l; h++) {\n    const m = s.createBiquadFilter();\n    m.type = \"notch\", m.gain.value = 1, m.frequency.value = a + i, m.Q.value = 2 - Math.min(Math.max(o * 2, 0), 1.9), d.connect(m.detune), i += 282, h > 0 && r[h - 1].connect(m), r.push(m);\n  }\n  return r[r.length - 1];\n}\nfunction Bn(t) {\n  t = t ?? 0;\n  const e = [\"12db\", \"ladder\", \"24db\"];\n  return typeof t == \"number\" ? e[Math.floor(Ge(t, e.length))] : t;\n}\nlet x = {};\nfunction ft(t, e) {\n  x[e] == null && Xe(new Error(\"target orbit does not exist\"), \"superdough\"), t.connect(x[e].gain);\n}\nfunction Un(t, e, n) {\n  x[e] == null && (x[e] = {\n    gain: new GainNode(t, { gain: 1, channelCount: 2, channelCountMode: \"explicit\" })\n  }, In(x[e].gain, n));\n}\nfunction jn(t, e, n, o = 0.1, a = 1) {\n  [e].flat().forEach((s) => {\n    if (x[s] == null) {\n      Xe(new Error(`duck target orbit ${s} does not exist`), \"superdough\");\n      return;\n    }\n    bt(\n      t,\n      () => {\n        x[s].gain.gain.cancelScheduledValues(n);\n        const d = x[s].gain.gain.value;\n        x[s].gain.gain.linearRampToValueAtTime($(1 - Math.pow(a, 0.5), 0.01, d), n), x[s].gain.gain.exponentialRampToValueAtTime(1, n + Math.max(2e-3, o));\n      },\n      0,\n      n - 0.01\n    );\n  });\n}\nlet et = (t, e) => t !== void 0 && t !== e;\nfunction On(t, e, n, o, a, c, s, d) {\n  if (!x[t].reverbNode) {\n    const i = W().createReverb(e, n, o, a, c, s, d);\n    ft(i, t), x[t].reverbNode = i;\n  }\n  return (et(e, x[t].reverbNode.duration) || et(n, x[t].reverbNode.fade) || et(o, x[t].reverbNode.lp) || et(a, x[t].reverbNode.dim) || et(s, x[t].reverbNode.irspeed) || et(d, x[t].reverbNode.irbegin) || x[t].reverbNode.ir !== c) && x[t].reverbNode.generate(e, n, o, a, c, s, d), x[t].reverbNode;\n}\nlet P = {}, ot = {};\nfunction Dn(t, e = 1024, n = 0.5) {\n  if (!P[t]) {\n    const o = W().createAnalyser();\n    o.fftSize = e, o.smoothingTimeConstant = n, P[t] = o, ot[t] = new Float32Array(P[t].frequencyBinCount);\n  }\n  return P[t].fftSize !== e && (P[t].fftSize = e, ot[t] = new Float32Array(P[t].frequencyBinCount)), P[t];\n}\nfunction Vo(t = \"time\", e = 1) {\n  const n = {\n    time: () => P[e]?.getFloatTimeDomainData(ot[e]),\n    frequency: () => P[e]?.getFloatFrequencyData(ot[e])\n  }[t];\n  if (!n)\n    throw new Error(`getAnalyzerData: ${t} not supported. use one of ${Object.keys(n).join(\", \")}`);\n  return n(), ot[e];\n}\nfunction Kt(t, e, n) {\n  const o = H(n);\n  return t.connect(o), o.connect(e), o;\n}\nfunction fo() {\n  x = {}, P = {}, ot = {};\n}\nlet at = /* @__PURE__ */ new Map();\nfunction Ze(t) {\n  return (Array.isArray(t) ? t : [t]).map((e) => e - 1);\n}\nconst En = async (t, e, n, o = 0.5, a = 0.5) => {\n  const c = W();\n  let { stretch: s } = t;\n  if (s != null && (e = e - 0.04), typeof t != \"object\")\n    throw new Error(\n      `expected hap.value to be an object, but got \"${t}\". Hint: append .note() or .s() to the end`,\n      \"error\"\n    );\n  if (t.duration = n, e < c.currentTime) {\n    console.warn(\n      `[superdough]: cannot schedule sounds in the past (target: ${e.toFixed(2)}, now: ${c.currentTime.toFixed(2)})`\n    );\n    return;\n  }\n  let {\n    tremolo: d,\n    tremolosync: l,\n    tremolodepth: i = 1,\n    tremoloskew: r,\n    tremolophase: h = 0,\n    tremoloshape: m,\n    s: u = L(\"s\"),\n    bank: p,\n    source: Z,\n    gain: X = L(\"gain\"),\n    postgain: y = L(\"postgain\"),\n    density: b = L(\"density\"),\n    duckorbit: V,\n    duckattack: g,\n    duckdepth: f,\n    // filters\n    fanchor: M = L(\"fanchor\"),\n    drive: w = 0.69,\n    release: Y = 0,\n    // low pass\n    cutoff: F,\n    lpenv: S,\n    lpattack: O,\n    lpdecay: z,\n    lpsustain: T,\n    lprelease: k,\n    resonance: xt = L(\"resonance\"),\n    // high pass\n    hpenv: C,\n    hcutoff: _,\n    hpattack: D,\n    hpdecay: gt,\n    hpsustain: Te,\n    hprelease: He,\n    hresonance: we = L(\"hresonance\"),\n    // band pass\n    bpenv: Ke,\n    bandf: Bt,\n    bpattack: Je,\n    bpdecay: Ne,\n    bpsustain: Ce,\n    bprelease: ve,\n    bandq: Pe = L(\"bandq\"),\n    //phaser\n    phaserrate: Ut,\n    phaserdepth: jt = L(\"phaserdepth\"),\n    phasersweep: Ie,\n    phasercenter: ke,\n    //\n    coarse: Ot,\n    crush: Dt,\n    dry: it,\n    shape: Et,\n    shapevol: Mt = L(\"shapevol\"),\n    distort: At,\n    distortvol: Rt = L(\"distortvol\"),\n    pan: qt,\n    vowel: $t,\n    delay: rt = L(\"delay\"),\n    delayfeedback: _t = L(\"delayfeedback\"),\n    delaysync: Qe = L(\"delaysync\"),\n    delaytime: ut,\n    orbit: E = L(\"orbit\"),\n    room: te,\n    roomfade: Be,\n    roomlp: Ue,\n    roomdim: je,\n    roomsize: Oe,\n    ir: zt,\n    irspeed: De,\n    irbegin: Ee,\n    i: ee = L(\"i\"),\n    velocity: Lt = L(\"velocity\"),\n    analyze: ne,\n    // analyser wet\n    fft: Ae = L(\"fft\"),\n    // fftSize 0 - 10\n    compressor: oe,\n    compressorRatio: qe,\n    compressorKnee: $e,\n    compressorAttack: _e,\n    compressorRelease: tn\n  } = t;\n  ut = ut ?? hn(Qe, o);\n  const en = Ze(\n    Le && E > 0 ? [E * 2 - 1, E * 2] : L(\"channels\")\n  ), nn = t.channels != null ? Ze(t.channels) : en;\n  Un(c, E, nn), V != null && jn(c, V, e, g, f), X = A(U(X, 1)), y = A(y), Mt = A(Mt), Rt = A(Rt), rt = A(rt), Lt = A(Lt), i = A(i), X *= Lt;\n  const mt = e + n, ce = mt + Y, se = Math.round(Math.random() * 1e6);\n  for (let G = 0; G <= at.size - ze; G++) {\n    const v = at.entries().next(), K = v.value[1], N = v.value[0], ie = e + 0.25;\n    K?.node?.gain?.linearRampToValueAtTime(0, ie), K?.stop?.(ie), at.delete(N);\n  }\n  let tt = [];\n  if ([\"-\", \"~\", \"_\"].includes(u))\n    return;\n  p && u && (u = `${p}_${u}`, t.s = u);\n  let ht;\n  if (Z)\n    ht = Z(e, t, n, o);\n  else if (Tt(u)) {\n    const { onTrigger: G } = Tt(u), K = await G(e, t, () => {\n      tt.forEach((N) => N?.disconnect()), at.delete(se);\n    });\n    K && (ht = K.node, at.set(se, K));\n  } else\n    throw new Error(`sound ${u} not found! Is it loaded?`);\n  if (!ht)\n    return;\n  if (c.currentTime > e) {\n    J(\"[webaudio] skip hap: still loading\", c.currentTime - e);\n    return;\n  }\n  const R = [];\n  R.push(ht), s !== void 0 && R.push(I(c, \"phase-vocoder-processor\", { pitchFactor: s })), R.push(H(X));\n  const pt = Bn(t.ftype);\n  if (F !== void 0) {\n    let G = () => St(\n      c,\n      \"lowpass\",\n      F,\n      xt,\n      O,\n      z,\n      T,\n      k,\n      S,\n      e,\n      mt,\n      M,\n      pt,\n      w\n    );\n    R.push(G()), pt === \"24db\" && R.push(G());\n  }\n  if (_ !== void 0) {\n    let G = () => St(\n      c,\n      \"highpass\",\n      _,\n      we,\n      D,\n      gt,\n      Te,\n      He,\n      C,\n      e,\n      mt,\n      M\n    );\n    R.push(G()), pt === \"24db\" && R.push(G());\n  }\n  if (Bt !== void 0) {\n    let G = () => St(c, \"bandpass\", Bt, Pe, Je, Ne, Ce, ve, Ke, e, mt, M);\n    R.push(G()), pt === \"24db\" && R.push(G());\n  }\n  if ($t !== void 0) {\n    const G = c.createVowelFilter($t);\n    R.push(G);\n  }\n  if (Ot !== void 0 && R.push(I(c, \"coarse-processor\", { coarse: Ot })), Dt !== void 0 && R.push(I(c, \"crush-processor\", { crush: Dt })), Et !== void 0 && R.push(I(c, \"shape-processor\", { shape: Et, postgain: Mt })), At !== void 0 && R.push(I(c, \"distort-processor\", { distort: At, postgain: Rt })), l != null && (d = o * l), d !== void 0) {\n    const G = Math.max(1 - i, 0), v = new GainNode(c, { gain: G }), K = a / o;\n    Qt(c, e, ce, {\n      skew: r ?? (m != null ? 0.5 : 1),\n      frequency: d,\n      depth: i,\n      time: K,\n      dcoffset: 0,\n      shape: m,\n      phaseoffset: h,\n      min: 0,\n      max: 1,\n      curve: 1.5\n    }).connect(v.gain), R.push(v);\n  }\n  if (oe !== void 0 && R.push(\n    bn(c, oe, qe, $e, _e, tn)\n  ), qt !== void 0) {\n    const G = c.createStereoPanner();\n    G.pan.value = 2 * qt - 1, R.push(G);\n  }\n  if (Ut !== void 0 && jt > 0) {\n    const G = Qn(e, ce, Ut, jt, ke, Ie);\n    R.push(G);\n  }\n  const st = new GainNode(c, { gain: y });\n  R.push(st);\n  let ae;\n  if (rt > 0 && ut > 0 && _t > 0) {\n    const G = kn(E, ut, _t, e);\n    ae = Kt(st, G, rt), tt.push(ae);\n  }\n  let de;\n  if (te > 0) {\n    let G;\n    if (zt !== void 0) {\n      let K, N = Tt(zt);\n      Array.isArray(N) ? K = N.data.samples[ee % N.data.samples.length] : typeof N == \"object\" && (K = Object.values(N.data.samples).flat()[ee % Object.values(N.data.samples).length]), G = await We(K, c, zt, 0);\n    }\n    const v = On(E, Oe, Be, Ue, je, G, De, Ee);\n    de = Kt(st, v, te), tt.push(de);\n  }\n  let le;\n  if (ne) {\n    const G = Dn(ne, 2 ** (Ae + 5));\n    le = Kt(st, G, 1), tt.push(le);\n  }\n  if (it != null) {\n    it = A(it);\n    const G = new GainNode(c, { gain: it });\n    R.push(G), ft(G, E);\n  } else\n    ft(st, E);\n  R.slice(1).reduce((G, v) => G.connect(v), R[0]), tt = tt.concat(R);\n}, Wo = (t, e, n, o) => {\n  En(e, t - n, e.duration / o, o);\n}, dt = (t, e = 36) => {\n  let { note: n, freq: o } = t;\n  return n = n || e, typeof n == \"string\" && (n = Wt(n)), !o && typeof n == \"number\" && (o = ye(n)), Number(o);\n};\nfunction Zt(t) {\n  t != null && (t.disconnect(), t.parameters.get(\"end\")?.setValueAtTime(0, 0));\n}\nconst An = [\"triangle\", \"square\", \"sawtooth\", \"sine\"], qn = [\n  [\"tri\", \"triangle\"],\n  [\"sqr\", \"square\"],\n  [\"saw\", \"sawtooth\"],\n  [\"sin\", \"sine\"]\n];\nfunction $n(t, e) {\n  const n = t, o = new Float32Array(e);\n  for (let a = 0; a < e; a++) {\n    const c = a * 2 / e - 1;\n    o[a] = Math.tanh(c * n);\n  }\n  return o;\n}\nfunction xo() {\n  [...An].forEach((t) => {\n    q(\n      t,\n      (e, n, o) => {\n        const [a, c, s, d] = B(\n          [n.attack, n.decay, n.sustain, n.release],\n          \"linear\",\n          [1e-3, 0.05, 0.6, 0.01]\n        );\n        let l = to(t, e, n), { node: i, stop: r, triggerRelease: h } = l;\n        const m = H(0.3), { duration: u } = n;\n        i.onended = () => {\n          i.disconnect(), m.disconnect(), o();\n        };\n        const p = H(1);\n        let Z = i.connect(m).connect(p);\n        const X = e + u;\n        Q(Z.gain, a, c, s, d, 0, 1, e, X, \"linear\");\n        const y = X + d + 0.01;\n        return h?.(y), r(y), {\n          node: Z,\n          stop: (b) => {\n            r(b);\n          }\n        };\n      },\n      { type: \"synth\", prebake: !0 }\n    );\n  }), q(\n    \"sbd\",\n    (t, e, n) => {\n      const { duration: o, decay: a = 0.5, pdecay: c = 0.5, penv: s = 36, clip: d } = e, l = W(), i = 0.02, r = 1.2, h = 0.025, m = 1, u = l.createOscillator();\n      u.type = \"triangle\", u.frequency.value = dt(e, 29), u.detune.setValueAtTime(s * 100, 0), u.detune.setValueAtTime(s * 100, t), u.detune.exponentialRampToValueAtTime(1e-3, t + c);\n      const p = H(1);\n      p.gain.setValueAtTime(1, t + i), p.gain.exponentialRampToValueAtTime(1e-3, t + i + a), u.start(t);\n      const Z = Jt(\"brown\", t, 2), X = H(1);\n      X.gain.setValueAtTime(r, t), X.gain.exponentialRampToValueAtTime(1e-3, t + h);\n      const y = new WaveShaperNode(l);\n      y.curve = $n(2, l.sampleRate);\n      const b = H(m);\n      u.onended = () => {\n        u.disconnect(), p.disconnect(), y.disconnect(), Z.node.disconnect(), X.disconnect(), b.disconnect(), n();\n      };\n      const V = u.connect(y).connect(p).connect(b);\n      Z.node.connect(X).connect(b);\n      let f = t + a + 0.01;\n      return d != null && (f = Math.min(t + d * o, f)), b.gain.setValueAtTime(m, f - 0.01), b.gain.linearRampToValueAtTime(0, f), u.stop(f), Z.stop(f), {\n        node: V,\n        stop: (M) => {\n          u.stop(M);\n        }\n      };\n    },\n    { type: \"synth\", prebake: !0 }\n  ), q(\n    \"supersaw\",\n    (t, e, n) => {\n      const o = W();\n      let { duration: a, n: c, unison: s = 5, spread: d = 0.6, detune: l } = e;\n      l = l ?? c ?? 0.18;\n      const i = dt(e), [r, h, m, u] = B(\n        [e.attack, e.decay, e.sustain, e.release],\n        \"linear\",\n        [1e-3, 0.05, 0.6, 0.01]\n      ), p = t + a, Z = p + u + 0.01, X = $(s, 1, 100);\n      let y = X > 1 ? $(d, 0, 1) : 0, b = I(\n        o,\n        \"supersaw-oscillator\",\n        {\n          frequency: i,\n          begin: t,\n          end: Z,\n          freqspread: l,\n          voices: X,\n          panspread: y\n        },\n        {\n          outputChannelCount: [2]\n        }\n      );\n      const V = 1 / Math.sqrt(X);\n      Xt(b.parameters.get(\"detune\"), e, t, p);\n      const g = yt(b.parameters.get(\"detune\"), e, t), f = Nt(b.parameters.get(\"frequency\"), e, t);\n      let M = H(1);\n      M = b.connect(M), Q(M.gain, r, h, m, u, 0, 0.3 * V, t, p, \"linear\");\n      let w = bt(\n        o,\n        () => {\n          Zt(b), M.disconnect(), n(), f?.stop(), g?.stop();\n        },\n        t,\n        Z\n      );\n      return {\n        node: M,\n        stop: (Y) => {\n          w.stop(Y);\n        }\n      };\n    },\n    { prebake: !0, type: \"synth\" }\n  ), q(\n    \"bytebeat\",\n    (t, e, n) => {\n      const o = [\n        \"(t%255 >= t/255%255)*255\",\n        \"(t*(t*8%60 <= 300)|(-t)*(t*4%512 < 256))+t/400\",\n        \"t\",\n        \"t*(t >> 10^t)\",\n        \"t&128\",\n        \"t&t>>8\",\n        \"((t%255+t%128+t%64+t%32+t%16+t%127.8+t%64.8+t%32.8+t%16.8)/3)\",\n        \"((t%64+t%63.8+t%64.15+t%64.35+t%63.5)/1.25)\",\n        \"(t&(t>>7)-t)\",\n        \"(sin(t*PI/128)*127+127)\",\n        \"((t^t/2+t+64*(sin((t*PI/64)+(t*PI/32768))+64))%128*2)\",\n        \"((t^t/2+t+64*(cos >> 0))%127.85*2)\",\n        \"((t^t/2+t+64)%128*2)\",\n        \"(((t * .25)^(t * .25)/100+(t * .25))%128)*2\",\n        \"((t^t/2+t+64)%7 * 24)\"\n      ], { n: a = 0 } = e, c = dt(e), { byteBeatExpression: s = o[a % o.length], byteBeatStartTime: d } = e, l = W();\n      let { duration: i } = e;\n      const [r, h, m, u] = B(\n        [e.attack, e.decay, e.sustain, e.release],\n        \"linear\",\n        [1e-3, 0.05, 0.6, 0.01]\n      ), p = t + i, Z = p + u + 0.01;\n      let X = I(\n        l,\n        \"byte-beat-processor\",\n        {\n          frequency: c,\n          begin: t,\n          end: Z\n        },\n        {\n          outputChannelCount: [2]\n        }\n      );\n      X.port.postMessage({ codeText: s, byteBeatStartTime: d, frequency: c });\n      let y = H(1);\n      y = X.connect(y), Q(y.gain, r, h, m, u, 0, 1, t, p, \"linear\");\n      let b = bt(\n        l,\n        () => {\n          Zt(X), y.disconnect(), n();\n        },\n        t,\n        Z\n      );\n      return {\n        node: y,\n        stop: (V) => {\n          b.stop(V);\n        }\n      };\n    },\n    { prebake: !0, type: \"synth\" }\n  ), q(\n    \"pulse\",\n    (t, e, n) => {\n      const o = W();\n      let { pwrate: a, pwsweep: c } = e;\n      c == null && (a != null ? c = 0.3 : c = 0), a == null && c != null && (a = 1);\n      let { duration: s, pw: d = 0.5 } = e;\n      const l = dt(e), [i, r, h, m] = B(\n        [e.attack, e.decay, e.sustain, e.release],\n        \"linear\",\n        [1e-3, 0.05, 0.6, 0.01]\n      ), u = t + s, p = u + m + 0.01;\n      let Z = I(\n        o,\n        \"pulse-oscillator\",\n        {\n          frequency: l,\n          begin: t,\n          end: p,\n          pulsewidth: d\n        },\n        {\n          outputChannelCount: [2]\n        }\n      );\n      Xt(Z.parameters.get(\"detune\"), e, t, u);\n      const X = yt(Z.parameters.get(\"detune\"), e, t), y = Nt(Z.parameters.get(\"frequency\"), e, t);\n      let b = H(1);\n      b = Z.connect(b), Q(b.gain, i, r, h, m, 0, 1, t, u, \"linear\");\n      let V;\n      c != 0 && (V = Qt(o, t, p, { frequency: a, depth: c }), V.connect(Z.parameters.get(\"pulsewidth\")));\n      let g = bt(\n        o,\n        () => {\n          Zt(Z), Zt(V), b.disconnect(), n(), y?.stop(), X?.stop();\n        },\n        t,\n        p\n      );\n      return {\n        node: b,\n        stop: (f) => {\n          g.stop(f);\n        }\n      };\n    },\n    { prebake: !0, type: \"synth\" }\n  ), [...fe].forEach((t) => {\n    q(\n      t,\n      (e, n, o) => {\n        const [a, c, s, d] = B(\n          [n.attack, n.decay, n.sustain, n.release],\n          \"linear\",\n          [1e-3, 0.05, 0.6, 0.01]\n        );\n        let l, { density: i } = n;\n        l = Jt(t, e, i);\n        let { node: r, stop: h, triggerRelease: m } = l;\n        const u = H(0.3), { duration: p } = n;\n        r.onended = () => {\n          r.disconnect(), u.disconnect(), o();\n        };\n        const Z = H(1);\n        let X = r.connect(u).connect(Z);\n        const y = e + p;\n        Q(X.gain, a, c, s, d, 0, 1, e, y, \"linear\");\n        const b = y + d + 0.01;\n        return m?.(b), h(b), {\n          node: X,\n          stop: (V) => {\n            h(V);\n          }\n        };\n      },\n      { type: \"synth\", prebake: !0 }\n    );\n  }), qn.forEach(([t, e]) => j.set({ ...j.get(), [t]: j.get()[e] }));\n}\nfunction _n(t, e) {\n  const n = new Float32Array(t + 1), o = new Float32Array(t + 1), a = W(), c = a.createOscillator(), s = {\n    sawtooth: (i) => [0, -1 / i],\n    square: (i) => [0, i % 2 === 0 ? 0 : 1 / i],\n    triangle: (i) => [i % 2 === 0 ? 0 : 1 / (i * i), 0]\n  };\n  if (!s[e])\n    throw new Error(`unknown wave type ${e}`);\n  n[0] = 0, o[0] = 0;\n  let d = 1;\n  for (; d <= t; ) {\n    const [i, r] = s[e](d);\n    n[d] = i, o[d] = r, d++;\n  }\n  const l = a.createPeriodicWave(n, o);\n  return c.setPeriodicWave(l), c;\n}\nfunction to(t, e, n) {\n  let { n: o, duration: a, noise: c = 0 } = n, s;\n  !o || t === \"sine\" ? (s = W().createOscillator(), s.type = t || \"triangle\") : s = _n(o, t), s.frequency.value = dt(n), s.start(e);\n  let d = yt(s.detune, n, e);\n  Xt(s.detune, n, e, e + a);\n  const l = Nt(s.frequency, n, e);\n  let i;\n  return c && (i = Zn(s, c, e)), {\n    node: i?.node || s,\n    stop: (r) => {\n      l.stop(r), d?.stop(r), i?.stop(r), s.stop(r);\n    },\n    triggerRelease: (r) => {\n    }\n  };\n}\nfunction eo(t = 1, e = 0.05, n = 220, o = 0, a = 0, c = 0.1, s = 0, d = 1, l = 0, i = 0, r = 0, h = 0, m = 0, u = 0, p = 0, Z = 0, X = 0, y = 1, b = 0, V = 0) {\n  let g = Math.PI * 2, f = W().sampleRate, M = (gt) => gt > 0 ? 1 : -1, w = l *= 500 * g / f / f, Y = n *= (1 + e * 2 * Math.random() - e) * g / f, F = [], S = 0, O = 0, z = 0, T = 1, k = 0, xt = 0, C = 0, _, D;\n  for (o = o * f + 9, b *= f, a *= f, c *= f, X *= f, i *= 500 * g / f ** 3, p *= g / f, r *= g / f, h *= f, m = m * f | 0, D = o + b + a + c + X | 0; z < D; F[z++] = C)\n    ++xt % (Z * 100 | 0) || (C = s ? s > 1 ? s > 2 ? s > 3 ? Math.sin((S % g) ** 3) : Math.max(Math.min(Math.tan(S), 1), -1) : 1 - (2 * S / g % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(S / g) - S / g) : Math.sin(S), C = (m ? 1 - V + V * Math.sin(g * z / m) : 1) * M(C) * Math.abs(C) ** d * // curve 0=square, 2=pointy\n    t * 1 * // envelope\n    (z < o ? z / o : z < o + b ? 1 - (z - o) / b * (1 - y) : z < o + b + a ? y : z < D - X ? (D - z - X) / c * // release falloff\n    y : 0), C = X ? C / 2 + (X > z ? 0 : (z < D - X ? 1 : (D - z) / X) * // release delay\n    F[z - X | 0] / 2) : C), _ = (n += l += i) * // frequency\n    Math.cos(p * O++), S += _ - _ * u * (1 - (Math.sin(z) + 1) * 1e9 % 2), T && ++T > h && (n += r, Y += r, T = 0), m && !(++k % m) && (n = Y, l = w, T ||= 1);\n  return F;\n}\nconst no = (t, e) => {\n  let {\n    s: n,\n    note: o = 36,\n    freq: a,\n    //\n    zrand: c = 0,\n    attack: s = 0,\n    decay: d = 0,\n    sustain: l = 0.8,\n    release: i = 0.1,\n    curve: r = 1,\n    slide: h = 0,\n    deltaSlide: m = 0,\n    pitchJump: u = 0,\n    pitchJumpTime: p = 0,\n    lfo: Z = 0,\n    znoise: X = 0,\n    zmod: y = 0,\n    zcrush: b = 0,\n    zdelay: V = 0,\n    tremolo: g = 0,\n    duration: f = 0.2,\n    zzfx: M\n  } = t;\n  const w = Math.max(f - s - d, 0);\n  typeof o == \"string\" && (o = Wt(o)), !a && typeof o == \"number\" && (a = ye(o)), n = n.replace(\"z_\", \"\");\n  const Y = [\"sine\", \"triangle\", \"sawtooth\", \"tan\", \"noise\"].indexOf(n) || 0;\n  r = n === \"square\" ? 0 : r;\n  const S = (\n    /* ZZFX. */\n    eo(...M || [\n      0.25,\n      // volume\n      c,\n      a,\n      s,\n      w,\n      i,\n      Y,\n      r,\n      h,\n      m,\n      u,\n      p,\n      Z,\n      X,\n      y,\n      b,\n      V,\n      l,\n      // sustain volume!\n      d,\n      g\n    ])\n  ), O = W(), z = O.createBuffer(1, S.length, O.sampleRate);\n  z.getChannelData(0).set(S);\n  const T = W().createBufferSource();\n  return T.buffer = z, T.start(e), {\n    node: T\n  };\n};\nfunction go() {\n  [\"zzfx\", \"z_sine\", \"z_sawtooth\", \"z_triangle\", \"z_square\", \"z_tan\", \"z_noise\"].forEach((t) => {\n    q(\n      t,\n      (e, n, o) => {\n        const { node: a } = no({ s: t, ...n }, e);\n        return a.onended = () => {\n          a.disconnect(), o();\n        }, {\n          node: a,\n          stop: () => {\n          }\n        };\n      },\n      { type: \"synth\", prebake: !0 }\n    );\n  });\n}\nlet ct;\nasync function oo(t, e) {\n  const n = `dsp-worklet-${Date.now()}`, o = `${e}\nlet __q = []; // trigger queue\nclass MyProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n    this.t = 0;\n    this.stopped = false;\n    this.port.onmessage = (e) => {\n      if(e.data==='stop') {\n        this.stopped = true;\n      } else if(e.data?.dough) {\n        __q.push(e.data)\n      } else {\n        msg?.(e.data)\n      }\n    };\n  }\n  process(inputs, outputs, parameters) {\n    const output = outputs[0];\n    if(__q.length) {\n      for(let i=0;i<__q.length;++i) {\n        const deadline = __q[i].time-currentTime;\n        if(deadline<=0) {\n          trigger(__q[i].dough)\n          __q.splice(i,1)\n        }\n      }\n    }\n    for (let i = 0; i < output[0].length; i++) {\n      const out = dsp(this.t / sampleRate);\n      output.forEach((channel) => {\n        channel[i] = out;\n      });\n      this.t++;\n    }\n  return !this.stopped;\n  }\n}\nregisterProcessor('${n}', MyProcessor);\n`, c = `data:text/javascript;base64,${btoa(o)}`;\n  await t.audioWorklet.addModule(c);\n  const s = new AudioWorkletNode(t, n);\n  return { node: s, stop: () => s.port.postMessage(\"stop\") };\n}\nconst Fe = () => {\n  ct && (ct?.stop(), ct?.node?.disconnect());\n};\ntypeof window < \"u\" && window.addEventListener(\"message\", (t) => {\n  t.data === \"strudel-stop\" ? Fe() : t.data?.dough && ct?.node.port.postMessage(t.data);\n});\nconst Mo = async (t) => {\n  const e = W();\n  Fe(), ct = await oo(e, t), ct.node.connect(e.destination);\n};\nfunction Ro(t, e, n, o) {\n  window.postMessage({ time: o, dough: t.value, currentTime: e, duration: t.duration, cps: n });\n}\nexport {\n  Re as DEFAULT_MAX_POLYPHONY,\n  uo as aliasBank,\n  P as analysers,\n  ot as analysersData,\n  Nt as applyFM,\n  A as applyGainCurve,\n  In as connectToDestination,\n  St as createFilter,\n  Mo as dough,\n  Ro as doughTrigger,\n  Xn as drywet,\n  oo as dspWorklet,\n  Xe as errorLogger,\n  H as gainNode,\n  B as getADSRValues,\n  Dn as getAnalyserById,\n  Vo as getAnalyzerData,\n  W as getAudioContext,\n  Xo as getAudioContextCurrentTime,\n  wn as getAudioDevices,\n  ao as getCachedBuffer,\n  bn as getCompressor,\n  L as getDefaultValue,\n  Qt as getLfo,\n  lo as getLoadedBuffer,\n  to as getOscillator,\n  Q as getParamADSR,\n  Xt as getPitchEnvelope,\n  xn as getSampleBuffer,\n  gn as getSampleBufferSource,\n  Wn as getSampleInfo,\n  Tt as getSound,\n  yt as getVibratoOscillator,\n  I as getWorklet,\n  no as getZZFX,\n  vn as initAudio,\n  yo as initAudioOnFirstClick,\n  Pn as initializeAudioOutput,\n  We as loadBuffer,\n  J as logger,\n  fe as noises,\n  Yn as onTriggerSample,\n  Go as panic,\n  Rn as processSampleMap,\n  io as registerSamplesPrefix,\n  q as registerSound,\n  xo as registerSynthSounds,\n  go as registerZZFXSounds,\n  Jn as resetDefaultValues,\n  ho as resetDefaults,\n  fo as resetGlobalEffects,\n  bo as resetLoadedSounds,\n  Mn as reverseBuffer,\n  Ln as samples,\n  mo as setDefault,\n  Nn as setDefaultAudioContext,\n  Se as setDefaultValue,\n  po as setDefaultValues,\n  ro as setGainCurve,\n  so as setLogger,\n  Sn as setMaxPolyphony,\n  Fn as setMultiChannelOrbits,\n  Zo as setVersionDefaults,\n  j as soundMap,\n  En as superdough,\n  Wo as superdoughTrigger,\n  _n as waveformN,\n  bt as webAudioTimeout\n};\n", "import { Pattern as O, getTime as se, silence as Ee, createParams as Re, register as x, pure as Oe, freqToMidi as _e, noteToMidi as ze, isPattern as Le, midiToFreq as We, getFrequency as Ne } from \"@strudel/core\";\nconst Z = (t = \"test-canvas\", e) => {\n  let { contextType: n = \"2d\", pixelated: o = !1, pixelRatio: a = window.devicePixelRatio } = e || {}, r = document.querySelector(\"#\" + t);\n  if (!r) {\n    r = document.createElement(\"canvas\"), r.id = t, r.width = window.innerWidth * a, r.height = window.innerHeight * a, r.style = \"pointer-events:none;width:100%;height:100%;position:fixed;top:0;left:0\", o && (r.style.imageRendering = \"pixelated\"), document.body.prepend(r);\n    let l;\n    window.addEventListener(\"resize\", () => {\n      l && clearTimeout(l), l = setTimeout(() => {\n        r.width = window.innerWidth * a, r.height = window.innerHeight * a;\n      }, 200);\n    });\n  }\n  return r.getContext(n, { willReadFrequently: !0 });\n};\nlet $ = {};\nfunction pe(t) {\n  $[t] !== void 0 && (cancelAnimationFrame($[t]), delete $[t]);\n}\nfunction De(t) {\n  Object.keys($).forEach((e) => (!t || e.startsWith(t)) && pe(e));\n}\nlet R = {};\nO.prototype.draw = function(t, e) {\n  if (typeof window > \"u\")\n    return this;\n  let { id: n = 1, lookbehind: o = 0, lookahead: a = 0 } = e, r = Math.max(se(), 0);\n  pe(n), o = Math.abs(o), R[n] = (R[n] || []).filter((g) => !g.isInFuture(r));\n  let l = this.queryArc(r, r + a).filter((g) => g.hasOnset());\n  R[n] = R[n].concat(l);\n  let f;\n  const i = () => {\n    const g = se(), u = g + a;\n    R[n] = R[n].filter((d) => d.isInNearPast(o, g));\n    let c = Math.max(f || u, u - 1 / 10);\n    const b = this.queryArc(c, u).filter((d) => d.hasOnset());\n    R[n] = R[n].concat(b), f = u, t(R[n], g, u, this), $[n] = requestAnimationFrame(i);\n  };\n  return $[n] = requestAnimationFrame(i), this;\n};\nconst Ke = (t = !0, e) => {\n  const n = Z();\n  t && n.clearRect(0, 0, n.canvas.width, n.canvas.height), De(e);\n};\nO.prototype.onPaint = function(t) {\n  return this.withState((e) => {\n    e.controls.painters || (e.controls.painters = []), e.controls.painters.push(t);\n  });\n};\nO.prototype.getPainters = function() {\n  let t = [];\n  return this.queryArc(0, 0, { painters: t }), t;\n};\nclass $e {\n  constructor(e, n) {\n    this.onFrame = e, this.onError = n;\n  }\n  start() {\n    const e = this;\n    let n = requestAnimationFrame(function o(a) {\n      try {\n        e.onFrame(a);\n      } catch (r) {\n        e.onError(r);\n      }\n      n = requestAnimationFrame(o);\n    });\n    e.cancel = () => {\n      cancelAnimationFrame(n);\n    };\n  }\n  stop() {\n    this.cancel && this.cancel();\n  }\n}\nclass Qe {\n  constructor(e, n) {\n    this.visibleHaps = [], this.lastFrame = null, this.drawTime = n, this.painters = [], this.framer = new $e(\n      () => {\n        if (!this.scheduler) {\n          console.warn(\"Drawer: no scheduler\");\n          return;\n        }\n        const o = Math.abs(this.drawTime[0]), a = this.drawTime[1], r = this.scheduler.now() + a;\n        if (this.lastFrame === null) {\n          this.lastFrame = r;\n          return;\n        }\n        const l = this.scheduler.pattern.queryArc(Math.max(this.lastFrame, r - 1 / 10), r);\n        this.lastFrame = r, this.visibleHaps = (this.visibleHaps || []).filter((i) => i.whole && i.endClipped >= r - o - a).concat(l.filter((i) => i.hasOnset()));\n        const f = r - a;\n        e(this.visibleHaps, f, this, this.painters);\n      },\n      (o) => {\n        console.warn(\"draw error\", o);\n      }\n    );\n  }\n  setDrawTime(e) {\n    this.drawTime = e;\n  }\n  invalidate(e = this.scheduler, n) {\n    if (!e)\n      return;\n    n = n ?? e.now(), this.scheduler = e;\n    let [o, a] = this.drawTime;\n    const [r, l] = [Math.max(n, 0), n + a + 0.1];\n    this.visibleHaps = this.visibleHaps.filter((i) => i.whole?.begin < n), this.painters = [];\n    const f = e.pattern.queryArc(r, l, { painters: this.painters });\n    this.visibleHaps = this.visibleHaps.concat(f);\n  }\n  start(e) {\n    this.scheduler = e, this.invalidate(), this.framer.start();\n  }\n  stop() {\n    this.framer && this.framer.stop();\n  }\n}\nfunction Ue(t) {\n  return typeof window > \"u\" ? \"#fff\" : getComputedStyle(document.documentElement).getPropertyValue(t);\n}\nlet ye = {\n  background: \"#222\",\n  foreground: \"#75baff\",\n  caret: \"#ffcc00\",\n  selection: \"rgba(128, 203, 196, 0.5)\",\n  selectionMatch: \"#036dd626\",\n  lineHighlight: \"#00000050\",\n  gutterBackground: \"transparent\",\n  gutterForeground: \"#8a919966\"\n};\nfunction W() {\n  return ye;\n}\nfunction Ze(t) {\n  ye = t;\n}\nlet fe = \"#22222210\";\nO.prototype.animate = function({ callback: t, sync: e = !1, smear: n = 0.5 } = {}) {\n  window.frame && cancelAnimationFrame(window.frame);\n  const o = Z();\n  let { clientWidth: a, clientHeight: r } = o.canvas;\n  a *= window.devicePixelRatio, r *= window.devicePixelRatio;\n  let l = n === 0 ? \"99\" : Number((1 - n) * 100).toFixed(0);\n  l = l.length === 1 ? `0${l}` : l, fe = `#200010${l}`;\n  const f = (i) => {\n    let g;\n    i = Math.round(i), g = this.slow(1e3).queryArc(i, i), o.fillStyle = fe, o.fillRect(0, 0, a, r), g.forEach((u) => {\n      let { x: c, y: b, w: d, h: w, s: p, r: k, angle: h = 0, fill: S = \"darkseagreen\" } = u.value;\n      if (d *= a, w *= r, k !== void 0 && h !== void 0) {\n        const v = h * 2 * Math.PI, [y, P] = [(a - d) / 2, (r - w) / 2];\n        c = y + Math.cos(v) * k * y, b = P + Math.sin(v) * k * P;\n      } else\n        c *= a - d, b *= r - w;\n      const A = { ...u.value, x: c, y: b, w: d, h: w };\n      o.fillStyle = S, p === \"rect\" ? o.fillRect(c, b, d, w) : p === \"ellipse\" && (o.beginPath(), o.ellipse(c + d / 2, b + w / 2, d / 2, w / 2, 0, 0, 2 * Math.PI), o.fill()), t && t(o, A, u);\n    }), window.frame = requestAnimationFrame(f);\n  };\n  return window.frame = requestAnimationFrame(f), Ee;\n};\nconst { x: we, y: xe, w: et, h: tt, angle: nt, r: rt, fill: at, smear: ot } = Re(\"x\", \"y\", \"w\", \"h\", \"angle\", \"r\", \"fill\", \"smear\"), it = x(\"rescale\", function(t, e) {\n  return e.mul(we(t).w(t).y(t).h(t));\n}), lt = x(\"moveXY\", function(t, e, n) {\n  return n.add(we(t).y(e));\n}), st = x(\"zoomIn\", function(t, e) {\n  const n = Oe(1).sub(t).div(2);\n  return e.rescale(t).move(n, n);\n}), ce = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkgrey: \"#a9a9a9\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkslategrey: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  grey: \"#808080\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgray: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightgrey: \"#d3d3d3\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370db\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#db7093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\"\n};\nfunction ft(t) {\n  return t = t.toLowerCase(), t[0] === \"#\" ? de(t) : ce[t] !== void 0 ? de(ce[t]) : -1;\n}\nfunction de(t) {\n  return t = t.slice(1), parseInt(t, 16);\n}\nconst G = (t, e, n) => t * (n - e) + e, he = (t) => {\n  let { value: e } = t;\n  typeof t.value != \"object\" && (e = { value: e });\n  let { note: n, n: o, freq: a, s: r } = e;\n  if (a)\n    return _e(a);\n  if (n = n ?? o, typeof n == \"string\")\n    try {\n      return ze(n);\n    } catch {\n      return 0;\n    }\n  return typeof n == \"number\" ? n : r ? \"_\" + r : e;\n};\nO.prototype.pianoroll = function(t = {}) {\n  let { cycles: e = 4, playhead: n = 0.5, overscan: o = 0, hideNegative: a = !1, ctx: r = Z(), id: l = 1 } = t, f = -e * n, i = e * (1 - n);\n  const g = (u, c) => (!a || u.whole.begin >= 0) && u.isWithinTime(c + f, c + i);\n  return this.draw(\n    (u, c) => {\n      ee({\n        ...t,\n        time: c,\n        ctx: r,\n        haps: u.filter((b) => g(b, c))\n      });\n    },\n    {\n      lookbehind: f - o,\n      lookahead: i + o,\n      id: l\n    }\n  ), this;\n};\nfunction ct(t) {\n  return Le(t) ? t.pianoroll() : (e) => e.pianoroll(t);\n}\nfunction ee({\n  time: t,\n  haps: e,\n  cycles: n = 4,\n  playhead: o = 0.5,\n  flipTime: a = 0,\n  flipValues: r = 0,\n  hideNegative: l = !1,\n  inactive: f = W().foreground,\n  active: i = W().foreground,\n  background: g = \"transparent\",\n  smear: u = 0,\n  playheadColor: c = W().foreground,\n  minMidi: b = 10,\n  maxMidi: d = 90,\n  autorange: w = 0,\n  timeframe: p,\n  fold: k = 1,\n  vertical: h = 0,\n  labels: S = !1,\n  fill: A = 1,\n  fillActive: v = !1,\n  strokeActive: y = !0,\n  stroke: P,\n  hideInactive: H = 0,\n  colorizeInactive: q = 1,\n  fontFamily: C,\n  ctx: s,\n  id: _\n} = {}) {\n  const T = s.canvas.width, I = s.canvas.height;\n  let z = -n * o, j = n * (1 - o);\n  _ && (e = e.filter((m) => m.hasTag(_))), p && (console.warn(\"timeframe is deprecated! use from/to instead\"), z = 0, j = p);\n  const N = h ? I : T, E = h ? T : I;\n  let L = h ? [N, 0] : [0, N];\n  const J = j - z, te = h ? [0, E] : [E, 0];\n  let K = d - b + 1, D = E / K, Q = [];\n  a && L.reverse(), r && te.reverse();\n  const { min: ke, max: Pe, values: Te } = e.reduce(\n    ({ min: m, max: F, values: X }, Y) => {\n      const M = he(Y);\n      return {\n        min: M < m ? M : m,\n        max: M > F ? M : F,\n        values: X.includes(M) ? X : [...X, M]\n      };\n    },\n    { min: 1 / 0, max: -1 / 0, values: [] }\n  );\n  w && (b = ke, d = Pe, K = d - b + 1), Q = Te.sort(\n    (m, F) => typeof m == \"number\" && typeof F == \"number\" ? m - F : typeof m == \"number\" ? 1 : String(m).localeCompare(String(F))\n  ), D = k ? E / Q.length : E / K, s.fillStyle = g, s.globalAlpha = 1, u || (s.clearRect(0, 0, T, I), s.fillRect(0, 0, T, I)), e.forEach((m) => {\n    const F = m.whole.begin <= t && m.endClipped > t;\n    let X = P ?? (y && F), Y = !F && A || F && v;\n    if (H && !F)\n      return;\n    let M = m.value?.color;\n    i = M || i, f = q && M || f, M = F ? i : f, s.fillStyle = Y ? M : \"transparent\", s.strokeStyle = M;\n    const { velocity: Ae = 1, gain: qe = 1 } = m.value || {};\n    s.globalAlpha = Ae * qe;\n    const Fe = (m.whole.begin - (a ? j : z)) / J, ne = G(Fe, ...L);\n    let B = G(m.duration / J, 0, N);\n    const re = he(m), Me = k ? Q.indexOf(re) / Q.length : (Number(re) - b) / K, ae = G(Me, ...te);\n    let oe = 0;\n    const ie = G(t / J, ...L);\n    let V;\n    if (h ? V = [\n      ae + 1 - (r ? D : 0),\n      // x\n      N - ie + ne + oe + 1 - (a ? 0 : B),\n      // y\n      D - 2,\n      // width\n      B - 2\n      // height\n    ] : V = [\n      ne - ie + oe + 1 - (a ? B : 0),\n      // x\n      ae + 1 - (r ? 0 : D),\n      // y\n      B - 2,\n      // widith\n      D - 2\n      // height\n    ], X && s.strokeRect(...V), Y && s.fillRect(...V), S) {\n      const Se = m.value.note ?? m.value.s + (m.value.n ? `:${m.value.n}` : \"\"), { label: le, activeLabel: Ce } = m.value, He = (F && Ce || le) ?? Se;\n      let Ie = h ? B : D * 0.75;\n      s.font = `${Ie}px ${C || \"monospace\"}`, s.fillStyle = /* isActive &&  */\n      Y ? \"black\" : M, s.textBaseline = \"top\", s.fillText(He, ...V);\n    }\n  }), s.globalAlpha = 1;\n  const U = G(-z / J, ...L);\n  return s.strokeStyle = c, s.beginPath(), h ? (s.moveTo(0, U), s.lineTo(E, U)) : (s.moveTo(U, 0), s.lineTo(U, E)), s.stroke(), this;\n}\nfunction ve(t, e = {}) {\n  let [n, o] = t;\n  n = Math.abs(n);\n  const a = o + n, r = a !== 0 ? n / a : 0;\n  return { fold: 1, ...e, cycles: a, playhead: r };\n}\nconst je = (t = {}) => (e, n, o, a) => ee({ ctx: e, time: n, haps: o, ...ve(a, t) });\nO.prototype.punchcard = function(t) {\n  return this.onPaint(je(t));\n};\nO.prototype.wordfall = function(t) {\n  return this.punchcard({ vertical: 1, labels: 1, stroke: 0, fillActive: 1, active: \"white\", ...t });\n};\nfunction dt(t) {\n  const { drawTime: e, ...n } = t;\n  ee({ ...ve(e), ...n });\n}\nfunction Xe(t, e, n, o) {\n  const a = (t - 90) * Math.PI / 180;\n  return [n + Math.cos(a) * e, o + Math.sin(a) * e];\n}\nconst ue = (t, e, n, o, a = 0) => Xe((t + a) * 360, e * t, n, o);\nfunction me(t) {\n  let {\n    ctx: e,\n    from: n = 0,\n    to: o = 3,\n    margin: a = 50,\n    cx: r = 100,\n    cy: l = 100,\n    rotate: f = 0,\n    thickness: i = a / 2,\n    color: g = W().foreground,\n    cap: u = \"round\",\n    stretch: c = 1,\n    fromOpacity: b = 1,\n    toOpacity: d = 1\n  } = t;\n  n *= c, o *= c, f *= c, e.lineWidth = i, e.lineCap = u, e.strokeStyle = g, e.globalAlpha = b, e.beginPath();\n  let [w, p] = ue(n, a, r, l, f);\n  e.moveTo(w, p);\n  const k = 1 / 60;\n  let h = n;\n  for (; h <= o; ) {\n    const [S, A] = ue(h, a, r, l, f);\n    e.globalAlpha = (h - n) / (o - n) * d, e.lineTo(S, A), h += k;\n  }\n  e.stroke();\n}\nfunction Ye(t) {\n  let {\n    stretch: e = 1,\n    size: n = 80,\n    thickness: o = n / 2,\n    cap: a = \"butt\",\n    // round butt squar,\n    inset: r = 3,\n    // start angl,\n    playheadColor: l = \"#ffffff\",\n    playheadLength: f = 0.02,\n    playheadThickness: i = o,\n    padding: g = 0,\n    steady: u = 1,\n    activeColor: c = W().foreground,\n    inactiveColor: b = W().gutterForeground,\n    colorizeInactive: d = 0,\n    fade: w = !0,\n    // logSpiral = true,\n    ctx: p,\n    time: k,\n    haps: h,\n    drawTime: S,\n    id: A\n  } = t;\n  A && (h = h.filter((T) => T.hasTag(A)));\n  const [v, y] = [p.canvas.width, p.canvas.height];\n  p.clearRect(0, 0, v * 2, y * 2);\n  const [P, H] = [v / 2, y / 2], q = {\n    margin: n / e,\n    cx: P,\n    cy: H,\n    stretch: e,\n    cap: a,\n    thickness: o\n  }, C = {\n    ...q,\n    thickness: i,\n    from: r - f,\n    to: r,\n    color: l\n  }, [s] = S, _ = u * k;\n  h.forEach((T) => {\n    const I = T.whole.begin <= k && T.endClipped > k, z = T.whole.begin - k + r, j = T.endClipped - k + r - g, N = T.value?.color || c, E = d || I ? N : b, L = w ? 1 - Math.abs((T.whole.begin - k) / s) : 1;\n    me({\n      ctx: p,\n      ...q,\n      from: z,\n      to: j,\n      rotate: _,\n      color: E,\n      fromOpacity: L,\n      toOpacity: L\n    });\n  }), me({\n    ctx: p,\n    ...C,\n    rotate: _\n  });\n}\nO.prototype.spiral = function(t = {}) {\n  return this.onPaint((e, n, o, a) => Ye({ ctx: e, time: n, haps: o, drawTime: a, ...t }));\n};\nconst Be = We(36), ge = (t, e, n, o) => {\n  o = o * Math.PI * 2;\n  const a = Math.sin(o) * n + t, r = Math.cos(o) * n + e;\n  return [a, r];\n}, be = (t, e) => 0.5 - Math.log2(t / e) % 1;\nfunction Ve({\n  haps: t,\n  ctx: e,\n  id: n,\n  hapcircles: o = 1,\n  circle: a = 0,\n  edo: r = 12,\n  root: l = Be,\n  thickness: f = 3,\n  hapRadius: i = 6,\n  mode: g = \"flake\",\n  margin: u = 10\n} = {}) {\n  const c = g === \"polygon\", b = g === \"flake\", d = e.canvas.width, w = e.canvas.height;\n  e.clearRect(0, 0, d, w);\n  const p = W().foreground, h = Math.min(d, w) / 2 - f / 2 - i - u, S = d / 2, A = w / 2;\n  n && (t = t.filter((y) => y.hasTag(n))), e.strokeStyle = p, e.fillStyle = p, e.globalAlpha = 1, e.lineWidth = f, a && (e.beginPath(), e.arc(S, A, h, 0, 2 * Math.PI), e.stroke()), r && (Array.from({ length: r }, (y, P) => {\n    const H = be(l * Math.pow(2, P / r), l), [q, C] = ge(S, A, h, H);\n    e.beginPath(), e.arc(q, C, i, 0, 2 * Math.PI), e.fill();\n  }), e.stroke());\n  let v = [];\n  e.lineWidth = i, t.forEach((y) => {\n    let P;\n    try {\n      P = Ne(y);\n    } catch {\n      return;\n    }\n    const H = be(P, l), [q, C] = ge(S, A, h, H), s = y.value.color || p;\n    e.strokeStyle = s, e.fillStyle = s;\n    const { velocity: _ = 1, gain: T = 1 } = y.value || {}, I = _ * T;\n    e.globalAlpha = I, v.push([q, C, H, s, I]), e.beginPath(), o && (e.moveTo(q + i, C), e.arc(q, C, i, 0, 2 * Math.PI), e.fill()), b && (e.moveTo(S, A), e.lineTo(q, C)), e.stroke();\n  }), e.strokeStyle = p, e.globalAlpha = 1, c && v.length && (v = v.sort((y, P) => y[2] - P[2]), e.beginPath(), e.moveTo(v[0][0], v[0][1]), v.forEach(([y, P, H, q, C]) => {\n    e.strokeStyle = q, e.globalAlpha = C, e.lineTo(y, P);\n  }), e.lineTo(v[0][0], v[0][1]), e.stroke());\n}\nO.prototype.pitchwheel = function(t = {}) {\n  let { ctx: e = Z(), id: n = 1 } = t;\n  return this.tag(n).onPaint(\n    (o, a, r) => Ve({\n      ...t,\n      time: a,\n      ctx: e,\n      haps: r.filter((l) => l.isActive(a)),\n      id: n\n    })\n  );\n};\nexport {\n  Qe as Drawer,\n  $e as Framer,\n  ee as __pianoroll,\n  nt as angle,\n  Ke as cleanupDraw,\n  ce as colorMap,\n  ft as convertColorToNumber,\n  de as convertHexToNumber,\n  dt as drawPianoroll,\n  at as fill,\n  Ue as getComputedPropertyValue,\n  Z as getDrawContext,\n  ve as getDrawOptions,\n  je as getPunchcardPainter,\n  W as getTheme,\n  tt as h,\n  lt as moveXY,\n  ct as pianoroll,\n  Ve as pitchwheel,\n  rt as r,\n  it as rescale,\n  Ze as setTheme,\n  ot as smear,\n  et as w,\n  we as x,\n  xe as y,\n  st as zoomIn\n};\n", "import * as P from \"@strudel/core\";\nimport { Pattern as m, clamp as q } from \"@strudel/core\";\nimport { setLogger as R, doughTrigger as k, superdough as I, getAudioContext as M, analysers as v, getAnalyzerData as b } from \"superdough\";\nexport * from \"superdough\";\nimport { getTheme as A, getDrawContext as z } from \"@strudel/draw\";\nconst { Pattern: O, logger: W, repl: $ } = P;\nR(W);\nconst B = (e) => (e.ensureObjectValue(), e.value), F = (e, t, o, s, f) => I(B(e), f, o, s, e.whole?.begin.valueOf());\nfunction H(e = {}) {\n  return e = {\n    getTime: () => M().currentTime,\n    defaultOutput: F,\n    ...e\n  }, $(e);\n}\nO.prototype.dough = function() {\n  return this.onTrigger(k, 1);\n};\nfunction j(e, {\n  align: t = !0,\n  color: o = \"white\",\n  thickness: s = 3,\n  scale: f = 0.25,\n  pos: a = 0.75,\n  trigger: u = 0,\n  ctx: r = z(),\n  id: y = 1\n} = {}) {\n  r.lineWidth = s, r.strokeStyle = o;\n  let c = r.canvas;\n  if (!e) {\n    r.beginPath();\n    let l = a * c.height;\n    r.moveTo(0, l), r.lineTo(c.width, l), r.stroke();\n    return;\n  }\n  const n = b(\"time\", y);\n  r.beginPath();\n  const p = e.frequencyBinCount;\n  let h = t ? Array.from(n).findIndex((l, d, g) => d && g[d - 1] > -u && l <= -u) : 0;\n  h = Math.max(h, 0);\n  const w = c.width * 1 / p;\n  let i = 0;\n  for (let l = h; l < p; l++) {\n    const d = n[l] + 1, g = (a - f * (d - 1)) * c.height;\n    l === 0 ? r.moveTo(i, g) : r.lineTo(i, g), i += w;\n  }\n  r.stroke();\n}\nfunction L(e, { color: t = \"white\", scale: o = 0.25, pos: s = 0.75, lean: f = 0.5, min: a = -150, max: u = 0, ctx: r = z(), id: y = 1 } = {}) {\n  if (!e) {\n    r.beginPath();\n    let i = s * n.height;\n    r.moveTo(0, i), r.lineTo(n.width, i), r.stroke();\n    return;\n  }\n  const c = b(\"frequency\", y), n = r.canvas;\n  r.fillStyle = t;\n  const p = e.frequencyBinCount, h = n.width * 1 / p;\n  let w = 0;\n  for (let i = 0; i < p; i++) {\n    const d = q((c[i] - a) / (u - a), 0, 1) * o, g = d * n.height, D = (s - d * f) * n.height;\n    r.fillRect(w, D, Math.max(h, 1), g), w += h;\n  }\n}\nfunction C(e = 0, t = \"0,0,0\", o = z()) {\n  e ? (o.fillStyle = `rgba(${t},${1 - e})`, o.fillRect(0, 0, o.canvas.width, o.canvas.height)) : o.clearRect(0, 0, o.canvas.width, o.canvas.height);\n}\nm.prototype.fscope = function(e = {}) {\n  let t = e.id ?? 1;\n  return this.analyze(t).draw(\n    () => {\n      C(e.smear, \"0,0,0\", e.ctx), v[t] && L(v[t], e);\n    },\n    { id: t }\n  );\n};\nm.prototype.tscope = function(e = {}) {\n  let t = e.id ?? 1;\n  return this.analyze(t).draw(\n    (o) => {\n      e.color = o[0]?.value?.color || A().foreground, e.color, C(e.smear, \"0,0,0\", e.ctx), j(v[t], e);\n    },\n    { id: t }\n  );\n};\nm.prototype.scope = m.prototype.tscope;\nlet T = {};\nm.prototype.spectrum = function(e = {}) {\n  let t = e.id ?? 1;\n  return this.analyze(t).draw(\n    (o) => {\n      e.color = o[0]?.value?.color || T[t] || A().foreground, T[t] = e.color, V(v[t], e);\n    },\n    { id: t }\n  );\n};\nm.prototype.scope = m.prototype.tscope;\nconst S = /* @__PURE__ */ new Map();\nfunction V(e, { thickness: t = 3, speed: o = 1, min: s = -80, max: f = 0, ctx: a = z(), id: u = 1, color: r } = {}) {\n  if (a.lineWidth = t, a.strokeStyle = r, !e)\n    return;\n  const y = o, c = b(\"frequency\", u), n = a.canvas;\n  a.fillStyle = r;\n  const p = e.frequencyBinCount;\n  let h = S.get(u) || a.getImageData(0, 0, n.width, n.height);\n  S.set(u, h), a.clearRect(0, 0, a.canvas.width, a.canvas.height), a.putImageData(h, -y, 0);\n  let w = n.width - o;\n  for (let i = 0; i < p; i++) {\n    const l = q((c[i] - s) / (f - s), 0, 1);\n    a.globalAlpha = l;\n    const d = Math.log(i + 1) / Math.log(p) * n.height;\n    a.fillRect(w, n.height - d, y, 2);\n  }\n  S.set(u, a.getImageData(0, 0, n.width, n.height));\n}\nexport {\n  L as drawFrequencyScope,\n  j as drawTimeScope,\n  F as webaudioOutput,\n  H as webaudioRepl\n};\n", "import { DEFAULT_GENERATOR_VALUES as w, SoundFont2 as q } from \"soundfont2\";\nconst _ = (e) => {\n  var r;\n  if (typeof e != \"string\")\n    return [];\n  const [t, n = \"\", o] = ((r = e.match(/^([a-gA-G])([#bs]*)([0-9])?$/)) == null ? void 0 : r.slice(1)) || [];\n  return t ? [t, n, o ? Number(o) : void 0] : [];\n}, $ = { \"#\": 1, b: -1, s: 1 }, ne = (e) => {\n  if (typeof e == \"number\")\n    return e;\n  const [t, n, o] = _(e);\n  if (!t)\n    throw new Error('not a note: \"' + e + '\"');\n  const r = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }[t.toLowerCase()], s = (n == null ? void 0 : n.split(\"\").reduce((a, c) => a + $[c], 0)) || 0;\n  return (Number(o) + 1) * 12 + r + s;\n}, m = (e) => Math.pow(2, e / 1200), oe = (e) => Math.round(Math.log2(e) * 1200), Q = (e) => e / 1e3, G = (e, t) => {\n  const n = Math.pow(10, t);\n  return Math.round(e * n) / n;\n};\ntypeof AudioParam < \"u\" && (AudioParam.prototype.dahdsr = function(e, t, n, o, r, s, a, c, i) {\n  r = Math.max(G(r, 4), 1e-3), a = Math.max(G(a, 4), 1e-3), i = G(i, 4), t = Math.max(t, 1e-3);\n  let l = e;\n  return this.setValueAtTime(t, l), this.setValueAtTime(t, l += o), this.exponentialRampToValueAtTime(n, l += r), this.setValueAtTime(n, l += s), this.exponentialRampToValueAtTime(Math.max(c * n, 1e-3), l += a), (d, u) => {\n    this.cancelAndHoldAtTime(d);\n    const f = Math.max(u != null ? u : t, 1e-3);\n    this.exponentialRampToValueAtTime(f, d + i);\n  };\n});\nconst T = {\n  0: \"startAddrOffset\",\n  1: \"endAddrOffset\",\n  2: \"startloopAddrsOffset\",\n  3: \"endloopAddrsOffset\",\n  4: \"startAddrsCoarseOffset\",\n  5: \"modLfoToPitch\",\n  6: \"vibLfoToPitch\",\n  7: \"modEnvToPitch\",\n  8: \"initialFilterFc\",\n  9: \"initialFilterQ\",\n  10: \"modLfoToFilterFc\",\n  11: \"modEnvToFilterFc\",\n  12: \"endAddrsCoarseOffset\",\n  13: \"modLfoToVolume\",\n  14: \"unused1\",\n  15: \"chorusEffectsSend\",\n  16: \"reverbEffectsSend\",\n  17: \"pan\",\n  18: \"unused2\",\n  19: \"unused3\",\n  20: \"unused4\",\n  21: \"delayModLFO\",\n  22: \"freqModLFO\",\n  23: \"delayVibLFO\",\n  24: \"freqVibLFO\",\n  25: \"delayModEnv\",\n  26: \"attackModEnv\",\n  27: \"holdModEnv\",\n  28: \"decayModEnv\",\n  29: \"sustainModEnv\",\n  30: \"releaseModEnv\",\n  31: \"keyNumToModEnvHold\",\n  32: \"keyNumToModEnvDecay\",\n  33: \"delayVolEnv\",\n  34: \"attackVolEnv\",\n  35: \"holdVolEnv\",\n  36: \"decayVolEnv\",\n  37: \"sustainVolEnv\",\n  38: \"releaseVolEnv\",\n  39: \"keyNumToVolEnvHold\",\n  40: \"keyNumToVolEnvDecay\",\n  41: \"instrument\",\n  42: \"reserved1\",\n  43: \"keyRange\",\n  44: \"velRange\",\n  45: \"startloopAddrsCoarseOffset\",\n  46: \"keyNum\",\n  47: \"velocity\",\n  48: \"initialAttenuation\",\n  49: \"reserved2\",\n  50: \"endloopAddrsCoarseOffset\",\n  51: \"coarseTune\",\n  52: \"fineTune\",\n  53: \"sampleID\",\n  54: \"sampleModes\",\n  55: \"reserved3\",\n  56: \"scaleTuning\",\n  57: \"exclusiveClass\",\n  58: \"overridingRootKey\",\n  59: \"unused5\",\n  60: \"endOper\"\n}, re = Object.fromEntries(\n  Object.entries(w).map(([e, t]) => [T[e], t])\n), D = (e, t, n, o, r) => {\n  var h, g, y, E, b, A, O;\n  const s = w[e];\n  if (typeof s != \"number\")\n    throw new Error(`no default value found for generator with index ${e}`);\n  const a = t.generators[e], c = (g = (h = n.globalZone) == null ? void 0 : h.generators) == null ? void 0 : g[e], i = (y = o == null ? void 0 : o.generators) == null ? void 0 : y[e], l = (b = (E = r.globalZone) == null ? void 0 : E.generators) == null ? void 0 : b[e], d = a && \"value\" in a ? a.value : void 0, u = c && \"value\" in c ? c.value : void 0, f = i && \"value\" in i ? i.value : void 0, v = l && \"value\" in l ? l.value : void 0, p = (A = d != null ? d : u) != null ? A : s, M = (O = f != null ? f : v) != null ? O : 0;\n  return p + M;\n}, J = (e) => w[e] !== void 0, W = (e, t, n) => {\n  var o, r, s, a;\n  return Object.fromEntries(\n    Array.from(\n      new Set(\n        [\n          Object.keys((r = (o = n.globalZone) == null ? void 0 : o.generators) != null ? r : {}),\n          Object.keys(t.generators),\n          Object.keys((a = (s = t.instrument.globalZone) == null ? void 0 : s.generators) != null ? a : {}),\n          Object.keys(e.generators)\n        ].flat()\n      )\n    ).filter(J).map((c) => [T[c], D(parseInt(c), e, t.instrument, t, n)])\n  );\n};\nasync function ae(e) {\n  const t = await fetch(e).then((o) => o.arrayBuffer()), n = new Uint8Array(t);\n  return new q(n);\n}\nfunction X(e, t, n) {\n  let { time: o = e.currentTime } = n;\n  const {\n    midi: r,\n    start: s,\n    velocity: a = 0.3,\n    startLoop: c,\n    endLoop: i,\n    sampleRate: l,\n    originalPitch: d,\n    pitchCorrection: u,\n    type: f,\n    sampleModes: v = 0,\n    overridingRootKey: p,\n    fineTune: M = 0,\n    startloopAddrsOffset: h = 0,\n    startloopAddrsCoarseOffset: g = 0,\n    endloopAddrsOffset: y = 0,\n    endloopAddrsCoarseOffset: E = 0,\n    delayVolEnv: b = -12e3,\n    attackVolEnv: A = -12e3,\n    holdVolEnv: O = -12e3,\n    decayVolEnv: N = -12e3,\n    sustainVolEnv: F = 0,\n    releaseVolEnv: L = -12e3,\n    pan: P = 0,\n    ...Z\n  } = n, B = 100 * (p !== void 0 && p !== -1 ? p : d) + u - M, I = r * 100 - B, K = 1 * Math.pow(2, I / 1200);\n  t.playbackRate.value = K;\n  const j = c + h + g * 32768, S = i + y + E * 32768;\n  S > j && v === 1 ? (t.loopStart = j / l, t.loopEnd = S / l, t.loop = !0) : v === 3 && console.warn(\"unimplemented sampleMode 3 (play till end on note off)\"), Object.keys(Z).filter(\n    (V) => ![\"name\", \"instrument\", \"keyRange\", \"sampleID\", \"end\"].includes(V)\n  ).length;\n  const k = e.createGain(), H = [\n    o,\n    0,\n    a,\n    m(b),\n    m(A),\n    m(O),\n    m(N),\n    F >= 960 ? 0 : 1 - Q(F),\n    m(L)\n  ], U = k.gain.dahdsr(...H), R = e.createStereoPanner();\n  return R.pan.value = P / 1e3, k.connect(R), t.connect(k), R.connect(e.destination), t.start(o), (V = e.currentTime) => {\n    t.stop(V + m(L)), U(V);\n  };\n}\nfunction Y(e, t, n = {}) {\n  const { header: o, data: r } = t, s = new Float32Array(r.length);\n  for (let l = 0; l < r.length; l++)\n    s[l] = r[l] / 32768;\n  const a = e.createBuffer(1, s.length, o.sampleRate);\n  a.getChannelData(0).set(s);\n  const i = e.createBufferSource();\n  return i.buffer = a, n = { ...o, ...n }, X(e, i, n);\n}\nfunction se(e) {\n  return Object.fromEntries(\n    Object.entries(e).map(([t, n]) => {\n      const o = T[t];\n      return [\"keyRange\", \"velRange\"].includes(o) ? [o, n.range] : [o, n.value];\n    })\n  );\n}\nconst C = (e, t) => !e.keyRange || e.keyRange.lo <= t && t <= e.keyRange.hi, le = (e, t, n, o) => {\n  Object.fromEntries(\n    Object.entries(T).map(([r, s]) => [\n      s,\n      D(parseInt(r), n, t, o, e)\n    ])\n  );\n}, x = (e, t) => e.zones.filter((o) => C(o, t) && o.instrument).map((o) => o.instrument.zones.filter((r) => C(r, t)).map((r) => {\n  const s = W(r, o, e);\n  return {\n    ...r,\n    mergedGenerators: s\n  };\n})).flat(), ce = (e, t, n, o = e.currentTime) => {\n  const s = x(t, n).map(\n    (a) => Y(e, a.sample, {\n      ...a.mergedGenerators,\n      midi: n,\n      time: o\n    })\n  );\n  return (a = e.currentTime) => {\n    s.forEach((c) => c(a));\n  };\n};\nexport {\n  X as applyOptions,\n  re as defaultGeneratorValues,\n  T as generators,\n  x as getActiveZones,\n  Y as getBufferSourceFromSample,\n  D as getGeneratorValue,\n  W as getGeneratorValues,\n  J as hasDefaultValue,\n  C as isActiveZone,\n  ae as loadSoundfont,\n  le as mergeGenerators,\n  Q as normalizePermille,\n  G as precision,\n  se as readableGenerators,\n  oe as s2tc,\n  ce as startPresetNote,\n  m as tc2s,\n  ne as toMidi,\n  _ as tokenizeNote\n};\n", "import { freqToMidi, noteToMidi, getSoundIndex, Pattern, getPlayableNoteValue } from \"@strudel/core\";\nimport { registerSound, getADSRValues, getAudioContext, getParamADSR, getVibratoOscillator, getPitchEnvelope } from \"@strudel/webaudio\";\nimport { startPresetNote, loadSoundfont as loadSoundfont$1 } from \"sfumato\";\nimport { startPresetNote as c } from \"sfumato\";\nconst gm = {\n  gm_piano: [\n    //'gm_acoustic_piano': [\n    // Acoustic Grand Piano: Piano\n    \"0000_JCLive_sf2_file\",\n    \"0000_FluidR3_GM_sf2_file\",\n    \"0000_Aspirin_sf2_file\",\n    \"0000_Chaos_sf2_file\",\n    \"0000_GeneralUserGS_sf2_file\",\n    //0000_SBLive_sf2\n    //0000_SoundBlasterOld_sf2\n    \"0001_FluidR3_GM_sf2_file\",\n    \"0001_GeneralUserGS_sf2_file\",\n    //],\n    //'gm_bright_acoustic_piano': [\n    // Bright Acoustic Piano: Piano\n    \"0010_Aspirin_sf2_file\",\n    \"0010_Chaos_sf2_file\",\n    \"0010_FluidR3_GM_sf2_file\",\n    \"0010_GeneralUserGS_sf2_file\",\n    \"0010_JCLive_sf2_file\",\n    //0010_SBLive_sf2\n    //0010_SoundBlasterOld_sf2\n    \"0011_Aspirin_sf2_file\",\n    \"0011_FluidR3_GM_sf2_file\",\n    \"0011_GeneralUserGS_sf2_file\",\n    \"0012_GeneralUserGS_sf2_file\",\n    //],\n    //'gm_electric_grand_piano': [\n    // Electric Grand Piano: Piano\n    \"0020_Aspirin_sf2_file\",\n    \"0020_Chaos_sf2_file\",\n    \"0020_FluidR3_GM_sf2_file\",\n    \"0020_GeneralUserGS_sf2_file\",\n    \"0020_JCLive_sf2_file\",\n    //0020_SBLive_sf2\n    //0020_SoundBlasterOld_sf2\n    \"0021_Aspirin_sf2_file\",\n    \"0021_GeneralUserGS_sf2_file\",\n    // ?\n    \"0022_Aspirin_sf2_file\",\n    //],\n    //'gm_honky_tonk_piano': [\n    // Honky_tonk Piano: Piano\n    \"0030_Aspirin_sf2_file\",\n    \"0030_Chaos_sf2_file\",\n    \"0030_FluidR3_GM_sf2_file\",\n    \"0030_GeneralUserGS_sf2_file\",\n    \"0030_JCLive_sf2_file\",\n    //0030_SBLive_sf2\n    //0030_SoundBlasterOld_sf2\n    \"0031_Aspirin_sf2_file\",\n    \"0031_FluidR3_GM_sf2_file\",\n    \"0031_GeneralUserGS_sf2_file\"\n    //0031_SoundBlasterOld_sf2 // pianos until her\n  ],\n  gm_epiano1: [\n    // Electric Piano 1: Piano\n    \"0040_JCLive_sf2_file\",\n    \"0040_FluidR3_GM_sf2_file\",\n    \"0040_Aspirin_sf2_file\",\n    \"0040_Chaos_sf2_file\",\n    \"0040_GeneralUserGS_sf2_file\",\n    //0040_SBLive_sf2 // ?\n    //0040_SoundBlasterOld_sf2 // ?\n    \"0041_FluidR3_GM_sf2_file\",\n    \"0041_GeneralUserGS_sf2_file\",\n    //0041_SoundBlasterOld_sf2 // ?\n    \"0042_GeneralUserGS_sf2_file\",\n    \"0043_GeneralUserGS_sf2_file\",\n    \"0044_GeneralUserGS_sf2_file\",\n    //0045_GeneralUserGS_sf2_file // ?\n    \"0046_GeneralUserGS_sf2_file\"\n  ],\n  gm_epiano2: [\n    // Electric Piano 2: Piano\n    \"0050_JCLive_sf2_file\",\n    \"0050_FluidR3_GM_sf2_file\",\n    \"0050_Aspirin_sf2_file\",\n    \"0050_Chaos_sf2_file\",\n    // ?\n    \"0050_GeneralUserGS_sf2_file\",\n    // cont\n    //0050_SBLive_sf2 // ?\n    //0050_SoundBlasterOld_sf2 // ?\n    \"0051_FluidR3_GM_sf2_file\",\n    \"0051_GeneralUserGS_sf2_file\",\n    //0052_GeneralUserGS_sf2_file // ?\n    \"0053_GeneralUserGS_sf2_file\",\n    // normal piano...\n    \"0054_GeneralUserGS_sf2_file\"\n  ],\n  gm_harpsichord: [\n    // Harpsichord: Piano\n    \"0060_JCLive_sf2_file\",\n    \"0060_FluidR3_GM_sf2_file\",\n    \"0060_Aspirin_sf2_file\",\n    \"0060_Chaos_sf2_file\",\n    \"0060_GeneralUserGS_sf2_file\",\n    //0060_SBLive_sf2\n    //0060_SoundBlasterOld_sf2\n    \"0061_Aspirin_sf2_file\",\n    \"0061_GeneralUserGS_sf2_file\",\n    //0061_SoundBlasterOld_sf2\n    \"0062_GeneralUserGS_sf2_file\"\n  ],\n  gm_clavinet: [\n    // Clavinet: Piano\n    \"0070_JCLive_sf2_file\",\n    \"0070_FluidR3_GM_sf2_file\",\n    \"0070_Aspirin_sf2_file\",\n    \"0070_Chaos_sf2_file\"\n    // 0070_GeneralUserGS_sf2_file // half broken\n    //0070_SBLive_sf2\n    //0070_SoundBlasterOld_sf2\n    // 0071_GeneralUserGS_sf2_file // half broke\n  ],\n  gm_celesta: [\n    // Celesta: Chromatic Percussion\n    \"0080_JCLive_sf2_file\",\n    \"0080_Aspirin_sf2_file\",\n    \"0080_Chaos_sf2_file\",\n    \"0080_FluidR3_GM_sf2_file\",\n    \"0080_GeneralUserGS_sf2_file\",\n    //0080_SBLive_sf2\n    //0080_SoundBlasterOld_sf2\n    \"0081_FluidR3_GM_sf2_file\"\n    // 0081_GeneralUserGS_sf2_file // weird detuned\n    //0081_SoundBlasterOld_sf\n  ],\n  gm_glockenspiel: [\n    // Glockenspiel: Chromatic Percussion\n    \"0090_JCLive_sf2_file\",\n    \"0090_Aspirin_sf2_file\",\n    \"0090_Chaos_sf2_file\",\n    \"0090_FluidR3_GM_sf2_file\",\n    \"0090_GeneralUserGS_sf2_file\"\n    //0090_SBLive_sf2\n    //0090_SoundBlasterOld_sf2\n    //0091_SoundBlasterOld_sf\n  ],\n  gm_music_box: [\n    // Music Box: Chromatic Percussion\n    \"0100_JCLive_sf2_file\",\n    \"0100_Aspirin_sf2_file\",\n    \"0100_Chaos_sf2_file\",\n    \"0100_FluidR3_GM_sf2_file\",\n    \"0100_GeneralUserGS_sf2_file\"\n    //0100_SBLive_sf2\n    //0100_SoundBlasterOld_sf2\n    // 0101_GeneralUserGS_sf2_file // weird detuned\n    //0101_SoundBlasterOld_sf\n  ],\n  gm_vibraphone: [\n    // Vibraphone: Chromatic Percussion\n    \"0110_JCLive_sf2_file\",\n    \"0110_Aspirin_sf2_file\",\n    \"0110_Chaos_sf2_file\",\n    \"0110_FluidR3_GM_sf2_file\",\n    \"0110_GeneralUserGS_sf2_file\",\n    //0110_SBLive_sf2\n    //0110_SoundBlasterOld_sf2\n    \"0111_FluidR3_GM_sf2_file\"\n  ],\n  gm_marimba: [\n    // Marimba: Chromatic Percussion\n    \"0120_JCLive_sf2_file\",\n    \"0120_Aspirin_sf2_file\",\n    \"0120_Chaos_sf2_file\",\n    \"0120_FluidR3_GM_sf2_file\",\n    \"0120_GeneralUserGS_sf2_file\",\n    //0120_SBLive_sf2\n    //0120_SoundBlasterOld_sf2\n    \"0121_FluidR3_GM_sf2_file\",\n    \"0121_GeneralUserGS_sf2_file\"\n  ],\n  gm_xylophone: [\n    // Xylophone: Chromatic Percussion\n    \"0130_JCLive_sf2_file\",\n    \"0130_Aspirin_sf2_file\",\n    \"0130_Chaos_sf2_file\",\n    \"0130_FluidR3_GM_sf2_file\",\n    \"0130_GeneralUserGS_sf2_file\",\n    //0130_SBLive_sf2\n    //0130_SoundBlasterOld_sf2\n    \"0131_FluidR3_GM_sf2_file\"\n  ],\n  gm_tubular_bells: [\n    // Tubular Bells: Chromatic Percussion\n    \"0140_JCLive_sf2_file\",\n    \"0140_Aspirin_sf2_file\",\n    // 0140_Chaos_sf2_file // same as aspirin?\n    \"0140_FluidR3_GM_sf2_file\",\n    \"0140_GeneralUserGS_sf2_file\",\n    //0140_SBLive_sf2\n    //0140_SoundBlasterOld_sf2\n    \"0141_FluidR3_GM_sf2_file\",\n    //0141_GeneralUserGS_sf2_file\n    \"0142_GeneralUserGS_sf2_file\"\n    // 0143_GeneralUserGS_sf2_file // bugg\n  ],\n  gm_dulcimer: [\n    // Dulcimer: Chromatic Percussion\n    \"0150_Aspirin_sf2_file\",\n    \"0150_Chaos_sf2_file\",\n    \"0150_FluidR3_GM_sf2_file\",\n    \"0150_GeneralUserGS_sf2_file\",\n    // 0150_JCLive_sf2_file // detuned???\n    //0150_SBLive_sf2\n    //0150_SoundBlasterOld_sf2\n    \"0151_FluidR3_GM_sf2_file\"\n  ],\n  gm_drawbar_organ: [\n    // Drawbar Organ: Organ\n    \"0160_JCLive_sf2_file\",\n    \"0160_Aspirin_sf2_file\",\n    \"0160_Chaos_sf2_file\",\n    \"0160_FluidR3_GM_sf2_file\",\n    \"0160_GeneralUserGS_sf2_file\",\n    //0160_SBLive_sf2\n    //0160_SoundBlasterOld_sf2\n    \"0161_Aspirin_sf2_file\",\n    \"0161_FluidR3_GM_sf2_file\"\n    //0161_SoundBlasterOld_sf\n  ],\n  gm_percussive_organ: [\n    // Percussive Organ: Organ\n    \"0170_JCLive_sf2_file\",\n    \"0170_Aspirin_sf2_file\",\n    \"0170_Chaos_sf2_file\",\n    \"0170_FluidR3_GM_sf2_file\",\n    // 0170_GeneralUserGS_sf2_file // repitched\n    //0170_SBLive_sf2\n    //0170_SoundBlasterOld_sf2\n    \"0171_FluidR3_GM_sf2_file\",\n    // 0171_GeneralUserGS_sf2_file  // repitched\n    \"0172_FluidR3_GM_sf2_file\"\n  ],\n  gm_rock_organ: [\n    // Rock Organ: Organ\n    \"0180_JCLive_sf2_file\",\n    \"0180_Aspirin_sf2_file\",\n    \"0180_Chaos_sf2_file\",\n    \"0180_FluidR3_GM_sf2_file\",\n    \"0180_GeneralUserGS_sf2_file\"\n    //0180_SBLive_sf2\n    //0180_SoundBlasterOld_sf2\n    //0181_Aspirin_sf2_file // flute\n    //0181_GeneralUserGS_sf2_file // marimbalike\n    //0181_SoundBlasterOld_sf\n  ],\n  gm_church_organ: [\n    // Church Organ: Organ\n    \"0190_JCLive_sf2_file\",\n    \"0190_Aspirin_sf2_file\",\n    \"0190_Chaos_sf2_file\",\n    \"0190_FluidR3_GM_sf2_file\",\n    \"0190_GeneralUserGS_sf2_file\"\n    //0190_SBLive_sf2\n    //0190_SoundBlasterOld_sf2\n    //0191_Aspirin_sf2_file // string??\n    //0191_GeneralUserGS_sf2_file // weird organ\n    //0191_SoundBlasterOld_sf\n  ],\n  gm_reed_organ: [\n    // Reed Organ: Organ\n    \"0200_JCLive_sf2_file\",\n    \"0200_Aspirin_sf2_file\",\n    \"0200_Chaos_sf2_file\",\n    \"0200_FluidR3_GM_sf2_file\",\n    \"0200_GeneralUserGS_sf2_file\",\n    //0200_SBLive_sf2\n    //0200_SoundBlasterOld_sf2\n    \"0201_Aspirin_sf2_file\",\n    \"0201_FluidR3_GM_sf2_file\",\n    \"0201_GeneralUserGS_sf2_file\"\n    //0201_SoundBlasterOld_sf2\n    //0210_Aspirin_sf2_file // buggy\n    //0210_Chaos_sf2_file // bugg\n  ],\n  gm_accordion: [\n    // Accordion: Organ\n    \"0210_JCLive_sf2_file\",\n    \"0210_FluidR3_GM_sf2_file\",\n    \"0210_GeneralUserGS_sf2_file\",\n    //0210_SBLive_sf2\n    //0210_SoundBlasterOld_sf2\n    \"0211_Aspirin_sf2_file\",\n    \"0211_FluidR3_GM_sf2_file\",\n    \"0211_GeneralUserGS_sf2_file\",\n    //0211_SoundBlasterOld_sf2\n    \"0212_GeneralUserGS_sf2_file\"\n  ],\n  gm_harmonica: [\n    // Harmonica: Organ\n    \"0220_FluidR3_GM_sf2_file\",\n    \"0220_JCLive_sf2_file\",\n    \"0220_Aspirin_sf2_file\",\n    \"0220_Chaos_sf2_file\",\n    \"0220_GeneralUserGS_sf2_file\",\n    //0220_SBLive_sf2\n    //0220_SoundBlasterOld_sf2\n    \"0221_FluidR3_GM_sf2_file\"\n  ],\n  gm_bandoneon: [\n    // Tango Accordion: Organ\n    \"0230_Aspirin_sf2_file\",\n    \"0230_JCLive_sf2_file\",\n    \"0230_Chaos_sf2_file\",\n    \"0230_FluidR3_GM_sf2_file\",\n    \"0230_GeneralUserGS_sf2_file\",\n    //0230_SBLive_sf2\n    //0230_SoundBlasterOld_sf2\n    \"0231_FluidR3_GM_sf2_file\",\n    \"0231_GeneralUserGS_sf2_file\",\n    \"0231_JCLive_sf2_file\",\n    //0231_SoundBlasterOld_sf2\n    \"0232_FluidR3_GM_sf2_file\",\n    \"0233_FluidR3_GM_sf2_file\"\n  ],\n  gm_acoustic_guitar_nylon: [\n    // Acoustic Guitar (nylon): Guitar\n    \"0240_JCLive_sf2_file\",\n    \"0240_Aspirin_sf2_file\",\n    \"0240_Chaos_sf2_file\",\n    \"0240_FluidR3_GM_sf2_file\",\n    \"0240_GeneralUserGS_sf2_file\",\n    \"0240_LK_Godin_Nylon_SF2_file\",\n    //0240_SBLive_sf2\n    //0240_SoundBlasterOld_sf2\n    // 0241_GeneralUserGS_sf2_file // organ like\n    \"0241_JCLive_sf2_file\",\n    \"0242_JCLive_sf2_file\",\n    \"0243_JCLive_sf2_file\"\n  ],\n  gm_acoustic_guitar_steel: [\n    // Acoustic Guitar (steel): Guitar\n    \"0253_Acoustic_Guitar_sf2_file\",\n    \"0250_Aspirin_sf2_file\",\n    \"0250_Chaos_sf2_file\",\n    \"0250_FluidR3_GM_sf2_file\",\n    \"0250_GeneralUserGS_sf2_file\",\n    // 0250_JCLive_sf2_file // detuned\n    \"0250_LK_AcousticSteel_SF2_file\",\n    //0250_SBLive_sf2\n    //0250_SoundBlasterOld_sf2\n    //0251_Acoustic_Guitar_sf2_file // detuned?\n    // 0251_GeneralUserGS_sf2_file // broken: missing pitches\n    // 0252_Acoustic_Guitar_sf2_file // detuned..\n    // 0252_GeneralUserGS_sf2_file // broken: missing pitches\n    \"0253_Acoustic_Guitar_sf2_file\",\n    \"0253_GeneralUserGS_sf2_file\",\n    \"0254_Acoustic_Guitar_sf2_file\",\n    \"0254_GeneralUserGS_sf2_file\"\n    //0255_GeneralUserGS_sf2_file // no guitar.\n  ],\n  gm_electric_guitar_jazz: [\n    // Electric Guitar (jazz): Guitar\n    \"0260_JCLive_sf2_file\",\n    \"0260_Aspirin_sf2_file\",\n    \"0260_Chaos_sf2_file\",\n    \"0260_FluidR3_GM_sf2_file\",\n    \"0260_GeneralUserGS_sf2_file\",\n    //0260_SBLive_sf2\n    //0260_SoundBlasterOld_sf2\n    \"0260_Stratocaster_sf2_file\",\n    \"0261_GeneralUserGS_sf2_file\",\n    //0261_SoundBlasterOld_sf2\n    \"0261_Stratocaster_sf2_file\",\n    \"0262_Stratocaster_sf2_file\"\n  ],\n  gm_electric_guitar_clean: [\n    // Electric Guitar (clean): Guitar\n    \"0270_Aspirin_sf2_file\",\n    \"0270_Chaos_sf2_file\",\n    \"0270_FluidR3_GM_sf2_file\",\n    \"0270_GeneralUserGS_sf2_file\",\n    //0270_Gibson_Les_Paul_sf2_file // detuned\n    // 0270_JCLive_sf2_file // broken: missing notes\n    \"0270_SBAWE32_sf2_file\",\n    //0270_SBLive_sf2\n    //0270_SoundBlasterOld_sf2\n    \"0270_Stratocaster_sf2_file\",\n    \"0271_GeneralUserGS_sf2_file\",\n    \"0271_Stratocaster_sf2_file\",\n    \"0272_Stratocaster_sf2_file\"\n  ],\n  gm_electric_guitar_muted: [\n    // Electric Guitar (muted): Guitar\n    \"0280_Aspirin_sf2_file\",\n    \"0280_Chaos_sf2_file\",\n    // 0280_FluidR3_GM_sf2_file // broken: wrong notes\n    \"0280_GeneralUserGS_sf2_file\",\n    \"0280_JCLive_sf2_file\",\n    //0280_LesPaul_sf2 // missing\n    \"0280_LesPaul_sf2_file\",\n    \"0280_SBAWE32_sf2_file\",\n    //0280_SBLive_sf2\n    //0280_SoundBlasterOld_sf2\n    \"0281_Aspirin_sf2_file\",\n    \"0281_FluidR3_GM_sf2_file\",\n    \"0281_GeneralUserGS_sf2_file\",\n    \"0282_FluidR3_GM_sf2_file\"\n    // 0282_GeneralUserGS_sf2_file // broken: missing notes\n    // 0283_GeneralUserGS_sf2_file // missin\n  ],\n  gm_overdriven_guitar: [\n    // Overdriven Guitar: Guitar\n    \"0290_FluidR3_GM_sf2_file\",\n    \"0290_Aspirin_sf2_file\",\n    \"0290_Chaos_sf2_file\",\n    \"0290_GeneralUserGS_sf2_file\",\n    //0290_JCLive_sf2_file // detuned....\n    //0290_LesPaul_sf2 // broken\n    \"0290_LesPaul_sf2_file\",\n    \"0290_SBAWE32_sf2_file\",\n    //0290_SBLive_sf2\n    //0290_SoundBlasterOld_sf2\n    // 0291_Aspirin_sf2_file // broken\n    // 0291_LesPaul_sf2 // broken\n    \"0291_LesPaul_sf2_file\",\n    \"0291_SBAWE32_sf2_file\",\n    //0291_SoundBlasterOld_sf2\n    \"0292_Aspirin_sf2_file\",\n    // 0292_LesPaul_sf2 // broken\n    \"0292_LesPaul_sf2_file\"\n  ],\n  gm_distortion_guitar: [\n    // Distortion Guitar: Guitar\n    \"0300_FluidR3_GM_sf2_file\",\n    \"0300_Aspirin_sf2_file\",\n    \"0300_Chaos_sf2_file\",\n    \"0300_GeneralUserGS_sf2_file\",\n    // 0300_JCLive_sf2_file // broken\n    // 0300_LesPaul_sf2 // broken\n    \"0300_LesPaul_sf2_file\",\n    //0300_SBAWE32_sf2_file // _2 octave\n    //0300_SBLive_sf2\n    //0300_SoundBlasterOld_sf2\n    // 0301_Aspirin_sf2_file // missing\n    //0301_FluidR3_GM_sf2_file // weird broken bell\n    // 0301_GeneralUserGS_sf2_file // broken\n    // 0301_JCLive_sf2_file // broken\n    // 0301_LesPaul_sf2 // missing\n    // 0301_LesPaul_sf2_file // + 1 oct?\n    \"0302_Aspirin_sf2_file\",\n    // 0302_GeneralUserGS_sf2_file // not a guitar..\n    //0302_JCLive_sf2_file // broken...\n    // 0303_Aspirin_sf2_file // guitar harmonic??\n    \"0304_Aspirin_sf2_file\"\n  ],\n  gm_guitar_harmonics: [\n    // Guitar Harmonics: Guitar\n    \"0310_Aspirin_sf2_file\",\n    \"0310_FluidR3_GM_sf2_file\",\n    \"0310_Chaos_sf2_file\"\n    //0310_GeneralUserGS_sf2_file // weird..\n    // 0310_JCLive_sf2_file // weird\n    //0310_LesPaul_sf2 // missing\n    //0310_LesPaul_sf2_file // wrong pitches\n    //0310_SBAWE32_sf2_file // wrong pitches\n    //0310_SBLive_sf2\n    //0310_SoundBlasterOld_sf2\n    //0311_FluidR3_GM_sf2_file // knackt\n    //0311_GeneralUserGS_sf2_file // wrong note\n  ],\n  gm_acoustic_bass: [\n    // Acoustic Bass: Bass\n    \"0320_JCLive_sf2_file\",\n    \"0320_FluidR3_GM_sf2_file\",\n    \"0320_Aspirin_sf2_file\",\n    \"0320_Chaos_sf2_file\"\n    // 0320_GeneralUserGS_sf2_file // missing notes\n    //0320_SBLive_sf2\n    //0320_SoundBlasterOld_sf2\n    // 0321_GeneralUserGS_sf2_file // nice sound but missing notes\n    // 0322_GeneralUserGS_sf2_file // missing note\n  ],\n  gm_electric_bass_finger: [\n    // Electric Bass (finger): Bass\n    \"0330_JCLive_sf2_file\",\n    \"0330_FluidR3_GM_sf2_fible\",\n    \"0330_Aspirin_sf2_file\",\n    //0330_Chaos_sf2_file // same as last\n    \"0330_GeneralUserGS_sf2_file\"\n    //0330_SBLive_sf2\n    //0330_SoundBlasterOld_sf2\n    //0331_GeneralUserGS_sf2_file // knackt\n    // 0332_GeneralUserGS_sf2_file // missin\n  ],\n  gm_electric_bass_pick: [\n    // Electric Bass (pick): Bass\n    \"0340_JCLive_sf2_file\",\n    \"0340_FluidR3_GM_sf2_file\",\n    \"0340_Aspirin_sf2_file\",\n    //0340_Chaos_sf2_file // same as last\n    \"0340_GeneralUserGS_sf2_file\",\n    //0340_SBLive_sf2\n    //0340_SoundBlasterOld_sf2\n    \"0341_Aspirin_sf2_file\"\n    //0341_GeneralUserGS_sf2_file // knack\n  ],\n  gm_fretless_bass: [\n    // Fretless Bass: Bass\n    \"0350_Aspirin_sf2_file\",\n    // 0350_Chaos_sf2_file // same as last\n    //0350_FluidR3_GM_sf2_file // knackt\n    //0350_GeneralUserGS_sf2_file // _1 oct + knackt\n    \"0350_JCLive_sf2_file\"\n    //0350_SBLive_sf2\n    //0350_SoundBlasterOld_sf2\n    //0351_GeneralUserGS_sf2_file // missin\n  ],\n  gm_slap_bass_1: [\n    // Slap Bass 1: Bass\n    \"0360_Aspirin_sf2_file\",\n    \"0360_JCLive_sf2_file\",\n    \"0360_FluidR3_GM_sf2_file\",\n    \"0360_Chaos_sf2_file\"\n    //0360_GeneralUserGS_sf2_file // _1 oct\n    //0360_SBLive_sf2\n    //0360_SoundBlasterOld_sf2\n    //0361_GeneralUserGS_sf2_file // missin\n  ],\n  gm_slap_bass_2: [\n    // Slap Bass 2: Bass\n    \"0370_Aspirin_sf2_file\",\n    // 0370_Chaos_sf2_file // same as last\n    \"0370_FluidR3_GM_sf2_file\",\n    \"0370_GeneralUserGS_sf2_fil e\",\n    \"0370_JCLive_sf2_file\"\n    //0370_SBLive_sf2\n    //0370_SoundBlasterOld_sf2\n    //0371_GeneralUserGS_sf2_file // missing\n    //0372_GeneralUserGS_sf2_file // detuned\n    //0385_GeneralUserGS_sf2_file // missin\n  ],\n  gm_synth_bass_1: [\n    // Synth Bass 1: Bass\n    // '0380_Aspirin_sf2_file', // broken in safari https://codeberg.org/uzu/strudel/issues/1384\n    \"0380_Chaos_sf2_file\",\n    \"0380_FluidR3_GM_sf2_file\",\n    // 0380_GeneralUserGS_sf2_file // laut\n    \"0380_JCLive_sf2_file\",\n    //0380_SBLive_sf2\n    //0380_SoundBlasterOld_sf2\n    \"0381_FluidR3_GM_sf2_file\",\n    \"0381_GeneralUserGS_sf2_file\",\n    //0382_FluidR3_GM_sf2_file // kein synth bass\n    \"0382_GeneralUserGS_sf2_file\",\n    \"0383_GeneralUserGS_sf2_file\",\n    \"0384_GeneralUserGS_sf2_file\",\n    //0386_GeneralUserGS_sf2_file // knackt\n    \"0387_GeneralUserGS_sf2_file\"\n  ],\n  gm_synth_bass_2: [\n    // Synth Bass 2: Bass\n    \"0390_Aspirin_sf2_file\",\n    // 0390_Chaos_sf2_file // same as last\n    \"0390_FluidR3_GM_sf2_file\",\n    \"0390_GeneralUserGS_sf2_file\",\n    \"0390_JCLive_sf2_file\",\n    //0390_SBLive_sf2\n    //0390_SoundBlasterOld_sf2\n    \"0391_FluidR3_GM_sf2_file\",\n    // 0391_GeneralUserGS_sf2_file // missing\n    //0391_SoundBlasterOld_sf2\n    \"0392_FluidR3_GM_sf2_file\",\n    //0392_GeneralUserGS_sf2_file // kein synth und _1oct\n    \"0393_GeneralUserGS_sf2_file\"\n  ],\n  gm_violin: [\n    // Violin: Strings\n    \"0400_Aspirin_sf2_file\",\n    \"0400_Chaos_sf2_file\",\n    \"0400_JCLive_sf2_file\",\n    \"0400_FluidR3_GM_sf2_file\",\n    \"0400_GeneralUserGS_sf2_file\",\n    //0400_SBLive_sf2\n    //0400_SoundBlasterOld_sf2\n    \"0401_Aspirin_sf2_file\",\n    \"0401_FluidR3_GM_sf2_file\",\n    \"0401_GeneralUserGS_sf2_file\",\n    \"0402_GeneralUserGS_sf2_file\"\n  ],\n  gm_viola: [\n    // Viola: Strings\n    \"0410_Aspirin_sf2_file\",\n    // 0410_Chaos_sf2_file // laut und sehr unstringy\n    \"0410_FluidR3_GM_sf2_file\",\n    \"0410_GeneralUserGS_sf2_file\",\n    \"0410_JCLive_sf2_file\",\n    //0410_SBLive_sf2\n    //0410_SoundBlasterOld_sf2\n    \"0411_FluidR3_GM_sf2_file\"\n  ],\n  gm_cello: [\n    // Cello: Strings\n    \"0420_Aspirin_sf2_file\",\n    // 0420_Chaos_sf2_file // kein cello und laut\n    \"0420_FluidR3_GM_sf2_file\",\n    \"0420_GeneralUserGS_sf2_file\",\n    \"0420_JCLive_sf2_file\",\n    //0420_SBLive_sf2\n    //0420_SoundBlasterOld_sf2\n    \"0421_FluidR3_GM_sf2_file\",\n    \"0421_GeneralUserGS_sf2_file\"\n  ],\n  gm_contrabass: [\n    // Contrabass: Strings\n    \"0430_Aspirin_sf2_file\",\n    \"0430_Chaos_sf2_file\",\n    // 0430_FluidR3_GM_sf2_file // missing notes\n    \"0430_GeneralUserGS_sf2_file\"\n    //0430_JCLive_sf2_file // _1 oct und meh\n    //0430_SBLive_sf2\n    //0430_SoundBlasterOld_sf2\n    // 0431_FluidR3_GM_sf2_file // missing note\n  ],\n  gm_tremolo_strings: [\n    // Tremolo Strings: Strings\n    \"0440_Aspirin_sf2_file\",\n    \"0440_Chaos_sf2_file\",\n    //0440_FluidR3_GM_sf2_file // huuuge\n    \"0440_GeneralUserGS_sf2_file\",\n    \"0440_JCLive_sf2_file\",\n    //0440_SBLive_sf2\n    //0440_SoundBlasterOld_sf2\n    \"0441_GeneralUserGS_sf2_file\",\n    \"0442_GeneralUserGS_sf2_file\"\n  ],\n  gm_pizzicato_strings: [\n    // Pizzicato Strings: Strings\n    \"0450_Aspirin_sf2_file\",\n    \"0450_Chaos_sf2_file\",\n    \"0450_FluidR3_GM_sf2_file\",\n    \"0450_GeneralUserGS_sf2_file\",\n    \"0450_JCLive_sf2_file\",\n    //0450_SBLive_sf2\n    //0450_SoundBlasterOld_sf2\n    \"0451_FluidR3_GM_sf2_file\"\n  ],\n  gm_orchestral_harp: [\n    // Orchestral Harp: Strings\n    \"0460_Aspirin_sf2_file\",\n    // 0460_Chaos_sf2_file // knackt\n    \"0460_FluidR3_GM_sf2_file\",\n    \"0460_GeneralUserGS_sf2_file\",\n    \"0460_JCLive_sf2_file\",\n    //0460_SBLive_sf2\n    //0460_SoundBlasterOld_sf2\n    \"0461_FluidR3_GM_sf2_file\"\n  ],\n  gm_timpani: [\n    // Timpani: Strings\n    \"0470_Aspirin_sf2_file\",\n    \"0470_Chaos_sf2_file\",\n    \"0470_FluidR3_GM_sf2_file\",\n    \"0470_GeneralUserGS_sf2_file\",\n    // 0470_JCLive_sf2_file // wrong pitches\n    //0470_SBLive_sf2\n    //0470_SoundBlasterOld_sf2\n    \"0471_FluidR3_GM_sf2_file\",\n    \"0471_GeneralUserGS_sf2_file\"\n  ],\n  gm_string_ensemble_1: [\n    // String Ensemble 1: Ensemble\n    \"0480_Aspirin_sf2_file\",\n    \"0480_Chaos_sf2_file\",\n    \"0480_FluidR3_GM_sf2_file\",\n    \"0480_GeneralUserGS_sf2_file\",\n    \"0480_JCLive_sf2_file\",\n    //0480_SBLive_sf2\n    //0480_SoundBlasterOld_sf2\n    // these dont work..\n    //04810_GeneralUserGS_sf2_file // missing notes + brass\n    //04811_GeneralUserGS_sf2_file  // missing notes + brass\n    //04812_GeneralUserGS_sf2_file\n    //04813_GeneralUserGS_sf2_file\n    //04814_GeneralUserGS_sf2_file\n    //04815_GeneralUserGS_sf2_file\n    //04816_GeneralUserGS_sf2_file\n    //04817_GeneralUserGS_sf2_file\n    \"0481_Aspirin_sf2_file\",\n    \"0481_FluidR3_GM_sf2_file\",\n    \"0481_GeneralUserGS_sf2_file\",\n    \"0482_Aspirin_sf2_file\",\n    \"0482_GeneralUserGS_sf2_file\",\n    \"0483_GeneralUserGS_sf2_file\"\n    // another block of buggyness:\n    //0484_GeneralUserGS_sf2_file // keys?! + knackt\n    //0485_GeneralUserGS_sf2_file // missing notes\n    //0486_GeneralUserGS_sf2_file\n    //0487_GeneralUserGS_sf2_file\n    //0488_GeneralUserGS_sf2_file\n    //0489_GeneralUserGS_sf2_fil\n  ],\n  gm_string_ensemble_2: [\n    // String Ensemble 2: Ensemble\n    \"0490_Aspirin_sf2_file\",\n    \"0490_Chaos_sf2_file\",\n    \"0490_FluidR3_GM_sf2_file\",\n    \"0490_GeneralUserGS_sf2_file\",\n    \"0490_JCLive_sf2_file\",\n    //0490_SBLive_sf2\n    //0490_SoundBlasterOld_sf2\n    \"0491_GeneralUserGS_sf2_file\",\n    \"0492_GeneralUserGS_sf2_file\"\n  ],\n  gm_synth_strings_1: [\n    // Synth Strings 1: Ensemble\n    \"0500_Aspirin_sf2_file\",\n    // 0500_Chaos_sf2_file // same as above\n    //0500_FluidR3_GM_sf2_file // detune + knack\n    \"0500_GeneralUserGS_sf2_file\",\n    \"0500_JCLive_sf2_file\",\n    //0500_SBLive_sf2\n    //0500_SoundBlasterOld_sf2\n    \"0501_FluidR3_GM_sf2_file\",\n    // 0501_GeneralUserGS_sf2_file // crackles\n    // 0502_FluidR3_GM_sf2_file // missing\n    \"0502_GeneralUserGS_sf2_file\",\n    \"0503_FluidR3_GM_sf2_file\",\n    // 0504_FluidR3_GM_sf2_file // missing\n    \"0505_FluidR3_GM_sf2_file\"\n  ],\n  gm_synth_strings_2: [\n    // Synth Strings 2: Ensemble\n    \"0510_Aspirin_sf2_file\",\n    \"0510_Chaos_sf2_file\",\n    // 0510_FluidR3_GM_sf2_file // detune + crackle\n    \"0510_GeneralUserGS_sf2_file\",\n    //0510_JCLive_sf2_file // laarge and meh\n    //0510_SBLive_sf2 // missing\n    //0510_SoundBlasterOld_sf2\n    \"0511_GeneralUserGS_sf2_file\"\n    //0511_SoundBlasterOld_sf\n  ],\n  gm_choir_aahs: [\n    // Choir Aahs: Ensemble\n    \"0520_Aspirin_sf2_file\",\n    \"0520_Chaos_sf2_file\",\n    \"0520_FluidR3_GM_sf2_file\",\n    \"0520_GeneralUserGS_sf2_file\",\n    \"0520_JCLive_sf2_file\",\n    //0520_SBLive_sf2\n    \"0520_Soul_Ahhs_sf2_file\",\n    //0520_SoundBlasterOld_sf2\n    \"0521_FluidR3_GM_sf2_file\",\n    \"0521_Soul_Ahhs_sf2_file\",\n    //0521_SoundBlasterOld_sf2\n    \"0522_Soul_Ahhs_sf2_file\"\n  ],\n  gm_voice_oohs: [\n    // Voice Oohs: Ensemble\n    \"0530_Aspirin_sf2_file\",\n    \"0530_Chaos_sf2_file\",\n    \"0530_FluidR3_GM_sf2_file\",\n    \"0530_GeneralUserGS_sf2_file\",\n    //0530_JCLive_sf2_file // same as above\n    //0530_SBLive_sf2\n    // 0530_Soul_Ahhs_sf2_file // not ooh\n    //0530_SoundBlasterOld_sf2\n    \"0531_FluidR3_GM_sf2_file\",\n    // 0531_GeneralUserGS_sf2_file // ends crackle\n    \"0531_JCLive_sf2_file\"\n    //0531_SoundBlasterOld_sf\n  ],\n  gm_synth_choir: [\n    // Synth Choir: Ensemble\n    \"0540_Aspirin_sf2_file\",\n    \"0540_Chaos_sf2_file\",\n    \"0540_FluidR3_GM_sf2_file\",\n    \"0540_GeneralUserGS_sf2_file\",\n    //0540_JCLive_sf2_file // large + crackles\n    //0540_SBLive_sf2\n    //0540_SoundBlasterOld_sf2\n    \"0541_FluidR3_GM_sf2_file\"\n  ],\n  gm_orchestra_hit: [\n    // Orchestra Hit: Ensemble\n    \"0550_Aspirin_sf2_file\",\n    \"0550_Chaos_sf2_file\",\n    \"0550_FluidR3_GM_sf2_file\",\n    \"0550_GeneralUserGS_sf2_file\",\n    //0550_JCLive_sf2_file // same as above\n    //0550_SBLive_sf2\n    //0550_SoundBlasterOld_sf2\n    //0551_Aspirin_sf2_file // not an orch hit..\n    \"0551_FluidR3_GM_sf2_file\"\n  ],\n  gm_trumpet: [\n    // Trumpet: Brass\n    \"0560_FluidR3_GM_sf2_file\",\n    \"0560_JCLive_sf2_file\",\n    \"0560_Aspirin_sf2_file\",\n    \"0560_Chaos_sf2_file\"\n    //0560_GeneralUserGS_sf2_file // _1 oct\n    //0560_SBLive_sf2\n    //0560_SoundBlasterOld_sf\n  ],\n  gm_trombone: [\n    // Trombone: Brass\n    \"0570_Aspirin_sf2_file\",\n    \"0570_Chaos_sf2_file\",\n    \"0570_FluidR3_GM_sf2_file\",\n    \"0570_GeneralUserGS_sf2_file\",\n    //0570_JCLive_sf2_file // _1oct\n    //0570_SBLive_sf2\n    //0570_SoundBlasterOld_sf2\n    \"0571_GeneralUserGS_sf2_file\"\n  ],\n  gm_tuba: [\n    // Tuba: Brass\n    \"0580_FluidR3_GM_sf2_file\",\n    \"0580_Aspirin_sf2_file\",\n    \"0580_Chaos_sf2_file\",\n    \"0580_GeneralUserGS_sf2_file\"\n    //0580_JCLive_sf2_file // _1oct\n    //0580_SBLive_sf2\n    //0580_SoundBlasterOld_sf2\n    //0581_GeneralUserGS_sf2_file // missin\n  ],\n  gm_muted_trumpet: [\n    // Muted Trumpet: Brass\n    \"0590_JCLive_sf2_file\",\n    \"0590_Aspirin_sf2_file\",\n    \"0590_Chaos_sf2_file\",\n    \"0590_FluidR3_GM_sf2_file\",\n    \"0590_GeneralUserGS_sf2_file\"\n    //0590_SBLive_sf2\n    //0590_SoundBlasterOld_sf2\n    // 0591_GeneralUserGS_sf2_file // missin\n  ],\n  gm_french_horn: [\n    // French Horn: Brass\n    \"0600_Aspirin_sf2_file\",\n    //0600_Chaos_sf2_file // weird jumps\n    \"0600_FluidR3_GM_sf2_file\",\n    \"0600_GeneralUserGS_sf2_file\",\n    \"0600_JCLive_sf2_file\",\n    //0600_SBLive_sf2\n    //0600_SoundBlasterOld_sf2\n    \"0601_FluidR3_GM_sf2_file\"\n    //0601_GeneralUserGS_sf2_file // tiny crackles\n    // 0602_GeneralUserGS_sf2_file // bad gain diffs\n    // 0603_GeneralUserGS_sf2_file // tiny crackle\n  ],\n  gm_brass_section: [\n    // Brass Section: Brass\n    \"0610_JCLive_sf2_file\",\n    \"0610_Aspirin_sf2_file\",\n    \"0610_Chaos_sf2_file\",\n    \"0610_FluidR3_GM_sf2_file\",\n    \"0610_GeneralUserGS_sf2_file\"\n    //0610_SBLive_sf2\n    //0610_SoundBlasterOld_sf2\n    // 0611_GeneralUserGS_sf2_file // missing sounds\n    // 0612_GeneralUserGS_sf2_file\n    //0613_GeneralUserGS_sf2_file // _1 oct\n    // 0614_GeneralUserGS_sf2_file // missing sounds\n    // 0615_GeneralUserGS_sf2_file // missing sound\n  ],\n  gm_synth_brass_1: [\n    // Synth Brass 1: Brass\n    \"0620_Aspirin_sf2_file\",\n    //0620_Chaos_sf2_file // weird gain diff\n    \"0620_FluidR3_GM_sf2_file\",\n    //0620_GeneralUserGS_sf2_file // loooud\n    // 0620_JCLive_sf2_file // weird gain diff\n    //0620_SBLive_sf2\n    //0620_SoundBlasterOld_sf2\n    \"0621_Aspirin_sf2_file\",\n    \"0621_FluidR3_GM_sf2_file\"\n    // 0621_GeneralUserGS_sf2_file // detune + loooud\n    //0622_FluidR3_GM_sf2_file // loud..\n    //0622_GeneralUserGS_sf2_file // loud + crackle\n  ],\n  gm_synth_brass_2: [\n    // Synth Brass 2: Brass\n    \"0630_Aspirin_sf2_file\",\n    \"0630_Chaos_sf2_file\",\n    \"0630_FluidR3_GM_sf2_file\",\n    //0630_GeneralUserGS_sf2_file // detune + looud\n    \"0630_JCLive_sf2_file\",\n    //0630_SBLive_sf2\n    //0630_SoundBlasterOld_sf2\n    // 0631_Aspirin_sf2_file // looud + detune + gain diffs\n    \"0631_FluidR3_GM_sf2_file\",\n    //0631_GeneralUserGS_sf2_file // crackles\n    \"0632_FluidR3_GM_sf2_file\",\n    \"0633_FluidR3_GM_sf2_file\"\n  ],\n  gm_soprano_sax: [\n    // Soprano Sax: Reed\n    \"0640_JCLive_sf2_file\",\n    \"0640_Aspirin_sf2_file\",\n    \"0640_Chaos_sf2_file\",\n    \"0640_FluidR3_GM_sf2_file\",\n    // 0640_GeneralUserGS_sf2_file // crackles\n    //0640_SBLive_sf2\n    //0640_SoundBlasterOld_sf2\n    \"0641_FluidR3_GM_sf2_file\"\n  ],\n  gm_alto_sax: [\n    // Alto Sax: Reed\n    //0650_Aspirin_sf2_file // this is not an alto sax\n    \"0650_JCLive_sf2_file\",\n    \"0650_Chaos_sf2_file\",\n    \"0650_FluidR3_GM_sf2_file\",\n    \"0650_GeneralUserGS_sf2_file\",\n    //0650_SBLive_sf2\n    //0650_SoundBlasterOld_sf2\n    \"0651_Aspirin_sf2_file\",\n    \"0651_FluidR3_GM_sf2_file\"\n  ],\n  gm_tenor_sax: [\n    // Tenor Sax: Reed\n    \"0660_JCLive_sf2_file\",\n    \"0660_Aspirin_sf2_file\",\n    \"0660_Chaos_sf2_file\",\n    //0660_FluidR3_GM_sf2_file // weird pitches\n    \"0660_GeneralUserGS_sf2_file\"\n    //0660_SBLive_sf2\n    //0660_SoundBlasterOld_sf2\n    // 0661_FluidR3_GM_sf2_file // weird pitches\n    // 0661_GeneralUserGS_sf2_file // missin\n  ],\n  gm_baritone_sax: [\n    // Baritone Sax: Reed\n    \"0670_JCLive_sf2_file\",\n    \"0670_Aspirin_sf2_file\",\n    \"0670_Chaos_sf2_file\",\n    \"0670_FluidR3_GM_sf2_file\",\n    \"0670_GeneralUserGS_sf2_file\",\n    //0670_SBLive_sf2\n    //0670_SoundBlasterOld_sf2\n    \"0671_FluidR3_GM_sf2_file\"\n  ],\n  gm_oboe: [\n    // Oboe: Reed\n    //0680_Aspirin_sf2_file // tiny crackles\n    \"0680_JCLive_sf2_file\",\n    \"0680_Chaos_sf2_file\",\n    \"0680_FluidR3_GM_sf2_file\",\n    \"0680_GeneralUserGS_sf2_file\",\n    //0680_SBLive_sf2\n    //0680_SoundBlasterOld_sf2\n    \"0681_FluidR3_GM_sf2_file\"\n  ],\n  gm_english_horn: [\n    // English Horn: Reed\n    \"0690_JCLive_sf2_file\",\n    \"0690_Aspirin_sf2_file\",\n    //0690_Chaos_sf2_file // detuned\n    \"0690_FluidR3_GM_sf2_file\",\n    //0690_GeneralUserGS_sf2_file // +1 oct\n    //0690_SBLive_sf2\n    //0690_SoundBlasterOld_sf2\n    \"0691_FluidR3_GM_sf2_file\"\n  ],\n  gm_bassoon: [\n    // Bassoon: Reed\n    \"0700_JCLive_sf2_file\",\n    //0700_Aspirin_sf2_file // detune + gain diffs\n    // 0700_Chaos_sf2_file // detune + crackles\n    \"0700_FluidR3_GM_sf2_file\",\n    \"0700_GeneralUserGS_sf2_file\",\n    //0700_SBLive_sf2\n    //0700_SoundBlasterOld_sf2\n    \"0701_FluidR3_GM_sf2_file\"\n    //0701_GeneralUserGS_sf2_file // missin\n  ],\n  gm_clarinet: [\n    // Clarinet: Reed\n    \"0710_JCLive_sf2_file\",\n    \"0710_Aspirin_sf2_file\",\n    \"0710_Chaos_sf2_file\",\n    \"0710_FluidR3_GM_sf2_file\",\n    \"0710_GeneralUserGS_sf2_file\",\n    //0710_SBLive_sf2\n    //0710_SoundBlasterOld_sf2\n    \"0711_FluidR3_GM_sf2_file\"\n  ],\n  gm_piccolo: [\n    // Piccolo: Pipe\n    \"0720_JCLive_sf2_file\",\n    \"0720_Aspirin_sf2_file\",\n    // 0720_Chaos_sf2_file // not a piccolo\n    \"0720_FluidR3_GM_sf2_file\",\n    \"0720_GeneralUserGS_sf2_file\",\n    //0720_SBLive_sf2\n    //0720_SoundBlasterOld_sf2\n    \"0721_FluidR3_GM_sf2_file\"\n    //0721_SoundBlasterOld_sf\n  ],\n  gm_flute: [\n    // Flute: Pipe\n    \"0730_JCLive_sf2_file\",\n    \"0730_Aspirin_sf2_file\",\n    //0730_Chaos_sf2_file // etune\n    \"0730_FluidR3_GM_sf2_file\",\n    \"0730_GeneralUserGS_sf2_file\",\n    //0730_SBLive_sf2\n    //0730_SoundBlasterOld_sf2\n    //0731_Aspirin_sf2_file // not a flute\n    \"0731_FluidR3_GM_sf2_file\"\n    //0731_SoundBlasterOld_sf\n  ],\n  gm_recorder: [\n    // Recorder: Pipe\n    \"0740_JCLive_sf2_file\",\n    \"0740_Aspirin_sf2_file\",\n    \"0740_Chaos_sf2_file\",\n    \"0740_FluidR3_GM_sf2_file\",\n    \"0740_GeneralUserGS_sf2_file\"\n    //0740_SBLive_sf2\n    //0740_SoundBlasterOld_sf2\n    // 0741_GeneralUserGS_sf2_file // missin\n  ],\n  gm_pan_flute: [\n    // Pan Flute: Pipe\n    \"0750_JCLive_sf2_file\",\n    \"0750_FluidR3_GM_sf2_file\",\n    \"0750_Aspirin_sf2_file\",\n    \"0750_Chaos_sf2_file\",\n    \"0750_GeneralUserGS_sf2_file\",\n    //0750_SBLive_sf2\n    //0750_SoundBlasterOld_sf2\n    \"0751_Aspirin_sf2_file\",\n    \"0751_FluidR3_GM_sf2_file\",\n    \"0751_GeneralUserGS_sf2_file\"\n    //0751_SoundBlasterOld_sf\n  ],\n  gm_blown_bottle: [\n    // Blown bottle: Pipe\n    \"0760_FluidR3_GM_sf2_file\",\n    \"0760_JCLive_sf2_file\",\n    // 0760_Aspirin_sf2_file // same as below w crackle\n    \"0760_Chaos_sf2_file\",\n    \"0760_GeneralUserGS_sf2_file\",\n    //0760_SBLive_sf2\n    //0760_SoundBlasterOld_sf2\n    \"0761_FluidR3_GM_sf2_file\"\n    // 0761_GeneralUserGS_sf2_file // missing\n    //0761_SoundBlasterOld_sf2\n    // 0762_GeneralUserGS_sf2_file // missin\n  ],\n  gm_shakuhachi: [\n    // Shakuhachi: Pipe\n    \"0770_JCLive_sf2_file\",\n    \"0771_FluidR3_GM_sf2_file\",\n    \"0770_Aspirin_sf2_file\",\n    //0770_Chaos_sf2_file // not shakuhachi\n    \"0770_FluidR3_GM_sf2_file\",\n    \"0770_GeneralUserGS_sf2_file\"\n    //0770_SBLive_sf2\n    //0770_SoundBlasterOld_sf2\n    // 0771_GeneralUserGS_sf2_file // missing\n    // 0772_GeneralUserGS_sf2_file // missin\n  ],\n  gm_whistle: [\n    // Whistle: Pipe\n    \"0780_FluidR3_GM_sf2_file\",\n    \"0780_JCLive_sf2_file\",\n    \"0780_Aspirin_sf2_file\",\n    \"0780_Chaos_sf2_file\"\n    //0780_GeneralUserGS_sf2_file // loud..\n    //0780_SBLive_sf2\n    //0780_SoundBlasterOld_sf2\n    // 0781_GeneralUserGS_sf2_file // detune + crackle\n  ],\n  gm_ocarina: [\n    // Ocarina: Pipe\n    \"0790_FluidR3_GM_sf2_file\",\n    \"0790_JCLive_sf2_file\",\n    \"0790_Aspirin_sf2_file\",\n    //0790_Chaos_sf2_file // same as above\n    \"0790_GeneralUserGS_sf2_file\"\n    //0790_SBLive_sf2\n    //0790_SoundBlasterOld_sf2\n    //0791_GeneralUserGS_sf2_file // missin\n  ],\n  gm_lead_1_square: [\n    // Lead 1 (square): Synth Lead\n    \"0800_Aspirin_sf2_file\",\n    \"0800_Chaos_sf2_file\",\n    \"0800_FluidR3_GM_sf2_file\"\n    // 0800_GeneralUserGS_sf2_file // detuned\n    // 0800_JCLive_sf2_file // detuned\n    //0800_SBLive_sf2\n    //0800_SoundBlasterOld_sf2\n    //0801_FluidR3_GM_sf2_file // detune\n    // 0801_GeneralUserGS_sf2_file // detun\n  ],\n  gm_lead_2_sawtooth: [\n    // Lead 2 (sawtooth): Synth Lead\n    \"0810_JCLive_sf2_file\",\n    \"0810_Aspirin_sf2_file\",\n    \"0810_Chaos_sf2_file\",\n    \"0810_FluidR3_GM_sf2_file\",\n    \"0810_GeneralUserGS_sf2_file\",\n    //0810_SBLive_sf2\n    //0810_SoundBlasterOld_sf2\n    \"0811_Aspirin_sf2_file\",\n    \"0811_GeneralUserGS_sf2_file\"\n    //0811_SoundBlasterOld_sf\n  ],\n  gm_lead_3_calliope: [\n    // Lead 3 (calliope): Synth Lead\n    \"0820_JCLive_sf2_file\",\n    \"0820_Aspirin_sf2_file\",\n    \"0820_Chaos_sf2_file\",\n    \"0820_FluidR3_GM_sf2_file\",\n    \"0820_GeneralUserGS_sf2_file\",\n    //0820_SBLive_sf2\n    //0820_SoundBlasterOld_sf2\n    \"0821_FluidR3_GM_sf2_file\",\n    \"0821_GeneralUserGS_sf2_file\"\n    //0821_SoundBlasterOld_sf2\n    // 0822_GeneralUserGS_sf2_file // missing\n    //0823_GeneralUserGS_sf2_file // missin\n  ],\n  gm_lead_4_chiff: [\n    // Lead 4 (chiff): Synth Lead\n    \"0830_JCLive_sf2_file\",\n    \"0830_Aspirin_sf2_file\",\n    // 0830_Chaos_sf2_file // same as above\n    \"0830_FluidR3_GM_sf2_file\",\n    \"0830_GeneralUserGS_sf2_file\",\n    //0830_SBLive_sf2\n    //0830_SoundBlasterOld_sf2\n    \"0831_FluidR3_GM_sf2_file\",\n    \"0831_GeneralUserGS_sf2_file\"\n    //0831_SoundBlasterOld_sf\n  ],\n  gm_lead_5_charang: [\n    // Lead 5 (charang): Synth Lead\n    \"0840_JCLive_sf2_file\",\n    \"0840_FluidR3_GM_sf2_file\",\n    \"0840_Aspirin_sf2_file\",\n    \"0840_Chaos_sf2_file\",\n    \"0840_GeneralUserGS_sf2_file\",\n    //0840_SBLive_sf2\n    //0840_SoundBlasterOld_sf2\n    \"0841_Aspirin_sf2_file\",\n    \"0841_Chaos_sf2_file\",\n    \"0841_FluidR3_GM_sf2_file\",\n    \"0841_GeneralUserGS_sf2_file\",\n    //0841_JCLive_sf2_file // +1oct + detune\n    //0841_SoundBlasterOld_sf2\n    \"0842_FluidR3_GM_sf2_file\"\n  ],\n  gm_lead_6_voice: [\n    // Lead 6 (voice): Synth Lead\n    \"0850_JCLive_sf2_file\",\n    \"0850_Aspirin_sf2_file\",\n    // 0850_Chaos_sf2_file // same as above\n    \"0850_FluidR3_GM_sf2_file\",\n    // 0850_GeneralUserGS_sf2_file // no voice\n    //0850_SBLive_sf2\n    //0850_SoundBlasterOld_sf2\n    \"0851_FluidR3_GM_sf2_file\",\n    \"0851_GeneralUserGS_sf2_file\",\n    \"0851_JCLive_sf2_file\"\n    //0851_SoundBlasterOld_sf\n  ],\n  gm_lead_7_fifths: [\n    // Lead 7 (fifths): Synth Lead\n    \"0860_JCLive_sf2_file\",\n    \"0860_Aspirin_sf2_file\",\n    \"0860_Chaos_sf2_file\",\n    // 0860_FluidR3_GM_sf2_file // loud and not fitting\n    \"0860_GeneralUserGS_sf2_file\",\n    //0860_SBLive_sf2\n    //0860_SoundBlasterOld_sf2\n    \"0861_Aspirin_sf2_file\"\n    // 0861_FluidR3_GM_sf2_file // lout and not fitting\n    //0861_SoundBlasterOld_sf\n  ],\n  gm_lead_8_bass_lead: [\n    // Lead 8 (bass + lead): Synth Lead\n    \"0870_JCLive_sf2_file\",\n    \"0870_Aspirin_sf2_file\",\n    \"0870_Chaos_sf2_file\",\n    \"0870_FluidR3_GM_sf2_file\",\n    \"0870_GeneralUserGS_sf2_file\"\n    //0870_SBLive_sf2\n    //0870_SoundBlasterOld_sf2\n    // 0871_GeneralUserGS_sf2_file // loud + detune\n    //0872_GeneralUserGS_sf2_file // loud\n    //0873_GeneralUserGS_sf2_file // lou\n  ],\n  gm_pad_new_age: [\n    // Pad 1 (new age): Synth Pad\n    \"0880_JCLive_sf2_file\",\n    \"0880_Aspirin_sf2_file\",\n    \"0880_Chaos_sf2_file\",\n    \"0880_FluidR3_GM_sf2_file\",\n    \"0880_GeneralUserGS_sf2_file\",\n    //0880_SBLive_sf2\n    //0880_SoundBlasterOld_sf2\n    \"0881_Aspirin_sf2_file\",\n    \"0881_FluidR3_GM_sf2_file\",\n    \"0881_GeneralUserGS_sf2_file\",\n    //0881_SoundBlasterOld_sf2\n    \"0882_Aspirin_sf2_file\",\n    // 0882_FluidR3_GM_sf2_file // missing\n    \"0882_GeneralUserGS_sf2_file\",\n    //0883_GeneralUserGS_sf2_file // missing\n    // 0884_GeneralUserGS_sf2_file // broken\n    \"0885_GeneralUserGS_sf2_file\",\n    //0886_GeneralUserGS_sf2_file // not a pad\n    \"0887_GeneralUserGS_sf2_file\"\n    //0888_GeneralUserGS_sf2_file // not a pad\n    //0889_GeneralUserGS_sf2_file // not a pa\n  ],\n  gm_pad_warm: [\n    // Pad 2 (warm): Synth Pad\n    \"0890_JCLive_sf2_file\",\n    \"0890_Aspirin_sf2_file\",\n    \"0890_Chaos_sf2_file\",\n    \"0890_FluidR3_GM_sf2_file\",\n    \"0890_GeneralUserGS_sf2_file\",\n    //0890_SBLive_sf2\n    //0890_SoundBlasterOld_sf2\n    \"0891_Aspirin_sf2_file\",\n    \"0891_FluidR3_GM_sf2_file\"\n    // 0891_GeneralUserGS_sf2_file // nois\n  ],\n  gm_pad_poly: [\n    // Pad 3 (polysynth): Synth Pad\n    //0900_Aspirin_sf2_file // same as belo\n    \"0900_JCLive_sf2_file\",\n    \"0900_Chaos_sf2_file\",\n    \"0900_FluidR3_GM_sf2_file\",\n    \"0900_GeneralUserGS_sf2_file\",\n    //0900_SBLive_sf2\n    //0900_SoundBlasterOld_sf2\n    \"0901_Aspirin_sf2_file\",\n    \"0901_FluidR3_GM_sf2_file\",\n    \"0901_GeneralUserGS_sf2_file\"\n    //0901_SoundBlasterOld_sf\n  ],\n  gm_pad_choir: [\n    // Pad 4 (choir): Synth Pad\n    \"0910_FluidR3_GM_sf2_file\",\n    \"0910_JCLive_sf2_file\",\n    \"0910_Aspirin_sf2_file\",\n    //0910_Chaos_sf2_file // +1oct\n    \"0910_GeneralUserGS_sf2_file\",\n    //0910_SBLive_sf2\n    //0910_SoundBlasterOld_sf2\n    // 0911_Aspirin_sf2_file // fluty crackles\n    \"0911_GeneralUserGS_sf2_file\",\n    \"0911_JCLive_sf2_file\"\n    //0911_SoundBlasterOld_sf\n  ],\n  gm_pad_bowed: [\n    // Pad 5 (bowed): Synth Pad\n    \"0920_JCLive_sf2_file\",\n    \"0920_Aspirin_sf2_file\",\n    //0920_Chaos_sf2_file // same as above\n    //0920_FluidR3_GM_sf2_file // detuned?\n    \"0920_GeneralUserGS_sf2_file\",\n    //0920_SBLive_sf2\n    //0920_SoundBlasterOld_sf2\n    \"0921_Aspirin_sf2_file\",\n    \"0921_GeneralUserGS_sf2_file\"\n    //0921_SoundBlasterOld_sf\n  ],\n  gm_pad_metallic: [\n    // Pad 6 (metallic): Synth Pad\n    \"0930_Aspirin_sf2_file\",\n    \"0930_Chaos_sf2_file\",\n    \"0930_FluidR3_GM_sf2_file\",\n    \"0930_GeneralUserGS_sf2_file\",\n    // 0930_JCLive_sf2_file // buggy zones: guitar / synth\n    //0930_SBLive_sf2\n    //0930_SoundBlasterOld_sf2\n    \"0931_Aspirin_sf2_file\",\n    \"0931_FluidR3_GM_sf2_file\",\n    \"0931_GeneralUserGS_sf2_file\"\n    //0931_SoundBlasterOld_sf\n  ],\n  gm_pad_halo: [\n    // Pad 7 (halo): Synth Pad\n    // 0940_Aspirin_sf2_file // same as below\n    \"0940_Chaos_sf2_file\",\n    \"0940_FluidR3_GM_sf2_file\",\n    \"0940_GeneralUserGS_sf2_file\",\n    \"0940_JCLive_sf2_file\",\n    //0940_SBLive_sf2\n    //0940_SoundBlasterOld_sf2\n    \"0941_Aspirin_sf2_file\",\n    \"0941_FluidR3_GM_sf2_file\",\n    \"0941_GeneralUserGS_sf2_file\",\n    \"0941_JCLive_sf2_file\"\n  ],\n  gm_pad_sweep: [\n    // Pad 8 (sweep): Synth Pad\n    \"0950_Aspirin_sf2_file\",\n    \"0950_Chaos_sf2_file\",\n    \"0950_FluidR3_GM_sf2_file\",\n    \"0950_GeneralUserGS_sf2_file\",\n    \"0950_JCLive_sf2_file\",\n    //0950_SBLive_sf2\n    //0950_SoundBlasterOld_sf2\n    \"0951_FluidR3_GM_sf2_file\",\n    \"0951_GeneralUserGS_sf2_file\"\n  ],\n  gm_fx_rain: [\n    // FX 1 (rain): Synth Effects\n    //0960_Aspirin_sf2_file //mixed samples?\n    \"0960_FluidR3_GM_sf2_file\",\n    \"0960_Chaos_sf2_file\",\n    \"0960_GeneralUserGS_sf2_file\",\n    // 0960_JCLive_sf2_file // mixed samples?\n    //0960_SBLive_sf2\n    //0960_SoundBlasterOld_sf2\n    \"0961_Aspirin_sf2_file\",\n    \"0961_FluidR3_GM_sf2_file\",\n    // 0961_GeneralUserGS_sf2_file // ?!?!\n    //0961_SoundBlasterOld_sf2\n    \"0962_GeneralUserGS_sf2_file\"\n  ],\n  gm_fx_soundtrack: [\n    // FX 2 (soundtrack): Synth Effects\n    \"0970_FluidR3_GM_sf2_file\",\n    \"0970_Aspirin_sf2_file\",\n    //0970_Chaos_sf2_file // wrong pitch\n    \"0970_GeneralUserGS_sf2_file\",\n    //0970_JCLive_sf2_file // wrong pitch\n    //0970_SBLive_sf2\n    //0970_SoundBlasterOld_sf2\n    \"0971_FluidR3_GM_sf2_file\",\n    \"0971_GeneralUserGS_sf2_file\"\n    //0971_SoundBlasterOld_sf\n  ],\n  gm_fx_crystal: [\n    // FX 3 (crystal): Synth Effects\n    \"0980_Aspirin_sf2_file\",\n    \"0980_JCLive_sf2_file\",\n    \"0980_Chaos_sf2_file\",\n    // 0980_FluidR3_GM_sf2_file // some notes are weird\n    \"0980_GeneralUserGS_sf2_file\",\n    \"0981_FluidR3_GM_sf2_file\",\n    //0980_SBLive_sf2\n    //0980_SoundBlasterOld_sf2\n    \"0981_Aspirin_sf2_file\",\n    \"0981_GeneralUserGS_sf2_file\",\n    //0981_SoundBlasterOld_sf2\n    \"0982_GeneralUserGS_sf2_file\",\n    \"0983_GeneralUserGS_sf2_file\",\n    \"0984_GeneralUserGS_sf2_file\"\n  ],\n  gm_fx_atmosphere: [\n    // FX 4 (atmosphere): Synth Effects\n    \"0990_JCLive_sf2_file\",\n    \"0990_Aspirin_sf2_file\",\n    \"0990_Chaos_sf2_file\",\n    \"0990_FluidR3_GM_sf2_file\",\n    \"0990_GeneralUserGS_sf2_file\",\n    //0990_SBLive_sf2\n    //0990_SoundBlasterOld_sf2\n    \"0991_Aspirin_sf2_file\",\n    \"0991_FluidR3_GM_sf2_file\",\n    \"0991_GeneralUserGS_sf2_file\",\n    \"0991_JCLive_sf2_file\",\n    //0991_SoundBlasterOld_sf2\n    \"0992_FluidR3_GM_sf2_file\",\n    \"0992_JCLive_sf2_file\",\n    \"0993_JCLive_sf2_file\",\n    \"0994_JCLive_sf2_file\"\n  ],\n  gm_fx_brightness: [\n    // FX 5 (brightness): Synth Effects\n    \"1000_JCLive_sf2_file\",\n    \"1000_Aspirin_sf2_file\",\n    \"1000_Chaos_sf2_file\",\n    \"1000_FluidR3_GM_sf2_file\",\n    \"1000_GeneralUserGS_sf2_file\",\n    //1000_SBLive_sf2\n    //1000_SoundBlasterOld_sf2\n    \"1001_Aspirin_sf2_file\",\n    \"1001_FluidR3_GM_sf2_file\",\n    \"1001_GeneralUserGS_sf2_file\",\n    \"1001_JCLive_sf2_file\",\n    //1001_SoundBlasterOld_sf2\n    \"1002_Aspirin_sf2_file\",\n    \"1002_FluidR3_GM_sf2_file\",\n    \"1002_GeneralUserGS_sf2_file\"\n  ],\n  gm_fx_goblins: [\n    // FX 6 (goblins): Synth Effects\n    \"1010_FluidR3_GM_sf2_file\",\n    \"1010_JCLive_sf2_file\",\n    \"1010_Aspirin_sf2_file\",\n    \"1010_Chaos_sf2_file\",\n    \"1010_GeneralUserGS_sf2_file\",\n    //1010_SBLive_sf2\n    //1010_SoundBlasterOld_sf2\n    \"1011_Aspirin_sf2_file\",\n    \"1011_FluidR3_GM_sf2_file\",\n    \"1011_JCLive_sf2_file\",\n    \"1012_Aspirin_sf2_file\"\n  ],\n  gm_fx_echoes: [\n    // FX 7 (echoes): Synth Effects\n    \"1020_FluidR3_GM_sf2_file\",\n    \"1020_JCLive_sf2_file\",\n    \"1020_Aspirin_sf2_file\",\n    \"1020_Chaos_sf2_file\",\n    \"1020_GeneralUserGS_sf2_file\",\n    //1020_SBLive_sf2\n    //1020_SoundBlasterOld_sf2\n    \"1021_Aspirin_sf2_file\",\n    \"1021_FluidR3_GM_sf2_file\",\n    \"1021_GeneralUserGS_sf2_file\",\n    \"1021_JCLive_sf2_file\",\n    //1021_SoundBlasterOld_sf2\n    \"1022_GeneralUserGS_sf2_file\"\n  ],\n  gm_fx_sci_fi: [\n    // FX 8 (sci_fi): Synth Effects\n    \"1030_FluidR3_GM_sf2_file\",\n    \"1030_Aspirin_sf2_file\",\n    \"1030_Chaos_sf2_file\",\n    \"1030_GeneralUserGS_sf2_file\",\n    \"1030_JCLive_sf2_file\",\n    //1030_SBLive_sf2\n    //1030_SoundBlasterOld_sf2\n    \"1031_Aspirin_sf2_file\",\n    \"1031_FluidR3_GM_sf2_file\",\n    \"1031_GeneralUserGS_sf2_file\",\n    //1031_SoundBlasterOld_sf2\n    \"1032_FluidR3_GM_sf2_file\"\n  ],\n  gm_sitar: [\n    // Sitar: Ethnic\n    \"1040_Aspirin_sf2_file\",\n    \"1040_FluidR3_GM_sf2_file\",\n    \"1040_JCLive_sf2_file\",\n    \"1040_Chaos_sf2_file\",\n    \"1040_GeneralUserGS_sf2_file\",\n    //1040_SBLive_sf2\n    //1040_SoundBlasterOld_sf2\n    \"1041_FluidR3_GM_sf2_file\",\n    \"1041_GeneralUserGS_sf2_file\"\n  ],\n  gm_banjo: [\n    // Banjo: Ethnic\n    \"1050_FluidR3_GM_sf2_file\",\n    \"1050_JCLive_sf2_file\",\n    \"1050_Aspirin_sf2_file\",\n    \"1050_Chaos_sf2_file\",\n    \"1050_GeneralUserGS_sf2_file\",\n    //1050_SBLive_sf2\n    //1050_SoundBlasterOld_sf2\n    \"1051_GeneralUserGS_sf2_file\"\n  ],\n  gm_shamisen: [\n    // Shamisen: Ethnic\n    \"1060_JCLive_sf2_file\",\n    \"1060_FluidR3_GM_sf2_file\",\n    \"1060_Aspirin_sf2_file\",\n    \"1060_Chaos_sf2_file\",\n    \"1060_GeneralUserGS_sf2_file\",\n    //1060_SBLive_sf2\n    //1060_SoundBlasterOld_sf2\n    \"1061_FluidR3_GM_sf2_file\",\n    \"1061_GeneralUserGS_sf2_file\"\n    //1061_SoundBlasterOld_sf\n  ],\n  gm_koto: [\n    // Koto: Ethnic\n    \"1070_FluidR3_GM_sf2_file\",\n    \"1070_JCLive_sf2_file\",\n    \"1070_Aspirin_sf2_file\",\n    \"1070_Chaos_sf2_file\",\n    \"1070_GeneralUserGS_sf2_file\",\n    //1070_SBLive_sf2\n    //1070_SoundBlasterOld_sf2\n    \"1071_FluidR3_GM_sf2_file\",\n    \"1071_GeneralUserGS_sf2_file\",\n    \"1072_GeneralUserGS_sf2_file\",\n    \"1073_GeneralUserGS_sf2_file\"\n  ],\n  gm_kalimba: [\n    // Kalimba: Ethnic\n    \"1080_JCLive_sf2_file\",\n    \"1080_FluidR3_GM_sf2_file\",\n    \"1080_Aspirin_sf2_file\",\n    \"1080_Chaos_sf2_file\",\n    \"1080_GeneralUserGS_sf2_file\"\n    //1080_SBLive_sf2\n    //1080_SoundBlasterOld_sf2\n    //1081_SoundBlasterOld_sf\n  ],\n  gm_bagpipe: [\n    // Bagpipe: Ethnic\n    \"1090_Aspirin_sf2_file\"\n    // '1090_Chaos_sf2_file', // broken pitches\n    // '1090_GeneralUserGS_sf2_file', // broken pitches\n    // '1090_FluidR3_GM_sf2_file', // broken pitches ?\n    // '1090_JCLive_sf2_file', // broken pitches ?\n    //1090_SBLive_sf2\n    //1090_SoundBlasterOld_sf2\n    //1091_SoundBlasterOld_sf\n  ],\n  gm_fiddle: [\n    // Fiddle: Ethnic\n    \"1100_JCLive_sf2_file\",\n    \"1100_Aspirin_sf2_file\",\n    \"1100_Chaos_sf2_file\",\n    \"1100_FluidR3_GM_sf2_file\",\n    \"1100_GeneralUserGS_sf2_file\",\n    //1100_SBLive_sf2\n    //1100_SoundBlasterOld_sf2\n    \"1101_Aspirin_sf2_file\",\n    \"1101_FluidR3_GM_sf2_file\",\n    \"1101_GeneralUserGS_sf2_file\",\n    \"1102_GeneralUserGS_sf2_file\"\n  ],\n  gm_shanai: [\n    // Shanai: Ethnic\n    \"1110_Aspirin_sf2_file\",\n    \"1110_FluidR3_GM_sf2_file\",\n    \"1110_JCLive_sf2_file\",\n    \"1110_Chaos_sf2_file\",\n    \"1110_GeneralUserGS_sf2_file\"\n    //1110_SBLive_sf2\n    //1110_SoundBlasterOld_sf\n  ],\n  gm_tinkle_bell: [\n    // Tinkle Bell: Percussive\n    \"1120_Aspirin_sf2_file\"\n    // '1120_Chaos_sf2_file', // same as above\n    // '1120_GeneralUserGS_sf2_file', // sounds exactly as Aspirin\n    // '1120_FluidR3_GM_sf2_file', // +1oct\n    // '1120_JCLive_sf2_file', // +1oct\n    //1120_SBLive_sf2\n    //1120_SoundBlasterOld_sf2\n    //1121_SoundBlasterOld_sf\n  ],\n  gm_agogo: [\n    // Agogo: Percussive\n    \"1130_JCLive_sf2_file\",\n    \"1130_Aspirin_sf2_file\",\n    \"1130_Chaos_sf2_file\",\n    \"1130_FluidR3_GM_sf2_file\",\n    \"1130_GeneralUserGS_sf2_file\",\n    //1130_SBLive_sf2\n    //1130_SoundBlasterOld_sf2\n    \"1131_FluidR3_GM_sf2_file\"\n    //1131_SoundBlasterOld_sf\n  ],\n  gm_steel_drums: [\n    // Steel Drums: Percussive\n    \"1140_FluidR3_GM_sf2_file\",\n    \"1140_Aspirin_sf2_file\",\n    \"1140_JCLive_sf2_file\",\n    \"1140_Chaos_sf2_file\",\n    \"1140_GeneralUserGS_sf2_file\",\n    //1140_SBLive_sf2\n    //1140_SoundBlasterOld_sf2\n    \"1141_FluidR3_GM_sf2_file\"\n  ],\n  gm_woodblock: [\n    // Woodblock: Percussive\n    \"1150_JCLive_sf2_file\",\n    \"1150_Aspirin_sf2_file\",\n    \"1150_Chaos_sf2_file\",\n    \"1150_FluidR3_GM_sf2_file\",\n    \"1150_GeneralUserGS_sf2_file\",\n    //1150_SBLive_sf2\n    //1150_SoundBlasterOld_sf2\n    \"1151_FluidR3_GM_sf2_file\",\n    \"1151_GeneralUserGS_sf2_file\",\n    \"1152_FluidR3_GM_sf2_file\",\n    \"1152_GeneralUserGS_sf2_file\"\n  ],\n  gm_taiko_drum: [\n    // Taiko Drum: Percussive\n    \"1160_JCLive_sf2_file\",\n    \"1160_FluidR3_GM_sf2_file\",\n    \"1160_Aspirin_sf2_file\",\n    \"1160_Chaos_sf2_file\",\n    \"1160_GeneralUserGS_sf2_file\",\n    //1160_SBLive_sf2\n    //1160_SoundBlasterOld_sf2\n    \"1161_FluidR3_GM_sf2_file\",\n    \"1161_GeneralUserGS_sf2_file\",\n    //1161_SoundBlasterOld_sf2\n    \"1162_FluidR3_GM_sf2_file\",\n    \"1162_GeneralUserGS_sf2_file\",\n    \"1163_FluidR3_GM_sf2_file\"\n  ],\n  gm_melodic_tom: [\n    // Melodic Tom: Percussive\n    \"1170_JCLive_sf2_file\",\n    \"1170_Aspirin_sf2_file\",\n    \"1170_Chaos_sf2_file\",\n    \"1170_FluidR3_GM_sf2_file\",\n    \"1170_GeneralUserGS_sf2_file\",\n    //1170_SBLive_sf2\n    //1170_SoundBlasterOld_sf2\n    \"1171_FluidR3_GM_sf2_file\",\n    \"1171_GeneralUserGS_sf2_file\",\n    \"1172_FluidR3_GM_sf2_file\",\n    \"1173_FluidR3_GM_sf2_file\"\n  ],\n  gm_synth_drum: [\n    // Synth Drum: Percussive\n    \"1180_JCLive_sf2_file\",\n    \"1180_Aspirin_sf2_file\",\n    \"1180_Chaos_sf2_file\",\n    \"1180_FluidR3_GM_sf2_file\",\n    \"1180_GeneralUserGS_sf2_file\",\n    //1180_SBLive_sf2\n    //1180_SoundBlasterOld_sf2\n    \"1181_FluidR3_GM_sf2_file\",\n    \"1181_GeneralUserGS_sf2_file\"\n    //1181_SoundBlasterOld_sf\n  ],\n  gm_reverse_cymbal: [\n    // Reverse Cymbal: Percussive\n    \"1190_JCLive_sf2_file\",\n    \"1190_Aspirin_sf2_file\",\n    \"1190_Chaos_sf2_file\",\n    \"1190_FluidR3_GM_sf2_file\",\n    \"1190_GeneralUserGS_sf2_file\",\n    //1190_SBLive_sf2\n    //1190_SoundBlasterOld_sf2\n    \"1191_GeneralUserGS_sf2_file\",\n    \"1192_GeneralUserGS_sf2_file\",\n    \"1193_GeneralUserGS_sf2_file\",\n    \"1194_GeneralUserGS_sf2_file\"\n  ],\n  gm_guitar_fret_noise: [\n    // Guitar Fret Noise: Sound effects\n    \"1200_JCLive_sf2_file\",\n    \"1200_Aspirin_sf2_file\",\n    \"1200_Chaos_sf2_file\",\n    \"1200_FluidR3_GM_sf2_file\",\n    \"1200_GeneralUserGS_sf2_file\",\n    //1200_SBLive_sf2\n    //1200_SoundBlasterOld_sf2\n    \"1201_Aspirin_sf2_file\",\n    \"1201_GeneralUserGS_sf2_file\",\n    \"1202_GeneralUserGS_sf2_file\"\n  ],\n  gm_breath_noise: [\n    // Breath Noise: Sound effects\n    \"1210_FluidR3_GM_sf2_file\",\n    \"1210_JCLive_sf2_file\",\n    \"1210_Aspirin_sf2_file\",\n    \"1210_Chaos_sf2_file\",\n    \"1210_GeneralUserGS_sf2_file\",\n    //1210_SBLive_sf2\n    //1210_SoundBlasterOld_sf2\n    \"1211_Aspirin_sf2_file\",\n    \"1211_GeneralUserGS_sf2_file\",\n    \"1212_GeneralUserGS_sf2_file\"\n  ],\n  gm_seashore: [\n    // Seashore: Sound effects\n    \"1220_JCLive_sf2_file\",\n    \"1220_Aspirin_sf2_file\",\n    \"1220_Chaos_sf2_file\",\n    \"1220_FluidR3_GM_sf2_file\",\n    \"1220_GeneralUserGS_sf2_file\",\n    //1220_SBLive_sf2\n    //1220_SoundBlasterOld_sf2\n    \"1221_Aspirin_sf2_file\",\n    \"1221_GeneralUserGS_sf2_file\",\n    \"1221_JCLive_sf2_file\",\n    \"1222_Aspirin_sf2_file\",\n    \"1222_GeneralUserGS_sf2_file\",\n    \"1223_Aspirin_sf2_file\",\n    \"1223_GeneralUserGS_sf2_file\",\n    \"1224_Aspirin_sf2_file\",\n    \"1224_GeneralUserGS_sf2_file\",\n    \"1225_GeneralUserGS_sf2_file\",\n    \"1226_GeneralUserGS_sf2_file\"\n  ],\n  gm_bird_tweet: [\n    // Bird Tweet: Sound effects\n    \"1230_FluidR3_GM_sf2_file\",\n    \"1230_JCLive_sf2_file\",\n    \"1230_Aspirin_sf2_file\",\n    // '1230_Chaos_sf2_file',\n    \"1230_GeneralUserGS_sf2_file\",\n    //1230_SBLive_sf2\n    //1230_SoundBlasterOld_sf2\n    //'1231_Aspirin_sf2_file',\n    \"1231_GeneralUserGS_sf2_file\",\n    // dog\n    // '1232_Aspirin_sf2_file',// ?\n    \"1232_GeneralUserGS_sf2_file\",\n    // horse\n    // '1233_GeneralUserGS_sf2_file', //\n    \"1234_GeneralUserGS_sf2_file\"\n    // scratch\n  ],\n  gm_telephone: [\n    // Telephone Ring: Sound effects\n    \"1240_JCLive_sf2_file\",\n    \"1240_Aspirin_sf2_file\",\n    \"1240_Chaos_sf2_file\",\n    \"1240_FluidR3_GM_sf2_file\",\n    // '1240_GeneralUserGS_sf2_file',\n    //1240_SBLive_sf2\n    //1240_SoundBlasterOld_sf2\n    \"1241_Aspirin_sf2_file\",\n    // door?\n    //'1241_GeneralUserGS_sf2_file',\n    // '1242_Aspirin_sf2_file', // ?\n    \"1242_GeneralUserGS_sf2_file\",\n    // door\n    \"1243_Aspirin_sf2_file\",\n    // scratch\n    \"1243_GeneralUserGS_sf2_file\",\n    // door close?\n    \"1244_Aspirin_sf2_file\",\n    // bells\n    \"1244_GeneralUserGS_sf2_file\"\n    // bells\n  ],\n  gm_helicopter: [\n    // Helicopter: Sound effects\n    \"1250_JCLive_sf2_file\",\n    \"1250_Aspirin_sf2_file\",\n    // '1250_Chaos_sf2_file', // same as above\n    \"1250_FluidR3_GM_sf2_file\",\n    \"1250_GeneralUserGS_sf2_file\",\n    //1250_SBLive_sf2\n    //1250_SoundBlasterOld_sf2\n    // '1251_Aspirin_sf2_file', // slooow\n    \"1251_FluidR3_GM_sf2_file\",\n    // guitar\n    \"1251_GeneralUserGS_sf2_file\",\n    // engine start with loop at end..\n    \"1252_Aspirin_sf2_file\",\n    // alien\n    \"1252_FluidR3_GM_sf2_file\",\n    // seashore\n    \"1252_GeneralUserGS_sf2_file\",\n    // carbreak\n    // '1253_Aspirin_sf2_file', // plane\n    \"1253_GeneralUserGS_sf2_file\",\n    // racing car\n    // '1254_Aspirin_sf2_file',\n    \"1254_GeneralUserGS_sf2_file\",\n    // breaking\n    // '1255_Aspirin_sf2_file',\n    \"1255_GeneralUserGS_sf2_file\",\n    // siren\n    // '1256_Aspirin_sf2_file',\n    \"1256_GeneralUserGS_sf2_file\",\n    // hmm\n    // '1257_Aspirin_sf2_file',\n    \"1257_GeneralUserGS_sf2_file\",\n    // noise\n    // '1258_Aspirin_sf2_file',\n    \"1258_GeneralUserGS_sf2_file\",\n    // metallic noise\n    \"1259_GeneralUserGS_sf2_file\"\n    // watery nosie\n  ],\n  gm_applause: [\n    // Applause: Sound effects\n    \"1260_JCLive_sf2_file\",\n    \"1260_Aspirin_sf2_file\",\n    \"1260_Chaos_sf2_file\",\n    \"1260_FluidR3_GM_sf2_file\",\n    \"1260_GeneralUserGS_sf2_file\",\n    //1260_SBLive_sf2\n    //1260_SoundBlasterOld_sf2\n    \"1261_Aspirin_sf2_file\",\n    \"1261_GeneralUserGS_sf2_file\",\n    \"1262_Aspirin_sf2_file\",\n    \"1262_GeneralUserGS_sf2_file\",\n    \"1263_Aspirin_sf2_file\",\n    \"1263_GeneralUserGS_sf2_file\",\n    \"1264_Aspirin_sf2_file\",\n    \"1264_GeneralUserGS_sf2_file\",\n    \"1265_Aspirin_sf2_file\",\n    \"1265_GeneralUserGS_sf2_file\"\n  ],\n  gm_gunshot: [\n    // Gunshot: Sound effects\n    \"1270_JCLive_sf2_file\",\n    \"1270_Aspirin_sf2_file\",\n    \"1270_Chaos_sf2_file\",\n    \"1270_FluidR3_GM_sf2_file\",\n    \"1270_GeneralUserGS_sf2_file\",\n    //1270_SBLive_sf2\n    //1270_SoundBlasterOld_sf2\n    \"1271_Aspirin_sf2_file\",\n    \"1271_GeneralUserGS_sf2_file\",\n    \"1272_Aspirin_sf2_file\",\n    \"1272_GeneralUserGS_sf2_file\",\n    \"1273_GeneralUserGS_sf2_file\",\n    \"1274_GeneralUserGS_sf2_file\",\n    \"\"\n  ]\n};\nlet defaultSoundfontUrl = \"https://felixroos.github.io/webaudiofontdata/sound\", soundfontUrl = defaultSoundfontUrl;\nfunction setSoundfontUrl(e) {\n  soundfontUrl = e;\n}\nlet loadCache = {};\nasync function loadFont(name) {\n  if (loadCache[name])\n    return loadCache[name];\n  const load = async () => {\n    const url = `${soundfontUrl}/${name}.js`, preset = await fetch(url).then((e) => e.text());\n    let [_, data] = preset.split(\"={\");\n    return eval(\"{\" + data);\n  };\n  return loadCache[name] = load(), loadCache[name];\n}\nasync function getFontBufferSource(e, l, s) {\n  let { note: f = \"c3\", freq: a } = l, r;\n  if (a)\n    r = freqToMidi(a);\n  else if (typeof f == \"string\")\n    r = noteToMidi(f);\n  else if (typeof f == \"number\")\n    r = f;\n  else\n    throw new Error(`unexpected \"note\" type \"${typeof f}\"`);\n  const { buffer: n, zone: i } = await getFontPitch(e, r, s), G = s.createBufferSource();\n  G.buffer = n;\n  const u = i.originalPitch - 100 * i.coarseTune - i.fineTune, o = 1 * Math.pow(2, (100 * r - u) / 1200);\n  return G.playbackRate.value = o, i.loopStart > 1 && i.loopStart < i.loopEnd && (G.loop = !0, G.loopStart = i.loopStart / i.sampleRate, G.loopEnd = i.loopEnd / i.sampleRate), G;\n}\nlet bufferCache = {};\nasync function getFontPitch(e, l, s) {\n  const f = `${e}:::${l}`;\n  if (bufferCache[f])\n    return bufferCache[f];\n  const a = async () => {\n    const r = await loadFont(e);\n    if (!r)\n      throw new Error(`Could not load soundfont ${e}`);\n    const n = findZone(r, l);\n    if (!n)\n      throw new Error(\"no soundfont zone found for preset \", e, \"pitch\", l);\n    const i = await getBuffer(n, s);\n    if (!i)\n      throw new Error(`no soundfont buffer found for preset ${e}, pitch: ${l}`);\n    return { buffer: i, zone: n };\n  };\n  return bufferCache[f] = a(), bufferCache[f];\n}\nfunction findZone(e, l) {\n  return e.find((s) => s.keyRangeLow <= l && s.keyRangeHigh + 1 >= l);\n}\nasync function getBuffer(e, l) {\n  if (e.sample) {\n    console.warn(\"zone.sample untested!\");\n    const f = atob(e.sample);\n    e.buffer = l.createBuffer(1, f.length / 2, e.sampleRate);\n    const a = e.buffer.getChannelData(0);\n    let r, n, i;\n    for (var s = 0; s < f.length / 2; s++)\n      r = f.charCodeAt(s * 2), n = f.charCodeAt(s * 2 + 1), r < 0 && (r = 256 + r), n < 0 && (n = 256 + n), i = n * 256 + r, i >= 65536 / 2 && (i = i - 65536), a[s] = i / 65536;\n  } else if (e.file) {\n    const f = e.file.length, a = new ArrayBuffer(f), r = new Uint8Array(a), n = atob(e.file);\n    let i;\n    for (let G = 0; G < n.length; G++)\n      i = n.charCodeAt(G), r[G] = i;\n    return new Promise((G) => l.decodeAudioData(a, G));\n  }\n}\nfunction registerSoundfonts() {\n  Object.entries(gm).forEach(([e, l]) => {\n    registerSound(\n      e,\n      async (s, f, a) => {\n        const [r, n, i, G] = getADSRValues([\n          f.attack,\n          f.decay,\n          f.sustain,\n          f.release\n        ]), { duration: u } = f, o = getSoundIndex(f.n, l.length), C = l[o], U = getAudioContext(), t = await getFontBufferSource(C, f, U);\n        t.start(s);\n        const p = U.createGain(), d = t.connect(p), S = s + u;\n        getParamADSR(d.gain, r, n, i, G, 0, 0.3, s, S, \"linear\");\n        let m = S + G + 0.01, F = getVibratoOscillator(t.detune, f, s);\n        getPitchEnvelope(t.detune, f, s, S), t.stop(m);\n        const R = (M) => {\n        };\n        return t.onended = () => {\n          t.disconnect(), F?.stop(), d.disconnect(), a();\n        }, { node: d, stop: R };\n      },\n      { type: \"soundfont\", prebake: !0, fonts: l }\n    );\n  });\n}\nconst instruments = [\n  // Acoustic Grand Piano: Piano\n  \"0000_JCLive_sf2_file\",\n  \"0000_Aspirin_sf2_file\",\n  \"0000_Chaos_sf2_file\",\n  \"0000_FluidR3_GM_sf2_file\",\n  \"0000_GeneralUserGS_sf2_file\",\n  //'0000_SBLive_sf2',\n  //'0000_SoundBlasterOld_sf2',\n  \"0001_FluidR3_GM_sf2_file\",\n  \"0001_GeneralUserGS_sf2_file\",\n  // Bright Acoustic Piano: Piano\n  \"0010_Aspirin_sf2_file\",\n  \"0010_Chaos_sf2_file\",\n  \"0010_FluidR3_GM_sf2_file\",\n  \"0010_GeneralUserGS_sf2_file\",\n  \"0010_JCLive_sf2_file\",\n  //'0010_SBLive_sf2',\n  //'0010_SoundBlasterOld_sf2',\n  \"0011_Aspirin_sf2_file\",\n  \"0011_FluidR3_GM_sf2_file\",\n  \"0011_GeneralUserGS_sf2_file\",\n  \"0012_GeneralUserGS_sf2_file\",\n  // string??\n  // Electric Grand Piano: Piano\n  \"0020_Aspirin_sf2_file\",\n  \"0020_Chaos_sf2_file\",\n  \"0020_FluidR3_GM_sf2_file\",\n  \"0020_GeneralUserGS_sf2_file\",\n  \"0020_JCLive_sf2_file\",\n  //'0020_SBLive_sf2',\n  //'0020_SoundBlasterOld_sf2',\n  \"0021_Aspirin_sf2_file\",\n  \"0021_GeneralUserGS_sf2_file\",\n  // ?\n  \"0022_Aspirin_sf2_file\",\n  // dx7 epiano like\n  // Honky-tonk Piano: Piano\n  \"0030_Aspirin_sf2_file\",\n  \"0030_Chaos_sf2_file\",\n  \"0030_FluidR3_GM_sf2_file\",\n  \"0030_GeneralUserGS_sf2_file\",\n  \"0030_JCLive_sf2_file\",\n  //'0030_SBLive_sf2',\n  //'0030_SoundBlasterOld_sf2',\n  \"0031_Aspirin_sf2_file\",\n  \"0031_FluidR3_GM_sf2_file\",\n  \"0031_GeneralUserGS_sf2_file\",\n  //'0031_SoundBlasterOld_sf2', // pianos until here\n  // Electric Piano 1: Piano\n  \"0040_Aspirin_sf2_file\",\n  \"0040_Chaos_sf2_file\",\n  \"0040_FluidR3_GM_sf2_file\",\n  // rhodes\n  \"0040_GeneralUserGS_sf2_file\",\n  // staccato rhodes\n  \"0040_JCLive_sf2_file\",\n  // warbly rhodes\n  //'0040_SBLive_sf2', // ?\n  //'0040_SoundBlasterOld_sf2', // ?\n  \"0041_FluidR3_GM_sf2_file\",\n  // rhodes\n  \"0041_GeneralUserGS_sf2_file\",\n  // staccato rhodes\n  //'0041_SoundBlasterOld_sf2', // ?\n  \"0042_GeneralUserGS_sf2_file\",\n  // staccato wurly\n  \"0043_GeneralUserGS_sf2_file\",\n  // high bell\n  \"0044_GeneralUserGS_sf2_file\",\n  // reed organ\n  //'0045_GeneralUserGS_sf2_file', // ?\n  \"0046_GeneralUserGS_sf2_file\",\n  // reed organ\n  // Electric Piano 2: Piano\n  \"0050_Aspirin_sf2_file\",\n  // glass piano\n  \"0050_Chaos_sf2_file\",\n  // short glass piano\n  \"0050_FluidR3_GM_sf2_file\",\n  // long glass piano !\n  // ?\n  \"0050_GeneralUserGS_sf2_file\",\n  // short glass piano\n  // cont\n  \"0050_JCLive_sf2_file\",\n  // glass piano\n  //'0050_SBLive_sf2', // ?\n  //'0050_SoundBlasterOld_sf2', // ?\n  \"0051_FluidR3_GM_sf2_file\",\n  // long lass organ\n  \"0051_GeneralUserGS_sf2_file\",\n  //'0052_GeneralUserGS_sf2_file', // ?\n  \"0053_GeneralUserGS_sf2_file\",\n  // normal piano...\n  \"0054_GeneralUserGS_sf2_file\",\n  // piano\n  // Harpsichord: Piano\n  \"0060_Aspirin_sf2_file\",\n  // harpsichord\n  \"0060_Chaos_sf2_file\",\n  \"0060_FluidR3_GM_sf2_file\",\n  // harpsichord !\n  \"0060_GeneralUserGS_sf2_file\",\n  \"0060_JCLive_sf2_file\",\n  //'0060_SBLive_sf2',\n  //'0060_SoundBlasterOld_sf2',\n  \"0061_Aspirin_sf2_file\",\n  \"0061_GeneralUserGS_sf2_file\",\n  //'0061_SoundBlasterOld_sf2',\n  \"0062_GeneralUserGS_sf2_file\",\n  // Clavinet: Piano\n  \"0070_Aspirin_sf2_file\",\n  \"0070_Chaos_sf2_file\",\n  \"0070_FluidR3_GM_sf2_file\",\n  // '0070_GeneralUserGS_sf2_file', // half broken\n  \"0070_JCLive_sf2_file\",\n  //'0070_SBLive_sf2',\n  //'0070_SoundBlasterOld_sf2',\n  // '0071_GeneralUserGS_sf2_file', // half broken\n  // Celesta: Chromatic Percussion\n  \"0080_Aspirin_sf2_file\",\n  \"0080_Chaos_sf2_file\",\n  \"0080_FluidR3_GM_sf2_file\",\n  \"0080_GeneralUserGS_sf2_file\",\n  \"0080_JCLive_sf2_file\",\n  //'0080_SBLive_sf2',\n  //'0080_SoundBlasterOld_sf2',\n  \"0081_FluidR3_GM_sf2_file\",\n  // '0081_GeneralUserGS_sf2_file', // weird detuned\n  //'0081_SoundBlasterOld_sf2',\n  // Glockenspiel: Chromatic Percussion\n  \"0090_Aspirin_sf2_file\",\n  \"0090_Chaos_sf2_file\",\n  \"0090_FluidR3_GM_sf2_file\",\n  \"0090_GeneralUserGS_sf2_file\",\n  \"0090_JCLive_sf2_file\",\n  //'0090_SBLive_sf2',\n  //'0090_SoundBlasterOld_sf2',\n  //'0091_SoundBlasterOld_sf2',\n  // Music Box: Chromatic Percussion\n  \"0100_Aspirin_sf2_file\",\n  \"0100_Chaos_sf2_file\",\n  \"0100_FluidR3_GM_sf2_file\",\n  \"0100_GeneralUserGS_sf2_file\",\n  \"0100_JCLive_sf2_file\",\n  //'0100_SBLive_sf2',\n  //'0100_SoundBlasterOld_sf2',\n  // '0101_GeneralUserGS_sf2_file', // weird detuned\n  //'0101_SoundBlasterOld_sf2',\n  // Vibraphone: Chromatic Percussion\n  \"0110_Aspirin_sf2_file\",\n  \"0110_Chaos_sf2_file\",\n  \"0110_FluidR3_GM_sf2_file\",\n  \"0110_GeneralUserGS_sf2_file\",\n  \"0110_JCLive_sf2_file\",\n  //'0110_SBLive_sf2',\n  //'0110_SoundBlasterOld_sf2',\n  \"0111_FluidR3_GM_sf2_file\",\n  // Marimba: Chromatic Percussion\n  \"0120_Aspirin_sf2_file\",\n  \"0120_Chaos_sf2_file\",\n  \"0120_FluidR3_GM_sf2_file\",\n  \"0120_GeneralUserGS_sf2_file\",\n  \"0120_JCLive_sf2_file\",\n  //'0120_SBLive_sf2',\n  //'0120_SoundBlasterOld_sf2',\n  \"0121_FluidR3_GM_sf2_file\",\n  \"0121_GeneralUserGS_sf2_file\",\n  // not really a marimba\n  // Xylophone: Chromatic Percussion\n  \"0130_Aspirin_sf2_file\",\n  \"0130_Chaos_sf2_file\",\n  \"0130_FluidR3_GM_sf2_file\",\n  \"0130_GeneralUserGS_sf2_file\",\n  \"0130_JCLive_sf2_file\",\n  //'0130_SBLive_sf2',\n  //'0130_SoundBlasterOld_sf2',\n  \"0131_FluidR3_GM_sf2_file\",\n  // Tubular Bells: Chromatic Percussion\n  \"0140_Aspirin_sf2_file\",\n  // '0140_Chaos_sf2_file', // same as aspirin?\n  \"0140_FluidR3_GM_sf2_file\",\n  \"0140_GeneralUserGS_sf2_file\",\n  \"0140_JCLive_sf2_file\",\n  //'0140_SBLive_sf2',\n  //'0140_SoundBlasterOld_sf2',\n  \"0141_FluidR3_GM_sf2_file\",\n  //'0141_GeneralUserGS_sf2_file',\n  \"0142_GeneralUserGS_sf2_file\",\n  // epiano..\n  // '0143_GeneralUserGS_sf2_file', // buggy\n  // Dulcimer: Chromatic Percussion\n  \"0150_Aspirin_sf2_file\",\n  \"0150_Chaos_sf2_file\",\n  // long load?\n  \"0150_FluidR3_GM_sf2_file\",\n  \"0150_GeneralUserGS_sf2_file\",\n  // '0150_JCLive_sf2_file', // detuned???\n  //'0150_SBLive_sf2',\n  //'0150_SoundBlasterOld_sf2',\n  \"0151_FluidR3_GM_sf2_file\",\n  // Drawbar Organ: Organ\n  \"0160_Aspirin_sf2_file\",\n  \"0160_Chaos_sf2_file\",\n  \"0160_FluidR3_GM_sf2_file\",\n  \"0160_GeneralUserGS_sf2_file\",\n  \"0160_JCLive_sf2_file\",\n  //'0160_SBLive_sf2',\n  //'0160_SoundBlasterOld_sf2',\n  \"0161_Aspirin_sf2_file\",\n  \"0161_FluidR3_GM_sf2_file\",\n  //'0161_SoundBlasterOld_sf2',\n  // Percussive Organ: Organ\n  \"0170_Aspirin_sf2_file\",\n  \"0170_Chaos_sf2_file\",\n  \"0170_FluidR3_GM_sf2_file\",\n  // '0170_GeneralUserGS_sf2_file', // repitched\n  \"0170_JCLive_sf2_file\",\n  //'0170_SBLive_sf2',\n  //'0170_SoundBlasterOld_sf2',\n  \"0171_FluidR3_GM_sf2_file\",\n  // '0171_GeneralUserGS_sf2_file',  // repitched\n  \"0172_FluidR3_GM_sf2_file\",\n  // Rock Organ: Organ\n  \"0180_Aspirin_sf2_file\",\n  \"0180_Chaos_sf2_file\",\n  \"0180_FluidR3_GM_sf2_file\",\n  \"0180_GeneralUserGS_sf2_file\",\n  \"0180_JCLive_sf2_file\",\n  //'0180_SBLive_sf2',\n  //'0180_SoundBlasterOld_sf2',\n  //'0181_Aspirin_sf2_file', // flute\n  //'0181_GeneralUserGS_sf2_file', // marimbalike\n  //'0181_SoundBlasterOld_sf2',\n  // Church Organ: Organ\n  \"0190_Aspirin_sf2_file\",\n  \"0190_Chaos_sf2_file\",\n  \"0190_FluidR3_GM_sf2_file\",\n  \"0190_GeneralUserGS_sf2_file\",\n  \"0190_JCLive_sf2_file\",\n  //'0190_SBLive_sf2',\n  //'0190_SoundBlasterOld_sf2',\n  //'0191_Aspirin_sf2_file', // string??\n  //'0191_GeneralUserGS_sf2_file', // weird organ\n  //'0191_SoundBlasterOld_sf2',\n  // Reed Organ: Organ\n  \"0200_Aspirin_sf2_file\",\n  \"0200_Chaos_sf2_file\",\n  \"0200_FluidR3_GM_sf2_file\",\n  \"0200_GeneralUserGS_sf2_file\",\n  \"0200_JCLive_sf2_file\",\n  // stringy\n  //'0200_SBLive_sf2',\n  //'0200_SoundBlasterOld_sf2',\n  \"0201_Aspirin_sf2_file\",\n  // stringy\n  \"0201_FluidR3_GM_sf2_file\",\n  \"0201_GeneralUserGS_sf2_file\",\n  //'0201_SoundBlasterOld_sf2',\n  //'0210_Aspirin_sf2_file', // buggy\n  //'0210_Chaos_sf2_file', // buggy\n  // Accordion: Organ\n  \"0210_FluidR3_GM_sf2_file\",\n  \"0210_GeneralUserGS_sf2_file\",\n  \"0210_JCLive_sf2_file\",\n  //'0210_SBLive_sf2',\n  //'0210_SoundBlasterOld_sf2',\n  \"0211_Aspirin_sf2_file\",\n  // stringy\n  \"0211_FluidR3_GM_sf2_file\",\n  \"0211_GeneralUserGS_sf2_file\",\n  //'0211_SoundBlasterOld_sf2',\n  \"0212_GeneralUserGS_sf2_file\",\n  // Harmonica: Organ\n  \"0220_Aspirin_sf2_file\",\n  \"0220_Chaos_sf2_file\",\n  \"0220_FluidR3_GM_sf2_file\",\n  \"0220_GeneralUserGS_sf2_file\",\n  \"0220_JCLive_sf2_file\",\n  //'0220_SBLive_sf2',\n  //'0220_SoundBlasterOld_sf2',\n  \"0221_FluidR3_GM_sf2_file\",\n  // Tango Accordion: Organ\n  \"0230_Aspirin_sf2_file\",\n  \"0230_Chaos_sf2_file\",\n  \"0230_FluidR3_GM_sf2_file\",\n  \"0230_GeneralUserGS_sf2_file\",\n  \"0230_JCLive_sf2_file\",\n  //'0230_SBLive_sf2',\n  //'0230_SoundBlasterOld_sf2',\n  \"0231_FluidR3_GM_sf2_file\",\n  \"0231_GeneralUserGS_sf2_file\",\n  // warbly\n  \"0231_JCLive_sf2_file\",\n  //'0231_SoundBlasterOld_sf2',\n  \"0232_FluidR3_GM_sf2_file\",\n  \"0233_FluidR3_GM_sf2_file\",\n  // Acoustic Guitar (nylon): Guitar\n  \"0240_Aspirin_sf2_file\",\n  \"0240_Chaos_sf2_file\",\n  \"0240_FluidR3_GM_sf2_file\",\n  \"0240_GeneralUserGS_sf2_file\",\n  \"0240_JCLive_sf2_file\",\n  \"0240_LK_Godin_Nylon_SF2_file\",\n  //'0240_SBLive_sf2',\n  //'0240_SoundBlasterOld_sf2',\n  // '0241_GeneralUserGS_sf2_file', // organ like\n  \"0241_JCLive_sf2_file\",\n  \"0242_JCLive_sf2_file\",\n  \"0243_JCLive_sf2_file\",\n  // Acoustic Guitar (steel): Guitar\n  \"0253_Acoustic_Guitar_sf2_file\",\n  \"0250_Aspirin_sf2_file\",\n  \"0250_Chaos_sf2_file\",\n  \"0250_FluidR3_GM_sf2_file\",\n  \"0250_GeneralUserGS_sf2_file\",\n  // '0250_JCLive_sf2_file', // detuned\n  \"0250_LK_AcousticSteel_SF2_file\",\n  //'0250_SBLive_sf2',\n  //'0250_SoundBlasterOld_sf2',\n  //'0251_Acoustic_Guitar_sf2_file', // detuned?\n  // '0251_GeneralUserGS_sf2_file', // broken: missing pitches\n  // '0252_Acoustic_Guitar_sf2_file', // detuned..\n  // '0252_GeneralUserGS_sf2_file', // broken: missing pitches\n  \"0253_Acoustic_Guitar_sf2_file\",\n  \"0253_GeneralUserGS_sf2_file\",\n  \"0254_Acoustic_Guitar_sf2_file\",\n  // bends.. detuned\n  \"0254_GeneralUserGS_sf2_file\",\n  //'0255_GeneralUserGS_sf2_file', // no guitar..\n  // Electric Guitar (jazz): Guitar\n  \"0260_Aspirin_sf2_file\",\n  // sounds like an epiano\n  \"0260_Chaos_sf2_file\",\n  // weird but cool detune\n  \"0260_FluidR3_GM_sf2_file\",\n  \"0260_GeneralUserGS_sf2_file\",\n  \"0260_JCLive_sf2_file\",\n  //'0260_SBLive_sf2',\n  //'0260_SoundBlasterOld_sf2',\n  \"0260_Stratocaster_sf2_file\",\n  // -1 octave\n  \"0261_GeneralUserGS_sf2_file\",\n  //'0261_SoundBlasterOld_sf2',\n  \"0261_Stratocaster_sf2_file\",\n  // -1 octave\n  \"0262_Stratocaster_sf2_file\",\n  // -1 octave\n  // Electric Guitar (clean): Guitar\n  \"0270_Aspirin_sf2_file\",\n  \"0270_Chaos_sf2_file\",\n  // sounds meh\n  \"0270_FluidR3_GM_sf2_file\",\n  \"0270_GeneralUserGS_sf2_file\",\n  //'0270_Gibson_Les_Paul_sf2_file', // detuned\n  // '0270_JCLive_sf2_file', // broken: missing notes\n  \"0270_SBAWE32_sf2_file\",\n  //'0270_SBLive_sf2',\n  //'0270_SoundBlasterOld_sf2',\n  \"0270_Stratocaster_sf2_file\",\n  // -1 octave\n  \"0271_GeneralUserGS_sf2_file\",\n  \"0271_Stratocaster_sf2_file\",\n  // -1 octave\n  \"0272_Stratocaster_sf2_file\",\n  // -1 octave\n  // Electric Guitar (muted): Guitar\n  \"0280_Aspirin_sf2_file\",\n  \"0280_Chaos_sf2_file\",\n  // '0280_FluidR3_GM_sf2_file', // broken: wrong notes\n  \"0280_GeneralUserGS_sf2_file\",\n  \"0280_JCLive_sf2_file\",\n  //'0280_LesPaul_sf2', // missing\n  \"0280_LesPaul_sf2_file\",\n  // not really muted..\n  \"0280_SBAWE32_sf2_file\",\n  //'0280_SBLive_sf2',\n  //'0280_SoundBlasterOld_sf2',\n  \"0281_Aspirin_sf2_file\",\n  \"0281_FluidR3_GM_sf2_file\",\n  \"0281_GeneralUserGS_sf2_file\",\n  \"0282_FluidR3_GM_sf2_file\",\n  // '0282_GeneralUserGS_sf2_file', // broken: missing notes\n  // '0283_GeneralUserGS_sf2_file', // missing\n  // Overdriven Guitar: Guitar\n  \"0290_Aspirin_sf2_file\",\n  \"0290_Chaos_sf2_file\",\n  \"0290_FluidR3_GM_sf2_file\",\n  \"0290_GeneralUserGS_sf2_file\",\n  //'0290_JCLive_sf2_file', // detuned....\n  //'0290_LesPaul_sf2', // broken\n  \"0290_LesPaul_sf2_file\",\n  \"0290_SBAWE32_sf2_file\",\n  //'0290_SBLive_sf2',\n  //'0290_SoundBlasterOld_sf2',\n  // '0291_Aspirin_sf2_file', // broken\n  // '0291_LesPaul_sf2', // broken\n  \"0291_LesPaul_sf2_file\",\n  \"0291_SBAWE32_sf2_file\",\n  //'0291_SoundBlasterOld_sf2',\n  \"0292_Aspirin_sf2_file\",\n  // '0292_LesPaul_sf2', // broken\n  \"0292_LesPaul_sf2_file\",\n  // Distortion Guitar: Guitar\n  \"0300_Aspirin_sf2_file\",\n  \"0300_Chaos_sf2_file\",\n  \"0300_FluidR3_GM_sf2_file\",\n  \"0300_GeneralUserGS_sf2_file\",\n  // '0300_JCLive_sf2_file', // broken\n  // '0300_LesPaul_sf2', // broken\n  \"0300_LesPaul_sf2_file\",\n  //'0300_SBAWE32_sf2_file', // -2 octave\n  //'0300_SBLive_sf2',\n  //'0300_SoundBlasterOld_sf2',\n  // '0301_Aspirin_sf2_file', // missing\n  //'0301_FluidR3_GM_sf2_file', // weird broken bell\n  // '0301_GeneralUserGS_sf2_file', // broken\n  // '0301_JCLive_sf2_file', // broken\n  // '0301_LesPaul_sf2', // missing\n  // '0301_LesPaul_sf2_file', // + 1 oct?\n  \"0302_Aspirin_sf2_file\",\n  // '0302_GeneralUserGS_sf2_file', // not a guitar..\n  //'0302_JCLive_sf2_file', // broken...\n  // '0303_Aspirin_sf2_file', // guitar harmonic??\n  \"0304_Aspirin_sf2_file\",\n  // Guitar Harmonics: Guitar\n  \"0310_Aspirin_sf2_file\",\n  \"0310_Chaos_sf2_file\",\n  \"0310_FluidR3_GM_sf2_file\",\n  // weird..\n  //'0310_GeneralUserGS_sf2_file', // weird..\n  // '0310_JCLive_sf2_file', // weird\n  //'0310_LesPaul_sf2', // missing\n  //'0310_LesPaul_sf2_file', // wrong pitches\n  //'0310_SBAWE32_sf2_file', // wrong pitches\n  //'0310_SBLive_sf2',\n  //'0310_SoundBlasterOld_sf2',\n  //'0311_FluidR3_GM_sf2_file', // knackt\n  //'0311_GeneralUserGS_sf2_file', // wrong notes\n  // Acoustic Bass: Bass\n  \"0320_Aspirin_sf2_file\",\n  \"0320_Chaos_sf2_file\",\n  \"0320_FluidR3_GM_sf2_file\",\n  // '0320_GeneralUserGS_sf2_file', // missing notes\n  \"0320_JCLive_sf2_file\",\n  //'0320_SBLive_sf2',\n  //'0320_SoundBlasterOld_sf2',\n  // '0321_GeneralUserGS_sf2_file', // nice sound but missing notes\n  // '0322_GeneralUserGS_sf2_file', // missing notes\n  // Electric Bass (finger): Bass\n  \"0330_Aspirin_sf2_file\",\n  //'0330_Chaos_sf2_file', // same as last\n  \"0330_FluidR3_GM_sf2_file\",\n  // knackt..\n  \"0330_GeneralUserGS_sf2_file\",\n  // -1 oct\n  \"0330_JCLive_sf2_file\",\n  //'0330_SBLive_sf2',\n  //'0330_SoundBlasterOld_sf2',\n  //'0331_GeneralUserGS_sf2_file', // knackt\n  // '0332_GeneralUserGS_sf2_file', // missing\n  // Electric Bass (pick): Bass\n  \"0340_Aspirin_sf2_file\",\n  //'0340_Chaos_sf2_file', // same as last\n  \"0340_FluidR3_GM_sf2_file\",\n  \"0340_GeneralUserGS_sf2_file\",\n  // -1oct\n  \"0340_JCLive_sf2_file\",\n  //'0340_SBLive_sf2',\n  //'0340_SoundBlasterOld_sf2',\n  \"0341_Aspirin_sf2_file\",\n  //'0341_GeneralUserGS_sf2_file', // knackt\n  // Fretless Bass: Bass\n  \"0350_Aspirin_sf2_file\",\n  // '0350_Chaos_sf2_file', // same as last\n  //'0350_FluidR3_GM_sf2_file', // knackt\n  //'0350_GeneralUserGS_sf2_file', // -1 oct + knackt\n  \"0350_JCLive_sf2_file\",\n  // weird detuned\n  //'0350_SBLive_sf2',\n  //'0350_SoundBlasterOld_sf2',\n  //'0351_GeneralUserGS_sf2_file', // missing\n  // Slap Bass 1: Bass\n  \"0360_Aspirin_sf2_file\",\n  \"0360_Chaos_sf2_file\",\n  \"0360_FluidR3_GM_sf2_file\",\n  // knackt\n  //'0360_GeneralUserGS_sf2_file', // -1 oct\n  \"0360_JCLive_sf2_file\",\n  //'0360_SBLive_sf2',\n  //'0360_SoundBlasterOld_sf2',\n  //'0361_GeneralUserGS_sf2_file', // missing\n  // Slap Bass 2: Bass\n  \"0370_Aspirin_sf2_file\",\n  // '0370_Chaos_sf2_file', // same as last\n  \"0370_FluidR3_GM_sf2_file\",\n  \"0370_GeneralUserGS_sf2_file\",\n  \"0370_JCLive_sf2_file\",\n  //'0370_SBLive_sf2',\n  //'0370_SoundBlasterOld_sf2',\n  //'0371_GeneralUserGS_sf2_file', // missing\n  //'0372_GeneralUserGS_sf2_file', // detuned\n  //'0385_GeneralUserGS_sf2_file', // missing\n  // Synth Bass 1: Bass\n  \"0380_Aspirin_sf2_file\",\n  // laut!\n  \"0380_Chaos_sf2_file\",\n  \"0380_FluidR3_GM_sf2_file\",\n  // bisl detuned\n  // '0380_GeneralUserGS_sf2_file', // laut\n  \"0380_JCLive_sf2_file\",\n  //'0380_SBLive_sf2',\n  //'0380_SoundBlasterOld_sf2',\n  \"0381_FluidR3_GM_sf2_file\",\n  // bisl detuned\n  \"0381_GeneralUserGS_sf2_file\",\n  //'0382_FluidR3_GM_sf2_file', // kein synth bass\n  \"0382_GeneralUserGS_sf2_file\",\n  \"0383_GeneralUserGS_sf2_file\",\n  \"0384_GeneralUserGS_sf2_file\",\n  //'0386_GeneralUserGS_sf2_file', // knackt\n  \"0387_GeneralUserGS_sf2_file\",\n  // Synth Bass 2: Bass\n  \"0390_Aspirin_sf2_file\",\n  // '0390_Chaos_sf2_file', // same as last\n  \"0390_FluidR3_GM_sf2_file\",\n  \"0390_GeneralUserGS_sf2_file\",\n  \"0390_JCLive_sf2_file\",\n  //'0390_SBLive_sf2',\n  //'0390_SoundBlasterOld_sf2',\n  \"0391_FluidR3_GM_sf2_file\",\n  // lauuut\n  // '0391_GeneralUserGS_sf2_file', // missing\n  //'0391_SoundBlasterOld_sf2',\n  \"0392_FluidR3_GM_sf2_file\",\n  // lauut\n  //'0392_GeneralUserGS_sf2_file', // kein synth und -1oct\n  \"0393_GeneralUserGS_sf2_file\",\n  // lauuuut\n  // Violin: Strings\n  \"0400_Aspirin_sf2_file\",\n  \"0400_Chaos_sf2_file\",\n  \"0400_FluidR3_GM_sf2_file\",\n  \"0400_GeneralUserGS_sf2_file\",\n  \"0400_JCLive_sf2_file\",\n  //'0400_SBLive_sf2',\n  //'0400_SoundBlasterOld_sf2',\n  \"0401_Aspirin_sf2_file\",\n  // synth\n  \"0401_FluidR3_GM_sf2_file\",\n  \"0401_GeneralUserGS_sf2_file\",\n  \"0402_GeneralUserGS_sf2_file\",\n  // pizzicato\n  // Viola: Strings\n  \"0410_Aspirin_sf2_file\",\n  // '0410_Chaos_sf2_file', // laut und sehr unstringy\n  \"0410_FluidR3_GM_sf2_file\",\n  \"0410_GeneralUserGS_sf2_file\",\n  \"0410_JCLive_sf2_file\",\n  // <3\n  //'0410_SBLive_sf2',\n  //'0410_SoundBlasterOld_sf2',\n  \"0411_FluidR3_GM_sf2_file\",\n  // Cello: Strings\n  \"0420_Aspirin_sf2_file\",\n  // '0420_Chaos_sf2_file', // kein cello und laut\n  \"0420_FluidR3_GM_sf2_file\",\n  \"0420_GeneralUserGS_sf2_file\",\n  \"0420_JCLive_sf2_file\",\n  //'0420_SBLive_sf2',\n  //'0420_SoundBlasterOld_sf2',\n  \"0421_FluidR3_GM_sf2_file\",\n  \"0421_GeneralUserGS_sf2_file\",\n  // pizzicato\n  // Contrabass: Strings\n  \"0430_Aspirin_sf2_file\",\n  \"0430_Chaos_sf2_file\",\n  // '0430_FluidR3_GM_sf2_file', // missing notes\n  \"0430_GeneralUserGS_sf2_file\",\n  //'0430_JCLive_sf2_file', // -1 oct und meh\n  //'0430_SBLive_sf2',\n  //'0430_SoundBlasterOld_sf2',\n  // '0431_FluidR3_GM_sf2_file', // missing notes\n  // Tremolo Strings: Strings\n  \"0440_Aspirin_sf2_file\",\n  \"0440_Chaos_sf2_file\",\n  //'0440_FluidR3_GM_sf2_file', // huuuge\n  \"0440_GeneralUserGS_sf2_file\",\n  \"0440_JCLive_sf2_file\",\n  //'0440_SBLive_sf2',\n  //'0440_SoundBlasterOld_sf2',\n  \"0441_GeneralUserGS_sf2_file\",\n  \"0442_GeneralUserGS_sf2_file\",\n  // Pizzicato Strings: Strings\n  \"0450_Aspirin_sf2_file\",\n  \"0450_Chaos_sf2_file\",\n  // same as last\n  \"0450_FluidR3_GM_sf2_file\",\n  // chrono trigger flashback\n  \"0450_GeneralUserGS_sf2_file\",\n  // -1 oct?\n  \"0450_JCLive_sf2_file\",\n  // filter env\n  //'0450_SBLive_sf2',\n  //'0450_SoundBlasterOld_sf2',\n  \"0451_FluidR3_GM_sf2_file\",\n  // Orchestral Harp: Strings\n  \"0460_Aspirin_sf2_file\",\n  // '0460_Chaos_sf2_file', // knackt\n  \"0460_FluidR3_GM_sf2_file\",\n  \"0460_GeneralUserGS_sf2_file\",\n  \"0460_JCLive_sf2_file\",\n  //'0460_SBLive_sf2',\n  //'0460_SoundBlasterOld_sf2',\n  \"0461_FluidR3_GM_sf2_file\",\n  // Timpani: Strings\n  \"0470_Aspirin_sf2_file\",\n  \"0470_Chaos_sf2_file\",\n  \"0470_FluidR3_GM_sf2_file\",\n  \"0470_GeneralUserGS_sf2_file\",\n  // '0470_JCLive_sf2_file', // wrong pitches\n  //'0470_SBLive_sf2',\n  //'0470_SoundBlasterOld_sf2',\n  \"0471_FluidR3_GM_sf2_file\",\n  \"0471_GeneralUserGS_sf2_file\",\n  // String Ensemble 1: Ensemble\n  \"0480_Aspirin_sf2_file\",\n  \"0480_Chaos_sf2_file\",\n  \"0480_FluidR3_GM_sf2_file\",\n  // large\n  \"0480_GeneralUserGS_sf2_file\",\n  \"0480_JCLive_sf2_file\",\n  //'0480_SBLive_sf2',\n  //'0480_SoundBlasterOld_sf2',\n  // these dont work..\n  //'04810_GeneralUserGS_sf2_file', // missing notes + brass\n  //'04811_GeneralUserGS_sf2_file',  // missing notes + brass\n  //'04812_GeneralUserGS_sf2_file',\n  //'04813_GeneralUserGS_sf2_file',\n  //'04814_GeneralUserGS_sf2_file',\n  //'04815_GeneralUserGS_sf2_file',\n  //'04816_GeneralUserGS_sf2_file',\n  //'04817_GeneralUserGS_sf2_file',\n  \"0481_Aspirin_sf2_file\",\n  \"0481_FluidR3_GM_sf2_file\",\n  // brass\n  \"0481_GeneralUserGS_sf2_file\",\n  \"0482_Aspirin_sf2_file\",\n  // brass\n  \"0482_GeneralUserGS_sf2_file\",\n  \"0483_GeneralUserGS_sf2_file\",\n  // brass\n  // another block of buggyness:\n  //'0484_GeneralUserGS_sf2_file', // keys?! + knackt\n  //'0485_GeneralUserGS_sf2_file', // missing notes\n  //'0486_GeneralUserGS_sf2_file',\n  //'0487_GeneralUserGS_sf2_file',\n  //'0488_GeneralUserGS_sf2_file',\n  //'0489_GeneralUserGS_sf2_file',\n  // String Ensemble 2: Ensemble\n  \"0490_Aspirin_sf2_file\",\n  \"0490_Chaos_sf2_file\",\n  \"0490_FluidR3_GM_sf2_file\",\n  // large\n  \"0490_GeneralUserGS_sf2_file\",\n  \"0490_JCLive_sf2_file\",\n  //'0490_SBLive_sf2',\n  //'0490_SoundBlasterOld_sf2',\n  \"0491_GeneralUserGS_sf2_file\",\n  \"0492_GeneralUserGS_sf2_file\",\n  // Synth Strings 1: Ensemble\n  \"0500_Aspirin_sf2_file\",\n  // '0500_Chaos_sf2_file', // same as above\n  //'0500_FluidR3_GM_sf2_file', // detune + knack\n  \"0500_GeneralUserGS_sf2_file\",\n  \"0500_JCLive_sf2_file\",\n  //'0500_SBLive_sf2',\n  //'0500_SoundBlasterOld_sf2',\n  \"0501_FluidR3_GM_sf2_file\",\n  // '0501_GeneralUserGS_sf2_file', // crackles\n  // '0502_FluidR3_GM_sf2_file', // missing\n  \"0502_GeneralUserGS_sf2_file\",\n  \"0503_FluidR3_GM_sf2_file\",\n  // large\n  // '0504_FluidR3_GM_sf2_file', // missing\n  \"0505_FluidR3_GM_sf2_file\",\n  // Synth Strings 2: Ensemble\n  \"0510_Aspirin_sf2_file\",\n  \"0510_Chaos_sf2_file\",\n  // '0510_FluidR3_GM_sf2_file', // detune + crackle\n  \"0510_GeneralUserGS_sf2_file\",\n  //'0510_JCLive_sf2_file', // laarge and meh\n  //'0510_SBLive_sf2', // missing\n  //'0510_SoundBlasterOld_sf2',\n  \"0511_GeneralUserGS_sf2_file\",\n  // crackly\n  //'0511_SoundBlasterOld_sf2',\n  // Choir Aahs: Ensemble\n  \"0520_Aspirin_sf2_file\",\n  \"0520_Chaos_sf2_file\",\n  \"0520_FluidR3_GM_sf2_file\",\n  \"0520_GeneralUserGS_sf2_file\",\n  \"0520_JCLive_sf2_file\",\n  //'0520_SBLive_sf2',\n  \"0520_Soul_Ahhs_sf2_file\",\n  // large\n  //'0520_SoundBlasterOld_sf2',\n  \"0521_FluidR3_GM_sf2_file\",\n  \"0521_Soul_Ahhs_sf2_file\",\n  // large\n  //'0521_SoundBlasterOld_sf2',\n  \"0522_Soul_Ahhs_sf2_file\",\n  // large\n  // Voice Oohs: Ensemble\n  \"0530_Aspirin_sf2_file\",\n  \"0530_Chaos_sf2_file\",\n  \"0530_FluidR3_GM_sf2_file\",\n  \"0530_GeneralUserGS_sf2_file\",\n  //'0530_JCLive_sf2_file', // same as above\n  //'0530_SBLive_sf2',\n  // '0530_Soul_Ahhs_sf2_file', // not ooh\n  //'0530_SoundBlasterOld_sf2',\n  \"0531_FluidR3_GM_sf2_file\",\n  // '0531_GeneralUserGS_sf2_file', // ends crackle\n  \"0531_JCLive_sf2_file\",\n  //'0531_SoundBlasterOld_sf2',\n  // Synth Choir: Ensemble\n  \"0540_Aspirin_sf2_file\",\n  \"0540_Chaos_sf2_file\",\n  \"0540_FluidR3_GM_sf2_file\",\n  \"0540_GeneralUserGS_sf2_file\",\n  //'0540_JCLive_sf2_file', // large + crackles\n  //'0540_SBLive_sf2',\n  //'0540_SoundBlasterOld_sf2',\n  \"0541_FluidR3_GM_sf2_file\",\n  // Orchestra Hit: Ensemble\n  \"0550_Aspirin_sf2_file\",\n  \"0550_Chaos_sf2_file\",\n  \"0550_FluidR3_GM_sf2_file\",\n  \"0550_GeneralUserGS_sf2_file\",\n  //'0550_JCLive_sf2_file', // same as above\n  //'0550_SBLive_sf2',\n  //'0550_SoundBlasterOld_sf2',\n  //'0551_Aspirin_sf2_file', // not an orch hit..\n  \"0551_FluidR3_GM_sf2_file\",\n  // Trumpet: Brass\n  \"0560_Aspirin_sf2_file\",\n  \"0560_Chaos_sf2_file\",\n  \"0560_FluidR3_GM_sf2_file\",\n  //'0560_GeneralUserGS_sf2_file', // -1 oct\n  \"0560_JCLive_sf2_file\",\n  //'0560_SBLive_sf2',\n  //'0560_SoundBlasterOld_sf2',\n  // Trombone: Brass\n  \"0570_Aspirin_sf2_file\",\n  \"0570_Chaos_sf2_file\",\n  \"0570_FluidR3_GM_sf2_file\",\n  \"0570_GeneralUserGS_sf2_file\",\n  //'0570_JCLive_sf2_file', // -1oct\n  //'0570_SBLive_sf2',\n  //'0570_SoundBlasterOld_sf2',\n  \"0571_GeneralUserGS_sf2_file\",\n  // Tuba: Brass\n  \"0580_Aspirin_sf2_file\",\n  \"0580_Chaos_sf2_file\",\n  \"0580_FluidR3_GM_sf2_file\",\n  \"0580_GeneralUserGS_sf2_file\",\n  //'0580_JCLive_sf2_file', // -1oct\n  //'0580_SBLive_sf2',\n  //'0580_SoundBlasterOld_sf2',\n  //'0581_GeneralUserGS_sf2_file', // missing\n  // Muted Trumpet: Brass\n  \"0590_Aspirin_sf2_file\",\n  \"0590_Chaos_sf2_file\",\n  \"0590_FluidR3_GM_sf2_file\",\n  \"0590_GeneralUserGS_sf2_file\",\n  \"0590_JCLive_sf2_file\",\n  // winner\n  //'0590_SBLive_sf2',\n  //'0590_SoundBlasterOld_sf2',\n  // '0591_GeneralUserGS_sf2_file', // missing\n  // French Horn: Brass\n  \"0600_Aspirin_sf2_file\",\n  //'0600_Chaos_sf2_file', // weird jumps\n  \"0600_FluidR3_GM_sf2_file\",\n  // tiny crackles\n  \"0600_GeneralUserGS_sf2_file\",\n  // tiny crackles\n  \"0600_JCLive_sf2_file\",\n  // tiny crackles\n  //'0600_SBLive_sf2',\n  //'0600_SoundBlasterOld_sf2',\n  \"0601_FluidR3_GM_sf2_file\",\n  //'0601_GeneralUserGS_sf2_file', // tiny crackles\n  // '0602_GeneralUserGS_sf2_file', // bad gain diffs\n  // '0603_GeneralUserGS_sf2_file', // tiny crackles\n  // Brass Section: Brass\n  \"0610_Aspirin_sf2_file\",\n  \"0610_Chaos_sf2_file\",\n  \"0610_FluidR3_GM_sf2_file\",\n  // large\n  \"0610_GeneralUserGS_sf2_file\",\n  \"0610_JCLive_sf2_file\",\n  //'0610_SBLive_sf2',\n  //'0610_SoundBlasterOld_sf2',\n  // '0611_GeneralUserGS_sf2_file', // missing sounds\n  // '0612_GeneralUserGS_sf2_file',\n  //'0613_GeneralUserGS_sf2_file', // -1 oct\n  // '0614_GeneralUserGS_sf2_file', // missing sounds\n  // '0615_GeneralUserGS_sf2_file', // missing sounds\n  // Synth Brass 1: Brass\n  \"0620_Aspirin_sf2_file\",\n  //'0620_Chaos_sf2_file', // weird gain diff\n  \"0620_FluidR3_GM_sf2_file\",\n  //'0620_GeneralUserGS_sf2_file', // loooud\n  // '0620_JCLive_sf2_file', // weird gain diff\n  //'0620_SBLive_sf2',\n  //'0620_SoundBlasterOld_sf2',\n  \"0621_Aspirin_sf2_file\",\n  \"0621_FluidR3_GM_sf2_file\",\n  // '0621_GeneralUserGS_sf2_file', // detune + loooud\n  //'0622_FluidR3_GM_sf2_file', // loud..\n  //'0622_GeneralUserGS_sf2_file', // loud + crackles\n  // Synth Brass 2: Brass\n  \"0630_Aspirin_sf2_file\",\n  \"0630_Chaos_sf2_file\",\n  \"0630_FluidR3_GM_sf2_file\",\n  //'0630_GeneralUserGS_sf2_file', // detune + looud\n  \"0630_JCLive_sf2_file\",\n  //'0630_SBLive_sf2',\n  //'0630_SoundBlasterOld_sf2',\n  // '0631_Aspirin_sf2_file', // looud + detune + gain diffs\n  \"0631_FluidR3_GM_sf2_file\",\n  //'0631_GeneralUserGS_sf2_file', // crackles\n  \"0632_FluidR3_GM_sf2_file\",\n  \"0633_FluidR3_GM_sf2_file\",\n  // tiny crackles\n  // Soprano Sax: Reed\n  \"0640_Aspirin_sf2_file\",\n  \"0640_Chaos_sf2_file\",\n  \"0640_FluidR3_GM_sf2_file\",\n  // '0640_GeneralUserGS_sf2_file', // crackles\n  \"0640_JCLive_sf2_file\",\n  //'0640_SBLive_sf2',\n  //'0640_SoundBlasterOld_sf2',\n  \"0641_FluidR3_GM_sf2_file\",\n  // Alto Sax: Reed\n  //'0650_Aspirin_sf2_file', // this is not an alto sax\n  \"0650_Chaos_sf2_file\",\n  \"0650_FluidR3_GM_sf2_file\",\n  // sounds really stringy\n  \"0650_GeneralUserGS_sf2_file\",\n  \"0650_JCLive_sf2_file\",\n  //'0650_SBLive_sf2',\n  //'0650_SoundBlasterOld_sf2',\n  \"0651_Aspirin_sf2_file\",\n  \"0651_FluidR3_GM_sf2_file\",\n  // really stringy\n  // Tenor Sax: Reed\n  \"0660_Aspirin_sf2_file\",\n  \"0660_Chaos_sf2_file\",\n  //'0660_FluidR3_GM_sf2_file', // weird pitches\n  \"0660_GeneralUserGS_sf2_file\",\n  \"0660_JCLive_sf2_file\",\n  //'0660_SBLive_sf2',\n  //'0660_SoundBlasterOld_sf2',\n  // '0661_FluidR3_GM_sf2_file', // weird pitches\n  // '0661_GeneralUserGS_sf2_file', // missing\n  // Baritone Sax: Reed\n  \"0670_Aspirin_sf2_file\",\n  \"0670_Chaos_sf2_file\",\n  \"0670_FluidR3_GM_sf2_file\",\n  // huge\n  \"0670_GeneralUserGS_sf2_file\",\n  \"0670_JCLive_sf2_file\",\n  //'0670_SBLive_sf2',\n  //'0670_SoundBlasterOld_sf2',\n  \"0671_FluidR3_GM_sf2_file\",\n  // huge\n  // Oboe: Reed\n  //'0680_Aspirin_sf2_file', // tiny crackles\n  \"0680_Chaos_sf2_file\",\n  // tiny crackles\n  \"0680_FluidR3_GM_sf2_file\",\n  // tiny crackles\n  \"0680_GeneralUserGS_sf2_file\",\n  \"0680_JCLive_sf2_file\",\n  //'0680_SBLive_sf2',\n  //'0680_SoundBlasterOld_sf2',\n  \"0681_FluidR3_GM_sf2_file\",\n  // tiny crackles\n  // English Horn: Reed\n  \"0690_Aspirin_sf2_file\",\n  //'0690_Chaos_sf2_file', // detuned\n  \"0690_FluidR3_GM_sf2_file\",\n  //'0690_GeneralUserGS_sf2_file', // +1 oct\n  \"0690_JCLive_sf2_file\",\n  //'0690_SBLive_sf2',\n  //'0690_SoundBlasterOld_sf2',\n  \"0691_FluidR3_GM_sf2_file\",\n  // tiny crackles\n  // Bassoon: Reed\n  //'0700_Aspirin_sf2_file', // detune + gain diffs\n  // '0700_Chaos_sf2_file', // detune + crackles\n  \"0700_FluidR3_GM_sf2_file\",\n  \"0700_GeneralUserGS_sf2_file\",\n  // tiny crackles\n  \"0700_JCLive_sf2_file\",\n  //'0700_SBLive_sf2',\n  //'0700_SoundBlasterOld_sf2',\n  \"0701_FluidR3_GM_sf2_file\",\n  // tiny crackles\n  //'0701_GeneralUserGS_sf2_file', // missing\n  // Clarinet: Reed\n  \"0710_Aspirin_sf2_file\",\n  // tiny crackles\n  \"0710_Chaos_sf2_file\",\n  // tiny crackles\n  \"0710_FluidR3_GM_sf2_file\",\n  \"0710_GeneralUserGS_sf2_file\",\n  \"0710_JCLive_sf2_file\",\n  //'0710_SBLive_sf2',\n  //'0710_SoundBlasterOld_sf2',\n  \"0711_FluidR3_GM_sf2_file\",\n  // Piccolo: Pipe\n  \"0720_Aspirin_sf2_file\",\n  // +1oct\n  // '0720_Chaos_sf2_file', // not a piccolo\n  \"0720_FluidR3_GM_sf2_file\",\n  \"0720_GeneralUserGS_sf2_file\",\n  // crackles\n  \"0720_JCLive_sf2_file\",\n  //'0720_SBLive_sf2',\n  //'0720_SoundBlasterOld_sf2',\n  \"0721_FluidR3_GM_sf2_file\",\n  //'0721_SoundBlasterOld_sf2',\n  // Flute: Pipe\n  \"0730_Aspirin_sf2_file\",\n  //'0730_Chaos_sf2_file', // etune\n  \"0730_FluidR3_GM_sf2_file\",\n  \"0730_GeneralUserGS_sf2_file\",\n  \"0730_JCLive_sf2_file\",\n  //'0730_SBLive_sf2',\n  //'0730_SoundBlasterOld_sf2',\n  //'0731_Aspirin_sf2_file', // not a flute\n  \"0731_FluidR3_GM_sf2_file\",\n  //'0731_SoundBlasterOld_sf2',\n  // Recorder: Pipe\n  \"0740_Aspirin_sf2_file\",\n  \"0740_Chaos_sf2_file\",\n  \"0740_FluidR3_GM_sf2_file\",\n  \"0740_GeneralUserGS_sf2_file\",\n  \"0740_JCLive_sf2_file\",\n  //'0740_SBLive_sf2',\n  //'0740_SoundBlasterOld_sf2',\n  // '0741_GeneralUserGS_sf2_file', // missing\n  // Pan Flute: Pipe\n  \"0750_Aspirin_sf2_file\",\n  // staccato\n  \"0750_Chaos_sf2_file\",\n  \"0750_FluidR3_GM_sf2_file\",\n  \"0750_GeneralUserGS_sf2_file\",\n  // crackles\n  \"0750_JCLive_sf2_file\",\n  //'0750_SBLive_sf2',\n  //'0750_SoundBlasterOld_sf2',\n  \"0751_Aspirin_sf2_file\",\n  \"0751_FluidR3_GM_sf2_file\",\n  \"0751_GeneralUserGS_sf2_file\",\n  // crackles\n  //'0751_SoundBlasterOld_sf2',\n  // Blown bottle: Pipe\n  // '0760_Aspirin_sf2_file', // same as below w crackle\n  \"0760_Chaos_sf2_file\",\n  \"0760_FluidR3_GM_sf2_file\",\n  \"0760_GeneralUserGS_sf2_file\",\n  \"0760_JCLive_sf2_file\",\n  //'0760_SBLive_sf2',\n  //'0760_SoundBlasterOld_sf2',\n  \"0761_FluidR3_GM_sf2_file\",\n  // '0761_GeneralUserGS_sf2_file', // missing\n  //'0761_SoundBlasterOld_sf2',\n  // '0762_GeneralUserGS_sf2_file', // missing\n  // Shakuhachi: Pipe\n  \"0770_Aspirin_sf2_file\",\n  // staccato\n  //'0770_Chaos_sf2_file', // not shakuhachi\n  \"0770_FluidR3_GM_sf2_file\",\n  \"0770_GeneralUserGS_sf2_file\",\n  \"0770_JCLive_sf2_file\",\n  //'0770_SBLive_sf2',\n  //'0770_SoundBlasterOld_sf2',\n  \"0771_FluidR3_GM_sf2_file\",\n  // '0771_GeneralUserGS_sf2_file', // missing\n  // '0772_GeneralUserGS_sf2_file', // missing\n  // Whistle: Pipe\n  \"0780_Aspirin_sf2_file\",\n  // crackles\n  \"0780_Chaos_sf2_file\",\n  // crackles\n  \"0780_FluidR3_GM_sf2_file\",\n  //'0780_GeneralUserGS_sf2_file', // loud..\n  \"0780_JCLive_sf2_file\",\n  // crackles\n  //'0780_SBLive_sf2',\n  //'0780_SoundBlasterOld_sf2',\n  // '0781_GeneralUserGS_sf2_file', // detune + crackles\n  // Ocarina: Pipe\n  \"0790_Aspirin_sf2_file\",\n  // tiny crackles\n  //'0790_Chaos_sf2_file', // same as above\n  \"0790_FluidR3_GM_sf2_file\",\n  \"0790_GeneralUserGS_sf2_file\",\n  \"0790_JCLive_sf2_file\",\n  // crackles\n  //'0790_SBLive_sf2',\n  //'0790_SoundBlasterOld_sf2',\n  //'0791_GeneralUserGS_sf2_file', // missing\n  // Lead 1 (square): Synth Lead\n  \"0800_Aspirin_sf2_file\",\n  \"0800_Chaos_sf2_file\",\n  \"0800_FluidR3_GM_sf2_file\",\n  // '0800_GeneralUserGS_sf2_file', // detuned\n  // '0800_JCLive_sf2_file', // detuned\n  //'0800_SBLive_sf2',\n  //'0800_SoundBlasterOld_sf2',\n  //'0801_FluidR3_GM_sf2_file', // detune\n  // '0801_GeneralUserGS_sf2_file', // detune\n  // Lead 2 (sawtooth): Synth Lead\n  \"0810_Aspirin_sf2_file\",\n  \"0810_Chaos_sf2_file\",\n  \"0810_FluidR3_GM_sf2_file\",\n  \"0810_GeneralUserGS_sf2_file\",\n  \"0810_JCLive_sf2_file\",\n  //'0810_SBLive_sf2',\n  //'0810_SoundBlasterOld_sf2',\n  \"0811_Aspirin_sf2_file\",\n  \"0811_GeneralUserGS_sf2_file\",\n  //'0811_SoundBlasterOld_sf2',\n  // Lead 3 (calliope): Synth Lead\n  \"0820_Aspirin_sf2_file\",\n  \"0820_Chaos_sf2_file\",\n  \"0820_FluidR3_GM_sf2_file\",\n  \"0820_GeneralUserGS_sf2_file\",\n  \"0820_JCLive_sf2_file\",\n  // +1 oct\n  //'0820_SBLive_sf2',\n  //'0820_SoundBlasterOld_sf2',\n  \"0821_FluidR3_GM_sf2_file\",\n  \"0821_GeneralUserGS_sf2_file\",\n  //'0821_SoundBlasterOld_sf2',\n  // '0822_GeneralUserGS_sf2_file', // missing\n  //'0823_GeneralUserGS_sf2_file', // missing\n  // Lead 4 (chiff): Synth Lead\n  \"0830_Aspirin_sf2_file\",\n  // '0830_Chaos_sf2_file', // same as above\n  \"0830_FluidR3_GM_sf2_file\",\n  \"0830_GeneralUserGS_sf2_file\",\n  \"0830_JCLive_sf2_file\",\n  // flute synth\n  //'0830_SBLive_sf2',\n  //'0830_SoundBlasterOld_sf2',\n  \"0831_FluidR3_GM_sf2_file\",\n  \"0831_GeneralUserGS_sf2_file\",\n  //'0831_SoundBlasterOld_sf2',\n  // Lead 5 (charang): Synth Lead\n  \"0840_Aspirin_sf2_file\",\n  \"0840_Chaos_sf2_file\",\n  \"0840_FluidR3_GM_sf2_file\",\n  \"0840_GeneralUserGS_sf2_file\",\n  \"0840_JCLive_sf2_file\",\n  // detune?\n  //'0840_SBLive_sf2',\n  //'0840_SoundBlasterOld_sf2',\n  \"0841_Aspirin_sf2_file\",\n  \"0841_Chaos_sf2_file\",\n  \"0841_FluidR3_GM_sf2_file\",\n  \"0841_GeneralUserGS_sf2_file\",\n  //'0841_JCLive_sf2_file', // +1oct + detune\n  //'0841_SoundBlasterOld_sf2',\n  \"0842_FluidR3_GM_sf2_file\",\n  // Lead 6 (voice): Synth Lead\n  \"0850_Aspirin_sf2_file\",\n  // '0850_Chaos_sf2_file', // same as above\n  \"0850_FluidR3_GM_sf2_file\",\n  // '0850_GeneralUserGS_sf2_file', // no voice\n  \"0850_JCLive_sf2_file\",\n  // more a flute\n  //'0850_SBLive_sf2',\n  //'0850_SoundBlasterOld_sf2',\n  \"0851_FluidR3_GM_sf2_file\",\n  \"0851_GeneralUserGS_sf2_file\",\n  \"0851_JCLive_sf2_file\",\n  //'0851_SoundBlasterOld_sf2',\n  // Lead 7 (fifths): Synth Lead\n  \"0860_Aspirin_sf2_file\",\n  \"0860_Chaos_sf2_file\",\n  // '0860_FluidR3_GM_sf2_file', // loud and not fitting\n  \"0860_GeneralUserGS_sf2_file\",\n  \"0860_JCLive_sf2_file\",\n  //'0860_SBLive_sf2',\n  //'0860_SoundBlasterOld_sf2',\n  \"0861_Aspirin_sf2_file\",\n  // '0861_FluidR3_GM_sf2_file', // lout and not fitting\n  //'0861_SoundBlasterOld_sf2',\n  // Lead 8 (bass + lead): Synth Lead\n  \"0870_Aspirin_sf2_file\",\n  \"0870_Chaos_sf2_file\",\n  \"0870_FluidR3_GM_sf2_file\",\n  \"0870_GeneralUserGS_sf2_file\",\n  \"0870_JCLive_sf2_file\",\n  //'0870_SBLive_sf2',\n  //'0870_SoundBlasterOld_sf2',\n  // '0871_GeneralUserGS_sf2_file', // loud + detune\n  //'0872_GeneralUserGS_sf2_file', // loud\n  //'0873_GeneralUserGS_sf2_file', // loud\n  // Pad 1 (new age): Synth Pad\n  \"0880_Aspirin_sf2_file\",\n  \"0880_Chaos_sf2_file\",\n  \"0880_FluidR3_GM_sf2_file\",\n  \"0880_GeneralUserGS_sf2_file\",\n  \"0880_JCLive_sf2_file\",\n  //'0880_SBLive_sf2',\n  //'0880_SoundBlasterOld_sf2',\n  \"0881_Aspirin_sf2_file\",\n  \"0881_FluidR3_GM_sf2_file\",\n  \"0881_GeneralUserGS_sf2_file\",\n  //'0881_SoundBlasterOld_sf2',\n  \"0882_Aspirin_sf2_file\",\n  // staccato\n  // '0882_FluidR3_GM_sf2_file', // missing\n  \"0882_GeneralUserGS_sf2_file\",\n  //'0883_GeneralUserGS_sf2_file', // missing\n  // '0884_GeneralUserGS_sf2_file', // broken\n  \"0885_GeneralUserGS_sf2_file\",\n  //'0886_GeneralUserGS_sf2_file', // not a pad\n  \"0887_GeneralUserGS_sf2_file\",\n  //'0888_GeneralUserGS_sf2_file', // not a pad\n  //'0889_GeneralUserGS_sf2_file', // not a pad\n  // Pad 2 (warm): Synth Pad\n  \"0890_Aspirin_sf2_file\",\n  \"0890_Chaos_sf2_file\",\n  \"0890_FluidR3_GM_sf2_file\",\n  \"0890_GeneralUserGS_sf2_file\",\n  // 1mb large\n  \"0890_JCLive_sf2_file\",\n  //'0890_SBLive_sf2',\n  //'0890_SoundBlasterOld_sf2',\n  \"0891_Aspirin_sf2_file\",\n  \"0891_FluidR3_GM_sf2_file\",\n  // '0891_GeneralUserGS_sf2_file', // noise\n  // Pad 3 (polysynth): Synth Pad\n  //'0900_Aspirin_sf2_file', // same as belo\n  \"0900_Chaos_sf2_file\",\n  \"0900_FluidR3_GM_sf2_file\",\n  \"0900_GeneralUserGS_sf2_file\",\n  \"0900_JCLive_sf2_file\",\n  // a bit plucky for a pad\n  //'0900_SBLive_sf2',\n  //'0900_SoundBlasterOld_sf2',\n  \"0901_Aspirin_sf2_file\",\n  \"0901_FluidR3_GM_sf2_file\",\n  \"0901_GeneralUserGS_sf2_file\",\n  //'0901_SoundBlasterOld_sf2',\n  // Pad 4 (choir): Synth Pad\n  \"0910_Aspirin_sf2_file\",\n  //'0910_Chaos_sf2_file', // +1oct\n  \"0910_FluidR3_GM_sf2_file\",\n  \"0910_GeneralUserGS_sf2_file\",\n  \"0910_JCLive_sf2_file\",\n  //'0910_SBLive_sf2',\n  //'0910_SoundBlasterOld_sf2',\n  // '0911_Aspirin_sf2_file', // fluty, crackles\n  \"0911_GeneralUserGS_sf2_file\",\n  \"0911_JCLive_sf2_file\",\n  // the only choiry pad\n  //'0911_SoundBlasterOld_sf2',\n  // Pad 5 (bowed): Synth Pad\n  \"0920_Aspirin_sf2_file\",\n  //'0920_Chaos_sf2_file', // same as above\n  //'0920_FluidR3_GM_sf2_file', // detuned?\n  \"0920_GeneralUserGS_sf2_file\",\n  \"0920_JCLive_sf2_file\",\n  //'0920_SBLive_sf2',\n  //'0920_SoundBlasterOld_sf2',\n  \"0921_Aspirin_sf2_file\",\n  \"0921_GeneralUserGS_sf2_file\",\n  //'0921_SoundBlasterOld_sf2',\n  // Pad 6 (metallic): Synth Pad\n  \"0930_Aspirin_sf2_file\",\n  \"0930_Chaos_sf2_file\",\n  \"0930_FluidR3_GM_sf2_file\",\n  // little crackles\n  \"0930_GeneralUserGS_sf2_file\",\n  // '0930_JCLive_sf2_file', // buggy zones: guitar / synth\n  //'0930_SBLive_sf2',\n  //'0930_SoundBlasterOld_sf2',\n  \"0931_Aspirin_sf2_file\",\n  // sitar\n  \"0931_FluidR3_GM_sf2_file\",\n  \"0931_GeneralUserGS_sf2_file\",\n  // guitar\n  //'0931_SoundBlasterOld_sf2',\n  // Pad 7 (halo): Synth Pad\n  // '0940_Aspirin_sf2_file', // same as below\n  \"0940_Chaos_sf2_file\",\n  \"0940_FluidR3_GM_sf2_file\",\n  \"0940_GeneralUserGS_sf2_file\",\n  \"0940_JCLive_sf2_file\",\n  //'0940_SBLive_sf2',\n  //'0940_SoundBlasterOld_sf2',\n  \"0941_Aspirin_sf2_file\",\n  \"0941_FluidR3_GM_sf2_file\",\n  \"0941_GeneralUserGS_sf2_file\",\n  \"0941_JCLive_sf2_file\",\n  // Pad 8 (sweep): Synth Pad\n  \"0950_Aspirin_sf2_file\",\n  \"0950_Chaos_sf2_file\",\n  \"0950_FluidR3_GM_sf2_file\",\n  \"0950_GeneralUserGS_sf2_file\",\n  \"0950_JCLive_sf2_file\",\n  //'0950_SBLive_sf2',\n  //'0950_SoundBlasterOld_sf2',\n  \"0951_FluidR3_GM_sf2_file\",\n  \"0951_GeneralUserGS_sf2_file\",\n  // FX 1 (rain): Synth Effects\n  //'0960_Aspirin_sf2_file', //mixed samples?\n  \"0960_Chaos_sf2_file\",\n  // pad?\n  \"0960_FluidR3_GM_sf2_file\",\n  // ???\n  \"0960_GeneralUserGS_sf2_file\",\n  // pad\n  // '0960_JCLive_sf2_file', // mixed samples?\n  //'0960_SBLive_sf2',\n  //'0960_SoundBlasterOld_sf2',\n  \"0961_Aspirin_sf2_file\",\n  \"0961_FluidR3_GM_sf2_file\",\n  // '0961_GeneralUserGS_sf2_file', // ?!?!\n  //'0961_SoundBlasterOld_sf2',\n  \"0962_GeneralUserGS_sf2_file\",\n  // FX 2 (soundtrack): Synth Effects\n  \"0970_Aspirin_sf2_file\",\n  //'0970_Chaos_sf2_file', // wrong pitch\n  \"0970_FluidR3_GM_sf2_file\",\n  \"0970_GeneralUserGS_sf2_file\",\n  // not looping..\n  //'0970_JCLive_sf2_file', // wrong pitch\n  //'0970_SBLive_sf2',\n  //'0970_SoundBlasterOld_sf2',\n  \"0971_FluidR3_GM_sf2_file\",\n  \"0971_GeneralUserGS_sf2_file\",\n  //'0971_SoundBlasterOld_sf2',\n  // FX 3 (crystal): Synth Effects\n  \"0980_Aspirin_sf2_file\",\n  \"0980_Chaos_sf2_file\",\n  // '0980_FluidR3_GM_sf2_file', // some notes are weird\n  \"0980_GeneralUserGS_sf2_file\",\n  \"0980_JCLive_sf2_file\",\n  //'0980_SBLive_sf2',\n  //'0980_SoundBlasterOld_sf2',\n  \"0981_Aspirin_sf2_file\",\n  // strings\n  \"0981_FluidR3_GM_sf2_file\",\n  // mallet\n  \"0981_GeneralUserGS_sf2_file\",\n  //'0981_SoundBlasterOld_sf2',\n  \"0982_GeneralUserGS_sf2_file\",\n  \"0983_GeneralUserGS_sf2_file\",\n  // guitar\n  \"0984_GeneralUserGS_sf2_file\",\n  // FX 4 (atmosphere): Synth Effects\n  \"0990_Aspirin_sf2_file\",\n  // pad\n  \"0990_Chaos_sf2_file\",\n  // pad\n  \"0990_FluidR3_GM_sf2_file\",\n  // guitar\n  \"0990_GeneralUserGS_sf2_file\",\n  // guitar\n  \"0990_JCLive_sf2_file\",\n  // pad\n  //'0990_SBLive_sf2',\n  //'0990_SoundBlasterOld_sf2',\n  \"0991_Aspirin_sf2_file\",\n  // guitar\n  \"0991_FluidR3_GM_sf2_file\",\n  // pad\n  \"0991_GeneralUserGS_sf2_file\",\n  // pad\n  \"0991_JCLive_sf2_file\",\n  // guitar\n  //'0991_SoundBlasterOld_sf2',\n  \"0992_FluidR3_GM_sf2_file\",\n  // pad\n  \"0992_JCLive_sf2_file\",\n  // guitar\n  \"0993_JCLive_sf2_file\",\n  // guitar\n  \"0994_JCLive_sf2_file\",\n  // guitar\n  // FX 5 (brightness): Synth Effects\n  \"1000_Aspirin_sf2_file\",\n  \"1000_Chaos_sf2_file\",\n  \"1000_FluidR3_GM_sf2_file\",\n  \"1000_GeneralUserGS_sf2_file\",\n  \"1000_JCLive_sf2_file\",\n  //'1000_SBLive_sf2',\n  //'1000_SoundBlasterOld_sf2',\n  \"1001_Aspirin_sf2_file\",\n  \"1001_FluidR3_GM_sf2_file\",\n  \"1001_GeneralUserGS_sf2_file\",\n  \"1001_JCLive_sf2_file\",\n  //'1001_SoundBlasterOld_sf2',\n  \"1002_Aspirin_sf2_file\",\n  \"1002_FluidR3_GM_sf2_file\",\n  \"1002_GeneralUserGS_sf2_file\",\n  // FX 6 (goblins): Synth Effects\n  \"1010_Aspirin_sf2_file\",\n  \"1010_Chaos_sf2_file\",\n  \"1010_FluidR3_GM_sf2_file\",\n  \"1010_GeneralUserGS_sf2_file\",\n  \"1010_JCLive_sf2_file\",\n  //'1010_SBLive_sf2',\n  //'1010_SoundBlasterOld_sf2',\n  \"1011_Aspirin_sf2_file\",\n  \"1011_FluidR3_GM_sf2_file\",\n  \"1011_JCLive_sf2_file\",\n  \"1012_Aspirin_sf2_file\",\n  // FX 7 (echoes): Synth Effects\n  \"1020_Aspirin_sf2_file\",\n  \"1020_Chaos_sf2_file\",\n  \"1020_FluidR3_GM_sf2_file\",\n  \"1020_GeneralUserGS_sf2_file\",\n  \"1020_JCLive_sf2_file\",\n  //'1020_SBLive_sf2',\n  //'1020_SoundBlasterOld_sf2',\n  \"1021_Aspirin_sf2_file\",\n  \"1021_FluidR3_GM_sf2_file\",\n  \"1021_GeneralUserGS_sf2_file\",\n  \"1021_JCLive_sf2_file\",\n  //'1021_SoundBlasterOld_sf2',\n  \"1022_GeneralUserGS_sf2_file\",\n  // FX 8 (sci-fi): Synth Effects\n  \"1030_Aspirin_sf2_file\",\n  \"1030_Chaos_sf2_file\",\n  \"1030_FluidR3_GM_sf2_file\",\n  \"1030_GeneralUserGS_sf2_file\",\n  \"1030_JCLive_sf2_file\",\n  //'1030_SBLive_sf2',\n  //'1030_SoundBlasterOld_sf2',\n  \"1031_Aspirin_sf2_file\",\n  \"1031_FluidR3_GM_sf2_file\",\n  \"1031_GeneralUserGS_sf2_file\",\n  //'1031_SoundBlasterOld_sf2',\n  \"1032_FluidR3_GM_sf2_file\",\n  // 'Sitar: Ethnic\n  \"1040_Aspirin_sf2_file\",\n  \"1040_Chaos_sf2_file\",\n  \"1040_FluidR3_GM_sf2_file\",\n  \"1040_GeneralUserGS_sf2_file\",\n  \"1040_JCLive_sf2_file\",\n  //'1040_SBLive_sf2',\n  //'1040_SoundBlasterOld_sf2',\n  \"1041_FluidR3_GM_sf2_file\",\n  \"1041_GeneralUserGS_sf2_file\",\n  // Banjo: Ethnic\n  \"1050_Aspirin_sf2_file\",\n  \"1050_Chaos_sf2_file\",\n  \"1050_FluidR3_GM_sf2_file\",\n  \"1050_GeneralUserGS_sf2_file\",\n  \"1050_JCLive_sf2_file\",\n  //'1050_SBLive_sf2',\n  //'1050_SoundBlasterOld_sf2',\n  \"1051_GeneralUserGS_sf2_file\",\n  // Shamisen: Ethnic\n  \"1060_Aspirin_sf2_file\",\n  \"1060_Chaos_sf2_file\",\n  \"1060_FluidR3_GM_sf2_file\",\n  \"1060_GeneralUserGS_sf2_file\",\n  \"1060_JCLive_sf2_file\",\n  //'1060_SBLive_sf2',\n  //'1060_SoundBlasterOld_sf2',\n  \"1061_FluidR3_GM_sf2_file\",\n  \"1061_GeneralUserGS_sf2_file\",\n  //'1061_SoundBlasterOld_sf2',\n  // Koto: Ethnic\n  \"1070_Aspirin_sf2_file\",\n  \"1070_Chaos_sf2_file\",\n  \"1070_FluidR3_GM_sf2_file\",\n  \"1070_GeneralUserGS_sf2_file\",\n  \"1070_JCLive_sf2_file\",\n  //'1070_SBLive_sf2',\n  //'1070_SoundBlasterOld_sf2',\n  \"1071_FluidR3_GM_sf2_file\",\n  \"1071_GeneralUserGS_sf2_file\",\n  \"1072_GeneralUserGS_sf2_file\",\n  \"1073_GeneralUserGS_sf2_file\",\n  // Kalimba: Ethnic\n  \"1080_Aspirin_sf2_file\",\n  \"1080_Chaos_sf2_file\",\n  \"1080_FluidR3_GM_sf2_file\",\n  \"1080_GeneralUserGS_sf2_file\",\n  \"1080_JCLive_sf2_file\",\n  //'1080_SBLive_sf2',\n  //'1080_SoundBlasterOld_sf2',\n  //'1081_SoundBlasterOld_sf2',\n  // Bagpipe: Ethnic\n  \"1090_Aspirin_sf2_file\",\n  \"1090_Chaos_sf2_file\",\n  \"1090_FluidR3_GM_sf2_file\",\n  \"1090_GeneralUserGS_sf2_file\",\n  \"1090_JCLive_sf2_file\",\n  //'1090_SBLive_sf2',\n  //'1090_SoundBlasterOld_sf2',\n  //'1091_SoundBlasterOld_sf2',\n  // Fiddle: Ethnic\n  \"1100_Aspirin_sf2_file\",\n  \"1100_Chaos_sf2_file\",\n  \"1100_FluidR3_GM_sf2_file\",\n  \"1100_GeneralUserGS_sf2_file\",\n  \"1100_JCLive_sf2_file\",\n  //'1100_SBLive_sf2',\n  //'1100_SoundBlasterOld_sf2',\n  \"1101_Aspirin_sf2_file\",\n  \"1101_FluidR3_GM_sf2_file\",\n  \"1101_GeneralUserGS_sf2_file\",\n  \"1102_GeneralUserGS_sf2_file\",\n  // Shanai: Ethnic\n  \"1110_Aspirin_sf2_file\",\n  \"1110_Chaos_sf2_file\",\n  \"1110_FluidR3_GM_sf2_file\",\n  \"1110_GeneralUserGS_sf2_file\",\n  \"1110_JCLive_sf2_file\",\n  //'1110_SBLive_sf2',\n  //'1110_SoundBlasterOld_sf2',\n  // Tinkle Bell: Percussive\n  \"1120_Aspirin_sf2_file\",\n  \"1120_Chaos_sf2_file\",\n  \"1120_FluidR3_GM_sf2_file\",\n  \"1120_GeneralUserGS_sf2_file\",\n  \"1120_JCLive_sf2_file\",\n  //'1120_SBLive_sf2',\n  //'1120_SoundBlasterOld_sf2',\n  //'1121_SoundBlasterOld_sf2',\n  // Agogo: Percussive\n  \"1130_Aspirin_sf2_file\",\n  \"1130_Chaos_sf2_file\",\n  \"1130_FluidR3_GM_sf2_file\",\n  \"1130_GeneralUserGS_sf2_file\",\n  \"1130_JCLive_sf2_file\",\n  //'1130_SBLive_sf2',\n  //'1130_SoundBlasterOld_sf2',\n  \"1131_FluidR3_GM_sf2_file\",\n  //'1131_SoundBlasterOld_sf2',\n  // Steel Drums: Percussive\n  \"1140_Aspirin_sf2_file\",\n  \"1140_Chaos_sf2_file\",\n  \"1140_FluidR3_GM_sf2_file\",\n  \"1140_GeneralUserGS_sf2_file\",\n  \"1140_JCLive_sf2_file\",\n  //'1140_SBLive_sf2',\n  //'1140_SoundBlasterOld_sf2',\n  \"1141_FluidR3_GM_sf2_file\",\n  // Woodblock: Percussive\n  \"1150_Aspirin_sf2_file\",\n  \"1150_Chaos_sf2_file\",\n  \"1150_FluidR3_GM_sf2_file\",\n  \"1150_GeneralUserGS_sf2_file\",\n  \"1150_JCLive_sf2_file\",\n  //'1150_SBLive_sf2',\n  //'1150_SoundBlasterOld_sf2',\n  \"1151_FluidR3_GM_sf2_file\",\n  \"1151_GeneralUserGS_sf2_file\",\n  \"1152_FluidR3_GM_sf2_file\",\n  \"1152_GeneralUserGS_sf2_file\",\n  // Taiko Drum: Percussive\n  \"1160_Aspirin_sf2_file\",\n  \"1160_Chaos_sf2_file\",\n  \"1160_FluidR3_GM_sf2_file\",\n  \"1160_GeneralUserGS_sf2_file\",\n  \"1160_JCLive_sf2_file\",\n  //'1160_SBLive_sf2',\n  //'1160_SoundBlasterOld_sf2',\n  \"1161_FluidR3_GM_sf2_file\",\n  \"1161_GeneralUserGS_sf2_file\",\n  //'1161_SoundBlasterOld_sf2',\n  \"1162_FluidR3_GM_sf2_file\",\n  \"1162_GeneralUserGS_sf2_file\",\n  \"1163_FluidR3_GM_sf2_file\",\n  // Melodic Tom: Percussive\n  \"1170_Aspirin_sf2_file\",\n  \"1170_Chaos_sf2_file\",\n  \"1170_FluidR3_GM_sf2_file\",\n  \"1170_GeneralUserGS_sf2_file\",\n  \"1170_JCLive_sf2_file\",\n  //'1170_SBLive_sf2',\n  //'1170_SoundBlasterOld_sf2',\n  \"1171_FluidR3_GM_sf2_file\",\n  \"1171_GeneralUserGS_sf2_file\",\n  \"1172_FluidR3_GM_sf2_file\",\n  \"1173_FluidR3_GM_sf2_file\",\n  // Synth Drum: Percussive\n  \"1180_Aspirin_sf2_file\",\n  \"1180_Chaos_sf2_file\",\n  \"1180_FluidR3_GM_sf2_file\",\n  \"1180_GeneralUserGS_sf2_file\",\n  \"1180_JCLive_sf2_file\",\n  //'1180_SBLive_sf2',\n  //'1180_SoundBlasterOld_sf2',\n  \"1181_FluidR3_GM_sf2_file\",\n  \"1181_GeneralUserGS_sf2_file\",\n  //'1181_SoundBlasterOld_sf2',\n  // Reverse Cymbal: Percussive\n  \"1190_Aspirin_sf2_file\",\n  \"1190_Chaos_sf2_file\",\n  \"1190_FluidR3_GM_sf2_file\",\n  \"1190_GeneralUserGS_sf2_file\",\n  \"1190_JCLive_sf2_file\",\n  //'1190_SBLive_sf2',\n  //'1190_SoundBlasterOld_sf2',\n  \"1191_GeneralUserGS_sf2_file\",\n  \"1192_GeneralUserGS_sf2_file\",\n  \"1193_GeneralUserGS_sf2_file\",\n  \"1194_GeneralUserGS_sf2_file\",\n  // Guitar Fret Noise: Sound effects\n  \"1200_Aspirin_sf2_file\",\n  \"1200_Chaos_sf2_file\",\n  \"1200_FluidR3_GM_sf2_file\",\n  \"1200_GeneralUserGS_sf2_file\",\n  \"1200_JCLive_sf2_file\",\n  //'1200_SBLive_sf2',\n  //'1200_SoundBlasterOld_sf2',\n  \"1201_Aspirin_sf2_file\",\n  \"1201_GeneralUserGS_sf2_file\",\n  \"1202_GeneralUserGS_sf2_file\",\n  // Breath Noise: Sound effects\n  \"1210_Aspirin_sf2_file\",\n  \"1210_Chaos_sf2_file\",\n  \"1210_FluidR3_GM_sf2_file\",\n  \"1210_GeneralUserGS_sf2_file\",\n  \"1210_JCLive_sf2_file\",\n  //'1210_SBLive_sf2',\n  //'1210_SoundBlasterOld_sf2',\n  \"1211_Aspirin_sf2_file\",\n  \"1211_GeneralUserGS_sf2_file\",\n  \"1212_GeneralUserGS_sf2_file\",\n  // Seashore: Sound effects\n  \"1220_Aspirin_sf2_file\",\n  \"1220_Chaos_sf2_file\",\n  \"1220_FluidR3_GM_sf2_file\",\n  \"1220_GeneralUserGS_sf2_file\",\n  \"1220_JCLive_sf2_file\",\n  //'1220_SBLive_sf2',\n  //'1220_SoundBlasterOld_sf2',\n  \"1221_Aspirin_sf2_file\",\n  \"1221_GeneralUserGS_sf2_file\",\n  \"1221_JCLive_sf2_file\",\n  \"1222_Aspirin_sf2_file\",\n  \"1222_GeneralUserGS_sf2_file\",\n  \"1223_Aspirin_sf2_file\",\n  \"1223_GeneralUserGS_sf2_file\",\n  \"1224_Aspirin_sf2_file\",\n  \"1224_GeneralUserGS_sf2_file\",\n  \"1225_GeneralUserGS_sf2_file\",\n  \"1226_GeneralUserGS_sf2_file\",\n  // Bird Tweet: Sound effects\n  \"1230_Aspirin_sf2_file\",\n  \"1230_Chaos_sf2_file\",\n  \"1230_FluidR3_GM_sf2_file\",\n  \"1230_GeneralUserGS_sf2_file\",\n  \"1230_JCLive_sf2_file\",\n  //'1230_SBLive_sf2',\n  //'1230_SoundBlasterOld_sf2',\n  \"1231_Aspirin_sf2_file\",\n  \"1231_GeneralUserGS_sf2_file\",\n  \"1232_Aspirin_sf2_file\",\n  \"1232_GeneralUserGS_sf2_file\",\n  \"1233_GeneralUserGS_sf2_file\",\n  \"1234_GeneralUserGS_sf2_file\",\n  // Telephone Ring: Sound effects\n  \"1240_Aspirin_sf2_file\",\n  \"1240_Chaos_sf2_file\",\n  \"1240_FluidR3_GM_sf2_file\",\n  \"1240_GeneralUserGS_sf2_file\",\n  \"1240_JCLive_sf2_file\",\n  //'1240_SBLive_sf2',\n  //'1240_SoundBlasterOld_sf2',\n  \"1241_Aspirin_sf2_file\",\n  \"1241_GeneralUserGS_sf2_file\",\n  \"1242_Aspirin_sf2_file\",\n  \"1242_GeneralUserGS_sf2_file\",\n  \"1243_Aspirin_sf2_file\",\n  \"1243_GeneralUserGS_sf2_file\",\n  \"1244_Aspirin_sf2_file\",\n  \"1244_GeneralUserGS_sf2_file\",\n  // Helicopter: Sound effects\n  \"1250_Aspirin_sf2_file\",\n  \"1250_Chaos_sf2_file\",\n  \"1250_FluidR3_GM_sf2_file\",\n  \"1250_GeneralUserGS_sf2_file\",\n  \"1250_JCLive_sf2_file\",\n  //'1250_SBLive_sf2',\n  //'1250_SoundBlasterOld_sf2',\n  \"1251_Aspirin_sf2_file\",\n  \"1251_FluidR3_GM_sf2_file\",\n  \"1251_GeneralUserGS_sf2_file\",\n  \"1252_Aspirin_sf2_file\",\n  \"1252_FluidR3_GM_sf2_file\",\n  \"1252_GeneralUserGS_sf2_file\",\n  \"1253_Aspirin_sf2_file\",\n  \"1253_GeneralUserGS_sf2_file\",\n  \"1254_Aspirin_sf2_file\",\n  \"1254_GeneralUserGS_sf2_file\",\n  \"1255_Aspirin_sf2_file\",\n  \"1255_GeneralUserGS_sf2_file\",\n  \"1256_Aspirin_sf2_file\",\n  \"1256_GeneralUserGS_sf2_file\",\n  \"1257_Aspirin_sf2_file\",\n  \"1257_GeneralUserGS_sf2_file\",\n  \"1258_Aspirin_sf2_file\",\n  \"1258_GeneralUserGS_sf2_file\",\n  \"1259_GeneralUserGS_sf2_file\",\n  // Applause: Sound effects\n  \"1260_Aspirin_sf2_file\",\n  \"1260_Chaos_sf2_file\",\n  \"1260_FluidR3_GM_sf2_file\",\n  \"1260_GeneralUserGS_sf2_file\",\n  \"1260_JCLive_sf2_file\",\n  //'1260_SBLive_sf2',\n  //'1260_SoundBlasterOld_sf2',\n  \"1261_Aspirin_sf2_file\",\n  \"1261_GeneralUserGS_sf2_file\",\n  \"1262_Aspirin_sf2_file\",\n  \"1262_GeneralUserGS_sf2_file\",\n  \"1263_Aspirin_sf2_file\",\n  \"1263_GeneralUserGS_sf2_file\",\n  \"1264_Aspirin_sf2_file\",\n  \"1264_GeneralUserGS_sf2_file\",\n  \"1265_Aspirin_sf2_file\",\n  \"1265_GeneralUserGS_sf2_file\",\n  // Gunshot: Sound effects\n  \"1270_Aspirin_sf2_file\",\n  \"1270_Chaos_sf2_file\",\n  \"1270_FluidR3_GM_sf2_file\",\n  \"1270_GeneralUserGS_sf2_file\",\n  \"1270_JCLive_sf2_file\",\n  //'1270_SBLive_sf2',\n  //'1270_SoundBlasterOld_sf2',\n  \"1271_Aspirin_sf2_file\",\n  \"1271_GeneralUserGS_sf2_file\",\n  \"1272_Aspirin_sf2_file\",\n  \"1272_GeneralUserGS_sf2_file\",\n  \"1273_GeneralUserGS_sf2_file\",\n  \"1274_GeneralUserGS_sf2_file\"\n], drums = [\n  ////'35_0_SBLive_sf2'\n  \"35_0_Chaos_sf2_file\",\n  \"35_12_JCLive_sf2_file\",\n  \"35_16_JCLive_sf2_file\",\n  \"35_18_JCLive_sf2_file\",\n  \"35_4_Chaos_sf2_file\",\n  //'36_0_SBLive_sf2',\n  \"36_12_JCLive_sf2_file\",\n  \"36_16_JCLive_sf2_file\",\n  \"36_18_JCLive_sf2_file\",\n  \"36_4_Chaos_sf2_file\",\n  //'37_0_SBLive_sf2',\n  \"37_12_JCLive_sf2_file\",\n  \"37_16_JCLive_sf2_file\",\n  \"37_18_JCLive_sf2_file\",\n  \"37_4_Chaos_sf2_file\",\n  //'38_0_SBLive_sf2',\n  \"38_12_JCLive_sf2_file\",\n  \"38_16_JCLive_sf2_file\",\n  \"38_18_JCLive_sf2_file\",\n  \"38_4_Chaos_sf2_file\",\n  //'39_0_SBLive_sf2',\n  \"39_12_JCLive_sf2_file\",\n  \"39_16_JCLive_sf2_file\",\n  \"39_18_JCLive_sf2_file\",\n  \"39_4_Chaos_sf2_file\",\n  //'40_0_SBLive_sf2',\n  \"40_12_JCLive_sf2_file\",\n  \"40_16_JCLive_sf2_file\",\n  \"40_18_JCLive_sf2_file\",\n  \"40_4_Chaos_sf2_file\",\n  //'41_0_SBLive_sf2',\n  \"41_12_JCLive_sf2_file\",\n  \"41_16_JCLive_sf2_file\",\n  \"41_18_JCLive_sf2_file\",\n  \"41_4_Chaos_sf2_file\",\n  //'42_0_SBLive_sf2',\n  \"42_12_JCLive_sf2_file\",\n  \"42_16_JCLive_sf2_file\",\n  \"42_18_JCLive_sf2_file\",\n  \"42_4_Chaos_sf2_file\",\n  //'43_0_SBLive_sf2',\n  \"43_12_JCLive_sf2_file\",\n  \"43_16_JCLive_sf2_file\",\n  \"43_18_JCLive_sf2_file\",\n  \"43_4_Chaos_sf2_file\",\n  //'44_0_SBLive_sf2',\n  \"44_12_JCLive_sf2_file\",\n  \"44_16_JCLive_sf2_file\",\n  \"44_18_JCLive_sf2_file\",\n  \"44_4_Chaos_sf2_file\",\n  //'45_0_SBLive_sf2',\n  \"45_12_JCLive_sf2_file\",\n  \"45_16_JCLive_sf2_file\",\n  \"45_18_JCLive_sf2_file\",\n  \"45_4_Chaos_sf2_file\",\n  //'46_0_SBLive_sf2',\n  \"46_12_JCLive_sf2_file\",\n  \"46_16_JCLive_sf2_file\",\n  \"46_18_JCLive_sf2_file\",\n  \"46_4_Chaos_sf2_file\",\n  //'47_0_SBLive_sf2',\n  \"47_12_JCLive_sf2_file\",\n  \"47_16_JCLive_sf2_file\",\n  \"47_18_JCLive_sf2_file\",\n  \"47_4_Chaos_sf2_file\",\n  //'48_0_SBLive_sf2',\n  \"48_12_JCLive_sf2_file\",\n  \"48_16_JCLive_sf2_file\",\n  \"48_18_JCLive_sf2_file\",\n  \"48_4_Chaos_sf2_file\",\n  //'49_0_SBLive_sf2',\n  \"49_12_JCLive_sf2_file\",\n  \"49_16_JCLive_sf2_file\",\n  \"49_18_JCLive_sf2_file\",\n  \"49_4_Chaos_sf2_file\",\n  //'50_0_SBLive_sf2',\n  \"50_12_JCLive_sf2_file\",\n  \"50_16_JCLive_sf2_file\",\n  \"50_18_JCLive_sf2_file\",\n  \"50_4_Chaos_sf2_file\",\n  //'51_0_SBLive_sf2',\n  \"51_12_JCLive_sf2_file\",\n  \"51_16_JCLive_sf2_file\",\n  \"51_18_JCLive_sf2_file\",\n  \"51_4_Chaos_sf2_file\",\n  //'52_0_SBLive_sf2',\n  \"52_12_JCLive_sf2_file\",\n  \"52_16_JCLive_sf2_file\",\n  \"52_18_JCLive_sf2_file\",\n  \"52_4_Chaos_sf2_file\",\n  //'53_0_SBLive_sf2',\n  \"53_12_JCLive_sf2_file\",\n  \"53_16_JCLive_sf2_file\",\n  \"53_18_JCLive_sf2_file\",\n  \"53_4_Chaos_sf2_file\",\n  //'54_0_SBLive_sf2',\n  \"54_12_JCLive_sf2_file\",\n  \"54_16_JCLive_sf2_file\",\n  \"54_18_JCLive_sf2_file\",\n  \"54_4_Chaos_sf2_file\",\n  //'55_0_SBLive_sf2',\n  \"55_12_JCLive_sf2_file\",\n  \"55_16_JCLive_sf2_file\",\n  \"55_18_JCLive_sf2_file\",\n  \"55_4_Chaos_sf2_file\",\n  //'56_0_SBLive_sf2',\n  \"56_12_JCLive_sf2_file\",\n  \"56_16_JCLive_sf2_file\",\n  \"56_18_JCLive_sf2_file\",\n  \"56_4_Chaos_sf2_file\",\n  //'57_0_SBLive_sf2',\n  \"57_12_JCLive_sf2_file\",\n  \"57_16_JCLive_sf2_file\",\n  \"57_18_JCLive_sf2_file\",\n  \"57_4_Chaos_sf2_file\",\n  //'58_0_SBLive_sf2',\n  \"58_12_JCLive_sf2_file\",\n  \"58_16_JCLive_sf2_file\",\n  \"58_18_JCLive_sf2_file\",\n  \"58_4_Chaos_sf2_file\",\n  //'59_0_SBLive_sf2',\n  \"59_12_JCLive_sf2_file\",\n  \"59_16_JCLive_sf2_file\",\n  \"59_18_JCLive_sf2_file\",\n  \"59_4_Chaos_sf2_file\",\n  //'60_0_SBLive_sf2',\n  \"60_12_JCLive_sf2_file\",\n  \"60_16_JCLive_sf2_file\",\n  \"60_18_JCLive_sf2_file\",\n  \"60_4_Chaos_sf2_file\",\n  //'61_0_SBLive_sf2',\n  \"61_12_JCLive_sf2_file\",\n  \"61_16_JCLive_sf2_file\",\n  \"61_18_JCLive_sf2_file\",\n  \"61_4_Chaos_sf2_file\",\n  //'62_0_SBLive_sf2',\n  \"62_12_JCLive_sf2_file\",\n  \"62_16_JCLive_sf2_file\",\n  \"62_18_JCLive_sf2_file\",\n  \"62_4_Chaos_sf2_file\",\n  //'63_0_SBLive_sf2',\n  \"63_12_JCLive_sf2_file\",\n  \"63_16_JCLive_sf2_file\",\n  \"63_18_JCLive_sf2_file\",\n  \"63_4_Chaos_sf2_file\",\n  //'64_0_SBLive_sf2',\n  \"64_12_JCLive_sf2_file\",\n  \"64_16_JCLive_sf2_file\",\n  \"64_18_JCLive_sf2_file\",\n  \"64_4_Chaos_sf2_file\",\n  //'65_0_SBLive_sf2',\n  \"65_12_JCLive_sf2_file\",\n  \"65_16_JCLive_sf2_file\",\n  \"65_18_JCLive_sf2_file\",\n  \"65_4_Chaos_sf2_file\",\n  //'66_0_SBLive_sf2',\n  \"66_12_JCLive_sf2_file\",\n  \"66_16_JCLive_sf2_file\",\n  \"66_18_JCLive_sf2_file\",\n  \"66_4_Chaos_sf2_file\",\n  //'67_0_SBLive_sf2',\n  \"67_12_JCLive_sf2_file\",\n  \"67_16_JCLive_sf2_file\",\n  \"67_18_JCLive_sf2_file\",\n  \"67_4_Chaos_sf2_file\",\n  //'68_0_SBLive_sf2',\n  \"68_12_JCLive_sf2_file\",\n  \"68_16_JCLive_sf2_file\",\n  \"68_18_JCLive_sf2_file\",\n  \"68_4_Chaos_sf2_file\",\n  //'69_0_SBLive_sf2',\n  \"69_12_JCLive_sf2_file\",\n  \"69_16_JCLive_sf2_file\",\n  \"69_18_JCLive_sf2_file\",\n  \"69_4_Chaos_sf2_file\",\n  //'70_0_SBLive_sf2',\n  \"70_12_JCLive_sf2_file\",\n  \"70_16_JCLive_sf2_file\",\n  \"70_18_JCLive_sf2_file\",\n  \"70_4_Chaos_sf2_file\",\n  //'71_0_SBLive_sf2',\n  \"71_12_JCLive_sf2_file\",\n  \"71_16_JCLive_sf2_file\",\n  \"71_18_JCLive_sf2_file\",\n  \"71_4_Chaos_sf2_file\",\n  //'72_0_SBLive_sf2',\n  \"72_12_JCLive_sf2_file\",\n  \"72_16_JCLive_sf2_file\",\n  \"72_18_JCLive_sf2_file\",\n  \"72_4_Chaos_sf2_file\",\n  //'73_0_SBLive_sf2',\n  \"73_12_JCLive_sf2_file\",\n  \"73_16_JCLive_sf2_file\",\n  \"73_18_JCLive_sf2_file\",\n  \"73_4_Chaos_sf2_file\",\n  //'74_0_SBLive_sf2',\n  \"74_12_JCLive_sf2_file\",\n  \"74_16_JCLive_sf2_file\",\n  \"74_18_JCLive_sf2_file\",\n  \"74_4_Chaos_sf2_file\",\n  //'75_0_SBLive_sf2',\n  \"75_12_JCLive_sf2_file\",\n  \"75_16_JCLive_sf2_file\",\n  \"75_18_JCLive_sf2_file\",\n  \"75_4_Chaos_sf2_file\",\n  //'76_0_SBLive_sf2',\n  \"76_12_JCLive_sf2_file\",\n  \"76_16_JCLive_sf2_file\",\n  \"76_18_JCLive_sf2_file\",\n  \"76_4_Chaos_sf2_file\",\n  //'77_0_SBLive_sf2',\n  \"77_12_JCLive_sf2_file\",\n  \"77_16_JCLive_sf2_file\",\n  \"77_18_JCLive_sf2_file\",\n  \"77_4_Chaos_sf2_file\",\n  //'78_0_SBLive_sf2',\n  \"78_12_JCLive_sf2_file\",\n  \"78_16_JCLive_sf2_file\",\n  \"78_18_JCLive_sf2_file\",\n  \"78_4_Chaos_sf2_file\",\n  //'79_0_SBLive_sf2',\n  \"79_12_JCLive_sf2_file\",\n  \"79_16_JCLive_sf2_file\",\n  \"79_18_JCLive_sf2_file\",\n  \"79_4_Chaos_sf2_file\",\n  //'80_0_SBLive_sf2',\n  \"80_12_JCLive_sf2_file\",\n  \"80_16_JCLive_sf2_file\",\n  \"80_18_JCLive_sf2_file\",\n  \"80_4_Chaos_sf2_file\",\n  //'81_0_SBLive_sf2',\n  \"81_12_JCLive_sf2_file\",\n  \"81_16_JCLive_sf2_file\",\n  \"81_18_JCLive_sf2_file\",\n  \"81_4_Chaos_sf2_file\"\n], instrumentNames = [];\ninstrumentNames[0] = \"Acoustic Grand Piano: Piano\";\ninstrumentNames[1] = \"Bright Acoustic Piano: Piano\";\ninstrumentNames[2] = \"Electric Grand Piano: Piano\";\ninstrumentNames[3] = \"Honky-tonk Piano: Piano\";\ninstrumentNames[4] = \"Electric Piano 1: Piano\";\ninstrumentNames[5] = \"Electric Piano 2: Piano\";\ninstrumentNames[6] = \"Harpsichord: Piano\";\ninstrumentNames[7] = \"Clavinet: Piano\";\ninstrumentNames[8] = \"Celesta: Chromatic Percussion\";\ninstrumentNames[9] = \"Glockenspiel: Chromatic Percussion\";\ninstrumentNames[10] = \"Music Box: Chromatic Percussion\";\ninstrumentNames[11] = \"Vibraphone: Chromatic Percussion\";\ninstrumentNames[12] = \"Marimba: Chromatic Percussion\";\ninstrumentNames[13] = \"Xylophone: Chromatic Percussion\";\ninstrumentNames[14] = \"Tubular Bells: Chromatic Percussion\";\ninstrumentNames[15] = \"Dulcimer: Chromatic Percussion\";\ninstrumentNames[16] = \"Drawbar Organ: Organ\";\ninstrumentNames[17] = \"Percussive Organ: Organ\";\ninstrumentNames[18] = \"Rock Organ: Organ\";\ninstrumentNames[19] = \"Church Organ: Organ\";\ninstrumentNames[20] = \"Reed Organ: Organ\";\ninstrumentNames[21] = \"Accordion: Organ\";\ninstrumentNames[22] = \"Harmonica: Organ\";\ninstrumentNames[23] = \"Tango Accordion: Organ\";\ninstrumentNames[24] = \"Acoustic Guitar (nylon): Guitar\";\ninstrumentNames[25] = \"Acoustic Guitar (steel): Guitar\";\ninstrumentNames[26] = \"Electric Guitar (jazz): Guitar\";\ninstrumentNames[27] = \"Electric Guitar (clean): Guitar\";\ninstrumentNames[28] = \"Electric Guitar (muted): Guitar\";\ninstrumentNames[29] = \"Overdriven Guitar: Guitar\";\ninstrumentNames[30] = \"Distortion Guitar: Guitar\";\ninstrumentNames[31] = \"Guitar Harmonics: Guitar\";\ninstrumentNames[32] = \"Acoustic Bass: Bass\";\ninstrumentNames[33] = \"Electric Bass (finger): Bass\";\ninstrumentNames[34] = \"Electric Bass (pick): Bass\";\ninstrumentNames[35] = \"Fretless Bass: Bass\";\ninstrumentNames[36] = \"Slap Bass 1: Bass\";\ninstrumentNames[37] = \"Slap Bass 2: Bass\";\ninstrumentNames[38] = \"Synth Bass 1: Bass\";\ninstrumentNames[39] = \"Synth Bass 2: Bass\";\ninstrumentNames[40] = \"Violin: Strings\";\ninstrumentNames[41] = \"Viola: Strings\";\ninstrumentNames[42] = \"Cello: Strings\";\ninstrumentNames[43] = \"Contrabass: Strings\";\ninstrumentNames[44] = \"Tremolo Strings: Strings\";\ninstrumentNames[45] = \"Pizzicato Strings: Strings\";\ninstrumentNames[46] = \"Orchestral Harp: Strings\";\ninstrumentNames[47] = \"Timpani: Strings\";\ninstrumentNames[48] = \"String Ensemble 1: Ensemble\";\ninstrumentNames[49] = \"String Ensemble 2: Ensemble\";\ninstrumentNames[50] = \"Synth Strings 1: Ensemble\";\ninstrumentNames[51] = \"Synth Strings 2: Ensemble\";\ninstrumentNames[52] = \"Choir Aahs: Ensemble\";\ninstrumentNames[53] = \"Voice Oohs: Ensemble\";\ninstrumentNames[54] = \"Synth Choir: Ensemble\";\ninstrumentNames[55] = \"Orchestra Hit: Ensemble\";\ninstrumentNames[56] = \"Trumpet: Brass\";\ninstrumentNames[57] = \"Trombone: Brass\";\ninstrumentNames[58] = \"Tuba: Brass\";\ninstrumentNames[59] = \"Muted Trumpet: Brass\";\ninstrumentNames[60] = \"French Horn: Brass\";\ninstrumentNames[61] = \"Brass Section: Brass\";\ninstrumentNames[62] = \"Synth Brass 1: Brass\";\ninstrumentNames[63] = \"Synth Brass 2: Brass\";\ninstrumentNames[64] = \"Soprano Sax: Reed\";\ninstrumentNames[65] = \"Alto Sax: Reed\";\ninstrumentNames[66] = \"Tenor Sax: Reed\";\ninstrumentNames[67] = \"Baritone Sax: Reed\";\ninstrumentNames[68] = \"Oboe: Reed\";\ninstrumentNames[69] = \"English Horn: Reed\";\ninstrumentNames[70] = \"Bassoon: Reed\";\ninstrumentNames[71] = \"Clarinet: Reed\";\ninstrumentNames[72] = \"Piccolo: Pipe\";\ninstrumentNames[73] = \"Flute: Pipe\";\ninstrumentNames[74] = \"Recorder: Pipe\";\ninstrumentNames[75] = \"Pan Flute: Pipe\";\ninstrumentNames[76] = \"Blown bottle: Pipe\";\ninstrumentNames[77] = \"Shakuhachi: Pipe\";\ninstrumentNames[78] = \"Whistle: Pipe\";\ninstrumentNames[79] = \"Ocarina: Pipe\";\ninstrumentNames[80] = \"Lead 1 (square): Synth Lead\";\ninstrumentNames[81] = \"Lead 2 (sawtooth): Synth Lead\";\ninstrumentNames[82] = \"Lead 3 (calliope): Synth Lead\";\ninstrumentNames[83] = \"Lead 4 (chiff): Synth Lead\";\ninstrumentNames[84] = \"Lead 5 (charang): Synth Lead\";\ninstrumentNames[85] = \"Lead 6 (voice): Synth Lead\";\ninstrumentNames[86] = \"Lead 7 (fifths): Synth Lead\";\ninstrumentNames[87] = \"Lead 8 (bass + lead): Synth Lead\";\ninstrumentNames[88] = \"Pad 1 (new age): Synth Pad\";\ninstrumentNames[89] = \"Pad 2 (warm): Synth Pad\";\ninstrumentNames[90] = \"Pad 3 (polysynth): Synth Pad\";\ninstrumentNames[91] = \"Pad 4 (choir): Synth Pad\";\ninstrumentNames[92] = \"Pad 5 (bowed): Synth Pad\";\ninstrumentNames[93] = \"Pad 6 (metallic): Synth Pad\";\ninstrumentNames[94] = \"Pad 7 (halo): Synth Pad\";\ninstrumentNames[95] = \"Pad 8 (sweep): Synth Pad\";\ninstrumentNames[96] = \"FX 1 (rain): Synth Effects\";\ninstrumentNames[97] = \"FX 2 (soundtrack): Synth Effects\";\ninstrumentNames[98] = \"FX 3 (crystal): Synth Effects\";\ninstrumentNames[99] = \"FX 4 (atmosphere): Synth Effects\";\ninstrumentNames[100] = \"FX 5 (brightness): Synth Effects\";\ninstrumentNames[101] = \"FX 6 (goblins): Synth Effects\";\ninstrumentNames[102] = \"FX 7 (echoes): Synth Effects\";\ninstrumentNames[103] = \"FX 8 (sci-fi): Synth Effects\";\ninstrumentNames[104] = \"Sitar: Ethnic\";\ninstrumentNames[105] = \"Banjo: Ethnic\";\ninstrumentNames[106] = \"Shamisen: Ethnic\";\ninstrumentNames[107] = \"Koto: Ethnic\";\ninstrumentNames[108] = \"Kalimba: Ethnic\";\ninstrumentNames[109] = \"Bagpipe: Ethnic\";\ninstrumentNames[110] = \"Fiddle: Ethnic\";\ninstrumentNames[111] = \"Shanai: Ethnic\";\ninstrumentNames[112] = \"Tinkle Bell: Percussive\";\ninstrumentNames[113] = \"Agogo: Percussive\";\ninstrumentNames[114] = \"Steel Drums: Percussive\";\ninstrumentNames[115] = \"Woodblock: Percussive\";\ninstrumentNames[116] = \"Taiko Drum: Percussive\";\ninstrumentNames[117] = \"Melodic Tom: Percussive\";\ninstrumentNames[118] = \"Synth Drum: Percussive\";\ninstrumentNames[119] = \"Reverse Cymbal: Percussive\";\ninstrumentNames[120] = \"Guitar Fret Noise: Sound effects\";\ninstrumentNames[121] = \"Breath Noise: Sound effects\";\ninstrumentNames[122] = \"Seashore: Sound effects\";\ninstrumentNames[123] = \"Bird Tweet: Sound effects\";\ninstrumentNames[124] = \"Telephone Ring: Sound effects\";\ninstrumentNames[125] = \"Helicopter: Sound effects\";\ninstrumentNames[126] = \"Applause: Sound effects\";\ninstrumentNames[127] = \"Gunshot: Sound effects\";\nconst list = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  drums,\n  instrumentNames,\n  instruments\n}, Symbol.toStringTag, { value: \"Module\" }));\nPattern.prototype.soundfont = function(e, l = 0) {\n  return this.onTrigger((s, f, a, r) => {\n    const n = getAudioContext(), i = getPlayableNoteValue(s), G = e.presets[l % e.presets.length], u = r, o = [n, G, noteToMidi(i), u];\n    startPresetNote(...o)(u + s.duration);\n  });\n};\nconst soundfontCache = /* @__PURE__ */ new Map();\nfunction loadSoundfont(e) {\n  if (soundfontCache.get(e))\n    return soundfontCache.get(e);\n  const l = loadSoundfont$1(e);\n  return soundfontCache.set(e, l), l;\n}\nexport {\n  getFontBufferSource,\n  loadSoundfont,\n  registerSoundfonts,\n  setSoundfontUrl,\n  list as soundfontList,\n  c as startPresetNote\n};\n"],
  "mappings": "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A,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAxnDA,IAwnDG,QAAQ;AAAA;AAAA,EAET;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAr2DA,IAq2DG,kBAAkB,CAAC;AACtB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,CAAC,IAAI;AACrB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,EAAE,IAAI;AACtB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,GAAG,IAAI;AACvB,IAAM,OAAuB,OAAO,OAAuB,OAAO,eAAe;AAAA,EAC/E,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AACF,GAAG,OAAO,aAAa,EAAE,OAAO,SAAS,CAAC,CAAC;AAC3C,EAAQ,UAAU,YAAY,SAAS,GAAGA,KAAI,GAAG;AAC/C,SAAO,KAAK,UAAU,CAAC,GAAGC,IAAG,GAAG,MAAM;AACpC,UAAM,IAAI,EAAgB,GAAG,IAAI,GAAqB,CAAC,GAAGC,KAAI,EAAE,QAAQF,KAAI,EAAE,QAAQ,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,GAAGE,IAAG,GAAW,CAAC,GAAG,CAAC;AACjI,OAAgB,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ;AAAA,EACtC,CAAC;AACH;AACA,IAAM,iBAAiC,oBAAI,IAAI;AAC/C,SAAS,cAAc,GAAG;AACxB,MAAI,eAAe,IAAI,CAAC;AACtB,WAAO,eAAe,IAAI,CAAC;AAC7B,QAAMF,KAAI,GAAgB,CAAC;AAC3B,SAAO,eAAe,IAAI,GAAGA,EAAC,GAAGA;AACnC;",
  "names": ["root", "factory", "exports", "module", "define", "amd", "window", "installedModules", "__webpack_require__", "moduleId", "i", "l", "modules", "call", "m", "c", "d", "name", "getter", "o", "Object", "defineProperty", "enumerable", "get", "r", "Symbol", "toStringTag", "value", "t", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "prototype", "hasOwnProperty", "p", "s", "SF2Chunk", "_RIFFChunk", "chunk", "_this", "e", "this", "_getPrototypeOf", "id", "length", "buffer", "subChunks", "_assertThisInitialized", "u", "map", "subChunk", "RIFFChunk", "ParseError", "concat", "info", "reduce", "target", "SF_VERSION_LENGTH", "getInt16", "getString", "ifil", "INAM", "version", "soundEngine", "isng", "rom", "irom", "romVersion", "iver", "creationDate", "ICRD", "author", "IENG", "product", "IPRD", "copyright", "ICOP", "comments", "ICMT", "createdBy", "ISFT", "sampleChunk", "presetHeaders", "getPresetHeaders", "presetZones", "getZones", "presetModulators", "getModulators", "presetGenerators", "getGenerators", "instrumentHeaders", "getInstrumentHeaders", "instrumentZones", "instrumentModulators", "instrumentGenerators", "sampleHeaders", "getSampleHeaders", "f", "__webpack_exports__", "_riff__WEBPACK_IMPORTED_MODULE_0__", "_types__WEBPACK_IMPORTED_MODULE_1__", "_constants__WEBPACK_IMPORTED_MODULE_2__", "PRESET_TYPES_BLACKLIST", "GeneratorType", "StartAddrsOffset", "EndAddrsOffset", "StartLoopAddrsOffset", "EndLoopAddrsOffset", "StartAddrsCoarseOffset", "EndAddrsCoarseOffset", "StartLoopAddrsCoarseOffset", "KeyNum", "Velocity", "EndLoopAddrsCoarseOffset", "SampleModes", "ExclusiveClass", "OverridingRootKey", "INSTRUMENT_TYPES_BLACKLIST", "Unused1", "Unused2", "Unused3", "Unused4", "Reserved1", "Reserved2", "Reserved3", "RANGE_TYPES", "KeyRange", "VelRange", "type", "SF_GENERATOR_SIZE", "iterate", "iterator", "includes", "range", "lo", "getByte", "hi", "getInt16BE", "_instruments__WEBPACK_IMPORTED_MODULE_0__", "_presets__WEBPACK_IMPORTED_MODULE_1__", "_samples__WEBPACK_IMPORTED_MODULE_2__", "_generators__WEBPACK_IMPORTED_MODULE_3__", "_modulators__WEBPACK_IMPORTED_MODULE_4__", "_zones__WEBPACK_IMPORTED_MODULE_5__", "_constants__WEBPACK_IMPORTED_MODULE_1__", "SF_INSTRUMENT_HEADER_SIZE", "bagIndex", "_headers__WEBPACK_IMPORTED_MODULE_0__", "getModulatorValue", "polarity", "direction", "palette", "index", "SF_MODULATOR_SIZE", "source", "valueSource", "transform", "SF_PRESET_HEADER_SIZE", "preset", "bank", "library", "getUInt32", "genre", "morphology", "SF_SAMPLE_HEADER_SIZE", "start", "end", "startLoop", "endLoop", "sampleRate", "originalPitch", "pitchCorrection", "getChar", "link", "getItemsInZone", "_types__WEBPACK_IMPORTED_MODULE_2__", "SF_BAG_SIZE", "generatorIndex", "modulatorIndex", "headers", "zones", "itemModulators", "itemGenerators", "references", "referenceType", "items", "header", "next", "zoneItems", "globalZone", "j", "modulators", "generators", "keyRange", "referenceId", "reference", "push", "zone", "getZone", "itemsObject", "item", "DEFAULT_SAMPLE_RATE", "_types__WEBPACK_IMPORTED_MODULE_0__", "__WEBPACK_IMPORT_KEY__", "_chunk__WEBPACK_IMPORTED_MODULE_1__", "_soundFont2__WEBPACK_IMPORTED_MODULE_3__", "ChunkIterator", "arguments", "_defineProperty", "position", "callback", "text", "getStringFromBuffer", "getBuffer", "subarray", "_chunkIterator__WEBPACK_IMPORTED_MODULE_0__", "_parseError__WEBPACK_IMPORTED_MODULE_1__", "_parser__WEBPACK_IMPORTED_MODULE_2__", "_riffChunk__WEBPACK_IMPORTED_MODULE_3__", "_Error", "message", "expected", "received", "_possibleConstructorReturn", "_wrapNativeSuper", "Error", "parseBuffer", "getChunk", "getChunkLength", "getSubChunks", "getChunkId", "_parseError__WEBPACK_IMPORTED_MODULE_0__", "_utils_buffer__WEBPACK_IMPORTED_MODULE_1__", "_riffChunk__WEBPACK_IMPORTED_MODULE_2__", "signature", "newBuffer", "chunks", "SoundFont2", "parsedBuffer", "metaData", "getMetaData", "sampleData", "getSampleData", "presetData", "getPresetData", "samples", "getSamples", "instruments", "getInstruments", "presets", "getPresets", "banks", "getBanks", "_createClass", "memoizedKeyNumber", "memoizedBankNumber", "memoizedPresetNumber", "memoize", "keyNumber", "bankNumber", "presetNumber", "presetZone", "find", "isKeyInRange", "instrument", "instrumentZone", "sample", "_objectSpread", "_this$presetData", "Instrument", "filter", "_this$presetData2", "SampleId", "_this2", "data", "Int16Array", "Uint8Array", "DEFAULT_GENERATOR_VALUES", "_DEFAULT_GENERATOR_VA", "ModLFOToPitch", "VibLFOToPitch", "ModEnvToPitch", "InitialFilterFc", "InitialFilterQ", "ModLFOToFilterFc", "ModEnvToFilterFc", "ModLFOToVolume", "ChorusEffectsSend", "ReverbEffectsSend", "Pan", "DelayModLFO", "FreqModLFO", "DelayVibLFO", "FreqVibLFO", "DelayModEnv", "AttackModEnv", "HoldModEnv", "DecayModEnv", "SustainModEnv", "ReleaseModEnv", "KeyNumToModEnvHold", "KeyNumToModEnvDecay", "DelayVolEnv", "AttackVolEnv", "HoldVolEnv", "DecayVolEnv", "SustainVolEnv", "ReleaseVolEnv", "KeyNumToVolEnvHold", "KeyNumToVolEnvDecay", "InitialAttenuation", "CoarseTune", "FineTune", "ScaleTuning", "_bank__WEBPACK_IMPORTED_MODULE_0__", "_generator__WEBPACK_IMPORTED_MODULE_1__", "_instrument__WEBPACK_IMPORTED_MODULE_2__", "indexOf", "_key__WEBPACK_IMPORTED_MODULE_3__", "_metaData__WEBPACK_IMPORTED_MODULE_4__", "_modulator__WEBPACK_IMPORTED_MODULE_5__", "_preset__WEBPACK_IMPORTED_MODULE_6__", "_presetData__WEBPACK_IMPORTED_MODULE_7__", "_sample__WEBPACK_IMPORTED_MODULE_8__", "_zone__WEBPACK_IMPORTED_MODULE_9__", "ControllerType", "ControllerPolarity", "ControllerDirection", "ControllerPalette", "Controller", "TransformType", "DEFAULT_INSTRUMENT_MODULATORS", "_generator__WEBPACK_IMPORTED_MODULE_0__", "Concave", "Unipolar", "Decreasing", "GeneralController", "NoteOnVelocity", "Linear", "Increasing", "NoController", "ChannelPressure", "MidiController", "Bipolar", "PitchWheel", "PitchWheelSensitivity", "SampleType", "TextDecoder", "decode", "split", "trim", "_buffer__WEBPACK_IMPORTED_MODULE_0__", "_memoize__WEBPACK_IMPORTED_MODULE_1__", "originalFunction", "memo", "_len", "args", "Array", "_key", "serializedArgs", "JSON", "stringify", "output", "apply", "l", "m", "l", "m", "Z", "l", "m", "Z", "X", "l", "l", "m", "lt", "lt", "P", "P", "l", "$", "l", "f", "$", "W", "l", "f", "w", "S", "P", "et", "ot", "lt", "l", "f", "l", "f", "W", "w", "S", "P", "q", "C", "_", "T", "j", "m", "L", "J", "D", "Q", "X", "Y", "Fe", "B", "re", "ae", "V", "U", "ue", "me", "l", "f", "W", "w", "S", "T", "P", "q", "C", "_", "j", "L", "be", "W", "$", "j", "f", "l", "w", "D", "P", "W", "S", "Q", "G", "l", "f", "T", "w", "O", "J", "W", "q", "L", "P", "Z", "B", "j", "S", "V", "U", "R", "C", "C", "W", "l", "f", "G", "C", "U", "S", "m", "R"]
}
