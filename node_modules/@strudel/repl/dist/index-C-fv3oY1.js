typeof BigInt > "u" && (BigInt = function(t) {
  if (isNaN(t)) throw new Error("");
  return t;
});
const je = BigInt(0), ze = BigInt(1), Po = BigInt(2), kp = BigInt(5), Yn = BigInt(10), z3 = 2e3, ve = {
  s: ze,
  n: je,
  d: ze
};
function Ps(t, e) {
  try {
    t = BigInt(t);
  } catch {
    throw Ys();
  }
  return t * e;
}
function Ur(t) {
  return typeof t == "bigint" ? t : Math.floor(t);
}
function It(t, e) {
  if (e === je)
    throw Kf();
  const n = Object.create(Zt.prototype);
  n.s = t < je ? -ze : ze, t = t < je ? -t : t;
  const r = Di(t, e);
  return n.n = t / r, n.d = e / r, n;
}
function Hi(t) {
  const e = {};
  let n = t, r = Po, s = kp - ze;
  for (; s <= n; ) {
    for (; n % r === je; )
      n /= r, e[r] = (e[r] || je) + ze;
    s += ze + Po * r++;
  }
  return n !== t ? n > 1 && (e[n] = (e[n] || je) + ze) : e[t] = (e[t] || je) + ze, e;
}
const yn = function(t, e) {
  let n = je, r = ze, s = ze;
  if (t != null) if (e !== void 0) {
    if (typeof t == "bigint")
      n = t;
    else {
      if (isNaN(t))
        throw Ys();
      if (t % 1 !== 0)
        throw qm();
      n = BigInt(t);
    }
    if (typeof e == "bigint")
      r = e;
    else {
      if (isNaN(e))
        throw Ys();
      if (e % 1 !== 0)
        throw qm();
      r = BigInt(e);
    }
    s = n * r;
  } else if (typeof t == "object") {
    if ("d" in t && "n" in t)
      n = BigInt(t.n), r = BigInt(t.d), "s" in t && (n *= BigInt(t.s));
    else if (0 in t)
      n = BigInt(t[0]), 1 in t && (r = BigInt(t[1]));
    else if (typeof t == "bigint")
      n = t;
    else
      throw Ys();
    s = n * r;
  } else if (typeof t == "number") {
    if (isNaN(t))
      throw Ys();
    if (t < 0 && (s = -ze, t = -t), t % 1 === 0)
      n = BigInt(t);
    else if (t > 0) {
      let i = 1, a = 0, o = 1, l = 1, u = 1, h = 1e7;
      for (t >= 1 && (i = 10 ** Math.floor(1 + Math.log10(t)), t /= i); o <= h && u <= h; ) {
        let f = (a + l) / (o + u);
        if (t === f) {
          o + u <= h ? (n = a + l, r = o + u) : u > o ? (n = l, r = u) : (n = a, r = o);
          break;
        } else
          t > f ? (a += l, o += u) : (l += a, u += o), o > h ? (n = l, r = u) : (n = a, r = o);
      }
      n = BigInt(n) * BigInt(i), r = BigInt(r);
    }
  } else if (typeof t == "string") {
    let i = 0, a = je, o = je, l = je, u = ze, h = ze, f = t.replace(/_/g, "").match(/\d+|./g);
    if (f === null)
      throw Ys();
    if (f[i] === "-" ? (s = -ze, i++) : f[i] === "+" && i++, f.length === i + 1 ? o = Ps(f[i++], s) : f[i + 1] === "." || f[i] === "." ? (f[i] !== "." && (a = Ps(f[i++], s)), i++, (i + 1 === f.length || f[i + 1] === "(" && f[i + 3] === ")" || f[i + 1] === "'" && f[i + 3] === "'") && (o = Ps(f[i], s), u = Yn ** BigInt(f[i].length), i++), (f[i] === "(" && f[i + 2] === ")" || f[i] === "'" && f[i + 2] === "'") && (l = Ps(f[i + 1], s), h = Yn ** BigInt(f[i + 1].length) - ze, i += 3)) : f[i + 1] === "/" || f[i + 1] === ":" ? (o = Ps(f[i], s), u = Ps(f[i + 2], ze), i += 3) : f[i + 3] === "/" && f[i + 1] === " " && (a = Ps(f[i], s), o = Ps(f[i + 2], s), u = Ps(f[i + 4], ze), i += 5), f.length <= i)
      r = u * h, s = /* void */
      n = l + r * a + h * o;
    else
      throw Ys();
  } else if (typeof t == "bigint")
    n = t, s = t, r = ze;
  else
    throw Ys();
  if (r === je)
    throw Kf();
  ve.s = s < je ? -ze : ze, ve.n = n < je ? -n : n, ve.d = r < je ? -r : r;
};
function Y3(t, e, n) {
  let r = ze;
  for (; e > je; t = t * t % n, e >>= ze)
    e & ze && (r = r * t % n);
  return r;
}
function H3(t, e) {
  for (; e % Po === je; e /= Po)
    ;
  for (; e % kp === je; e /= kp)
    ;
  if (e === ze)
    return je;
  let n = Yn % e, r = 1;
  for (; n !== ze; r++)
    if (n = n * Yn % e, r > z3)
      return je;
  return BigInt(r);
}
function K3(t, e, n) {
  let r = ze, s = Y3(Yn, n, e);
  for (let i = 0; i < 300; i++) {
    if (r === s)
      return BigInt(i);
    r = r * Yn % e, s = s * Yn % e;
  }
  return 0;
}
function Di(t, e) {
  if (!t)
    return e;
  if (!e)
    return t;
  for (; ; ) {
    if (t %= e, !t)
      return e;
    if (e %= t, !e)
      return t;
  }
}
function Zt(t, e) {
  if (yn(t, e), this instanceof Zt)
    t = Di(ve.d, ve.n), this.s = ve.s, this.n = ve.n / t, this.d = ve.d / t;
  else
    return It(ve.s * ve.n, ve.d);
}
var Kf = function() {
  return new Error("Division by Zero");
}, Ys = function() {
  return new Error("Invalid argument");
}, qm = function() {
  return new Error("Parameters must be integer");
};
Zt.prototype = {
  s: ze,
  n: je,
  d: ze,
  /**
   * Calculates the absolute value
   *
   * Ex: new Fraction(-4).abs() => 4
   **/
  abs: function() {
    return It(this.n, this.d);
  },
  /**
   * Inverts the sign of the current fraction
   *
   * Ex: new Fraction(-4).neg() => 4
   **/
  neg: function() {
    return It(-this.s * this.n, this.d);
  },
  /**
   * Adds two rational numbers
   *
   * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
   **/
  add: function(t, e) {
    return yn(t, e), It(
      this.s * this.n * ve.d + ve.s * this.d * ve.n,
      this.d * ve.d
    );
  },
  /**
   * Subtracts two rational numbers
   *
   * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
   **/
  sub: function(t, e) {
    return yn(t, e), It(
      this.s * this.n * ve.d - ve.s * this.d * ve.n,
      this.d * ve.d
    );
  },
  /**
   * Multiplies two rational numbers
   *
   * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
   **/
  mul: function(t, e) {
    return yn(t, e), It(
      this.s * ve.s * this.n * ve.n,
      this.d * ve.d
    );
  },
  /**
   * Divides two rational numbers
   *
   * Ex: new Fraction("-17.(345)").inverse().div(3)
   **/
  div: function(t, e) {
    return yn(t, e), It(
      this.s * ve.s * this.n * ve.d,
      this.d * ve.n
    );
  },
  /**
   * Clones the actual object
   *
   * Ex: new Fraction("-17.(345)").clone()
   **/
  clone: function() {
    return It(this.s * this.n, this.d);
  },
  /**
   * Calculates the modulo of two rational numbers - a more precise fmod
   *
   * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
   * Ex: new Fraction(20, 10).mod().equals(0) ? "is Integer"
   **/
  mod: function(t, e) {
    if (t === void 0)
      return It(this.s * this.n % this.d, ze);
    if (yn(t, e), je === ve.n * this.d)
      throw Kf();
    return It(
      this.s * (ve.d * this.n) % (ve.n * this.d),
      ve.d * this.d
    );
  },
  /**
   * Calculates the fractional gcd of two rational numbers
   *
   * Ex: new Fraction(5,8).gcd(3,7) => 1/56
   */
  gcd: function(t, e) {
    return yn(t, e), It(Di(ve.n, this.n) * Di(ve.d, this.d), ve.d * this.d);
  },
  /**
   * Calculates the fractional lcm of two rational numbers
   *
   * Ex: new Fraction(5,8).lcm(3,7) => 15
   */
  lcm: function(t, e) {
    return yn(t, e), ve.n === je && this.n === je ? It(je, ze) : It(ve.n * this.n, Di(ve.n, this.n) * Di(ve.d, this.d));
  },
  /**
   * Gets the inverse of the fraction, means numerator and denominator are exchanged
   *
   * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
   **/
  inverse: function() {
    return It(this.s * this.d, this.n);
  },
  /**
   * Calculates the fraction to some integer exponent
   *
   * Ex: new Fraction(-1,2).pow(-3) => -8
   */
  pow: function(t, e) {
    if (yn(t, e), ve.d === ze)
      return ve.s < je ? It((this.s * this.d) ** ve.n, this.n ** ve.n) : It((this.s * this.n) ** ve.n, this.d ** ve.n);
    if (this.s < je) return null;
    let n = Hi(this.n), r = Hi(this.d), s = ze, i = ze;
    for (let a in n)
      if (a !== "1") {
        if (a === "0") {
          s = je;
          break;
        }
        if (n[a] *= ve.n, n[a] % ve.d === je)
          n[a] /= ve.d;
        else return null;
        s *= BigInt(a) ** n[a];
      }
    for (let a in r)
      if (a !== "1") {
        if (r[a] *= ve.n, r[a] % ve.d === je)
          r[a] /= ve.d;
        else return null;
        i *= BigInt(a) ** r[a];
      }
    return ve.s < je ? It(i, s) : It(s, i);
  },
  /**
   * Calculates the logarithm of a fraction to a given rational base
   *
   * Ex: new Fraction(27, 8).log(9, 4) => 3/2
   */
  log: function(t, e) {
    if (yn(t, e), this.s <= je || ve.s <= je) return null;
    const n = {}, r = Hi(ve.n), s = Hi(ve.d), i = Hi(this.n), a = Hi(this.d);
    for (const u in s)
      r[u] = (r[u] || je) - s[u];
    for (const u in a)
      i[u] = (i[u] || je) - a[u];
    for (const u in r)
      u !== "1" && (n[u] = !0);
    for (const u in i)
      u !== "1" && (n[u] = !0);
    let o = null, l = null;
    for (const u in n) {
      const h = r[u] || je, f = i[u] || je;
      if (h === je) {
        if (f !== je)
          return null;
        continue;
      }
      let m = f, b = h;
      const v = Di(m, b);
      if (m /= v, b /= v, o === null && l === null)
        o = m, l = b;
      else if (m * l !== o * b)
        return null;
    }
    return o !== null && l !== null ? It(o, l) : null;
  },
  /**
   * Check if two rational numbers are the same
   *
   * Ex: new Fraction(19.6).equals([98, 5]);
   **/
  equals: function(t, e) {
    return yn(t, e), this.s * this.n * ve.d === ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is less than another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  lt: function(t, e) {
    return yn(t, e), this.s * this.n * ve.d < ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is less than or equal another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  lte: function(t, e) {
    return yn(t, e), this.s * this.n * ve.d <= ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is greater than another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  gt: function(t, e) {
    return yn(t, e), this.s * this.n * ve.d > ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is greater than or equal another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  gte: function(t, e) {
    return yn(t, e), this.s * this.n * ve.d >= ve.s * ve.n * this.d;
  },
  /**
   * Compare two rational numbers
   * < 0 iff this < that
   * > 0 iff this > that
   * = 0 iff this = that
   *
   * Ex: new Fraction(19.6).compare([98, 5]);
   **/
  compare: function(t, e) {
    yn(t, e);
    let n = this.s * this.n * ve.d - ve.s * ve.n * this.d;
    return (je < n) - (n < je);
  },
  /**
   * Calculates the ceil of a rational number
   *
   * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
   **/
  ceil: function(t) {
    return t = Yn ** BigInt(t || 0), It(
      Ur(this.s * t * this.n / this.d) + (t * this.n % this.d > je && this.s >= je ? ze : je),
      t
    );
  },
  /**
   * Calculates the floor of a rational number
   *
   * Ex: new Fraction('4.(3)').floor() => (4 / 1)
   **/
  floor: function(t) {
    return t = Yn ** BigInt(t || 0), It(
      Ur(this.s * t * this.n / this.d) - (t * this.n % this.d > je && this.s < je ? ze : je),
      t
    );
  },
  /**
   * Rounds a rational numbers
   *
   * Ex: new Fraction('4.(3)').round() => (4 / 1)
   **/
  round: function(t) {
    return t = Yn ** BigInt(t || 0), It(
      Ur(this.s * t * this.n / this.d) + this.s * ((this.s >= je ? ze : je) + Po * (t * this.n % this.d) > this.d ? ze : je),
      t
    );
  },
  /**
    * Rounds a rational number to a multiple of another rational number
    *
    * Ex: new Fraction('0.9').roundTo("1/8") => 7 / 8
    **/
  roundTo: function(t, e) {
    yn(t, e);
    const n = this.n * ve.d, r = this.d * ve.n, s = n % r;
    let i = Ur(n / r);
    return s + s >= r && i++, It(this.s * i * ve.n, ve.d);
  },
  /**
   * Check if two rational numbers are divisible
   *
   * Ex: new Fraction(19.6).divisible(1.5);
   */
  divisible: function(t, e) {
    return yn(t, e), !(!(ve.n * this.d) || this.n * ve.d % (ve.n * this.d));
  },
  /**
   * Returns a decimal representation of the fraction
   *
   * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
   **/
  valueOf: function() {
    return Number(this.s * this.n) / Number(this.d);
  },
  /**
   * Creates a string representation of a fraction with all digits
   *
   * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
   **/
  toString: function(t) {
    let e = this.n, n = this.d;
    t = t || 15;
    let r = H3(e, n), s = K3(e, n, r), i = this.s < je ? "-" : "";
    if (i += Ur(e / n), e %= n, e *= Yn, e && (i += "."), r) {
      for (let a = s; a--; )
        i += Ur(e / n), e %= n, e *= Yn;
      i += "(";
      for (let a = r; a--; )
        i += Ur(e / n), e %= n, e *= Yn;
      i += ")";
    } else
      for (let a = t; e && a--; )
        i += Ur(e / n), e %= n, e *= Yn;
    return i;
  },
  /**
   * Returns a string-fraction representation of a Fraction object
   *
   * Ex: new Fraction("1.'3'").toFraction() => "4 1/3"
   **/
  toFraction: function(t) {
    let e = this.n, n = this.d, r = this.s < je ? "-" : "";
    if (n === ze)
      r += e;
    else {
      let s = Ur(e / n);
      t && s > je && (r += s, r += " ", e %= n), r += e, r += "/", r += n;
    }
    return r;
  },
  /**
   * Returns a latex representation of a Fraction object
   *
   * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
   **/
  toLatex: function(t) {
    let e = this.n, n = this.d, r = this.s < je ? "-" : "";
    if (n === ze)
      r += e;
    else {
      let s = Ur(e / n);
      t && s > je && (r += s, e %= n), r += "\\frac{", r += e, r += "}{", r += n, r += "}";
    }
    return r;
  },
  /**
   * Returns an array of continued fraction elements
   *
   * Ex: new Fraction("7/8").toContinued() => [0,1,7]
   */
  toContinued: function() {
    let t = this.n, e = this.d, n = [];
    do {
      n.push(Ur(t / e));
      let r = t % e;
      t = e, e = r;
    } while (t !== ze);
    return n;
  },
  simplify: function(t) {
    const e = BigInt(1 / (t || 1e-3) | 0), n = this.abs(), r = n.toContinued();
    for (let s = 1; s < r.length; s++) {
      let i = It(r[s - 1], ze);
      for (let o = s - 2; o >= 0; o--)
        i = i.inverse().add(r[o]);
      let a = i.sub(n);
      if (a.n * e < a.d)
        return i.mul(this.s);
    }
    return this;
  }
};
const Jf = "strudel.log";
let J3 = 1e3, Gm, zm;
function ed(t, e = "cyclist") {
  Ln(`[${e}] error: ${t.message}`);
}
function Ln(t, e, n = {}) {
  let r = performance.now();
  Gm === t && r - zm < J3 || (Gm = t, zm = r, console.log(`%c${t}`, "background-color: black;color:white;border-radius:15px"), typeof document < "u" && typeof CustomEvent < "u" && document.dispatchEvent(
    new CustomEvent(Jf, {
      detail: {
        message: t,
        type: e,
        data: n
      }
    })
  ));
}
Ln.key = Jf;
const eP = (t) => /^[a-gA-G][#bs]*[0-9]$/.test(t), Au = (t) => /^[a-gA-G][#bsf]*[0-9]?$/.test(t), Qb = (t) => {
  if (typeof t != "string")
    return [];
  const [e, n = "", r] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];
  return e ? [e, n, r ? Number(r) : void 0] : [];
}, tP = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, nP = { "#": 1, b: -1, s: 1, f: -1 }, Xi = (t, e = 3) => {
  const [n, r, s = e] = Qb(t);
  if (!n)
    throw new Error('not a note: "' + t + '"');
  const i = tP[n.toLowerCase()], a = r?.split("").reduce((o, l) => o + nP[l], 0) || 0;
  return (Number(s) + 1) * 12 + i + a;
}, Ri = (t) => Math.pow(2, (t - 69) / 12) * 440, td = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, jb = (t, e) => {
  if (typeof t != "object")
    throw new Error("valueToMidi: expected object value");
  let { freq: n, note: r } = t;
  if (typeof n == "number")
    return td(n);
  if (typeof r == "string")
    return Xi(r);
  if (typeof r == "number")
    return r;
  if (!e)
    throw new Error("valueToMidi: expected freq or note to be set");
  return e;
}, rP = (t, e) => (t - e) * 1e3, _b = (t) => Ri(typeof t == "number" ? t : Xi(t)), sP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"], iP = (t) => {
  const e = Math.floor(t / 12) - 1;
  return sP[t % 12] + e;
}, Ko = (t, e) => (t % e + e) % e, Rb = (t) => t.reduce((e, n) => e + n) / t.length;
function Zb(t, e = 0) {
  return isNaN(Number(t)) ? (Ln(`"${t}" is not a number, falling back to ${e}`, "warning"), e) : t;
}
const aP = (t, e) => Ko(Math.round(Zb(t ?? 0, 0)), e), oP = (t) => {
  let { value: e, context: n } = t, r = e;
  if (typeof r == "object" && !Array.isArray(r) && (r = r.note || r.n || r.value, r === void 0))
    throw new Error(`cannot find a playable note for ${JSON.stringify(e)}`);
  if (typeof r == "number" && n.type !== "frequency")
    r = Ri(t.value);
  else if (typeof r == "number" && n.type === "frequency")
    r = t.value;
  else if (typeof r != "string" || !Au(r))
    throw new Error("not a note: " + JSON.stringify(r));
  return r;
}, $b = (t) => {
  let { value: e, context: n } = t;
  if (typeof e == "object")
    return e.freq ? e.freq : _b(e.note || e.n || e.value);
  if (typeof e == "number" && n.type !== "frequency")
    e = Ri(t.value);
  else if (typeof e == "string" && Au(e))
    e = Ri(Xi(t.value));
  else if (typeof e != "number")
    throw new Error("not a note or frequency: " + e);
  return e;
}, Lb = (t, e) => t.slice(e).concat(t.slice(0, e)), Ib = (...t) => t.reduce(
  (e, n) => (...r) => e(n(...r)),
  (e) => e
), lP = (...t) => Ib(...t.reverse()), Ta = (t) => t.filter((e) => e != null), Ts = (t) => [].concat(...t), ra = (t) => t, cP = (t, e) => t, nd = (t, e) => Array.from({ length: e - t + 1 }, (n, r) => r + t);
function Ye(t, e, n = t.length) {
  const r = function s(...i) {
    if (i.length >= n)
      return t.apply(this, i);
    {
      const a = function(...o) {
        return s.apply(this, i.concat(o));
      };
      return e && e(a, i), a;
    }
  };
  return e && e(r, []), r;
}
function rd(t) {
  const e = Number(t);
  if (!isNaN(e))
    return e;
  if (Au(t))
    return Xi(t);
  throw new Error(`cannot parse as numeral: "${t}"`);
}
function sd(t, e) {
  return (...n) => t(...n.map(e));
}
function dr(t) {
  return sd(t, rd);
}
function Nb(t) {
  const e = Number(t);
  if (!isNaN(e))
    return e;
  const n = {
    pi: Math.PI,
    w: 1,
    h: 0.5,
    q: 0.25,
    e: 0.125,
    s: 0.0625,
    t: 1 / 3,
    f: 0.2,
    x: 1 / 6
  }[t];
  if (typeof n < "u")
    return n;
  throw new Error(`cannot parse as fractional: "${t}"`);
}
const uP = (t) => sd(t, Nb), id = function(t, e) {
  return [e.slice(0, t), e.slice(t)];
}, Pu = (t, e, n) => e.map((r, s) => t(r, n[s])), Vb = function(t) {
  const e = [];
  for (let n = 0; n < t.length - 1; ++n)
    e.push([t[n], t[n + 1]]);
  return e;
}, Du = (t, e, n) => Math.min(Math.max(t, e), n), hP = ["Do", "Reb", "Re", "Mib", "Mi", "Fa", "Solb", "Sol", "Lab", "La", "Sib", "Si"], pP = [
  "Sa",
  "Re",
  "Ga",
  "Ma",
  "Pa",
  "Dha",
  "Ni"
], fP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Hb", "H"], dP = [
  "Ni",
  "Pab",
  "Pa",
  "Voub",
  "Vou",
  "Ga",
  "Dib",
  "Di",
  "Keb",
  "Ke",
  "Zob",
  "Zo"
], mP = [
  "I",
  "Ro",
  "Ha",
  "Ni",
  "Ho",
  "He",
  "To"
], gP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"], bP = (t, e = "letters") => {
  const r = (e === "solfeggio" ? hP : e === "indian" ? pP : e === "german" ? fP : e === "byzantine" ? dP : e === "japanese" ? mP : gP)[t % 12], s = Math.floor(t / 12) - 1;
  return r + s;
};
function yP(t) {
  var e = {};
  return t.filter(function(n) {
    return e.hasOwn(n) ? !1 : e[n] = !0;
  });
}
function OP(t) {
  return t.sort().filter(function(e, n, r) {
    return !n || e != r[n - 1];
  });
}
function Xb(t) {
  return t.sort((e, n) => e.compare(n)).filter(function(e, n, r) {
    return !n || e.ne(r[n - 1]);
  });
}
function Wb(t) {
  const e = new TextEncoder().encode(t);
  return btoa(String.fromCharCode(...e));
}
function Ub(t) {
  const e = new Uint8Array(
    atob(t).split("").map((r) => r.charCodeAt(0))
  );
  return new TextDecoder().decode(e);
}
function vP(t) {
  return encodeURIComponent(Wb(t));
}
function xP(t) {
  return Ub(decodeURIComponent(t));
}
function qb(t, e) {
  return Array.isArray(t) ? t.map(e) : Object.fromEntries(Object.entries(t).map(([n, r], s) => [n, e(r, n, s)]));
}
function Cp(t, e) {
  return t / e;
}
class Gb {
  constructor({
    getTargetClockTime: e = kP,
    weight: n = 16,
    offsetDelta: r = 5e-3,
    checkAfterTime: s = 2,
    resetAfterTime: i = 8
  }) {
    this.offsetTime, this.timeAtPrevOffsetSample, this.prevOffsetTimes = [], this.getTargetClockTime = e, this.weight = n, this.offsetDelta = r, this.checkAfterTime = s, this.resetAfterTime = i, this.reset = () => {
      this.prevOffsetTimes = [], this.offsetTime = null, this.timeAtPrevOffsetSample = null;
    };
  }
  calculateOffset(e) {
    const n = this.getTargetClockTime(), r = n - this.timeAtPrevOffsetSample, s = n - e;
    if (r > this.resetAfterTime && this.reset(), this.offsetTime == null && (this.offsetTime = s), this.prevOffsetTimes.push(s), this.prevOffsetTimes.length > this.weight && this.prevOffsetTimes.shift(), this.timeAtPrevOffsetSample == null || r > this.checkAfterTime) {
      this.timeAtPrevOffsetSample = n;
      const i = Rb(this.prevOffsetTimes);
      Math.abs(i - this.offsetTime) > this.offsetDelta && (this.offsetTime = i);
    }
    return this.offsetTime;
  }
  calculateTimestamp(e, n) {
    return this.calculateOffset(e) + n;
  }
}
function wP() {
  return performance.now() * 1e-3;
}
function kP() {
  return Date.now() * 1e-3;
}
const zb = /* @__PURE__ */ new Map([
  ["control", "Control"],
  ["ctrl", "Control"],
  ["alt", "Alt"],
  ["shift", "Shift"],
  ["down", "ArrowDown"],
  ["up", "ArrowUp"],
  ["left", "ArrowLeft"],
  ["right", "ArrowRight"]
]);
let Ka;
function Yb() {
  if (Ka == null) {
    if (typeof window > "u")
      return;
    Ka = {}, window.addEventListener("keydown", (t) => {
      Ka[t.key] = !0;
    }), window.addEventListener("keyup", (t) => {
      Ka[t.key] = !1;
    });
  }
  return { ...Ka };
}
function ad(t, e = !1) {
  return typeof t == "object" ? e ? JSON.stringify(t).slice(1, -1).replaceAll('"', "").replaceAll(",", " ") : JSON.stringify(t) : t;
}
Zt.prototype.sam = function() {
  return this.floor();
};
Zt.prototype.nextSam = function() {
  return this.sam().add(1);
};
Zt.prototype.wholeCycle = function() {
  return new Kt(this.sam(), this.nextSam());
};
Zt.prototype.cyclePos = function() {
  return this.sub(this.sam());
};
Zt.prototype.lt = function(t) {
  return this.compare(t) < 0;
};
Zt.prototype.gt = function(t) {
  return this.compare(t) > 0;
};
Zt.prototype.lte = function(t) {
  return this.compare(t) <= 0;
};
Zt.prototype.gte = function(t) {
  return this.compare(t) >= 0;
};
Zt.prototype.eq = function(t) {
  return this.compare(t) == 0;
};
Zt.prototype.ne = function(t) {
  return this.compare(t) != 0;
};
Zt.prototype.max = function(t) {
  return this.gt(t) ? this : t;
};
Zt.prototype.maximum = function(...t) {
  return t = t.map((e) => new Zt(e)), t.reduce((e, n) => n.max(e), this);
};
Zt.prototype.min = function(t) {
  return this.lt(t) ? this : t;
};
Zt.prototype.mulmaybe = function(t) {
  return t !== void 0 ? this.mul(t) : void 0;
};
Zt.prototype.divmaybe = function(t) {
  return t !== void 0 ? this.div(t) : void 0;
};
Zt.prototype.addmaybe = function(t) {
  return t !== void 0 ? this.add(t) : void 0;
};
Zt.prototype.submaybe = function(t) {
  return t !== void 0 ? this.sub(t) : void 0;
};
Zt.prototype.show = function() {
  return this.s * this.n + "/" + this.d;
};
Zt.prototype.or = function(t) {
  return this.eq(0) ? t : this;
};
const de = (t) => Zt(t), CP = (...t) => {
  if (t = Ta(t), t.length !== 0)
    return t.reduce((e, n) => e.gcd(n), de(1));
}, Hr = (...t) => {
  if (t = Ta(t), t.length === 0)
    return;
  const e = t.pop();
  return t.reduce(
    (n, r) => n === void 0 || r === void 0 ? void 0 : n.lcm(r),
    e
  );
};
de._original = Zt;
class Kt {
  constructor(e, n) {
    this.begin = de(e), this.end = de(n);
  }
  get spanCycles() {
    const e = [];
    var n = this.begin;
    const r = this.end, s = r.sam();
    if (n.equals(r))
      return [new Kt(n, r)];
    for (; r.gt(n); ) {
      if (n.sam().equals(s)) {
        e.push(new Kt(n, this.end));
        break;
      }
      const i = n.nextSam();
      e.push(new Kt(n, i)), n = i;
    }
    return e;
  }
  get duration() {
    return this.end.sub(this.begin);
  }
  cycleArc() {
    const e = this.begin.cyclePos(), n = e.add(this.duration);
    return new Kt(e, n);
  }
  withTime(e) {
    return new Kt(e(this.begin), e(this.end));
  }
  withEnd(e) {
    return new Kt(this.begin, e(this.end));
  }
  withCycle(e) {
    const n = this.begin.sam(), r = n.add(e(this.begin.sub(n))), s = n.add(e(this.end.sub(n)));
    return new Kt(r, s);
  }
  intersection(e) {
    const n = this.begin.max(e.begin), r = this.end.min(e.end);
    if (!n.gt(r) && !(n.equals(r) && (n.equals(this.end) && this.begin.lt(this.end) || n.equals(e.end) && e.begin.lt(e.end))))
      return new Kt(n, r);
  }
  intersection_e(e) {
    const n = this.intersection(e);
    if (n == null)
      throw "TimeSpans do not intersect";
    return n;
  }
  midpoint() {
    return this.begin.add(this.duration.div(de(2)));
  }
  equals(e) {
    return this.begin.equals(e.begin) && this.end.equals(e.end);
  }
  show() {
    return this.begin.show() + " → " + this.end.show();
  }
}
class Ut {
  /*
        Event class, representing a value active during the timespan
        'part'. This might be a fragment of an event, in which case the
        timespan will be smaller than the 'whole' timespan, otherwise the
        two timespans will be the same. The 'part' must never extend outside of the
        'whole'. If the event represents a continuously changing value
        then the whole will be returned as None, in which case the given
        value will have been sampled from the point halfway between the
        start and end of the 'part' timespan.
        The context is to store a list of source code locations causing the event.
  
        The word 'Event' is more or less a reserved word in javascript, hence this
        class is named called 'Hap'.
        */
  constructor(e, n, r, s = {}, i = !1) {
    this.whole = e, this.part = n, this.value = r, this.context = s, this.stateful = i, i && console.assert(typeof this.value == "function", "Stateful values must be functions");
  }
  get duration() {
    let e;
    return typeof this.value?.duration == "number" ? e = de(this.value.duration) : e = this.whole.end.sub(this.whole.begin), typeof this.value?.clip == "number" ? e.mul(this.value.clip) : e;
  }
  get endClipped() {
    return this.whole.begin.add(this.duration);
  }
  isActive(e) {
    return this.whole.begin <= e && this.endClipped >= e;
  }
  isInPast(e) {
    return e > this.endClipped;
  }
  isInNearPast(e, n) {
    return n - e <= this.endClipped;
  }
  isInFuture(e) {
    return e < this.whole.begin;
  }
  isInNearFuture(e, n) {
    return n < this.whole.begin && n > this.whole.begin - e;
  }
  isWithinTime(e, n) {
    return this.whole.begin <= n && this.endClipped >= e;
  }
  wholeOrPart() {
    return this.whole ? this.whole : this.part;
  }
  withSpan(e) {
    const n = this.whole ? e(this.whole) : void 0;
    return new Ut(n, e(this.part), this.value, this.context);
  }
  withValue(e) {
    return new Ut(this.whole, this.part, e(this.value), this.context);
  }
  hasOnset() {
    return this.whole != null && this.whole.begin.equals(this.part.begin);
  }
  hasTag(e) {
    return this.context.tags?.includes(e);
  }
  resolveState(e) {
    if (this.stateful && this.hasOnset()) {
      console.log("stateful");
      const n = this.value, [r, s] = n(e);
      return [r, new Ut(this.whole, this.part, s, this.context, !1)];
    }
    return [e, this];
  }
  spanEquals(e) {
    return this.whole == null && e.whole == null || this.whole.equals(e.whole);
  }
  equals(e) {
    return this.spanEquals(e) && this.part.equals(e.part) && // TODO would == be better ??
    this.value === e.value;
  }
  show(e = !1) {
    const n = typeof this.value == "object" ? e ? JSON.stringify(this.value).slice(1, -1).replaceAll('"', "").replaceAll(",", " ") : JSON.stringify(this.value) : this.value;
    var r = "";
    if (this.whole == null)
      r = "~" + this.part.show;
    else {
      var s = this.whole.begin.equals(this.part.begin) && this.whole.end.equals(this.part.end);
      this.whole.begin.equals(this.part.begin) || (r = this.whole.begin.show() + " ⇜ "), s || (r += "("), r += this.part.show(), s || (r += ")"), this.whole.end.equals(this.part.end) || (r += " ⇝ " + this.whole.end.show());
    }
    return "[ " + r + " | " + n + " ]";
  }
  showWhole(e = !1) {
    return `${this.whole == null ? "~" : this.whole.show()}: ${ad(this.value, e)}`;
  }
  combineContext(e) {
    const n = this;
    return { ...n.context, ...e.context, locations: (n.context.locations || []).concat(e.context.locations || []) };
  }
  setContext(e) {
    return new Ut(this.whole, this.part, this.value, e);
  }
  ensureObjectValue() {
    if (typeof this.value != "object")
      throw new Error(
        `expected hap.value to be an object, but got "${this.value}". Hint: append .note() or .s() to the end`,
        "error"
      );
  }
}
class xa {
  constructor(e, n = {}) {
    this.span = e, this.controls = n;
  }
  // Returns new State with different span
  setSpan(e) {
    return new xa(e, this.controls);
  }
  withSpan(e) {
    return this.setSpan(e(this.span));
  }
  // Returns new State with different controls
  setControls(e) {
    return new xa(this.span, e);
  }
}
function SP(t, e, n) {
  if (e?.value !== void 0 && Object.keys(e).length === 1)
    return Ln("[warn]: Can't do arithmetic on control pattern."), t;
  const r = Object.keys(t).filter((s) => Object.keys(e).includes(s));
  return Object.assign({}, t, e, Object.fromEntries(r.map((s) => [s, n(t[s], e[s])])));
}
Ye((t, e) => t * e);
Ye((t, e) => e.map(t));
function Hb(t, e = 60) {
  let n = 0, r = de(0), s = [""], i = "";
  for (; s[0].length < e; ) {
    const a = t.queryArc(n, n + 1), o = a.filter((h) => h.hasOnset()).map((h) => h.duration), l = CP(...o), u = l.inverse();
    s = s.map((h) => h + "|"), i += "|";
    for (let h = 0; h < u; h++) {
      const [f, m] = [r, r.add(l)], b = a.filter((C) => C.whole.begin.lte(f) && C.whole.end.gte(m)), v = b.length - s.length;
      v > 0 && (s = s.concat(Array(v).fill(i))), s = s.map((C, S) => {
        const B = b[S];
        if (B) {
          const W = B.whole.begin.eq(f) ? "" + B.value : "-";
          return C + W;
        }
        return C + ".";
      }), i += ".", r = r.add(l);
    }
    n++;
  }
  return s.join(`
`);
}
let Sp, Kr = !0;
const AP = function(t) {
  Kr = !!t;
}, Kb = (t) => Sp = t;
let me = class vn {
  /**
   * Create a pattern. As an end user, you will most likely not create a Pattern directly.
   *
   * @param {function} query - The function that maps a `State` to an array of `Hap`.
   * @noAutocomplete
   */
  constructor(e, n = void 0) {
    this.query = e, this._Pattern = !0, this._steps = n;
  }
  get _steps() {
    return this.__steps;
  }
  set _steps(e) {
    this.__steps = e === void 0 ? void 0 : de(e);
  }
  setSteps(e) {
    return this._steps = e, this;
  }
  withSteps(e) {
    return Kr ? new vn(this.query, this._steps === void 0 ? void 0 : e(this._steps)) : this;
  }
  get hasSteps() {
    return this._steps !== void 0;
  }
  //////////////////////////////////////////////////////////////////////
  // Haskell-style functor, applicative and monadic operations
  /**
   * Returns a new pattern, with the function applied to the value of
   * each hap. It has the alias `fmap`.
   * @synonyms fmap
   * @param {Function} func to to apply to the value
   * @returns Pattern
   * @example
   * "0 1 2".withValue(v => v + 10).log()
   */
  withValue(e) {
    const n = new vn((r) => this.query(r).map((s) => s.withValue(e)));
    return n._steps = this._steps, n;
  }
  // runs func on query state
  withState(e) {
    return this.withHaps((n, r) => (e(r), n));
  }
  /**
   * see `withValue`
   * @noAutocomplete
   */
  fmap(e) {
    return this.withValue(e);
  }
  /**
   * Assumes 'this' is a pattern of functions, and given a function to
   * resolve wholes, applies a given pattern of values to that
   * pattern of functions.
   * @param {Function} whole_func
   * @param {Function} func
   * @noAutocomplete
   * @returns Pattern
   */
  appWhole(e, n) {
    const r = this, s = function(i) {
      const a = r.query(i), o = n.query(i), l = function(u, h) {
        const f = u.part.intersection(h.part);
        if (f != null)
          return new Ut(
            e(u.whole, h.whole),
            f,
            u.value(h.value),
            h.combineContext(u)
          );
      };
      return Ts(
        a.map((u) => Ta(o.map((h) => l(u, h))))
      );
    };
    return new vn(s);
  }
  /**
   * When this method is called on a pattern of functions, it matches its haps
   * with those in the given pattern of values.  A new pattern is returned, with
   * each matching value applied to the corresponding function.
   *
   * In this `_appBoth` variant, where timespans of the function and value haps
   * are not the same but do intersect, the resulting hap has a timespan of the
   * intersection. This applies to both the part and the whole timespan.
   * @param {Pattern} pat_val
   * @noAutocomplete
   * @returns Pattern
   */
  appBoth(e) {
    const n = this, r = function(i, a) {
      if (!(i == null || a == null))
        return i.intersection_e(a);
    }, s = n.appWhole(r, e);
    return Kr && (s._steps = Hr(e._steps, n._steps)), s;
  }
  /**
   * As with `appBoth`, but the `whole` timespan is not the intersection,
   * but the timespan from the function of patterns that this method is called
   * on. In practice, this means that the pattern structure, including onsets,
   * are preserved from the pattern of functions (often referred to as the left
   * hand or inner pattern).
   * @param {Pattern} pat_val
   * @noAutocomplete
   * @returns Pattern
   */
  appLeft(e) {
    const n = this, r = function(i) {
      const a = [];
      for (const o of n.query(i)) {
        const l = e.query(i.setSpan(o.wholeOrPart()));
        for (const u of l) {
          const h = o.whole, f = o.part.intersection(u.part);
          if (f) {
            const m = o.value(u.value), b = u.combineContext(o), v = new Ut(h, f, m, b);
            a.push(v);
          }
        }
      }
      return a;
    }, s = new vn(r);
    return s._steps = this._steps, s;
  }
  /**
   * As with `appLeft`, but `whole` timespans are instead taken from the
   * pattern of values, i.e. structure is preserved from the right hand/outer
   * pattern.
   * @param {Pattern} pat_val
   * @noAutocomplete
   * @returns Pattern
   */
  appRight(e) {
    const n = this, r = function(i) {
      const a = [];
      for (const o of e.query(i)) {
        const l = n.query(i.setSpan(o.wholeOrPart()));
        for (const u of l) {
          const h = o.whole, f = u.part.intersection(o.part);
          if (f) {
            const m = u.value(o.value), b = o.combineContext(u), v = new Ut(h, f, m, b);
            a.push(v);
          }
        }
      }
      return a;
    }, s = new vn(r);
    return s._steps = e._steps, s;
  }
  bindWhole(e, n) {
    const r = this, s = function(i) {
      const a = function(l, u) {
        return new Ut(
          e(l.whole, u.whole),
          u.part,
          u.value,
          Object.assign({}, l.context, u.context, {
            locations: (l.context.locations || []).concat(u.context.locations || [])
          })
        );
      }, o = function(l) {
        return n(l.value).query(i.setSpan(l.part)).map((u) => a(l, u));
      };
      return Ts(r.query(i).map((l) => o(l)));
    };
    return new vn(s);
  }
  bind(e) {
    const n = function(r, s) {
      if (!(r == null || s == null))
        return r.intersection_e(s);
    };
    return this.bindWhole(n, e);
  }
  join() {
    return this.bind(ra);
  }
  outerBind(e) {
    return this.bindWhole((n) => n, e).setSteps(this._steps);
  }
  outerJoin() {
    return this.outerBind(ra);
  }
  innerBind(e) {
    return this.bindWhole((n, r) => r, e);
  }
  innerJoin() {
    return this.innerBind(ra);
  }
  // Flatterns patterns of patterns, by retriggering/resetting inner patterns at onsets of outer pattern haps
  resetJoin(e = !1) {
    const n = this;
    return new vn((r) => n.discreteOnly().query(r).map((s) => s.value.late(e ? s.whole.begin : s.whole.begin.cyclePos()).query(r).map(
      (i) => new Ut(
        // Supports continuous haps in the inner pattern
        i.whole ? i.whole.intersection(s.whole) : void 0,
        i.part.intersection(s.part),
        i.value
      ).setContext(s.combineContext(i))
    ).filter((i) => i.part)).flat());
  }
  restartJoin() {
    return this.resetJoin(!0);
  }
  // Like the other joins above, joins a pattern of patterns of values, into a flatter
  // pattern of values. In this case it takes whole cycles of the inner pattern to fit each event
  // in the outer pattern.
  squeezeJoin() {
    const e = this;
    function n(r) {
      const s = e.discreteOnly().query(r);
      function i(o) {
        const u = o.value._focusSpan(o.wholeOrPart()).query(r.setSpan(o.part));
        function h(f, m) {
          let b;
          if (m.whole && f.whole && (b = m.whole.intersection(f.whole), !b))
            return;
          const v = m.part.intersection(f.part);
          if (!v)
            return;
          const C = m.combineContext(f);
          return new Ut(b, v, m.value, C);
        }
        return u.map((f) => h(o, f));
      }
      return Ts(s.map(i)).filter((o) => o);
    }
    return new vn(n);
  }
  squeezeBind(e) {
    return this.fmap(e).squeezeJoin();
  }
  polyJoin = function() {
    const e = this;
    return e.fmap((n) => n.extend(e._steps.div(n._steps))).outerJoin();
  };
  polyBind(e) {
    return this.fmap(e).polyJoin();
  }
  //////////////////////////////////////////////////////////////////////
  // Utility methods mainly for internal use
  /**
   * Query haps inside the given time span.
   *
   * @param {Fraction | number} begin from time
   * @param {Fraction | number} end to time
   * @returns Hap[]
   * @example
   * const pattern = sequence('a', ['b', 'c'])
   * const haps = pattern.queryArc(0, 1)
   * console.log(haps)
   * silence
   * @noAutocomplete
   */
  queryArc(e, n, r = {}) {
    try {
      return this.query(new xa(new Kt(e, n), r));
    } catch (s) {
      return Ln(`[query]: ${s.message}`, "error"), [];
    }
  }
  /**
   * Returns a new pattern, with queries split at cycle boundaries. This makes
   * some calculations easier to express, as all haps are then constrained to
   * happen within a cycle.
   * @returns Pattern
   * @noAutocomplete
   */
  splitQueries() {
    const e = this, n = (r) => Ts(r.span.spanCycles.map((s) => e.query(r.setSpan(s))));
    return new vn(n);
  }
  /**
   * Returns a new pattern, where the given function is applied to the query
   * timespan before passing it to the original pattern.
   * @param {Function} func the function to apply
   * @returns Pattern
   * @noAutocomplete
   */
  withQuerySpan(e) {
    return new vn((n) => this.query(n.withSpan(e)));
  }
  withQuerySpanMaybe(e) {
    const n = this;
    return new vn((r) => {
      const s = r.withSpan(e);
      return s.span ? n.query(s) : [];
    });
  }
  /**
   * As with `withQuerySpan`, but the function is applied to both the
   * begin and end time of the query timespan.
   * @param {Function} func the function to apply
   * @returns Pattern
   * @noAutocomplete
   */
  withQueryTime(e) {
    return new vn((n) => this.query(n.withSpan((r) => r.withTime(e))));
  }
  /**
   * Similar to `withQuerySpan`, but the function is applied to the timespans
   * of all haps returned by pattern queries (both `part` timespans, and where
   * present, `whole` timespans).
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withHapSpan(e) {
    return new vn((n) => this.query(n).map((r) => r.withSpan(e)));
  }
  /**
   * As with `withHapSpan`, but the function is applied to both the
   * begin and end time of the hap timespans.
   * @param {Function} func the function to apply
   * @returns Pattern
   * @noAutocomplete
   */
  withHapTime(e) {
    return this.withHapSpan((n) => n.withTime(e));
  }
  /**
   * Returns a new pattern with the given function applied to the list of haps returned by every query.
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withHaps(e) {
    const n = new vn((r) => e(this.query(r), r));
    return n._steps = this._steps, n;
  }
  /**
   * As with `withHaps`, but applies the function to every hap, rather than every list of haps.
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withHap(e) {
    return this.withHaps((n) => n.map(e));
  }
  /**
   * Returns a new pattern with the context field set to every hap set to the given value.
   * @param {*} context
   * @returns Pattern
   * @noAutocomplete
   */
  setContext(e) {
    return this.withHap((n) => n.setContext(e));
  }
  /**
   * Returns a new pattern with the given function applied to the context field of every hap.
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withContext(e) {
    const n = this.withHap((r) => r.setContext(e(r.context)));
    return this.__pure !== void 0 && (n.__pure = this.__pure, n.__pure_loc = this.__pure_loc), n;
  }
  /**
   * Returns a new pattern with the context field of every hap set to an empty object.
   * @returns Pattern
   * @noAutocomplete
   */
  stripContext() {
    return this.withHap((e) => e.setContext({}));
  }
  /**
   * Returns a new pattern with the given location information added to the
   * context of every hap.
   * @param {Number} start start offset
   * @param {Number} end end offset
   * @returns Pattern
   * @noAutocomplete
   */
  withLoc(e, n) {
    const r = {
      start: e,
      end: n
    }, s = this.withContext((i) => {
      const a = (i.locations || []).concat([r]);
      return { ...i, locations: a };
    });
    return this.__pure && (s.__pure = this.__pure, s.__pure_loc = r), s;
  }
  /**
   * Returns a new Pattern, which only returns haps that meet the given test.
   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern
   * @returns Pattern
   * @noAutocomplete
   */
  filterHaps(e) {
    return new vn((n) => this.query(n).filter(e));
  }
  /**
   * As with `filterHaps`, but the function is applied to values
   * inside haps.
   * @param {Function} value_test
   * @returns Pattern
   * @noAutocomplete
   */
  filterValues(e) {
    return new vn((n) => this.query(n).filter((r) => e(r.value))).setSteps(this._steps);
  }
  /**
   * Returns a new pattern, with haps containing undefined values removed from
   * query results.
   * @returns Pattern
   * @noAutocomplete
   */
  removeUndefineds() {
    return this.filterValues((e) => e != null);
  }
  /**
   * Returns a new pattern, with all haps without onsets filtered out. A hap
   * with an onset is one with a `whole` timespan that begins at the same time
   * as its `part` timespan.
   * @returns Pattern
   * @noAutocomplete
   */
  onsetsOnly() {
    return this.filterHaps((e) => e.hasOnset());
  }
  /**
   * Returns a new pattern, with 'continuous' haps (those without 'whole'
   * timespans) removed from query results.
   * @returns Pattern
   * @noAutocomplete
   */
  discreteOnly() {
    return this.filterHaps((e) => e.whole);
  }
  /**
   * Combines adjacent haps with the same value and whole.  Only
   * intended for use in tests.
   * @noAutocomplete
   */
  defragmentHaps() {
    return this.discreteOnly().withHaps((n) => {
      const r = [];
      for (var s = 0; s < n.length; ++s) {
        for (var i = !0, a = n[s]; i; ) {
          const u = JSON.stringify(n[s].value);
          for (var o = !1, l = s + 1; l < n.length; l++) {
            const h = n[l];
            if (a.whole.equals(h.whole)) {
              if (a.part.begin.eq(h.part.end)) {
                if (u === JSON.stringify(h.value)) {
                  a = new Ut(a.whole, new Kt(h.part.begin, a.part.end), a.value), n.splice(l, 1), o = !0;
                  break;
                }
              } else if (h.part.begin.eq(a.part.end) && u == JSON.stringify(h.value)) {
                a = new Ut(a.whole, new Kt(a.part.begin, h.part.end), a.value), n.splice(l, 1), o = !0;
                break;
              }
            }
          }
          i = o;
        }
        r.push(a);
      }
      return r;
    });
  }
  /**
   * Queries the pattern for the first cycle, returning Haps. Mainly of use when
   * debugging a pattern.
   * @param {Boolean} with_context - set to true, otherwise the context field
   * will be stripped from the resulting haps.
   * @returns [Hap]
   * @noAutocomplete
   */
  firstCycle(e = !1) {
    var n = this;
    return e || (n = n.stripContext()), n.query(new xa(new Kt(de(0), de(1))));
  }
  /**
   * Accessor for a list of values returned by querying the first cycle.
   * @noAutocomplete
   */
  get firstCycleValues() {
    return this.firstCycle().map((e) => e.value);
  }
  /**
   * More human-readable version of the `firstCycleValues` accessor.
   * @noAutocomplete
   */
  get showFirstCycle() {
    return this.firstCycle().map(
      (e) => `${e.value}: ${e.whole.begin.toFraction()} - ${e.whole.end.toFraction()}`
    );
  }
  /**
   * Returns a new pattern, which returns haps sorted in temporal order. Mainly
   * of use when comparing two patterns for equality, in tests.
   * @returns Pattern
   * @noAutocomplete
   */
  sortHapsByPart() {
    return this.withHaps(
      (e) => e.sort(
        (n, r) => n.part.begin.sub(r.part.begin).or(n.part.end.sub(r.part.end)).or(n.whole.begin.sub(r.whole.begin).or(n.whole.end.sub(r.whole.end)))
      )
    );
  }
  asNumber() {
    return this.fmap(rd);
  }
  //////////////////////////////////////////////////////////////////////
  // Operators - see 'make composers' later..
  _opIn(e, n) {
    return this.fmap(n).appLeft(be(e));
  }
  _opOut(e, n) {
    return this.fmap(n).appRight(be(e));
  }
  _opMix(e, n) {
    return this.fmap(n).appBoth(be(e));
  }
  _opSqueeze(e, n) {
    const r = be(e);
    return this.fmap((s) => r.fmap((i) => n(s)(i))).squeezeJoin();
  }
  _opSqueezeOut(e, n) {
    const r = this;
    return be(e).fmap((i) => r.fmap((a) => n(a)(i))).squeezeJoin();
  }
  _opReset(e, n) {
    return be(e).fmap((s) => this.fmap((i) => n(i)(s))).resetJoin();
  }
  _opRestart(e, n) {
    return be(e).fmap((s) => this.fmap((i) => n(i)(s))).restartJoin();
  }
  _opPoly(e, n) {
    const r = be(e);
    return this.fmap((s) => r.fmap((i) => n(i)(s))).polyJoin();
  }
  //////////////////////////////////////////////////////////////////////
  // End-user methods.
  // Those beginning with an underscore (_) are 'patternified',
  // i.e. versions are created without the underscore, that are
  // magically transformed to accept patterns for all their arguments.
  //////////////////////////////////////////////////////////////////////
  // Methods without corresponding toplevel functions
  /**
   * Layers the result of the given function(s). Like `superimpose`, but without the original pattern:
   * @name layer
   * @memberof Pattern
   * @synonyms apply
   * @returns Pattern
   * @example
   * "<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8"
   *   .layer(x=>x.add("0,2"))
   *   .scale('C minor').note()
   */
  layer(...e) {
    return Wt(...e.map((n) => n(this)));
  }
  /**
   * Superimposes the result of the given function(s) on top of the original pattern:
   * @name superimpose
   * @memberof Pattern
   * @returns Pattern
   * @example
   * "<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8"
   *   .superimpose(x=>x.add(2))
   *   .scale('C minor').note()
   */
  superimpose(...e) {
    return this.stack(...e.map((n) => n(this)));
  }
  //////////////////////////////////////////////////////////////////////
  // Multi-pattern functions
  stack(...e) {
    return Wt(this, ...e);
  }
  sequence(...e) {
    return Jr(this, ...e);
  }
  seq(...e) {
    return Jr(this, ...e);
  }
  cat(...e) {
    return ry(this, ...e);
  }
  fastcat(...e) {
    return Bn(this, ...e);
  }
  slowcat(...e) {
    return mi(this, ...e);
  }
  //////////////////////////////////////////////////////////////////////
  // Context methods - ones that deal with metadata
  onTrigger(e, n = !0) {
    return this.withHap(
      (r) => r.setContext({
        ...r.context,
        onTrigger: (...s) => {
          r.context.onTrigger?.(...s), e(...s);
        },
        // if dominantTrigger is set to true, the default output (webaudio) will be disabled
        // when using multiple triggers, you cannot flip this flag to false again!
        // example: x.csound('CooLSynth').log() as well as x.log().csound('CooLSynth') should work the same
        dominantTrigger: r.context.dominantTrigger || n
      })
    );
  }
  /**
   * Writes the content of the current event to the console (visible in the side menu).
   * @name log
   * @memberof Pattern
   * @example
   * s("bd sd").log()
   */
  log(e = (r) => `[hap] ${r.showWhole(!0)}`, n = (r) => ({ hap: r })) {
    return this.onTrigger((...r) => {
      Ln(e(...r), void 0, n(...r));
    }, !1);
  }
  /**
   * A simplified version of `log` which writes all "values" (various configurable parameters)
   * within the event to the console (visible in the side menu).
   * @name logValues
   * @memberof Pattern
   * @example
   * s("bd sd").gain("0.25 0.5 1").n("2 1 0").logValues()
   */
  logValues(e = (n) => `[hap] ${ad(n, !0)}`) {
    return this.log((n) => e(n.value));
  }
  //////////////////////////////////////////////////////////////////////
  // Visualisation
  drawLine() {
    return console.log(Hb(this)), this;
  }
  //////////////////////////////////////////////////////////////////////
  // methods relating to breaking patterns into subcycles
  // Breaks a pattern into a pattern of patterns, according to the structure of the given binary pattern.
  unjoin(e, n = ra) {
    return e.withHap(
      (r) => r.withValue((s) => s ? n(this.ribbon(r.whole.begin, r.whole.duration)) : this)
    );
  }
  /**
   * Breaks a pattern into pieces according to the structure of a given pattern.
   * True values in the given pattern cause the corresponding subcycle of the
   * source pattern to be looped, and for an (optional) given function to be
   * applied. False values result in the corresponding part of the source pattern
   * to be played unchanged.
   * @name into
   * @memberof Pattern
   * @example
   * sound("bd sd ht lt").into("1 0", hurry(2))
   */
  into(e, n) {
    return this.unjoin(e, n).innerJoin();
  }
};
function PP(t, e) {
  let n = [];
  return e.forEach((r) => {
    const s = n.findIndex(([i]) => t(r, i));
    s === -1 ? n.push([r]) : n[s].push(r);
  }), n;
}
const DP = (t, e) => t.spanEquals(e);
me.prototype.collect = function() {
  return this.withHaps(
    (t) => PP(DP, t).map((e) => new Ut(e[0].whole, e[0].part, e, {}))
  );
};
const EP = re("arpWith", (t, e) => e.collect().fmap((n) => be(t(n))).innerJoin().withHap((n) => new Ut(n.whole, n.part, n.value.value, n.combineContext(n.value)))), FP = re(
  "arp",
  (t, e) => e.arpWith((n) => be(t).fmap((r) => n[r % n.length])),
  !1
);
function jl(t) {
  return !Array.isArray(t) && typeof t == "object";
}
function BP(t, e, n) {
  return jl(t) || jl(e) ? (jl(t) || (t = { value: t }), jl(e) || (e = { value: e }), SP(t, e, n)) : n(t, e);
}
(function() {
  const t = {
    set: [(n, r) => r],
    keep: [(n) => n],
    keepif: [(n, r) => r ? n : void 0],
    // numerical functions
    /**
     *
     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.
     * @name add
     * @memberof Pattern
     * @example
     * // Here, the triad 0, 2, 4 is shifted by different amounts
     * n("0 2 4".add("<0 3 4 0>")).scale("C:major")
     * // Without add, the equivalent would be:
     * // n("<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>").scale("C:major")
     * @example
     * // You can also use add with notes:
     * note("c3 e3 g3".add("<0 5 7 0>"))
     * // Behind the scenes, the notes are converted to midi numbers:
     * // note("48 52 55".add("<0 5 7 0>"))
     */
    add: [dr((n, r) => n + r)],
    // support string concatenation
    /**
     *
     * Like add, but the given numbers are subtracted.
     * @name sub
     * @memberof Pattern
     * @example
     * n("0 2 4".sub("<0 1 2 3>")).scale("C4:minor")
     * // See add for more information.
     */
    sub: [dr((n, r) => n - r)],
    /**
     *
     * Multiplies each number by the given factor.
     * @name mul
     * @memberof Pattern
     * @example
     * "<1 1.5 [1.66, <2 2.33>]>*4".mul(150).freq()
     */
    mul: [dr((n, r) => n * r)],
    /**
     *
     * Divides each number by the given factor.
     * @name div
     * @memberof Pattern
     */
    div: [dr((n, r) => n / r)],
    mod: [dr(Ko)],
    pow: [dr(Math.pow)],
    log2: [dr(Math.log2)],
    band: [dr((n, r) => n & r)],
    bor: [dr((n, r) => n | r)],
    bxor: [dr((n, r) => n ^ r)],
    blshift: [dr((n, r) => n << r)],
    brshift: [dr((n, r) => n >> r)],
    // TODO - force numerical comparison if both look like numbers?
    lt: [(n, r) => n < r],
    gt: [(n, r) => n > r],
    lte: [(n, r) => n <= r],
    gte: [(n, r) => n >= r],
    eq: [(n, r) => n == r],
    eqt: [(n, r) => n === r],
    ne: [(n, r) => n != r],
    net: [(n, r) => n !== r],
    and: [(n, r) => n && r],
    or: [(n, r) => n || r],
    //  bitwise ops
    func: [(n, r) => r(n)]
  }, e = ["In", "Out", "Mix", "Squeeze", "SqueezeOut", "Reset", "Restart", "Poly"];
  for (const [n, [r, s]] of Object.entries(t)) {
    me.prototype["_" + n] = function(i) {
      return this.fmap((a) => r(a, i));
    }, Object.defineProperty(me.prototype, n, {
      // a getter that returns a function, so 'pat' can be
      // accessed by closures that are methods of that function..
      get: function() {
        const i = this, a = (...o) => i[n].in(...o);
        for (const o of e)
          a[o.toLowerCase()] = function(...l) {
            var u = i;
            l = Jr(l), s && (u = s(u), l = s(l));
            var h;
            return n === "keepif" ? (h = u["_op" + o](l, (f) => (m) => r(f, m)), h = h.removeUndefineds()) : h = u["_op" + o](l, (f) => (m) => BP(f, m, r)), h;
          };
        return a.squeezein = a.squeeze, a;
      }
    });
    for (const i of e)
      me.prototype[i.toLowerCase()] = function(...a) {
        return this.set[i.toLowerCase()](a);
      };
  }
  me.prototype.struct = function(...n) {
    return this.keepif.out(...n);
  }, me.prototype.structAll = function(...n) {
    return this.keep.out(...n);
  }, me.prototype.mask = function(...n) {
    return this.keepif.in(...n);
  }, me.prototype.maskAll = function(...n) {
    return this.keep.in(...n);
  }, me.prototype.reset = function(...n) {
    return this.keepif.reset(...n);
  }, me.prototype.resetAll = function(...n) {
    return this.keep.reset(...n);
  }, me.prototype.restart = function(...n) {
    return this.keepif.restart(...n);
  }, me.prototype.restartAll = function(...n) {
    return this.keep.restart(...n);
  };
})();
const MP = Wt, TP = Wt, QP = Fu, Qa = (t) => new me(() => [], t), Pt = Qa(1), yr = Qa(0);
function dn(t) {
  function e(r) {
    return r.span.spanCycles.map((s) => new Ut(de(s.begin).wholeCycle(), s, t));
  }
  const n = new me(e, 1);
  return n.__pure = t, n;
}
function Eu(t) {
  return t instanceof me || t?._Pattern;
}
function be(t) {
  return Eu(t) ? t : Sp && typeof t == "string" ? Sp(t) : dn(t);
}
function Jb(t) {
  let e = dn([]);
  for (const n of t)
    e = e.bind((r) => n.fmap((s) => r.concat([s])));
  return e;
}
function Wt(...t) {
  t = t.map((r) => Array.isArray(r) ? Jr(...r) : be(r));
  const e = (r) => Ts(t.map((s) => s.query(r))), n = new me(e);
  return Kr && (n._steps = Hr(...t.map((r) => r._steps))), n;
}
function od(t, e) {
  if (e = e.map((i) => Array.isArray(i) ? Jr(...i) : be(i)), e.length === 0)
    return Pt;
  if (e.length === 1)
    return e[0];
  const [n, ...r] = e.map((i) => i._steps), s = Kr ? n.maximum(...r) : void 0;
  return Wt(...t(s, e));
}
function ey(...t) {
  return od(
    (e, n) => n.map((r) => r._steps.eq(e) ? r : ar(r, Qa(e.sub(r._steps)))),
    t
  );
}
function ty(...t) {
  return od(
    (e, n) => n.map((r) => r._steps.eq(e) ? r : ar(Qa(e.sub(r._steps)), r)),
    t
  );
}
function ny(...t) {
  return od(
    (e, n) => n.map((r) => {
      if (r._steps.eq(e))
        return r;
      const s = Qa(e.sub(r._steps).div(2));
      return ar(s, r, s);
    }),
    t
  );
}
function jP(t, ...e) {
  const [n, ...r] = e.map((a) => a._steps), s = n.maximum(...r), i = {
    centre: ny,
    left: ey,
    right: ty,
    expand: Wt,
    repeat: (...a) => Fu(...a).steps(s)
  };
  return t.inhabit(i).fmap((a) => a(...e)).innerJoin().setSteps(s);
}
function mi(...t) {
  if (t = t.map((r) => Array.isArray(r) ? Bn(...r) : be(r)), t.length == 1)
    return t[0];
  const e = function(r) {
    const s = r.span, i = Ko(s.begin.sam(), t.length), a = t[i];
    if (!a)
      return [];
    const o = s.begin.floor().sub(s.begin.div(t.length).floor());
    return a.withHapTime((l) => l.add(o)).query(r.setSpan(s.withTime((l) => l.sub(o))));
  }, n = Kr ? Hr(...t.map((r) => r._steps)) : void 0;
  return new me(e).splitQueries().setSteps(n);
}
function ld(...t) {
  t = t.map(be);
  const e = function(n) {
    const r = Math.floor(n.span.begin) % t.length;
    return t[r]?.query(n) || [];
  };
  return new me(e).splitQueries();
}
function ry(...t) {
  return mi(...t);
}
function _P(...t) {
  const e = t.reduce((n, [r]) => n + r, 0);
  return t = t.map(([n, r]) => [n, r.fast(n)]), ar(...t).slow(e);
}
function RP(...t) {
  let e = de(0);
  for (let n of t)
    n.length == 2 && n.unshift(e), e = n[1];
  return Wt(
    ...t.map(
      ([n, r, s]) => dn(be(s)).compress(de(n).div(e), de(r).div(e))
    )
  ).slow(e).innerJoin();
}
function Bn(...t) {
  let e = mi(...t);
  return t.length > 1 && (e = e._fast(t.length), e._steps = t.length), t.length == 1 && t[0].__steps_source && (t._steps = t[0]._steps), e;
}
function Jr(...t) {
  return Bn(...t);
}
function sy(...t) {
  return Bn(...t);
}
function Ap(t) {
  return Array.isArray(t) ? t.length == 0 ? [Pt, 0] : t.length == 1 ? Ap(t[0]) : [Bn(...t.map((e) => Ap(e)[0])), t.length] : [be(t), 1];
}
const ZP = Ye((t, e) => be(e).mask(t)), $P = Ye((t, e) => be(e).struct(t)), LP = Ye((t, e) => be(e).superimpose(...t)), IP = Ye((t, e) => be(e).withValue(t)), NP = Ye((t, e) => be(e).bind(t)), VP = Ye((t, e) => be(e).innerBind(t)), XP = Ye((t, e) => be(e).outerBind(t)), WP = Ye((t, e) => be(e).squeezeBind(t)), UP = Ye((t, e) => be(e).stepBind(t)), qP = Ye((t, e) => be(e).polyBind(t)), GP = Ye((t, e) => be(e).set(t)), zP = Ye((t, e) => be(e).keep(t)), YP = Ye((t, e) => be(e).keepif(t)), HP = Ye((t, e) => be(e).add(t)), KP = Ye((t, e) => be(e).sub(t)), JP = Ye((t, e) => be(e).mul(t)), eD = Ye((t, e) => be(e).div(t)), tD = Ye((t, e) => be(e).mod(t)), nD = Ye((t, e) => be(e).pow(t)), rD = Ye((t, e) => be(e).band(t)), sD = Ye((t, e) => be(e).bor(t)), iD = Ye((t, e) => be(e).bxor(t)), aD = Ye((t, e) => be(e).blshift(t)), oD = Ye((t, e) => be(e).brshift(t)), lD = Ye((t, e) => be(e).lt(t)), cD = Ye((t, e) => be(e).gt(t)), uD = Ye((t, e) => be(e).lte(t)), hD = Ye((t, e) => be(e).gte(t)), pD = Ye((t, e) => be(e).eq(t)), fD = Ye((t, e) => be(e).eqt(t)), dD = Ye((t, e) => be(e).ne(t)), mD = Ye((t, e) => be(e).net(t)), gD = Ye((t, e) => be(e).and(t)), bD = Ye((t, e) => be(e).or(t)), yD = Ye((t, e) => be(e).func(t));
function re(t, e, n = !0, r = !1, s = (i) => i.innerJoin()) {
  if (Array.isArray(t)) {
    const o = {};
    for (const l of t)
      o[l] = re(l, e, n, r, s);
    return o;
  }
  const i = e.length;
  var a;
  return n ? a = function(...o) {
    o = o.map(be);
    const l = o[o.length - 1];
    let u;
    if (i === 1)
      u = e(l);
    else {
      const h = o.slice(0, -1);
      if (h.every((f) => f.__pure != null)) {
        const f = h.map((b) => b.__pure), m = h.filter((b) => b.__pure_loc).map((b) => b.__pure_loc);
        u = e(...f, l), u = u.withContext((b) => {
          const v = (b.locations || []).concat(m);
          return { ...b, locations: v };
        });
      } else {
        const [f, ...m] = h;
        let b = (...v) => e(...v, l);
        b = Ye(b, null, i - 1), u = s(m.reduce((v, C) => v.appLeft(C), f.fmap(b)));
      }
    }
    return r && (u._steps = l._steps), u;
  } : a = function(...o) {
    o = o.map(be);
    const l = e(...o);
    return r && (l._steps = o[o.length - 1]._steps), l;
  }, me.prototype[t] = function(...o) {
    if (i === 2 && o.length !== 1)
      o = [Jr(...o)];
    else if (i !== o.length + 1)
      throw new Error(`.${t}() expects ${i - 1} inputs but got ${o.length}.`);
    return o = o.map(be), a(...o, this);
  }, i > 1 && (me.prototype["_" + t] = function(...o) {
    const l = e(...o, this);
    return r && l.setSteps(this._steps), l;
  }), Ye(a, null, i);
}
function Jo(t, e, n = !0, r = !1, s = (i) => i.stepJoin()) {
  return re(t, e, n, r, s);
}
const OD = re("round", function(t) {
  return t.asNumber().fmap((e) => Math.round(e));
}), vD = re("floor", function(t) {
  return t.asNumber().fmap((e) => Math.floor(e));
}), xD = re("ceil", function(t) {
  return t.asNumber().fmap((e) => Math.ceil(e));
}), wD = re("toBipolar", function(t) {
  return t.fmap((e) => e * 2 - 1);
}), kD = re("fromBipolar", function(t) {
  return t.fmap((e) => (e + 1) / 2);
}), CD = re("range", function(t, e, n) {
  return n.mul(e - t).add(t);
}), SD = re("rangex", function(t, e, n) {
  return n._range(Math.log(t), Math.log(e)).fmap(Math.exp);
}), AD = re("range2", function(t, e, n) {
  return n.fromBipolar()._range(t, e);
}), PD = re(
  "ratio",
  (t) => t.fmap((e) => Array.isArray(e) ? e.slice(1).reduce((n, r) => n / r, e[0]) : e)
), DD = re("compress", function(t, e, n) {
  return t = de(t), e = de(e), t.gt(e) || t.gt(1) || e.gt(1) || t.lt(0) || e.lt(0) ? Pt : n._fastGap(de(1).div(e.sub(t)))._late(t);
}), { compressSpan: ED, compressspan: FD } = re(["compressSpan", "compressspan"], function(t, e) {
  return e._compress(t.begin, t.end);
}), { fastGap: BD, fastgap: MD } = re(["fastGap", "fastgap"], function(t, e) {
  const n = function(s) {
    const i = s.begin.sam(), a = s.begin.sub(i).mul(t).min(1), o = s.end.sub(i).mul(t).min(1);
    if (!(a >= 1))
      return new Kt(i.add(a), i.add(o));
  }, r = function(s) {
    const i = s.part.begin, a = s.part.end, o = i.sam(), l = i.sub(o).div(t).min(1), u = a.sub(o).div(t).min(1), h = new Kt(o.add(l), o.add(u)), f = s.whole ? new Kt(
      h.begin.sub(i.sub(s.whole.begin).div(t)),
      h.end.add(s.whole.end.sub(a).div(t))
    ) : void 0;
    return new Ut(f, h, s.value, s.context);
  };
  return e.withQuerySpanMaybe(n).withHap(r).splitQueries();
}), TD = re("focus", function(t, e, n) {
  return t = de(t), e = de(e), n._early(t.sam())._fast(de(1).div(e.sub(t)))._late(t);
}), { focusSpan: QD, focusspan: jD } = re(["focusSpan", "focusspan"], function(t, e) {
  return e._focus(t.begin, t.end);
}), _D = re("ply", function(t, e) {
  const n = e.fmap((r) => dn(r)._fast(t)).squeezeJoin();
  return Kr && (n._steps = de(t).mulmaybe(e._steps)), n;
}), { fast: RD, density: U$ } = re(
  ["fast", "density"],
  function(t, e) {
    return t === 0 ? Pt : (t = de(t), e.withQueryTime((r) => r.mul(t)).withHapTime((r) => r.div(t)).setSteps(e._steps));
  },
  !0,
  !0
), ZD = re("hurry", function(t, e) {
  return e._fast(t).mul(dn({ speed: t }));
}), { slow: $D, sparsity: LD } = re(["slow", "sparsity"], function(t, e) {
  return t === 0 ? Pt : e._fast(de(1).div(t));
}), ID = re("inside", function(t, e, n) {
  return e(n._slow(t))._fast(t);
}), ND = re("outside", function(t, e, n) {
  return e(n._fast(t))._slow(t);
}), VD = re("lastOf", function(t, e, n) {
  const r = Array(t - 1).fill(n);
  return r.push(e(n)), ld(...r);
}), { firstOf: XD, every: WD } = re(["firstOf", "every"], function(t, e, n) {
  const r = Array(t - 1).fill(n);
  return r.unshift(e(n)), ld(...r);
}), UD = re("apply", function(t, e) {
  return t(e);
}), qD = re("cpm", function(t, e) {
  return e._fast(t / 60 / 1);
}), GD = re(
  "early",
  function(t, e) {
    return t = de(t), e.withQueryTime((n) => n.add(t)).withHapTime((n) => n.sub(t));
  },
  !0,
  !0
), iy = re(
  "late",
  function(t, e) {
    return t = de(t), e._early(de(0).sub(t));
  },
  !0,
  !0
), zD = re("zoom", function(t, e, n) {
  if (e = de(e), t = de(t), t.gte(e))
    return yr;
  const r = e.sub(t), s = Kr ? n._steps?.mulmaybe(r) : void 0;
  return n.withQuerySpan((i) => i.withCycle((a) => a.mul(r).add(t))).withHapSpan((i) => i.withCycle((a) => a.sub(t).div(r))).splitQueries().setSteps(s);
}), { zoomArc: YD, zoomarc: HD } = re(["zoomArc", "zoomarc"], function(t, e) {
  return e.zoom(t.begin, t.end);
}), KD = re(
  "bite",
  (t, e, n) => e.fmap((r) => (s) => {
    const i = de(r).div(s).mod(1), a = i.add(de(1).div(s));
    return n.zoom(i, a);
  }).appLeft(t).squeezeJoin(),
  !1
), JD = re(
  "linger",
  function(t, e) {
    return t == 0 ? Pt : t < 0 ? e._zoom(t.add(1), 1)._slow(t) : e._zoom(0, t)._slow(t);
  },
  !0,
  !0
), { segment: eE, seg: tE } = re(["segment", "seg"], function(t, e) {
  return e.struct(dn(!0)._fast(t)).setSteps(t);
}), nE = re("swingBy", (t, e, n) => n.inside(e, iy(sy(0, t / 2)))), rE = re("swing", (t, e) => e.swingBy(1 / 3, t)), { invert: sE, inv: iE } = re(
  ["invert", "inv"],
  function(t) {
    return t.fmap((e) => !e);
  },
  !0,
  !0
), aE = re("when", function(t, e, n) {
  return t ? e(n) : n;
}), oE = re("off", function(t, e, n) {
  return Wt(n, e(n.late(t)));
}), lE = re("brak", function(t) {
  return t.when(mi(!1, !0), (e) => Bn(e, Pt)._late(0.25));
}), ay = re(
  "rev",
  function(t) {
    const e = function(n) {
      const r = n.span, s = r.begin.sam(), i = r.begin.nextSam(), a = function(l) {
        const u = l.withTime((f) => s.add(i.sub(f))), h = u.begin;
        return u.begin = u.end, u.end = h, u;
      };
      return t.query(n.setSpan(a(r))).map((l) => l.withSpan(a));
    };
    return new me(e).splitQueries();
  },
  !1,
  !0
), cE = re("pressBy", function(t, e) {
  return e.fmap((n) => dn(n).compress(t, 1)).squeezeJoin();
}), uE = re("press", function(t) {
  return t._pressBy(0.5);
});
me.prototype.hush = function() {
  return Pt;
};
const hE = re(
  "palindrome",
  function(t) {
    return t.lastOf(2, ay);
  },
  !0,
  !0
), { juxBy: pE, juxby: fE } = re(["juxBy", "juxby"], function(t, e, n) {
  t /= 2;
  const r = function(a, o, l) {
    return o in a ? a[o] : l;
  }, s = n.withValue((a) => Object.assign({}, a, { pan: r(a, "pan", 0.5) - t })), i = e(n.withValue((a) => Object.assign({}, a, { pan: r(a, "pan", 0.5) + t })));
  return Wt(s, i).setSteps(Kr ? Hr(s._steps, i._steps) : void 0);
}), dE = re("jux", function(t, e) {
  return e._juxBy(1, t, e);
}), { echoWith: mE, echowith: gE, stutWith: bE, stutwith: yE } = re(
  ["echoWith", "echowith", "stutWith", "stutwith"],
  function(t, e, n, r) {
    return Wt(...nd(0, t - 1).map((s) => n(r.late(de(e).mul(s)), s)));
  }
), OE = re("echo", function(t, e, n, r) {
  return r._echoWith(t, e, (s, i) => s.gain(Math.pow(n, i)));
}), vE = re("stut", function(t, e, n, r) {
  return r._echoWith(t, n, (s, i) => s.gain(Math.pow(e, i)));
}), cd = function(t, e, n = !1) {
  return t = de(t), mi(
    ...nd(0, t.sub(1)).map(
      (r) => n ? e.late(de(r).div(t)) : e.early(de(r).div(t))
    )
  );
}, xE = re(
  "iter",
  function(t, e) {
    return cd(t, e, !1);
  },
  !0,
  !0
), { iterBack: wE, iterback: kE } = re(
  ["iterBack", "iterback"],
  function(t, e) {
    return cd(t, e, !0);
  },
  !0,
  !0
), { repeatCycles: CE } = re(
  "repeatCycles",
  function(t, e) {
    return new me(function(n) {
      const r = n.span.begin.sam(), s = r.div(t).sam(), i = r.sub(s);
      return n = n.withSpan((a) => a.withTime((o) => o.sub(i))), e.query(n).map((a) => a.withSpan((o) => o.withTime((l) => l.add(i))));
    }).splitQueries();
  },
  !0,
  !0
), ud = function(t, e, n, r = !1, s = !1) {
  const i = Array(t - 1).fill(!1);
  i.unshift(!0);
  const a = cd(t, Jr(...i), !r);
  return s || (n = n.repeatCycles(t)), n.when(a, e);
}, { chunk: SE, slowchunk: AE, slowChunk: PE } = re(
  ["chunk", "slowchunk", "slowChunk"],
  function(t, e, n) {
    return ud(t, e, n, !1, !1);
  },
  !0,
  !0
), { chunkBack: DE, chunkback: EE } = re(
  ["chunkBack", "chunkback"],
  function(t, e, n) {
    return ud(t, e, n, !0);
  },
  !0,
  !0
), { fastchunk: FE, fastChunk: BE } = re(
  ["fastchunk", "fastChunk"],
  function(t, e, n) {
    return ud(t, e, n, !1, !0);
  },
  !0,
  !0
), { chunkinto: ME, chunkInto: TE } = re(["chunkinto", "chunkInto"], function(t, e, n) {
  return n.into(Bn(!0, ...Array(t - 1).fill(!1))._iterback(t), e);
}), { chunkbackinto: QE, chunkBackInto: jE } = re(["chunkbackinto", "chunkBackInto"], function(t, e, n) {
  return n.into(
    Bn(!0, ...Array(t - 1).fill(!1))._iter(t)._early(1),
    e
  );
}), _E = re(
  "bypass",
  function(t, e) {
    return t = !!parseInt(t), t ? Pt : e;
  },
  !0,
  !0
), { ribbon: RE, rib: ZE } = re(
  ["ribbon", "rib"],
  (t, e, n) => n.early(t).restart(dn(1).slow(e))
), $E = re("hsla", (t, e, n, r, s) => s.color(`hsla(${t}turn,${e * 100}%,${n * 100}%,${r})`)), LE = re("hsl", (t, e, n, r) => r.color(`hsl(${t}turn,${e * 100}%,${n * 100}%)`));
me.prototype.tag = function(t) {
  return this.withContext((e) => ({ ...e, tags: (e.tags || []).concat([t]) }));
};
const IE = re("filter", (t, e) => e.withHaps((n) => n.filter(t))), NE = re("filterWhen", (t, e) => e.filter((n) => t(n.whole.begin))), VE = re(
  "within",
  (t, e, n, r) => Wt(
    n(r.filterWhen((s) => s.cyclePos() >= t && s.cyclePos() <= e)),
    r.filterWhen((s) => s.cyclePos() < t || s.cyclePos() > e)
  )
);
me.prototype.stepJoin = function() {
  const t = this, e = ar(...Pp(Dp(t.queryArc(0, 1))))._steps, n = function(r) {
    const i = t.early(r.span.begin.sam()).query(r.setSpan(new Kt(de(0), de(1))));
    return ar(...Pp(Dp(i))).query(r);
  };
  return new me(n, e);
};
me.prototype.stepBind = function(t) {
  return this.fmap(t).stepJoin();
};
function Pp(t) {
  const e = t.filter((i, a) => a.hasSteps).reduce((i, a) => i.add(a), de(0)), n = Ta(t.map((i, a) => a._steps)).reduce(
    (i, a) => i.add(a),
    de(0)
  ), r = e.eq(0) ? void 0 : n.div(e);
  function s(i, a) {
    return a._steps === void 0 ? [i.mulmaybe(r), a] : [a._steps, a];
  }
  return t.map((i) => s(...i));
}
function Dp(t) {
  const e = Ts(t.map((s) => [s.part.begin, s.part.end])), n = Xb([de(0), de(1), ...e]);
  return Vb(n).map((s) => [
    s[1].sub(s[0]),
    Wt(...oy(new Kt(...s), t).map((i) => i.value.withHap((a) => a.setContext(a.combineContext(i)))))
  ]);
}
function oy(t, e) {
  return Ta(e.map((n) => ly(t, n)));
}
function ly(t, e) {
  const n = t.intersection(e.part);
  if (n != null)
    return new Ut(e.whole, n, e.value, e.context);
}
const cy = re("pace", function(t, e) {
  return e._steps === void 0 ? e : e._steps.eq(de(0)) ? yr : e._fast(de(t).div(e._steps)).setSteps(t);
});
function uy(t, ...e) {
  const n = e.map((s) => Ap(s));
  if (n.length == 0)
    return Pt;
  t == 0 && (t = n[0][1]);
  const r = [];
  for (const s of n)
    s[1] != 0 && (t == s[1] ? r.push(s[0]) : r.push(s[0]._fast(de(t).div(de(s[1])))));
  return Wt(...r);
}
function Fu(...t) {
  if (Array.isArray(t[0]))
    return uy(0, ...t);
  if (t = t.filter((r) => r.hasSteps), t.length == 0)
    return Pt;
  const e = Hr(...t.map((r) => r._steps));
  if (e.eq(de(0)))
    return yr;
  const n = Wt(...t.map((r) => r.pace(e)));
  return n._steps = e, n;
}
function ar(...t) {
  if (t.length === 0)
    return yr;
  const e = (a) => Array.isArray(a) ? a : [a._steps ?? 1, a];
  if (t = t.map(e), t.find((a) => a[0] === void 0)) {
    const a = t.map((l) => l[0]).filter((l) => l !== void 0);
    if (a.length === 0)
      return Bn(...t.map((l) => l[1]));
    if (a.length === t.length)
      return yr;
    const o = a.reduce((l, u) => l.add(u), de(0)).div(a.length);
    for (let l of t)
      l[0] === void 0 && (l[0] = o);
  }
  if (t.length == 1)
    return be(t[0][1]).withSteps((o) => t[0][0]);
  const n = t.map((a) => a[0]).reduce((a, o) => a.add(o), de(0));
  let r = de(0);
  const s = [];
  for (const [a, o] of t) {
    if (de(a).eq(0))
      continue;
    const l = r.add(a);
    s.push(be(o)._compress(r.div(n), l.div(n))), r = l;
  }
  const i = Wt(...s);
  return i._steps = n, i;
}
function hy(...t) {
  t = t.map((s) => Array.isArray(s) ? s.map(be) : [be(s)]);
  const e = Hr(...t.map((s) => de(s.length)));
  let n = [];
  for (let s = 0; s < e; ++s)
    n.push(...t.map((i) => i.length == 0 ? Pt : i[s % i.length]));
  n = n.filter((s) => s.hasSteps && s._steps > 0);
  const r = n.reduce((s, i) => s.add(i._steps), de(0));
  return n = ar(...n), n._steps = r, n;
}
const py = Jo("take", function(t, e) {
  if (!e.hasSteps || e._steps.lte(0) || (t = de(t), t.eq(0)))
    return yr;
  const n = t < 0;
  n && (t = t.abs());
  const r = t.div(e._steps);
  return r.lte(0) ? yr : r.gte(1) ? e : n ? e.zoom(de(1).sub(r), 1) : e.zoom(0, r);
}), fy = Jo("drop", function(t, e) {
  return e.hasSteps ? (t = de(t), t.lt(0) ? e.take(e._steps.add(t)) : e.take(de(0).sub(e._steps.sub(t)))) : yr;
}), dy = Jo("extend", function(t, e) {
  return e.fast(t).expand(t);
}), my = Jo("expand", function(t, e) {
  return e.withSteps((n) => n.mul(de(t)));
}), gy = Jo("contract", function(t, e) {
  return e.withSteps((n) => n.div(de(t)));
});
me.prototype.shrinklist = function(t) {
  const e = this;
  if (!e.hasSteps)
    return [e];
  let [n, r] = Array.isArray(t) ? t : [t, e._steps];
  if (n = de(n), r === 0 || n === 0)
    return [e];
  const s = n > 0, i = [];
  if (s) {
    const a = de(1).div(e._steps).mul(n);
    for (let o = 0; o < r; ++o) {
      const l = a.mul(o);
      if (l.gt(1))
        break;
      i.push([l, 1]);
    }
  } else {
    n = de(0).sub(n);
    const a = de(1).div(e._steps).mul(n);
    for (let o = 0; o < r; ++o) {
      const l = de(1).sub(a.mul(o));
      if (l.lt(0))
        break;
      i.push([de(0), l]);
    }
  }
  return i.map((a) => e.zoom(...a));
};
const by = (t, e) => e.shrinklist(t), yy = re(
  "shrink",
  function(t, e) {
    if (!e.hasSteps)
      return yr;
    const n = e.shrinklist(t), r = ar(...n);
    return r._steps = n.reduce((s, i) => s.add(i._steps), de(0)), r;
  },
  !0,
  !1,
  (t) => t.stepJoin()
), XE = re(
  "grow",
  function(t, e) {
    if (!e.hasSteps)
      return yr;
    const n = e.shrinklist(de(0).sub(t));
    n.reverse();
    const r = ar(...n);
    return r._steps = n.reduce((s, i) => s.add(i._steps), de(0)), r;
  },
  !0,
  !1,
  (t) => t.stepJoin()
), Oy = function(t, ...e) {
  return t.tour(...e);
};
me.prototype.tour = function(...t) {
  return ar(
    ...[].concat(
      ...t.map((e, n) => [...t.slice(0, t.length - n), this, ...t.slice(t.length - n)]),
      this,
      ...t
    )
  );
};
const vy = function(...t) {
  t = t.filter((r) => r.hasSteps);
  const e = mi(...t.map((r) => r._slow(r._steps))), n = Hr(...t.map((r) => r._steps));
  return e._fast(n).setSteps(n);
}, WE = ar, hd = ar, UE = ar, qE = hy, GE = Fu;
me.prototype.s_polymeter = me.prototype.polymeter;
const zE = yy;
me.prototype.s_taper = me.prototype.shrink;
const YE = by;
me.prototype.s_taperlist = me.prototype.shrinklist;
const HE = py;
me.prototype.s_add = me.prototype.take;
const KE = fy;
me.prototype.s_sub = me.prototype.drop;
const JE = my;
me.prototype.s_expand = me.prototype.expand;
const eF = dy;
me.prototype.s_extend = me.prototype.extend;
const tF = gy;
me.prototype.s_contract = me.prototype.contract;
const nF = Oy;
me.prototype.s_tour = me.prototype.tour;
const rF = vy;
me.prototype.s_zip = me.prototype.zip;
const sF = cy;
me.prototype.steps = me.prototype.pace;
const iF = re("chop", function(t, e) {
  const r = Array.from({ length: t }, (a, o) => o).map((a) => ({ begin: a / t, end: (a + 1) / t })), s = function(a, o) {
    if ("begin" in a && "end" in a && a.begin !== void 0 && a.end !== void 0) {
      const l = a.end - a.begin;
      o = { begin: a.begin + o.begin * l, end: a.begin + o.end * l };
    }
    return Object.assign({}, a, o);
  }, i = function(a) {
    return Jr(r.map((o) => s(a, o)));
  };
  return e.squeezeBind(i).setSteps(Kr ? de(t).mulmaybe(e._steps) : void 0);
}), aF = re("striate", function(t, e) {
  const r = Array.from({ length: t }, (i, a) => a).map((i) => ({ begin: i / t, end: (i + 1) / t })), s = mi(...r);
  return e.set(s)._fast(t).setSteps(Kr ? de(t).mulmaybe(e._steps) : void 0);
}), xy = function(t, e, n = 0.5) {
  return e.speed(1 / t * n).unit("c").slow(t);
}, wy = re(
  "slice",
  function(t, e, n) {
    return t.innerBind(
      (r) => e.outerBind(
        (s) => n.outerBind((i) => {
          i = i instanceof Object ? i : { s: i };
          const a = Array.isArray(r) ? r[s] : s / r, o = Array.isArray(r) ? r[s + 1] : (s + 1) / r;
          return dn({ begin: a, end: o, _slices: r, ...i });
        })
      )
    ).setSteps(e._steps);
  },
  !1
  // turns off auto-patternification
);
me.prototype.onTriggerTime = function(t) {
  return this.onTrigger((e, n, r, s) => {
    const i = s - n;
    window.setTimeout(() => {
      t(e);
    }, i * 1e3);
  }, !1);
};
const oF = re(
  "splice",
  function(t, e, n) {
    const r = wy(t, e, n);
    return new me((s) => {
      const i = s.controls._cps || 1;
      return r.query(s).map(
        (o) => o.withValue((l) => ({
          speed: i / l._slices / o.whole.duration * (l.speed || 1),
          unit: "c",
          ...l
        }))
      );
    }).setSteps(e._steps);
  },
  !1
  // turns off auto-patternification
), { loopAt: lF, loopat: cF } = re(["loopAt", "loopat"], function(t, e) {
  const n = e._steps ? e._steps.div(t) : void 0;
  return new me((r) => xy(t, e, r.controls._cps).query(r), n);
}), uF = re(
  "fit",
  (t) => t.withHaps(
    (e, n) => e.map(
      (r) => r.withValue((s) => {
        const i = ("end" in s ? s.end : 1) - ("begin" in s ? s.begin : 0);
        return {
          ...s,
          speed: (n.controls._cps || 1) / r.whole.duration * i,
          unit: "c"
        };
      })
    )
  )
), { loopAtCps: hF, loopatcps: pF } = re(["loopAtCps", "loopatcps"], function(t, e, n) {
  return xy(t, n, e);
}), ky = (t) => dn(1).withValue(() => be(t())).innerJoin();
let Ym = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5, Cy = (t, e, n) => {
  e = be(e), t = be(t), n = be(n);
  let r = e.fmap((i) => ({ gain: Ym(i) })), s = e.fmap((i) => ({ gain: Ym(1 - i) }));
  return Wt(t.mul(r), n.mul(s));
};
me.prototype.xfade = function(t, e) {
  return Cy(this, t, e);
};
const fF = (t) => (e, n, r) => {
  e = de(e).mod(n), n = de(n);
  const s = e.div(n), i = e.add(1).div(n);
  return t(r.fmap((a) => dn(a)._compress(s, i)));
}, { beat: dF } = re(
  ["beat"],
  fF((t) => t.innerJoin())
), pd = (t, e, n) => {
  n = de(n);
  const r = de(1).div(t.length), s = (o) => {
    const l = [];
    for (const [u, h] of o.entries())
      h && l.push([de(u).div(o.length), h]);
    return l;
  }, i = Pu(
    ([o, l], [u, h]) => {
      const f = n.mul(u - o).add(o), m = f.add(r);
      return new Kt(f, m);
    },
    s(t),
    s(e)
  );
  function a(o) {
    const l = o.span.begin.sam(), u = o.span.cycleArc(), h = [];
    for (const f of i) {
      const m = f.intersection(u);
      m !== void 0 && h.push(
        new Ut(
          f.withTime((b) => b.add(l)),
          m.withTime((b) => b.add(l)),
          !0
        )
      );
    }
    return h;
  }
  return new me(a).splitQueries();
}, mF = (t, e, n) => (t = be(t), e = be(e), n = be(n), t.innerBind((r) => e.innerBind((s) => n.innerBind((i) => pd(r, s, i)))));
function Bu(t) {
  let e = Array.isArray(t);
  t = e ? t : [t];
  const n = t[0], r = (i) => {
    let a;
    if (typeof i == "object" && i.value !== void 0 && (a = { ...i }, i = i.value, delete a.value), e && Array.isArray(i)) {
      const o = a || {};
      return i.forEach((l, u) => {
        u < t.length && (o[t[u]] = l);
      }), o;
    } else return a ? (a[n] = i, a) : { [n]: i };
  }, s = function(i, a) {
    return a ? typeof i > "u" ? a.fmap(r) : a.set(be(i).withValue(r)) : be(i).withValue(r);
  };
  return me.prototype[n] = function(i) {
    return s(i, this);
  }, s;
}
const Do = /* @__PURE__ */ new Map();
function Sy(t) {
  return Do.has(t);
}
function X(t, ...e) {
  const n = Array.isArray(t) ? t[0] : t;
  let r = {};
  return r[n] = Bu(t), Do.set(n, n), e.forEach((s) => {
    r[s] = r[n], Do.set(s, n), me.prototype[s] = me.prototype[n];
  }), r;
}
const { s: Ay, sound: Py } = X(["s", "n", "gain"], "sound"), { source: Dy, src: Ey } = X("source", "src"), { n: Fy } = X("n"), { note: By } = X(["note", "n"]), { accelerate: My } = X("accelerate"), { velocity: Ty } = X("velocity"), { gain: Qy } = X("gain"), { postgain: jy } = X("postgain"), { amp: _y } = X("amp"), { attack: Ry, att: Zy } = X("attack", "att"), { fmh: $y } = X(["fmh", "fmi"], "fmh"), { fmi: Ly, fm: Iy } = X(["fmi", "fmh"], "fm"), { fmenv: Ny } = X("fmenv"), { fmattack: Vy } = X("fmattack"), { fmwave: Xy } = X("fmwave"), { fmdecay: Wy } = X("fmdecay"), { fmsustain: Uy } = X("fmsustain"), { fmrelease: qy } = X("fmrelease"), { fmvelocity: Gy } = X("fmvelocity"), { bank: zy } = X("bank"), { analyze: Yy } = X("analyze"), { fft: Hy } = X("fft"), { decay: Ky, dec: Jy } = X("decay", "dec"), { sustain: e1, sus: t1 } = X("sustain", "sus"), { release: n1, rel: r1 } = X("release", "rel"), { hold: s1 } = X("hold"), { bandf: i1, bpf: a1, bp: o1 } = X(["bandf", "bandq", "bpenv"], "bpf", "bp"), { bandq: l1, bpq: c1 } = X("bandq", "bpq"), { begin: u1 } = X("begin"), { end: h1 } = X("end"), { loop: p1 } = X("loop"), { loopBegin: f1, loopb: d1 } = X("loopBegin", "loopb"), { loopEnd: m1, loope: g1 } = X("loopEnd", "loope"), { crush: b1 } = X("crush"), { coarse: y1 } = X("coarse"), { tremolo: O1 } = X(["tremolo", "tremolodepth", "tremoloskew", "tremolophase"], "trem"), { tremolosync: v1 } = X(
  ["tremolosync", "tremolodepth", "tremoloskew", "tremolophase"],
  "tremsync"
), { tremolodepth: x1 } = X("tremolodepth", "tremdepth"), { tremoloskew: w1 } = X("tremoloskew", "tremskew"), { tremolophase: k1 } = X("tremolophase", "tremphase"), { tremoloshape: C1 } = X("tremoloshape", "tremshape"), { duck: S1 } = X("duckorbit", "duck"), { duckdepth: A1 } = X("duckdepth"), { duckattack: P1 } = X("duckattack", "duckatt"), { drive: D1 } = X("drive"), { byteBeatExpression: E1, bbexpr: F1 } = X("byteBeatExpression", "bbexpr"), { byteBeatStartTime: B1, bbst: M1 } = X("byteBeatStartTime", "bbst"), { channels: T1, ch: Q1 } = X("channels", "ch"), { pw: j1 } = X(["pw", "pwrate", "pwsweep"]), { pwrate: _1 } = X("pwrate"), { pwsweep: R1 } = X("pwsweep"), { phaserrate: Z1, ph: $1, phaser: L1 } = X(
  ["phaserrate", "phaserdepth", "phasercenter", "phasersweep"],
  "ph",
  "phaser"
), { phasersweep: I1, phs: N1 } = X("phasersweep", "phs"), { phasercenter: V1, phc: X1 } = X("phasercenter", "phc"), { phaserdepth: W1, phd: U1, phasdp: q1 } = X("phaserdepth", "phd", "phasdp"), { channel: G1 } = X("channel"), { cut: z1 } = X("cut"), { cutoff: Y1, ctf: H1, lpf: K1, lp: J1 } = X(["cutoff", "resonance", "lpenv"], "ctf", "lpf", "lp"), { lpenv: eO, lpe: tO } = X("lpenv", "lpe"), { hpenv: nO, hpe: rO } = X("hpenv", "hpe"), { bpenv: sO, bpe: iO } = X("bpenv", "bpe"), { lpattack: aO, lpa: oO } = X("lpattack", "lpa"), { hpattack: lO, hpa: cO } = X("hpattack", "hpa"), { bpattack: uO, bpa: hO } = X("bpattack", "bpa"), { lpdecay: pO, lpd: fO } = X("lpdecay", "lpd"), { hpdecay: dO, hpd: mO } = X("hpdecay", "hpd"), { bpdecay: gO, bpd: bO } = X("bpdecay", "bpd"), { lpsustain: yO, lps: OO } = X("lpsustain", "lps"), { hpsustain: vO, hps: xO } = X("hpsustain", "hps"), { bpsustain: wO, bps: kO } = X("bpsustain", "bps"), { lprelease: CO, lpr: SO } = X("lprelease", "lpr"), { hprelease: AO, hpr: PO } = X("hprelease", "hpr"), { bprelease: DO, bpr: EO } = X("bprelease", "bpr"), { ftype: FO } = X("ftype"), { fanchor: BO } = X("fanchor"), { vib: MO, vibrato: TO, v: QO } = X(["vib", "vibmod"], "vibrato", "v"), { noise: jO } = X("noise"), { vibmod: _O, vmod: RO } = X(["vibmod", "vib"], "vmod"), { hcutoff: ZO, hpf: $O, hp: LO } = X(["hcutoff", "hresonance", "hpenv"], "hpf", "hp"), { hresonance: IO, hpq: NO } = X("hresonance", "hpq"), { resonance: VO, lpq: XO } = X("resonance", "lpq"), { djf: WO } = X("djf"), { delay: UO } = X(["delay", "delaytime", "delayfeedback"]), { delayfeedback: qO, delayfb: GO, dfb: zO } = X("delayfeedback", "delayfb", "dfb"), { delaytime: YO, delayt: HO, dt: KO } = X("delaytime", "delayt", "dt"), { delaysync: JO } = X("delaysync"), { lock: ev } = X("lock"), { detune: tv, det: nv } = X("detune", "det"), { unison: rv } = X("unison"), { spread: sv } = X("spread"), { dry: iv } = X("dry"), { fadeTime: av, fadeOutTime: ov } = X("fadeTime", "fadeOutTime"), { fadeInTime: lv } = X("fadeInTime"), { freq: cv } = X("freq"), { pattack: uv, patt: hv } = X("pattack", "patt"), { pdecay: pv, pdec: fv } = X("pdecay", "pdec"), { psustain: dv, psus: mv } = X("psustain", "psus"), { prelease: gv, prel: bv } = X("prelease", "prel"), { penv: yv } = X("penv"), { pcurve: Ov } = X("pcurve"), { panchor: vv } = X("panchor"), { gate: xv, gat: wv } = X("gate", "gat"), { leslie: kv } = X("leslie"), { lrate: Cv } = X("lrate"), { lsize: Sv } = X("lsize"), { activeLabel: Av } = X("activeLabel"), { label: Pv } = X(["label", "activeLabel"]), { degree: Dv } = X("degree"), { mtranspose: Ev } = X("mtranspose"), { ctranspose: Fv } = X("ctranspose"), { harmonic: Bv } = X("harmonic"), { stepsPerOctave: Mv } = X("stepsPerOctave"), { octaveR: Tv } = X("octaveR"), { nudge: Qv } = X("nudge"), { octave: jv } = X("octave"), { orbit: _v } = X("orbit"), { overgain: Rv } = X("overgain"), { overshape: Zv } = X("overshape"), { pan: $v } = X("pan"), { panspan: Lv } = X("panspan"), { pansplay: Iv } = X("pansplay"), { panwidth: Nv } = X("panwidth"), { panorient: Vv } = X("panorient"), { rate: Xv } = X("rate"), { slide: Wv } = X("slide"), { semitone: Uv } = X("semitone"), { voice: qv } = X("voice"), { chord: Gv } = X("chord"), { dictionary: zv, dict: Yv } = X("dictionary", "dict"), { anchor: Hv } = X("anchor"), { offset: Kv } = X("offset"), { octaves: Jv } = X("octaves"), { mode: ex } = X(["mode", "anchor"]), { room: tx } = X(["room", "size"]), { roomlp: nx, rlp: rx } = X("roomlp", "rlp"), { roomdim: sx, rdim: ix } = X("roomdim", "rdim"), { roomfade: ax, rfade: ox } = X("roomfade", "rfade"), { ir: lx, iresponse: cx } = X(["ir", "i"], "iresponse"), { irspeed: ux } = X("irspeed"), { irbegin: hx } = X("irbegin"), { roomsize: px, size: fx, sz: dx, rsize: mx } = X("roomsize", "size", "sz", "rsize"), { shape: gx } = X(["shape", "shapevol"]), { distort: bx, dist: yx } = X(["distort", "distortvol"], "dist"), { compressor: Ox } = X([
  "compressor",
  "compressorRatio",
  "compressorKnee",
  "compressorAttack",
  "compressorRelease"
]), { compressorKnee: vx } = X("compressorKnee"), { compressorRatio: xx } = X("compressorRatio"), { compressorAttack: wx } = X("compressorAttack"), { compressorRelease: kx } = X("compressorRelease"), { speed: fd } = X("speed"), { stretch: Cx } = X("stretch"), { unit: Sx } = X("unit"), { squiz: Ax } = X("squiz"), { vowel: Px } = X("vowel"), { waveloss: Dx } = X("waveloss"), { density: gF } = X("density"), { expression: Ex } = X("expression"), { sustainpedal: Fx } = X("sustainpedal"), { fshift: Bx } = X("fshift"), { fshiftnote: Mx } = X("fshiftnote"), { fshiftphase: Tx } = X("fshiftphase"), { triode: Qx } = X("triode"), { krush: jx } = X("krush"), { kcutoff: _x } = X("kcutoff"), { octer: Rx } = X("octer"), { octersub: Zx } = X("octersub"), { octersubsub: $x } = X("octersubsub"), { ring: Lx } = X("ring"), { ringf: Ix } = X("ringf"), { ringdf: Nx } = X("ringdf"), { freeze: Vx } = X("freeze"), { xsdelay: Xx } = X("xsdelay"), { tsdelay: Wx } = X("tsdelay"), { real: Ux } = X("real"), { imag: qx } = X("imag"), { enhance: Gx } = X("enhance"), { partials: zx } = X("partials"), { comb: Yx } = X("comb"), { smear: Hx } = X("smear"), { scram: Kx } = X("scram"), { binshift: Jx } = X("binshift"), { hbrick: ew } = X("hbrick"), { lbrick: tw } = X("lbrick"), { frameRate: nw } = X("frameRate"), { frames: rw } = X("frames"), { hours: sw } = X("hours"), { minutes: iw } = X("minutes"), { seconds: aw } = X("seconds"), { songPtr: ow } = X("songPtr"), { uid: lw } = X("uid"), { val: cw } = X("val"), { cps: uw } = X("cps"), { clip: hw, legato: pw } = X("clip", "legato"), { duration: fw, dur: dw } = X("duration", "dur"), { zrand: mw } = X("zrand"), { curve: gw } = X("curve"), { deltaSlide: bw } = X("deltaSlide"), { pitchJump: yw } = X("pitchJump"), { pitchJumpTime: Ow } = X("pitchJumpTime"), { lfo: vw, repeatTime: xw } = X("lfo", "repeatTime"), { znoise: ww } = X("znoise"), { zmod: kw } = X("zmod"), { zcrush: Cw } = X("zcrush"), { zdelay: Sw } = X("zdelay"), { zzfx: Aw } = X("zzfx"), { color: Pw, colour: Dw } = X(["color", "colour"]);
let dd = (...t) => t.reduce((e, n) => Object.assign(e, { [n]: Bu(n) }), {});
const Ew = re("adsr", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r, s, i] = t;
  return e.set({ attack: n, decay: r, sustain: s, release: i });
}), Fw = re("ad", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r = n] = t;
  return e.attack(n).decay(r);
}), Bw = re("ds", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r = 0] = t;
  return e.set({ decay: n, sustain: r });
}), Mw = re("ar", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r = n] = t;
  return e.set({ attack: n, release: r });
}), { midichan: Tw } = X("midichan"), { midimap: Qw } = X("midimap"), { midiport: jw } = X("midiport"), { midicmd: _w } = X("midicmd"), Rw = re("control", (t, e) => {
  if (!Array.isArray(t))
    throw new Error("control expects an array of [ccn, ccv]");
  const [n, r] = t;
  return e.ccn(n).ccv(r);
}), { ccn: Zw } = X("ccn"), { ccv: $w } = X("ccv"), { ctlNum: Lw } = X("ctlNum"), { nrpnn: Iw } = X("nrpnn"), { nrpv: Nw } = X("nrpv"), { progNum: Vw } = X("progNum"), Xw = re("sysex", (t, e) => {
  if (!Array.isArray(t))
    throw new Error("sysex expects an array of [id, data]");
  const [n, r] = t;
  return e.sysexid(n).sysexdata(r);
}), { sysexid: Ww } = X("sysexid"), { sysexdata: Uw } = X("sysexdata"), { midibend: qw } = X("midibend"), { miditouch: Gw } = X("miditouch"), { polyTouch: zw } = X("polyTouch"), md = (t) => Do.has(t) ? Do.get(t) : t, Yw = re("as", (t, e) => (t = Array.isArray(t) ? t : [t], e.fmap((n) => (n = Array.isArray(n) ? n : [n], n = Object.fromEntries(t.map((r, s) => [md(r), n[s]])), n)))), Hw = re(
  "scrub",
  (t, e) => t.outerBind((n) => {
    Array.isArray(n) || (n = [n]);
    const [r, s = 1] = n;
    return e.begin(r).mul(fd(s)).clip(1);
  }),
  !1
), bF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  accelerate: My,
  activeLabel: Av,
  ad: Fw,
  adsr: Ew,
  amp: _y,
  analyze: Yy,
  anchor: Hv,
  ar: Mw,
  as: Yw,
  att: Zy,
  attack: Ry,
  bandf: i1,
  bandq: l1,
  bank: zy,
  bbexpr: F1,
  bbst: M1,
  begin: u1,
  binshift: Jx,
  bp: o1,
  bpa: hO,
  bpattack: uO,
  bpd: bO,
  bpdecay: gO,
  bpe: iO,
  bpenv: sO,
  bpf: a1,
  bpq: c1,
  bpr: EO,
  bprelease: DO,
  bps: kO,
  bpsustain: wO,
  byteBeatExpression: E1,
  byteBeatStartTime: B1,
  ccn: Zw,
  ccv: $w,
  ch: Q1,
  channel: G1,
  channels: T1,
  chord: Gv,
  clip: hw,
  coarse: y1,
  color: Pw,
  colour: Dw,
  comb: Yx,
  compressor: Ox,
  compressorAttack: wx,
  compressorKnee: vx,
  compressorRatio: xx,
  compressorRelease: kx,
  control: Rw,
  cps: uw,
  createParam: Bu,
  createParams: dd,
  crush: b1,
  ctf: H1,
  ctlNum: Lw,
  ctranspose: Fv,
  curve: gw,
  cut: z1,
  cutoff: Y1,
  dec: Jy,
  decay: Ky,
  degree: Dv,
  delay: UO,
  delayfb: GO,
  delayfeedback: qO,
  delaysync: JO,
  delayt: HO,
  delaytime: YO,
  deltaSlide: bw,
  density: gF,
  det: nv,
  detune: tv,
  dfb: zO,
  dict: Yv,
  dictionary: zv,
  dist: yx,
  distort: bx,
  djf: WO,
  drive: D1,
  dry: iv,
  ds: Bw,
  dt: KO,
  duck: S1,
  duckattack: P1,
  duckdepth: A1,
  dur: dw,
  duration: fw,
  end: h1,
  enhance: Gx,
  expression: Ex,
  fadeInTime: lv,
  fadeOutTime: ov,
  fadeTime: av,
  fanchor: BO,
  fft: Hy,
  fm: Iy,
  fmattack: Vy,
  fmdecay: Wy,
  fmenv: Ny,
  fmh: $y,
  fmi: Ly,
  fmrelease: qy,
  fmsustain: Uy,
  fmvelocity: Gy,
  fmwave: Xy,
  frameRate: nw,
  frames: rw,
  freeze: Vx,
  freq: cv,
  fshift: Bx,
  fshiftnote: Mx,
  fshiftphase: Tx,
  ftype: FO,
  gain: Qy,
  gat: wv,
  gate: xv,
  getControlName: md,
  harmonic: Bv,
  hbrick: ew,
  hcutoff: ZO,
  hold: s1,
  hours: sw,
  hp: LO,
  hpa: cO,
  hpattack: lO,
  hpd: mO,
  hpdecay: dO,
  hpe: rO,
  hpenv: nO,
  hpf: $O,
  hpq: NO,
  hpr: PO,
  hprelease: AO,
  hps: xO,
  hpsustain: vO,
  hresonance: IO,
  imag: qx,
  ir: lx,
  irbegin: hx,
  iresponse: cx,
  irspeed: ux,
  isControlName: Sy,
  kcutoff: _x,
  krush: jx,
  label: Pv,
  lbrick: tw,
  legato: pw,
  leslie: kv,
  lfo: vw,
  lock: ev,
  loop: p1,
  loopBegin: f1,
  loopEnd: m1,
  loopb: d1,
  loope: g1,
  lp: J1,
  lpa: oO,
  lpattack: aO,
  lpd: fO,
  lpdecay: pO,
  lpe: tO,
  lpenv: eO,
  lpf: K1,
  lpq: XO,
  lpr: SO,
  lprelease: CO,
  lps: OO,
  lpsustain: yO,
  lrate: Cv,
  lsize: Sv,
  midibend: qw,
  midichan: Tw,
  midicmd: _w,
  midimap: Qw,
  midiport: jw,
  miditouch: Gw,
  minutes: iw,
  mode: ex,
  mtranspose: Ev,
  n: Fy,
  noise: jO,
  note: By,
  nrpnn: Iw,
  nrpv: Nw,
  nudge: Qv,
  octave: jv,
  octaveR: Tv,
  octaves: Jv,
  octer: Rx,
  octersub: Zx,
  octersubsub: $x,
  offset: Kv,
  orbit: _v,
  overgain: Rv,
  overshape: Zv,
  pan: $v,
  panchor: vv,
  panorient: Vv,
  panspan: Lv,
  pansplay: Iv,
  panwidth: Nv,
  partials: zx,
  patt: hv,
  pattack: uv,
  pcurve: Ov,
  pdec: fv,
  pdecay: pv,
  penv: yv,
  ph: $1,
  phasdp: q1,
  phaser: L1,
  phasercenter: V1,
  phaserdepth: W1,
  phaserrate: Z1,
  phasersweep: I1,
  phc: X1,
  phd: U1,
  phs: N1,
  pitchJump: yw,
  pitchJumpTime: Ow,
  polyTouch: zw,
  postgain: jy,
  prel: bv,
  prelease: gv,
  progNum: Vw,
  psus: mv,
  psustain: dv,
  pw: j1,
  pwrate: _1,
  pwsweep: R1,
  rate: Xv,
  rdim: ix,
  real: Ux,
  registerControl: X,
  rel: r1,
  release: n1,
  repeatTime: xw,
  resonance: VO,
  rfade: ox,
  ring: Lx,
  ringdf: Nx,
  ringf: Ix,
  rlp: rx,
  room: tx,
  roomdim: sx,
  roomfade: ax,
  roomlp: nx,
  roomsize: px,
  rsize: mx,
  s: Ay,
  scram: Kx,
  scrub: Hw,
  seconds: aw,
  semitone: Uv,
  shape: gx,
  size: fx,
  slide: Wv,
  smear: Hx,
  songPtr: ow,
  sound: Py,
  source: Dy,
  speed: fd,
  spread: sv,
  squiz: Ax,
  src: Ey,
  stepsPerOctave: Mv,
  stretch: Cx,
  sus: t1,
  sustain: e1,
  sustainpedal: Fx,
  sysex: Xw,
  sysexdata: Uw,
  sysexid: Ww,
  sz: dx,
  tremolo: O1,
  tremolodepth: x1,
  tremolophase: k1,
  tremoloshape: C1,
  tremoloskew: w1,
  tremolosync: v1,
  triode: Qx,
  tsdelay: Wx,
  uid: lw,
  unison: rv,
  unit: Sx,
  v: QO,
  val: cw,
  velocity: Ty,
  vib: MO,
  vibmod: _O,
  vibrato: TO,
  vmod: RO,
  voice: qv,
  vowel: Px,
  waveloss: Dx,
  xsdelay: Xx,
  zcrush: Cw,
  zdelay: Sw,
  zmod: kw,
  znoise: ww,
  zrand: mw,
  zzfx: Aw
}, Symbol.toStringTag, { value: "Module" })), yF = function(t, e) {
  const [n, r] = t, [s, i] = e, [a, o] = id(r, s);
  return [
    [r, n - r],
    [Pu((l, u) => l.concat(u), a, i), o]
  ];
}, OF = function(t, e) {
  const [n, r] = t, [s, i] = e, [a, o] = id(n, i);
  return [
    [n, r - n],
    [Pu((u, h) => u.concat(h), s, a), o]
  ];
}, Kw = function(t, e) {
  const [n, r] = t;
  return Math.min(n, r) <= 1 ? [t, e] : Kw(...n > r ? yF(t, e) : OF(t, e));
}, gd = function(t, e) {
  const n = t < 0, r = Math.abs(t), s = e - r, i = Array(r).fill([1]), a = Array(s).fill([0]), o = Kw([r, s], [i, a]), l = Ts(o[1][0]).concat(Ts(o[1][1]));
  return n ? l.map((u) => 1 - u) : l;
}, Mu = function(t, e, n) {
  const r = gd(t, e);
  return n ? Lb(r, -n) : r;
}, vF = re("euclid", function(t, e, n) {
  return n.struct(Mu(t, e, 0));
}), xF = re("e", function(t, e) {
  Array.isArray(t) || (t = [t]);
  const [n, r = n, s = 0] = t;
  return e.struct(Mu(n, r, s));
}), { euclidrot: wF, euclidRot: kF } = re(["euclidrot", "euclidRot"], function(t, e, n, r) {
  return r.struct(Mu(t, e, n));
}), Jw = function(t, e, n, r) {
  if (t < 1)
    return Pt;
  const i = Mu(t, e, 0).join("").split("1").slice(1).map((a) => [a.length + 1, !0]);
  return r.struct(hd(...i)).late(de(n).div(e));
}, CF = re(["euclidLegato"], function(t, e, n) {
  return Jw(t, e, 0, n);
}), SF = re(["euclidLegatoRot"], function(t, e, n, r) {
  return Jw(t, e, n, r);
}), { euclidish: AF, eish: PF } = re(["euclidish", "eish"], function(t, e, n, r) {
  const s = pd(gd(t, e), new Array(t).fill(1), n);
  return r.struct(s).setSteps(e);
});
function ek(t, e, n = 0.05, r = 0.1, s = 0.1, i = globalThis.setInterval, a = globalThis.clearInterval, o = !0) {
  let l = 0, u = 0, h = 10 ** 4, f = 0.01;
  const m = (_) => n = _(n);
  s = s || r / 2;
  const b = () => {
    const _ = t(), M = _ + r + s;
    for (u === 0 && (u = _ + f); u < M; )
      u = o ? Math.round(u * h) / h : u, e(u, n, l, _), u += n, l++;
  };
  let v;
  const C = () => {
    S(), b(), v = i(b, r * 1e3);
  }, S = () => {
    v !== void 0 && a(v), v = void 0;
  };
  return { setDuration: m, start: C, stop: () => {
    l = 0, u = 0, S();
  }, pause: () => S(), duration: n, interval: r, getPhase: () => u, minLatency: f };
}
function DF(t) {
  return new me((e) => [new Ut(void 0, e.span, t)]);
}
const _r = (t) => {
  const e = (n) => [new Ut(void 0, n.span, t(n.span.begin))];
  return new me(e);
}, el = _r((t) => t % 1), bd = el.toBipolar(), Tu = _r((t) => 1 - t % 1), yd = Tu.toBipolar(), Od = _r((t) => Math.sin(Math.PI * 2 * t)), tk = Od.fromBipolar(), EF = tk._early(de(1).div(4)), FF = Od._early(de(1).div(4)), nk = _r((t) => Math.floor(t * 2 % 2)), BF = nk.toBipolar(), MF = Bn(el, Tu), TF = Bn(bd, yd), QF = Bn(Tu, el), jF = Bn(yd, bd), vd = _r(ra);
let xd = 0, wd = 0;
typeof window < "u" && document.addEventListener("mousemove", (t) => {
  xd = t.clientY / document.body.clientHeight, wd = t.clientX / document.body.clientWidth;
});
const _F = _r(() => xd), RF = _r(() => xd), ZF = _r(() => wd), $F = _r(() => wd), rk = (t) => {
  const e = t << 13 ^ t, n = e >> 17 ^ e;
  return n << 5 ^ n;
}, LF = (t) => t - Math.trunc(t), sk = (t) => rk(Math.trunc(LF(t / 300) * 536870912)), ik = (t) => t % 536870912 / 536870912, Eo = (t) => Math.abs(ik(sk(t))), IF = (t, e) => {
  const n = [];
  for (let r = 0; r < e; ++r)
    n.push(ik(t)), t = rk(t);
  return n;
}, NF = (t, e) => IF(sk(t), e), ak = (t) => el.range(0, t).round().segment(t), VF = (t) => {
  const e = be(t).log2(0).floor().add(1);
  return ok(t, e);
}, ok = (t, e = 16) => {
  e = be(e);
  const n = ak(e).mul(-1).add(e.sub(1));
  return be(t).segment(e).brshift(n).band(dn(1));
}, lk = (t) => _r((e) => {
  const r = NF(e.floor().add(0.5), t).map((i, a) => [i, a]).sort((i, a) => (i[0] > a[0]) - (i[0] < a[0])).map((i) => i[1]), s = e.cyclePos().mul(t).floor() % t;
  return r[s];
})._segment(t), ck = (t, e, n) => {
  const r = [...Array(e).keys()].map((s) => n.zoom(de(s).div(e), de(s + 1).div(e)));
  return t.fmap((s) => r[s].repeatCycles(e)._fast(e)).innerJoin();
}, XF = re("shuffle", (t, e) => ck(lk(t), t, e)), WF = re("scramble", (t, e) => ck(Cd(t)._segment(t), t, e)), Vn = _r(Eo), UF = Vn.toBipolar(), kd = (t) => Vn.fmap((e) => e < t), qF = (t) => be(t).fmap(kd).innerJoin(), GF = kd(0.5), Cd = (t) => Vn.fmap((e) => Math.trunc(e * t)), zF = (t) => be(t).fmap(Cd).innerJoin(), Sd = (t, e) => (e = e.map(be), e.length == 0 ? Pt : t.range(0, e.length).fmap((n) => {
  const r = Math.min(Math.max(Math.floor(n), 0), e.length - 1);
  return e[r];
})), Qu = (t, e) => Sd(t, e).outerJoin(), ju = (t, e) => Sd(t, e).innerJoin(), uk = (...t) => Qu(Vn, t), YF = (...t) => ju(Vn, t), HF = uk;
me.prototype.choose = function(...t) {
  return Qu(this, t);
};
me.prototype.choose2 = function(...t) {
  return Qu(this.fromBipolar(), t);
};
const hk = (...t) => ju(Vn.segment(1), t), KF = hk, pk = function(t, ...e) {
  const n = e.map((o) => be(o[0])), r = [];
  let s = dn(0);
  for (const o of e)
    s = s.add(o[1]), r.push(s);
  const i = Jb(r), a = function(o) {
    const l = s.mul(o);
    return i.fmap((u) => (h) => n[u.findIndex((f) => f > h, u)]).appLeft(l);
  };
  return t.bind(a);
}, JF = (...t) => pk(...t).outerJoin(), e9 = (...t) => JF(Vn, ...t), fk = (...t) => pk(Vn.segment(1), ...t).innerJoin(), t9 = fk;
function n9(t) {
  let e = Math.floor(t), n = e + 1;
  const r = (a) => 6 * a ** 5 - 15 * a ** 4 + 10 * a ** 3;
  return ((a) => (o) => (l) => o + r(a) * (l - o))(t - e)(Eo(e))(Eo(n));
}
const dk = (t) => t.fmap(n9);
function r9(t) {
  const e = Math.floor(t), n = e + 1, r = Eo(e), s = Eo(n) + r, i = (t - e) / (n - e);
  return ((o, l, u) => o + (l - o) * u)(r, s, i) / 2;
}
const mk = (t) => t.fmap(r9), s9 = dk(vd.fmap((t) => Number(t))), i9 = mk(vd.fmap((t) => Number(t))), a9 = re(
  "degradeByWith",
  (t, e, n) => n.fmap((r) => (s) => r).appLeft(t.filterValues((r) => r > e)),
  !0,
  !0
), o9 = re(
  "degradeBy",
  function(t, e) {
    return e._degradeByWith(Vn, t);
  },
  !0,
  !0
), l9 = re("degrade", (t) => t._degradeBy(0.5), !0, !0), c9 = re(
  "undegradeBy",
  function(t, e) {
    return e._degradeByWith(
      Vn.fmap((n) => 1 - n),
      t
    );
  },
  !0,
  !0
), u9 = re("undegrade", (t) => t._undegradeBy(0.5), !0, !0), h9 = re("sometimesBy", function(t, e, n) {
  return be(t).fmap((r) => Wt(n._degradeBy(r), e(n._undegradeBy(1 - r)))).innerJoin();
}), p9 = re("sometimes", function(t, e) {
  return e._sometimesBy(0.5, t);
}), f9 = re("someCyclesBy", function(t, e, n) {
  return be(t).fmap(
    (r) => Wt(
      n._degradeByWith(Vn._segment(1), r),
      e(n._degradeByWith(Vn.fmap((s) => 1 - s)._segment(1), 1 - r))
    )
  ).innerJoin();
}), d9 = re("someCycles", function(t, e) {
  return e._someCyclesBy(0.5, t);
}), m9 = re("often", function(t, e) {
  return e.sometimesBy(0.75, t);
}), g9 = re("rarely", function(t, e) {
  return e.sometimesBy(0.25, t);
}), b9 = re("almostNever", function(t, e) {
  return e.sometimesBy(0.1, t);
}), y9 = re("almostAlways", function(t, e) {
  return e.sometimesBy(0.9, t);
}), O9 = re("never", function(t, e) {
  return e;
}), v9 = re("always", function(t, e) {
  return t(e);
});
function Ad(t) {
  Array.isArray(t) === !1 && (t = [t]);
  const e = Yb();
  return t.every((n) => {
    const r = zb.get(n) ?? n;
    return e[r];
  });
}
const x9 = re("whenKey", function(t, e, n) {
  return n.when(Ad(t), e);
}), w9 = re("keyDown", function(t) {
  return t.fmap(Ad);
}), ws = function(t, e, n = !0) {
  const r = Array.isArray(t), s = Object.keys(t).length;
  return t = qb(t, be), s === 0 ? Pt : e.fmap((i) => {
    let a = i;
    return r && (a = n ? Math.round(a) % s : Du(Math.round(a), 0, t.length - 1)), t[a];
  });
}, gk = function(t, e) {
  return Array.isArray(e) && ([e, t] = [t, e]), k9(t, e);
}, k9 = re("pick", function(t, e) {
  return ws(t, e, !1).innerJoin();
}), bk = re("pickmod", function(t, e) {
  return ws(t, e, !0).innerJoin();
}), C9 = re("pickF", function(t, e, n) {
  return n.apply(gk(t, e));
}), S9 = re("pickmodF", function(t, e, n) {
  return n.apply(bk(t, e));
}), A9 = re("pickOut", function(t, e) {
  return ws(t, e, !1).outerJoin();
}), P9 = re("pickmodOut", function(t, e) {
  return ws(t, e, !0).outerJoin();
}), D9 = re("pickRestart", function(t, e) {
  return ws(t, e, !1).restartJoin();
}), E9 = re("pickmodRestart", function(t, e) {
  return ws(t, e, !0).restartJoin();
}), F9 = re("pickReset", function(t, e) {
  return ws(t, e, !1).resetJoin();
}), B9 = re("pickmodReset", function(t, e) {
  return ws(t, e, !0).resetJoin();
}), { inhabit: M9, pickSqueeze: T9 } = re(["inhabit", "pickSqueeze"], function(t, e) {
  return ws(t, e, !1).squeezeJoin();
}), { inhabitmod: Q9, pickmodSqueeze: j9 } = re(["inhabitmod", "pickmodSqueeze"], function(t, e) {
  return ws(t, e, !0).squeezeJoin();
}), _9 = (t, e) => (e = e.map(be), e.length == 0 ? Pt : t.fmap((n) => {
  const r = Ko(Math.round(n), e.length);
  return e[r];
}).squeezeJoin());
let Ac;
try {
  Ac = window?.speechSynthesis;
} catch {
  console.warn("cannot use window: not in browser?");
}
let Hm = Ac?.getVoices();
function R9(t, e, n) {
  Ac.cancel();
  const r = new SpeechSynthesisUtterance(t);
  r.lang = e, Hm = Ac.getVoices();
  const s = Hm.filter((i) => i.lang.includes(e));
  typeof n == "number" ? r.voice = s[n % s.length] : typeof n == "string" && (r.voice = s.find((i) => i.name === i)), speechSynthesis.speak(r);
}
const Z9 = re("speak", function(t, e, n) {
  return n.onTrigger((r) => {
    R9(r.value, t, e);
  });
}), yk = {}, Pd = async (...t) => {
  const e = await Promise.allSettled(t), n = e.filter((r) => r.status === "fulfilled").map((r) => r.value);
  return e.forEach((r, s) => {
    r.status === "rejected" && console.warn(`evalScope: module with index ${s} could not be loaded:`, r.reason);
  }), n.forEach((r) => {
    Object.entries(r).forEach(([s, i]) => {
      globalThis[s] = i, yk[s] = i;
    });
  }), n;
};
function $9(t, e = {}) {
  const { wrapExpression: n = !0, wrapAsync: r = !0 } = e;
  n && (t = `{${t}}`), r && (t = `(async ()=>${t})()`);
  const s = `"use strict";return (${t})`;
  return Function(s)();
}
const Ok = async (t, e, n) => {
  let r = {};
  if (e) {
    const a = e(t, n);
    t = a.output, r = a;
  }
  return { mode: "javascript", pattern: await $9(t, { wrapExpression: !!e }), meta: r };
};
class L9 {
  constructor({ onTrigger: e, onToggle: n, getTime: r }) {
    this.started = !1, this.cps = 0.5, this.getTime = r, this.time_at_last_tick_message = 0, this.collator = new Gb({ getTargetClockTime: r }), this.onToggle = n, this.latency = 0.1, this.cycle = 0, this.id = Math.round(Date.now() * Math.random()), this.worker = new SharedWorker(new URL(
      /* @vite-ignore */
      "" + new URL("assets/clockworker-ZDiUtESR.js", import.meta.url).href,
      import.meta.url
    )), this.worker.port.start(), this.channel = new BroadcastChannel("strudeltick");
    const s = (a) => {
      const { cps: o, begin: l, end: u, cycle: h, time: f } = a;
      this.cps = o, this.cycle = h;
      const m = this.collator.calculateOffset(f) + f;
      i(l, u, m), this.time_at_last_tick_message = m;
    }, i = (a, o, l) => {
      if (this.started === !1)
        return;
      this.pattern.queryArc(a, o, { _cps: this.cps }).forEach((h) => {
        if (h.hasOnset()) {
          const m = Cp(h.whole.begin - this.cycle, this.cps) + l + this.latency, b = Cp(h.duration, this.cps);
          e?.(h, 0, b, this.cps, m);
        }
      });
    };
    this.channel.onmessage = (a) => {
      if (!this.started)
        return;
      const { payload: o, type: l } = a.data;
      switch (l) {
        case "tick":
          s(o);
      }
    };
  }
  sendMessage(e, n) {
    this.worker.port.postMessage({ type: e, payload: n, id: this.id });
  }
  now() {
    const e = (this.getTime() - this.time_at_last_tick_message) * this.cps;
    return this.cycle + e;
  }
  setCps(e = 1) {
    this.sendMessage("cpschange", { cps: e });
  }
  setCycle(e) {
    this.sendMessage("setcycle", { cycle: e });
  }
  setStarted(e) {
    this.sendMessage("toggle", { started: e }), this.started = e, this.onToggle?.(e);
  }
  start() {
    Ln("[cyclist] start"), this.setStarted(!0);
  }
  stop() {
    Ln("[cyclist] stop"), this.collator.reset(), this.setStarted(!1);
  }
  setPattern(e, n = !1) {
    this.pattern = e, n && !this.started && this.start();
  }
  log(e, n, r) {
    const s = r.filter((i) => i.hasOnset());
    console.log(`${e.toFixed(4)} - ${n.toFixed(4)} ${Array(s.length).fill("I").join("")}`);
  }
}
class vk {
  constructor({
    interval: e,
    onTrigger: n,
    onToggle: r,
    onError: s,
    getTime: i,
    latency: a = 0.1,
    setInterval: o,
    clearInterval: l,
    beforeStart: u
  }) {
    this.started = !1, this.beforeStart = u, this.cps = 0.5, this.num_ticks_since_cps_change = 0, this.lastTick = 0, this.lastBegin = 0, this.lastEnd = 0, this.getTime = i, this.num_cycles_at_cps_change = 0, this.seconds_at_cps_change, this.onToggle = r, this.latency = a, this.clock = ek(
      i,
      // called slightly before each cycle
      (h, f, m, b) => {
        this.num_ticks_since_cps_change === 0 && (this.num_cycles_at_cps_change = this.lastEnd, this.seconds_at_cps_change = h), this.num_ticks_since_cps_change++;
        const C = this.num_ticks_since_cps_change * f * this.cps;
        try {
          const S = this.lastEnd;
          this.lastBegin = S;
          const B = this.num_cycles_at_cps_change + C;
          if (this.lastEnd = B, this.lastTick = h, h < b) {
            console.log("skip query: too late");
            return;
          }
          this.pattern.queryArc(S, B, { _cps: this.cps }).forEach((W) => {
            if (W.hasOnset()) {
              const _ = (W.whole.begin - this.num_cycles_at_cps_change) / this.cps + this.seconds_at_cps_change + a, M = W.duration / this.cps, Z = _ - h;
              n?.(W, Z, M, this.cps, _), W.value.cps !== void 0 && this.cps != W.value.cps && (this.cps = W.value.cps, this.num_ticks_since_cps_change = 0);
            }
          });
        } catch (S) {
          ed(S), s?.(S);
        }
      },
      e,
      // duration of each cycle
      0.1,
      0.1,
      o,
      l
    );
  }
  now() {
    if (!this.started)
      return 0;
    const e = this.getTime() - this.lastTick - this.clock.duration;
    return this.lastBegin + e * this.cps;
  }
  setStarted(e) {
    this.started = e, this.onToggle?.(e);
  }
  async start() {
    if (await this.beforeStart?.(), this.num_ticks_since_cps_change = 0, this.num_cycles_at_cps_change = 0, !this.pattern)
      throw new Error("Scheduler: no pattern set! call .setPattern first.");
    Ln("[cyclist] start"), this.clock.start(), this.setStarted(!0);
  }
  pause() {
    Ln("[cyclist] pause"), this.clock.pause(), this.setStarted(!1);
  }
  stop() {
    Ln("[cyclist] stop"), this.clock.stop(), this.lastEnd = 0, this.setStarted(!1);
  }
  async setPattern(e, n = !1) {
    this.pattern = e, n && !this.started && await this.start();
  }
  setCps(e = 0.5) {
    this.cps !== e && (this.cps = e, this.num_ticks_since_cps_change = 0);
  }
  log(e, n, r) {
    const s = r.filter((i) => i.hasOnset());
    console.log(`${e.toFixed(4)} - ${n.toFixed(4)} ${Array(s.length).fill("I").join("")}`);
  }
}
let Ep;
function Fp() {
  if (!Ep)
    throw new Error("no time set! use setTime to define a time source");
  return Ep();
}
function Bp(t) {
  Ep = t;
}
function xk({
  defaultOutput: t,
  onEvalError: e,
  beforeEval: n,
  beforeStart: r,
  afterEval: s,
  getTime: i,
  transpiler: a,
  onToggle: o,
  editPattern: l,
  onUpdateState: u,
  sync: h = !1,
  setInterval: f,
  clearInterval: m,
  id: b,
  mondo: v = !1
}) {
  const C = {
    schedulerError: void 0,
    evalError: void 0,
    code: "// LOADING",
    activeCode: "// LOADING",
    pattern: void 0,
    miniLocations: [],
    widgets: [],
    pending: !1,
    started: !1
  }, S = {
    id: b
  }, B = (De) => {
    Object.assign(C, De), C.isDirty = C.code !== C.activeCode, C.error = C.evalError || C.schedulerError, u?.(C);
  }, $ = {
    onTrigger: wk({ defaultOutput: t, getTime: i }),
    getTime: i,
    onToggle: (De) => {
      B({ started: De }), o?.(De);
    },
    setInterval: f,
    clearInterval: m,
    beforeStart: r
  }, W = h && typeof SharedWorker < "u" ? new L9($) : new vk($);
  let _ = {}, M = 0, Z;
  const N = function() {
    return _ = {}, M = 0, Z = void 0, Pt;
  }, q = async (De, ue = !0) => (De = l?.(De) || De, await W.setPattern(De, ue), De);
  Bp(() => W.now());
  const ae = () => W.stop(), J = () => W.start(), pe = () => W.pause(), H = () => W.toggle(), oe = (De) => W.setCps(De), fe = (De) => W.setCps(De / 60);
  let ke = [];
  const Pe = function(De) {
    return ke.push(De), Pt;
  }, ie = function(De) {
    return Z = De, Pt;
  }, Ce = () => {
    me.prototype.p = function(ue) {
      return typeof ue == "string" && (ue.startsWith("_") || ue.endsWith("_")) ? Pt : (ue === "$" && (ue = `$${M}`, M++), _[ue] = this, this);
    }, me.prototype.q = function(ue) {
      return Pt;
    };
    try {
      for (let ue = 1; ue < 10; ++ue)
        Object.defineProperty(me.prototype, `d${ue}`, {
          get() {
            return this.p(ue);
          },
          configurable: !0
        }), Object.defineProperty(me.prototype, `p${ue}`, {
          get() {
            return this.p(ue);
          },
          configurable: !0
        }), me.prototype[`q${ue}`] = Pt;
    } catch (ue) {
      console.warn("injectPatternMethods: error:", ue);
    }
    const De = re("cpm", function(ue, _e) {
      return _e._fast(ue / 60 / W.cps);
    });
    return Pd({
      all: Pe,
      each: ie,
      hush: N,
      cpm: De,
      setCps: oe,
      setcps: oe,
      setCpm: fe,
      setcpm: fe
    });
  };
  return { scheduler: W, evaluate: async (De, ue = !0, _e = !0) => {
    if (!De)
      throw new Error("no code to evaluate");
    try {
      B({ code: De, pending: !0 }), await Ce(), Bp(() => W.now()), await n?.({ code: De }), ke = [], _e && N(), v && (De = `mondolang\`${De}\``);
      let { pattern: He, meta: dt } = await Ok(De, a, S);
      if (Object.keys(_).length) {
        let $e = Object.values(_);
        Z && ($e = $e.map((Ft) => Z(Ft))), He = Wt(...$e);
      } else Z && (He = Z(He));
      if (ke.length)
        for (let $e in ke)
          He = ke[$e](He);
      if (!Eu(He)) {
        const $e = `got "${typeof evaluated}" instead of pattern`;
        throw new Error($e + (typeof evaluated == "function" ? ", did you forget to call a function?" : "."));
      }
      return Ln("[eval] code updated"), He = await q(He, ue), B({
        miniLocations: dt?.miniLocations || [],
        widgets: dt?.widgets || [],
        activeCode: De,
        pattern: He,
        evalError: void 0,
        schedulerError: void 0,
        pending: !1
      }), s?.({ code: De, pattern: He, meta: dt }), He;
    } catch (He) {
      Ln(`[eval] error: ${He.message}`, "error"), console.error(He), B({ evalError: He, pending: !1 }), e?.(He);
    }
  }, start: J, stop: ae, pause: pe, setCps: oe, setPattern: q, setCode: (De) => B({ code: De }), toggle: H, state: C };
}
const wk = ({ getTime: t, defaultOutput: e }) => async (n, r, s, i, a) => {
  try {
    (!n.context.onTrigger || !n.context.dominantTrigger) && await e(n, r, s, i, a), n.context.onTrigger && await n.context.onTrigger(n, t(), i, a);
  } catch (o) {
    ed(o, "getTrigger");
  }
}, I9 = function(t, e = {}) {
  const n = document.getElementById("code"), r = "background-image:url(" + t + ");background-size:contain;";
  n.style = r;
  const { className: s } = n, i = (l, u) => {
    ({
      style: () => n.style = r + ";" + u,
      className: () => n.className = u + " " + s
    })[l]();
  }, a = Object.entries(e).filter(([l, u]) => typeof u == "function");
  Object.entries(e).filter(([l, u]) => typeof u == "string").forEach(([l, u]) => i(l, u)), a.length;
}, N9 = () => {
  const t = document.getElementById("code");
  t && (t.style = "");
};
Ln("🌀 @strudel/core loaded 🌀");
globalThis._strudelLoaded && console.warn(
  `@strudel/core was loaded more than once...
This might happen when you have multiple versions of strudel installed. 
Please check with "npm ls @strudel/core".`
);
globalThis._strudelLoaded = !0;
const kk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ClockCollator: Gb,
  Cyclist: vk,
  Fraction: de,
  Hap: Ut,
  Pattern: me,
  State: xa,
  TimeSpan: Kt,
  __chooseWith: Sd,
  _brandBy: kd,
  _fitslice: oy,
  _irand: Cd,
  _keyDown: Ad,
  _match: ly,
  _mod: Ko,
  _morph: pd,
  _polymeterListSteps: uy,
  _retime: Pp,
  _slices: Dp,
  accelerate: My,
  activeLabel: Av,
  ad: Fw,
  add: HP,
  adsr: Ew,
  almostAlways: y9,
  almostNever: b9,
  always: v9,
  amp: _y,
  analyze: Yy,
  anchor: Hv,
  and: gD,
  apply: UD,
  ar: Mw,
  arp: FP,
  arpWith: EP,
  arrange: _P,
  as: Yw,
  att: Zy,
  attack: Ry,
  averageArray: Rb,
  backgroundImage: I9,
  band: rD,
  bandf: i1,
  bandq: l1,
  bank: zy,
  base64ToUnicode: Ub,
  bbexpr: F1,
  bbst: M1,
  beat: dF,
  begin: u1,
  berlin: i9,
  berlinWith: mk,
  binary: VF,
  binaryN: ok,
  bind: NP,
  binshift: Jx,
  bite: KD,
  bjork: gd,
  blshift: aD,
  bor: sD,
  bp: o1,
  bpa: hO,
  bpattack: uO,
  bpd: bO,
  bpdecay: gO,
  bpe: iO,
  bpenv: sO,
  bpf: a1,
  bpq: c1,
  bpr: EO,
  bprelease: DO,
  bps: kO,
  bpsustain: wO,
  brak: lE,
  brand: GF,
  brandBy: qF,
  brshift: oD,
  bxor: iD,
  bypass: _E,
  byteBeatExpression: E1,
  byteBeatStartTime: B1,
  calculateSteps: AP,
  cat: ry,
  ccn: Zw,
  ccv: $w,
  ceil: xD,
  ch: Q1,
  channel: G1,
  channels: T1,
  choose: uk,
  chooseCycles: hk,
  chooseIn: YF,
  chooseInWith: ju,
  chooseOut: HF,
  chooseWith: Qu,
  chop: iF,
  chord: Gv,
  chunk: SE,
  chunkBack: DE,
  chunkBackInto: jE,
  chunkInto: TE,
  chunkback: EE,
  chunkbackinto: QE,
  chunkinto: ME,
  clamp: Du,
  cleanupUi: N9,
  clip: hw,
  coarse: y1,
  code2hash: vP,
  color: Pw,
  colour: Dw,
  comb: Yx,
  compose: lP,
  compress: DD,
  compressSpan: ED,
  compressor: Ox,
  compressorAttack: wx,
  compressorKnee: vx,
  compressorRatio: xx,
  compressorRelease: kx,
  compressspan: FD,
  constant: cP,
  contract: gy,
  control: Rw,
  controls: bF,
  cosine: EF,
  cosine2: FF,
  cpm: qD,
  cps: uw,
  createClock: ek,
  createParam: Bu,
  createParams: dd,
  crush: b1,
  ctf: H1,
  ctlNum: Lw,
  ctranspose: Fv,
  curry: Ye,
  curve: gw,
  cut: z1,
  cutoff: Y1,
  cycleToSeconds: Cp,
  dec: Jy,
  decay: Ky,
  degrade: l9,
  degradeBy: o9,
  degradeByWith: a9,
  degree: Dv,
  delay: UO,
  delayfb: GO,
  delayfeedback: qO,
  delaysync: JO,
  delayt: HO,
  delaytime: YO,
  deltaSlide: bw,
  det: nv,
  detune: tv,
  dfb: zO,
  dict: Yv,
  dictionary: zv,
  dist: yx,
  distort: bx,
  div: eD,
  djf: WO,
  drawLine: Hb,
  drive: D1,
  drop: fy,
  dry: iv,
  ds: Bw,
  dt: KO,
  duck: S1,
  duckattack: P1,
  duckdepth: A1,
  dur: dw,
  duration: fw,
  e: xF,
  early: GD,
  echo: OE,
  echoWith: mE,
  echowith: gE,
  eish: PF,
  end: h1,
  enhance: Gx,
  eq: pD,
  eqt: fD,
  errorLogger: ed,
  euclid: vF,
  euclidLegato: CF,
  euclidLegatoRot: SF,
  euclidRot: kF,
  euclidish: AF,
  euclidrot: wF,
  evalScope: Pd,
  evaluate: Ok,
  every: WD,
  expand: my,
  expression: Ex,
  extend: dy,
  fadeInTime: lv,
  fadeOutTime: ov,
  fadeTime: av,
  fanchor: BO,
  fast: RD,
  fastChunk: BE,
  fastGap: BD,
  fastcat: Bn,
  fastchunk: FE,
  fastgap: MD,
  fft: Hy,
  filter: IE,
  filterWhen: NE,
  firstOf: XD,
  fit: uF,
  flatten: Ts,
  floor: vD,
  fm: Iy,
  fmattack: Vy,
  fmdecay: Wy,
  fmenv: Ny,
  fmh: $y,
  fmi: Ly,
  fmrelease: qy,
  fmsustain: Uy,
  fmvelocity: Gy,
  fmwave: Xy,
  focus: TD,
  focusSpan: QD,
  focusspan: jD,
  fractionalArgs: uP,
  frameRate: nw,
  frames: rw,
  freeze: Vx,
  freq: cv,
  freqToMidi: td,
  fromBipolar: kD,
  fshift: Bx,
  fshiftnote: Mx,
  fshiftphase: Tx,
  ftype: FO,
  func: yD,
  gain: Qy,
  gap: Qa,
  gat: wv,
  gate: xv,
  getControlName: md,
  getCurrentKeyboardState: Yb,
  getEventOffsetMs: rP,
  getFreq: _b,
  getFrequency: $b,
  getPerformanceTimeSeconds: wP,
  getPlayableNoteValue: oP,
  getSoundIndex: aP,
  getTime: Fp,
  getTrigger: wk,
  grow: XE,
  gt: cD,
  gte: hD,
  harmonic: Bv,
  hash2code: xP,
  hbrick: ew,
  hcutoff: ZO,
  hold: s1,
  hours: sw,
  hp: LO,
  hpa: cO,
  hpattack: lO,
  hpd: mO,
  hpdecay: dO,
  hpe: rO,
  hpenv: nO,
  hpf: $O,
  hpq: NO,
  hpr: PO,
  hprelease: AO,
  hps: xO,
  hpsustain: vO,
  hresonance: IO,
  hsl: LE,
  hsla: $E,
  hurry: ZD,
  id: ra,
  imag: qx,
  inhabit: M9,
  inhabitmod: Q9,
  innerBind: VP,
  inside: ID,
  inv: iE,
  invert: sE,
  ir: lx,
  irand: zF,
  irbegin: hx,
  iresponse: cx,
  irspeed: ux,
  isControlName: Sy,
  isNote: Au,
  isNoteWithOctave: eP,
  isPattern: Eu,
  isaw: Tu,
  isaw2: yd,
  iter: xE,
  iterBack: wE,
  iterback: kE,
  itri: QF,
  itri2: jF,
  jux: dE,
  juxBy: pE,
  juxby: fE,
  kcutoff: _x,
  keep: zP,
  keepif: YP,
  keyAlias: zb,
  keyDown: w9,
  krush: jx,
  label: Pv,
  lastOf: VD,
  late: iy,
  lbrick: tw,
  legato: pw,
  leslie: kv,
  lfo: vw,
  linger: JD,
  listRange: nd,
  lock: ev,
  logKey: Jf,
  logger: Ln,
  loop: p1,
  loopAt: lF,
  loopAtCps: hF,
  loopBegin: f1,
  loopEnd: m1,
  loopat: cF,
  loopatcps: pF,
  loopb: d1,
  loope: g1,
  lp: J1,
  lpa: oO,
  lpattack: aO,
  lpd: fO,
  lpdecay: pO,
  lpe: tO,
  lpenv: eO,
  lpf: K1,
  lpq: XO,
  lpr: SO,
  lprelease: CO,
  lps: OO,
  lpsustain: yO,
  lrate: Cv,
  lsize: Sv,
  lt: lD,
  lte: uD,
  mapArgs: sd,
  mask: ZP,
  midi2note: iP,
  midiToFreq: Ri,
  midibend: qw,
  midichan: Tw,
  midicmd: _w,
  midimap: Qw,
  midiport: jw,
  miditouch: Gw,
  minutes: iw,
  mod: tD,
  mode: ex,
  morph: mF,
  mouseX: $F,
  mouseY: RF,
  mousex: ZF,
  mousey: _F,
  mtranspose: Ev,
  mul: JP,
  n: Fy,
  nanFallback: Zb,
  ne: dD,
  net: mD,
  never: O9,
  noise: jO,
  note: By,
  noteToMidi: Xi,
  nothing: yr,
  nrpnn: Iw,
  nrpv: Nw,
  nudge: Qv,
  numeralArgs: dr,
  objectMap: qb,
  octave: jv,
  octaveR: Tv,
  octaves: Jv,
  octer: Rx,
  octersub: Zx,
  octersubsub: $x,
  off: oE,
  offset: Kv,
  often: m9,
  or: bD,
  orbit: _v,
  outerBind: XP,
  outside: ND,
  overgain: Rv,
  overshape: Zv,
  pace: cy,
  pairs: Vb,
  palindrome: hE,
  pan: $v,
  panchor: vv,
  panorient: Vv,
  panspan: Lv,
  pansplay: Iv,
  panwidth: Nv,
  parseFractional: Nb,
  parseNumeral: rd,
  partials: zx,
  patt: hv,
  pattack: uv,
  pcurve: Ov,
  pdec: fv,
  pdecay: pv,
  penv: yv,
  perlin: s9,
  perlinWith: dk,
  ph: $1,
  phasdp: q1,
  phaser: L1,
  phasercenter: V1,
  phaserdepth: W1,
  phaserrate: Z1,
  phasersweep: I1,
  phc: X1,
  phd: U1,
  phs: N1,
  pick: gk,
  pickF: C9,
  pickOut: A9,
  pickReset: F9,
  pickRestart: D9,
  pickSqueeze: T9,
  pickmod: bk,
  pickmodF: S9,
  pickmodOut: P9,
  pickmodReset: B9,
  pickmodRestart: E9,
  pickmodSqueeze: j9,
  pipe: Ib,
  pitchJump: yw,
  pitchJumpTime: Ow,
  ply: _D,
  pm: QP,
  polyBind: qP,
  polyTouch: zw,
  polymeter: Fu,
  polyrhythm: MP,
  postgain: jy,
  pow: nD,
  pr: TP,
  prel: bv,
  prelease: gv,
  press: uE,
  pressBy: cE,
  progNum: Vw,
  psus: mv,
  psustain: dv,
  pure: dn,
  pw: j1,
  pwrate: _1,
  pwsweep: R1,
  rand: Vn,
  rand2: UF,
  randcat: KF,
  randrun: lk,
  range: CD,
  range2: AD,
  rangex: SD,
  rarely: g9,
  rate: Xv,
  ratio: PD,
  rdim: ix,
  real: Ux,
  ref: ky,
  register: re,
  registerControl: X,
  reify: be,
  rel: r1,
  release: n1,
  removeUndefineds: Ta,
  repeatCycles: CE,
  repeatTime: xw,
  repl: xk,
  resonance: VO,
  rev: ay,
  rfade: ox,
  rib: ZE,
  ribbon: RE,
  ring: Lx,
  ringdf: Nx,
  ringf: Ix,
  rlp: rx,
  room: tx,
  roomdim: sx,
  roomfade: ax,
  roomlp: nx,
  roomsize: px,
  rotate: Lb,
  round: OD,
  rsize: mx,
  run: ak,
  s: Ay,
  s_add: HE,
  s_alt: qE,
  s_cat: UE,
  s_contract: tF,
  s_expand: JE,
  s_extend: eF,
  s_polymeter: GE,
  s_sub: KE,
  s_taper: zE,
  s_taperlist: YE,
  s_tour: nF,
  s_zip: rF,
  saw: el,
  saw2: bd,
  scram: Kx,
  scramble: WF,
  scrub: Hw,
  seconds: aw,
  seg: tE,
  segment: eE,
  semitone: Uv,
  seq: sy,
  seqPLoop: RP,
  sequence: Jr,
  sequenceP: Jb,
  set: GP,
  setStringParser: Kb,
  setTime: Bp,
  shape: gx,
  shrink: yy,
  shrinklist: by,
  shuffle: XF,
  signal: _r,
  silence: Pt,
  sine: tk,
  sine2: Od,
  size: fx,
  slice: wy,
  slide: Wv,
  slow: $D,
  slowChunk: PE,
  slowcat: mi,
  slowcatPrime: ld,
  slowchunk: AE,
  smear: Hx,
  sol2note: bP,
  someCycles: d9,
  someCyclesBy: f9,
  sometimes: p9,
  sometimesBy: h9,
  songPtr: ow,
  sound: Py,
  source: Dy,
  sparsity: LD,
  speak: Z9,
  speed: fd,
  splice: oF,
  splitAt: id,
  spread: sv,
  square: nk,
  square2: BF,
  squeeze: _9,
  squeezeBind: WP,
  squiz: Ax,
  src: Ey,
  stack: Wt,
  stackBy: jP,
  stackCentre: ny,
  stackLeft: ey,
  stackRight: ty,
  steady: DF,
  stepBind: UP,
  stepalt: hy,
  stepcat: ar,
  steps: sF,
  stepsPerOctave: Mv,
  stretch: Cx,
  striate: aF,
  stringifyValues: ad,
  struct: $P,
  strudelScope: yk,
  stut: vE,
  stutWith: bE,
  stutwith: yE,
  sub: KP,
  superimpose: LP,
  sus: t1,
  sustain: e1,
  sustainpedal: Fx,
  swing: rE,
  swingBy: nE,
  sysex: Xw,
  sysexdata: Uw,
  sysexid: Ww,
  sz: dx,
  take: py,
  time: vd,
  timeCat: hd,
  timecat: WE,
  toBipolar: wD,
  tokenizeNote: Qb,
  tour: Oy,
  tremolo: O1,
  tremolodepth: x1,
  tremolophase: k1,
  tremoloshape: C1,
  tremoloskew: w1,
  tremolosync: v1,
  tri: MF,
  tri2: TF,
  triode: Qx,
  tsdelay: Wx,
  uid: lw,
  undegrade: u9,
  undegradeBy: c9,
  unicodeToBase64: Wb,
  uniq: yP,
  uniqsort: OP,
  uniqsortr: Xb,
  unison: rv,
  unit: Sx,
  v: QO,
  val: cw,
  valueToMidi: jb,
  velocity: Ty,
  vib: MO,
  vibmod: _O,
  vibrato: TO,
  vmod: RO,
  voice: qv,
  vowel: Px,
  waveloss: Dx,
  wchoose: e9,
  wchooseCycles: fk,
  when: aE,
  whenKey: x9,
  withValue: IP,
  within: VE,
  wrandcat: t9,
  xfade: Cy,
  xsdelay: Xx,
  zcrush: Cw,
  zdelay: Sw,
  zip: vy,
  zipWith: Pu,
  zmod: kw,
  znoise: ww,
  zoom: zD,
  zoomArc: YD,
  zoomarc: HD,
  zrand: mw,
  zzfx: Aw
}, Symbol.toStringTag, { value: "Module" })), Is = (t = "test-canvas", e) => {
  let { contextType: n = "2d", pixelated: r = !1, pixelRatio: s = window.devicePixelRatio } = e || {}, i = document.querySelector("#" + t);
  if (!i) {
    i = document.createElement("canvas"), i.id = t, i.width = window.innerWidth * s, i.height = window.innerHeight * s, i.style = "pointer-events:none;width:100%;height:100%;position:fixed;top:0;left:0", r && (i.style.imageRendering = "pixelated"), document.body.prepend(i);
    let a;
    window.addEventListener("resize", () => {
      a && clearTimeout(a), a = setTimeout(() => {
        i.width = window.innerWidth * s, i.height = window.innerHeight * s;
      }, 200);
    });
  }
  return i.getContext(n, { willReadFrequently: !0 });
};
let la = {};
function Ck(t) {
  la[t] !== void 0 && (cancelAnimationFrame(la[t]), delete la[t]);
}
function V9(t) {
  Object.keys(la).forEach((e) => (!t || e.startsWith(t)) && Ck(e));
}
let Ds = {};
me.prototype.draw = function(t, e) {
  if (typeof window > "u")
    return this;
  let { id: n = 1, lookbehind: r = 0, lookahead: s = 0 } = e, i = Math.max(Fp(), 0);
  Ck(n), r = Math.abs(r), Ds[n] = (Ds[n] || []).filter((u) => !u.isInFuture(i));
  let a = this.queryArc(i, i + s).filter((u) => u.hasOnset());
  Ds[n] = Ds[n].concat(a);
  let o;
  const l = () => {
    const u = Fp(), h = u + s;
    Ds[n] = Ds[n].filter((b) => b.isInNearPast(r, u));
    let f = Math.max(o || h, h - 1 / 10);
    const m = this.queryArc(f, h).filter((b) => b.hasOnset());
    Ds[n] = Ds[n].concat(m), o = h, t(Ds[n], u, h, this), la[n] = requestAnimationFrame(l);
  };
  return la[n] = requestAnimationFrame(l), this;
};
const Km = (t = !0, e) => {
  const n = Is();
  t && n.clearRect(0, 0, n.canvas.width, n.canvas.height), V9(e);
};
me.prototype.onPaint = function(t) {
  return this.withState((e) => {
    e.controls.painters || (e.controls.painters = []), e.controls.painters.push(t);
  });
};
me.prototype.getPainters = function() {
  let t = [];
  return this.queryArc(0, 0, { painters: t }), t;
};
class X9 {
  constructor(e, n) {
    this.onFrame = e, this.onError = n;
  }
  start() {
    const e = this;
    let n = requestAnimationFrame(function r(s) {
      try {
        e.onFrame(s);
      } catch (i) {
        e.onError(i);
      }
      n = requestAnimationFrame(r);
    });
    e.cancel = () => {
      cancelAnimationFrame(n);
    };
  }
  stop() {
    this.cancel && this.cancel();
  }
}
class W9 {
  constructor(e, n) {
    this.visibleHaps = [], this.lastFrame = null, this.drawTime = n, this.painters = [], this.framer = new X9(
      () => {
        if (!this.scheduler) {
          console.warn("Drawer: no scheduler");
          return;
        }
        const r = Math.abs(this.drawTime[0]), s = this.drawTime[1], i = this.scheduler.now() + s;
        if (this.lastFrame === null) {
          this.lastFrame = i;
          return;
        }
        const a = this.scheduler.pattern.queryArc(Math.max(this.lastFrame, i - 1 / 10), i);
        this.lastFrame = i, this.visibleHaps = (this.visibleHaps || []).filter((l) => l.whole && l.endClipped >= i - r - s).concat(a.filter((l) => l.hasOnset()));
        const o = i - s;
        e(this.visibleHaps, o, this, this.painters);
      },
      (r) => {
        console.warn("draw error", r);
      }
    );
  }
  setDrawTime(e) {
    this.drawTime = e;
  }
  invalidate(e = this.scheduler, n) {
    if (!e)
      return;
    n = n ?? e.now(), this.scheduler = e;
    let [r, s] = this.drawTime;
    const [i, a] = [Math.max(n, 0), n + s + 0.1];
    this.visibleHaps = this.visibleHaps.filter((l) => l.whole?.begin < n), this.painters = [];
    const o = e.pattern.queryArc(i, a, { painters: this.painters });
    this.visibleHaps = this.visibleHaps.concat(o);
  }
  start(e) {
    this.scheduler = e, this.invalidate(), this.framer.start();
  }
  stop() {
    this.framer && this.framer.stop();
  }
}
function q$(t) {
  return typeof window > "u" ? "#fff" : getComputedStyle(document.documentElement).getPropertyValue(t);
}
let Sk = {
  background: "#222",
  foreground: "#75baff",
  caret: "#ffcc00",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#036dd626",
  lineHighlight: "#00000050",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
};
function js() {
  return Sk;
}
function U9(t) {
  Sk = t;
}
let Jm = "#22222210";
me.prototype.animate = function({ callback: t, sync: e = !1, smear: n = 0.5 } = {}) {
  window.frame && cancelAnimationFrame(window.frame);
  const r = Is();
  let { clientWidth: s, clientHeight: i } = r.canvas;
  s *= window.devicePixelRatio, i *= window.devicePixelRatio;
  let a = n === 0 ? "99" : Number((1 - n) * 100).toFixed(0);
  a = a.length === 1 ? `0${a}` : a, Jm = `#200010${a}`;
  const o = (l) => {
    let u;
    l = Math.round(l), u = this.slow(1e3).queryArc(l, l), r.fillStyle = Jm, r.fillRect(0, 0, s, i), u.forEach((h) => {
      let { x: f, y: m, w: b, h: v, s: C, r: S, angle: B = 0, fill: $ = "darkseagreen" } = h.value;
      if (b *= s, v *= i, S !== void 0 && B !== void 0) {
        const _ = B * 2 * Math.PI, [M, Z] = [(s - b) / 2, (i - v) / 2];
        f = M + Math.cos(_) * S * M, m = Z + Math.sin(_) * S * Z;
      } else
        f *= s - b, m *= i - v;
      const W = { ...h.value, x: f, y: m, w: b, h: v };
      r.fillStyle = $, C === "rect" ? r.fillRect(f, m, b, v) : C === "ellipse" && (r.beginPath(), r.ellipse(f + b / 2, m + v / 2, b / 2, v / 2, 0, 0, 2 * Math.PI), r.fill()), t && t(r, W, h);
    }), window.frame = requestAnimationFrame(o);
  };
  return window.frame = requestAnimationFrame(o), Pt;
};
const { x: Ak, y: G$, w: z$, h: Y$, angle: H$, r: K$, fill: J$, smear: eL } = dd("x", "y", "w", "h", "angle", "r", "fill", "smear"), tL = re("rescale", function(t, e) {
  return e.mul(Ak(t).w(t).y(t).h(t));
}), nL = re("moveXY", function(t, e, n) {
  return n.add(Ak(t).y(e));
}), rL = re("zoomIn", function(t, e) {
  const n = dn(1).sub(t).div(2);
  return e.rescale(t).move(n, n);
}), Ja = (t, e, n) => t * (n - e) + e, eg = (t) => {
  let { value: e } = t;
  typeof t.value != "object" && (e = { value: e });
  let { note: n, n: r, freq: s, s: i } = e;
  if (s)
    return td(s);
  if (n = n ?? r, typeof n == "string")
    try {
      return Xi(n);
    } catch {
      return 0;
    }
  return typeof n == "number" ? n : i ? "_" + i : e;
};
me.prototype.pianoroll = function(t = {}) {
  let { cycles: e = 4, playhead: n = 0.5, overscan: r = 0, hideNegative: s = !1, ctx: i = Is(), id: a = 1 } = t, o = -e * n, l = e * (1 - n);
  const u = (h, f) => (!s || h.whole.begin >= 0) && h.isWithinTime(f + o, f + l);
  return this.draw(
    (h, f) => {
      Dd({
        ...t,
        time: f,
        ctx: i,
        haps: h.filter((m) => u(m, f))
      });
    },
    {
      lookbehind: o - r,
      lookahead: l + r,
      id: a
    }
  ), this;
};
function sL(t) {
  return Eu(t) ? t.pianoroll() : (e) => e.pianoroll(t);
}
function Dd({
  time: t,
  haps: e,
  cycles: n = 4,
  playhead: r = 0.5,
  flipTime: s = 0,
  flipValues: i = 0,
  hideNegative: a = !1,
  inactive: o = js().foreground,
  active: l = js().foreground,
  background: u = "transparent",
  smear: h = 0,
  playheadColor: f = js().foreground,
  minMidi: m = 10,
  maxMidi: b = 90,
  autorange: v = 0,
  timeframe: C,
  fold: S = 1,
  vertical: B = 0,
  labels: $ = !1,
  fill: W = 1,
  fillActive: _ = !1,
  strokeActive: M = !0,
  stroke: Z,
  hideInactive: N = 0,
  colorizeInactive: q = 1,
  fontFamily: ae,
  ctx: J,
  id: pe
} = {}) {
  const H = J.canvas.width, oe = J.canvas.height;
  let fe = -n * r, ke = n * (1 - r);
  pe && (e = e.filter((tt) => tt.hasTag(pe))), C && (console.warn("timeframe is deprecated! use from/to instead"), fe = 0, ke = C);
  const Pe = B ? oe : H, ie = B ? H : oe;
  let Ce = B ? [Pe, 0] : [0, Pe];
  const Le = ke - fe, Ue = B ? [0, ie] : [ie, 0];
  let De = b - m + 1, ue = ie / De, _e = [];
  s && Ce.reverse(), i && Ue.reverse();
  const { min: He, max: dt, values: $e } = e.reduce(
    ({ min: tt, max: Bt, values: Tn }, Sn) => {
      const vt = eg(Sn);
      return {
        min: vt < tt ? vt : tt,
        max: vt > Bt ? vt : Bt,
        values: Tn.includes(vt) ? Tn : [...Tn, vt]
      };
    },
    { min: 1 / 0, max: -1 / 0, values: [] }
  );
  v && (m = He, b = dt, De = b - m + 1), _e = $e.sort(
    (tt, Bt) => typeof tt == "number" && typeof Bt == "number" ? tt - Bt : typeof tt == "number" ? 1 : String(tt).localeCompare(String(Bt))
  ), ue = S ? ie / _e.length : ie / De, J.fillStyle = u, J.globalAlpha = 1, h || (J.clearRect(0, 0, H, oe), J.fillRect(0, 0, H, oe)), e.forEach((tt) => {
    const Bt = tt.whole.begin <= t && tt.endClipped > t;
    let Tn = Z ?? (M && Bt), Sn = !Bt && W || Bt && _;
    if (N && !Bt)
      return;
    let vt = tt.value?.color;
    l = vt || l, o = q && vt || o, vt = Bt ? l : o, J.fillStyle = Sn ? vt : "transparent", J.strokeStyle = vt;
    const { velocity: Mt = 1, gain: Tt = 1 } = tt.value || {};
    J.globalAlpha = Mt * Tt;
    const Gt = (tt.whole.begin - (s ? ke : fe)) / Le, An = Ja(Gt, ...Ce);
    let Wn = Ja(tt.duration / Le, 0, Pe);
    const Un = eg(tt), Pn = S ? _e.indexOf(Un) / _e.length : (Number(Un) - m) / De, Jt = Ja(Pn, ...Ue);
    let Lr = 0;
    const vr = Ja(t / Le, ...Ce);
    let un;
    if (B ? un = [
      Jt + 1 - (i ? ue : 0),
      // x
      Pe - vr + An + Lr + 1 - (s ? 0 : Wn),
      // y
      ue - 2,
      // width
      Wn - 2
      // height
    ] : un = [
      An - vr + Lr + 1 - (s ? Wn : 0),
      // x
      Jt + 1 - (i ? 0 : ue),
      // y
      Wn - 2,
      // widith
      ue - 2
      // height
    ], Tn && J.strokeRect(...un), Sn && J.fillRect(...un), $) {
      const Ir = tt.value.note ?? tt.value.s + (tt.value.n ? `:${tt.value.n}` : ""), { label: qe, activeLabel: xt } = tt.value, wt = (Bt && xt || qe) ?? Ir;
      let Ve = B ? Wn : ue * 0.75;
      J.font = `${Ve}px ${ae || "monospace"}`, J.fillStyle = /* isActive &&  */
      Sn ? "black" : vt, J.textBaseline = "top", J.fillText(wt, ...un);
    }
  }), J.globalAlpha = 1;
  const Ft = Ja(-fe / Le, ...Ce);
  return J.strokeStyle = f, J.beginPath(), B ? (J.moveTo(0, Ft), J.lineTo(ie, Ft)) : (J.moveTo(Ft, 0), J.lineTo(Ft, ie)), J.stroke(), this;
}
function Pk(t, e = {}) {
  let [n, r] = t;
  n = Math.abs(n);
  const s = r + n, i = s !== 0 ? n / s : 0;
  return { fold: 1, ...e, cycles: s, playhead: i };
}
const q9 = (t = {}) => (e, n, r, s) => Dd({ ctx: e, time: n, haps: r, ...Pk(s, t) });
me.prototype.punchcard = function(t) {
  return this.onPaint(q9(t));
};
me.prototype.wordfall = function(t) {
  return this.punchcard({ vertical: 1, labels: 1, stroke: 0, fillActive: 1, active: "white", ...t });
};
function iL(t) {
  const { drawTime: e, ...n } = t;
  Dd({ ...Pk(e), ...n });
}
function G9(t, e, n, r) {
  const s = (t - 90) * Math.PI / 180;
  return [n + Math.cos(s) * e, r + Math.sin(s) * e];
}
const tg = (t, e, n, r, s = 0) => G9((t + s) * 360, e * t, n, r);
function ng(t) {
  let {
    ctx: e,
    from: n = 0,
    to: r = 3,
    margin: s = 50,
    cx: i = 100,
    cy: a = 100,
    rotate: o = 0,
    thickness: l = s / 2,
    color: u = js().foreground,
    cap: h = "round",
    stretch: f = 1,
    fromOpacity: m = 1,
    toOpacity: b = 1
  } = t;
  n *= f, r *= f, o *= f, e.lineWidth = l, e.lineCap = h, e.strokeStyle = u, e.globalAlpha = m, e.beginPath();
  let [v, C] = tg(n, s, i, a, o);
  e.moveTo(v, C);
  const S = 1 / 60;
  let B = n;
  for (; B <= r; ) {
    const [$, W] = tg(B, s, i, a, o);
    e.globalAlpha = (B - n) / (r - n) * b, e.lineTo($, W), B += S;
  }
  e.stroke();
}
function z9(t) {
  let {
    stretch: e = 1,
    size: n = 80,
    thickness: r = n / 2,
    cap: s = "butt",
    // round butt squar,
    inset: i = 3,
    // start angl,
    playheadColor: a = "#ffffff",
    playheadLength: o = 0.02,
    playheadThickness: l = r,
    padding: u = 0,
    steady: h = 1,
    activeColor: f = js().foreground,
    inactiveColor: m = js().gutterForeground,
    colorizeInactive: b = 0,
    fade: v = !0,
    // logSpiral = true,
    ctx: C,
    time: S,
    haps: B,
    drawTime: $,
    id: W
  } = t;
  W && (B = B.filter((H) => H.hasTag(W)));
  const [_, M] = [C.canvas.width, C.canvas.height];
  C.clearRect(0, 0, _ * 2, M * 2);
  const [Z, N] = [_ / 2, M / 2], q = {
    margin: n / e,
    cx: Z,
    cy: N,
    stretch: e,
    cap: s,
    thickness: r
  }, ae = {
    ...q,
    thickness: l,
    from: i - o,
    to: i,
    color: a
  }, [J] = $, pe = h * S;
  B.forEach((H) => {
    const oe = H.whole.begin <= S && H.endClipped > S, fe = H.whole.begin - S + i, ke = H.endClipped - S + i - u, Pe = H.value?.color || f, ie = b || oe ? Pe : m, Ce = v ? 1 - Math.abs((H.whole.begin - S) / J) : 1;
    ng({
      ctx: C,
      ...q,
      from: fe,
      to: ke,
      rotate: pe,
      color: ie,
      fromOpacity: Ce,
      toOpacity: Ce
    });
  }), ng({
    ctx: C,
    ...ae,
    rotate: pe
  });
}
me.prototype.spiral = function(t = {}) {
  return this.onPaint((e, n, r, s) => z9({ ctx: e, time: n, haps: r, drawTime: s, ...t }));
};
const Y9 = Ri(36), rg = (t, e, n, r) => {
  r = r * Math.PI * 2;
  const s = Math.sin(r) * n + t, i = Math.cos(r) * n + e;
  return [s, i];
}, sg = (t, e) => 0.5 - Math.log2(t / e) % 1;
function H9({
  haps: t,
  ctx: e,
  id: n,
  hapcircles: r = 1,
  circle: s = 0,
  edo: i = 12,
  root: a = Y9,
  thickness: o = 3,
  hapRadius: l = 6,
  mode: u = "flake",
  margin: h = 10
} = {}) {
  const f = u === "polygon", m = u === "flake", b = e.canvas.width, v = e.canvas.height;
  e.clearRect(0, 0, b, v);
  const C = js().foreground, B = Math.min(b, v) / 2 - o / 2 - l - h, $ = b / 2, W = v / 2;
  n && (t = t.filter((M) => M.hasTag(n))), e.strokeStyle = C, e.fillStyle = C, e.globalAlpha = 1, e.lineWidth = o, s && (e.beginPath(), e.arc($, W, B, 0, 2 * Math.PI), e.stroke()), i && (Array.from({ length: i }, (M, Z) => {
    const N = sg(a * Math.pow(2, Z / i), a), [q, ae] = rg($, W, B, N);
    e.beginPath(), e.arc(q, ae, l, 0, 2 * Math.PI), e.fill();
  }), e.stroke());
  let _ = [];
  e.lineWidth = l, t.forEach((M) => {
    let Z;
    try {
      Z = $b(M);
    } catch {
      return;
    }
    const N = sg(Z, a), [q, ae] = rg($, W, B, N), J = M.value.color || C;
    e.strokeStyle = J, e.fillStyle = J;
    const { velocity: pe = 1, gain: H = 1 } = M.value || {}, oe = pe * H;
    e.globalAlpha = oe, _.push([q, ae, N, J, oe]), e.beginPath(), r && (e.moveTo(q + l, ae), e.arc(q, ae, l, 0, 2 * Math.PI), e.fill()), m && (e.moveTo($, W), e.lineTo(q, ae)), e.stroke();
  }), e.strokeStyle = C, e.globalAlpha = 1, f && _.length && (_ = _.sort((M, Z) => M[2] - Z[2]), e.beginPath(), e.moveTo(_[0][0], _[0][1]), _.forEach(([M, Z, N, q, ae]) => {
    e.strokeStyle = q, e.globalAlpha = ae, e.lineTo(M, Z);
  }), e.lineTo(_[0][0], _[0][1]), e.stroke());
}
me.prototype.pitchwheel = function(t = {}) {
  let { ctx: e = Is(), id: n = 1 } = t;
  return this.tag(n).onPaint(
    (r, s, i) => H9({
      ...t,
      time: s,
      ctx: e,
      haps: i.filter((a) => a.isActive(s)),
      id: n
    })
  );
};
function K9(t, e) {
  function n() {
    this.constructor = t;
  }
  n.prototype = e.prototype, t.prototype = new n();
}
function Zi(t, e, n, r) {
  var s = Error.call(this, t);
  return Object.setPrototypeOf && Object.setPrototypeOf(s, Zi.prototype), s.expected = e, s.found = n, s.location = r, s.name = "SyntaxError", s;
}
K9(Zi, Error);
function Ch(t, e, n) {
  return n = n || " ", t.length > e ? t : (e -= t.length, n += n.repeat(e), t + n.slice(0, e));
}
Zi.prototype.format = function(t) {
  var e = "Error: " + this.message;
  if (this.location) {
    var n = null, r;
    for (r = 0; r < t.length; r++)
      if (t[r].source === this.location.source) {
        n = t[r].text.split(/\r\n|\n|\r/g);
        break;
      }
    var s = this.location.start, i = this.location.source && typeof this.location.source.offset == "function" ? this.location.source.offset(s) : s, a = this.location.source + ":" + i.line + ":" + i.column;
    if (n) {
      var o = this.location.end, l = Ch("", i.line.toString().length, " "), u = n[s.line - 1], h = s.line === o.line ? o.column : u.length + 1, f = h - s.column || 1;
      e += `
 --> ` + a + `
` + l + ` |
` + i.line + " | " + u + `
` + l + " | " + Ch("", s.column - 1, " ") + Ch("", f, "^");
    } else
      e += `
 at ` + a;
  }
  return e;
};
Zi.buildMessage = function(t, e) {
  var n = {
    literal: function(u) {
      return '"' + s(u.text) + '"';
    },
    class: function(u) {
      var h = u.parts.map(function(f) {
        return Array.isArray(f) ? i(f[0]) + "-" + i(f[1]) : i(f);
      });
      return "[" + (u.inverted ? "^" : "") + h.join("") + "]";
    },
    any: function() {
      return "any character";
    },
    end: function() {
      return "end of input";
    },
    other: function(u) {
      return u.description;
    }
  };
  function r(u) {
    return u.charCodeAt(0).toString(16).toUpperCase();
  }
  function s(u) {
    return u.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(h) {
      return "\\x0" + r(h);
    }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(h) {
      return "\\x" + r(h);
    });
  }
  function i(u) {
    return u.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(h) {
      return "\\x0" + r(h);
    }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(h) {
      return "\\x" + r(h);
    });
  }
  function a(u) {
    return n[u.type](u);
  }
  function o(u) {
    var h = u.map(a), f, m;
    if (h.sort(), h.length > 0) {
      for (f = 1, m = 1; f < h.length; f++)
        h[f - 1] !== h[f] && (h[m] = h[f], m++);
      h.length = m;
    }
    switch (h.length) {
      case 1:
        return h[0];
      case 2:
        return h[0] + " or " + h[1];
      default:
        return h.slice(0, -1).join(", ") + ", or " + h[h.length - 1];
    }
  }
  function l(u) {
    return u ? '"' + s(u) + '"' : "end of input";
  }
  return "Expected " + o(t) + " but " + l(e) + " found.";
};
function Dk(t, e) {
  e = e !== void 0 ? e : {};
  var n = {}, r = e.grammarSource, s = { start: qi }, i = qi, a = ".", o = "-", l = "0", u = ",", h = "|", f = "[", m = "]", b = "{", v = "}", C = "%", S = "<", B = ">", $ = "!", W = "(", _ = ")", M = "/", Z = "*", N = "?", q = ":", ae = "..", J = "^", pe = "struct", H = "target", oe = "euclid", fe = "slow", ke = "rotL", Pe = "rotR", ie = "fast", Ce = "scale", Le = "//", Ue = "cat", De = "$", ue = "setcps", _e = "setbpm", He = "hush", dt = /^[1-9]/, $e = /^[eE]/, Ft = /^[+\-]/, tt = /^[0-9]/, Bt = /^[ \n\r\t\xA0]/, Tn = /^["']/, Sn = /^[#\--.0-9A-Z\^-_a-z~\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376-\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06E5-\u06E6\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4-\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u09FC\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E46\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7B9\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD-\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/, vt = /^[@_]/, Mt = /^[^\n]/, Tt = za("number"), Gt = st(".", !1), An = Xr([["1", "9"]], !1, !1), Wn = Xr(["e", "E"], !1, !1), Un = Xr(["+", "-"], !1, !1), Pn = st("-", !1), Jt = st("0", !1), Lr = Xr([["0", "9"]], !1, !1), vr = za("whitespace"), un = Xr([" ", `
`, "\r", "	", " "], !1, !1), Ir = st(",", !1), qe = st("|", !1), xt = Xr(['"', "'"], !1, !1), xe = za('a letter, a number, "-", "#", ".", "^", "_"'), wt = Xr(["#", ["-", "."], ["0", "9"], ["A", "Z"], ["^", "_"], ["a", "z"], "~", "ª", "µ", "º", ["À", "Ö"], ["Ø", "ö"], ["ø", "ˁ"], ["ˆ", "ˑ"], ["ˠ", "ˤ"], "ˬ", "ˮ", ["Ͱ", "ʹ"], ["Ͷ", "ͷ"], ["ͺ", "ͽ"], "Ϳ", "Ά", ["Έ", "Ί"], "Ό", ["Ύ", "Ρ"], ["Σ", "ϵ"], ["Ϸ", "ҁ"], ["Ҋ", "ԯ"], ["Ա", "Ֆ"], "ՙ", ["ՠ", "ֈ"], ["א", "ת"], ["ׯ", "ײ"], ["ؠ", "ي"], ["ٮ", "ٯ"], ["ٱ", "ۓ"], "ە", ["ۥ", "ۦ"], ["ۮ", "ۯ"], ["ۺ", "ۼ"], "ۿ", "ܐ", ["ܒ", "ܯ"], ["ݍ", "ޥ"], "ޱ", ["ߊ", "ߪ"], ["ߴ", "ߵ"], "ߺ", ["ࠀ", "ࠕ"], "ࠚ", "ࠤ", "ࠨ", ["ࡀ", "ࡘ"], ["ࡠ", "ࡪ"], ["ࢠ", "ࢴ"], ["ࢶ", "ࢽ"], ["ऄ", "ह"], "ऽ", "ॐ", ["क़", "ॡ"], ["ॱ", "ঀ"], ["অ", "ঌ"], ["এ", "ঐ"], ["ও", "ন"], ["প", "র"], "ল", ["শ", "হ"], "ঽ", "ৎ", ["ড়", "ঢ়"], ["য়", "ৡ"], ["ৰ", "ৱ"], "ৼ", ["ਅ", "ਊ"], ["ਏ", "ਐ"], ["ਓ", "ਨ"], ["ਪ", "ਰ"], ["ਲ", "ਲ਼"], ["ਵ", "ਸ਼"], ["ਸ", "ਹ"], ["ਖ਼", "ੜ"], "ਫ਼", ["ੲ", "ੴ"], ["અ", "ઍ"], ["એ", "ઑ"], ["ઓ", "ન"], ["પ", "ર"], ["લ", "ળ"], ["વ", "હ"], "ઽ", "ૐ", ["ૠ", "ૡ"], "ૹ", ["ଅ", "ଌ"], ["ଏ", "ଐ"], ["ଓ", "ନ"], ["ପ", "ର"], ["ଲ", "ଳ"], ["ଵ", "ହ"], "ଽ", ["ଡ଼", "ଢ଼"], ["ୟ", "ୡ"], "ୱ", "ஃ", ["அ", "ஊ"], ["எ", "ஐ"], ["ஒ", "க"], ["ங", "ச"], "ஜ", ["ஞ", "ட"], ["ண", "த"], ["ந", "ப"], ["ம", "ஹ"], "ௐ", ["అ", "ఌ"], ["ఎ", "ఐ"], ["ఒ", "న"], ["ప", "హ"], "ఽ", ["ౘ", "ౚ"], ["ౠ", "ౡ"], "ಀ", ["ಅ", "ಌ"], ["ಎ", "ಐ"], ["ಒ", "ನ"], ["ಪ", "ಳ"], ["ವ", "ಹ"], "ಽ", "ೞ", ["ೠ", "ೡ"], ["ೱ", "ೲ"], ["അ", "ഌ"], ["എ", "ഐ"], ["ഒ", "ഺ"], "ഽ", "ൎ", ["ൔ", "ൖ"], ["ൟ", "ൡ"], ["ൺ", "ൿ"], ["අ", "ඖ"], ["ක", "න"], ["ඳ", "ර"], "ල", ["ව", "ෆ"], ["ก", "ะ"], ["า", "ำ"], ["เ", "ๆ"], ["ກ", "ຂ"], "ຄ", ["ງ", "ຈ"], "ຊ", "ຍ", ["ດ", "ທ"], ["ນ", "ຟ"], ["ມ", "ຣ"], "ລ", "ວ", ["ສ", "ຫ"], ["ອ", "ະ"], ["າ", "ຳ"], "ຽ", ["ເ", "ໄ"], "ໆ", ["ໜ", "ໟ"], "ༀ", ["ཀ", "ཇ"], ["ཉ", "ཬ"], ["ྈ", "ྌ"], ["က", "ဪ"], "ဿ", ["ၐ", "ၕ"], ["ၚ", "ၝ"], "ၡ", ["ၥ", "ၦ"], ["ၮ", "ၰ"], ["ၵ", "ႁ"], "ႎ", ["Ⴀ", "Ⴥ"], "Ⴧ", "Ⴭ", ["ა", "ჺ"], ["ჼ", "ቈ"], ["ቊ", "ቍ"], ["ቐ", "ቖ"], "ቘ", ["ቚ", "ቝ"], ["በ", "ኈ"], ["ኊ", "ኍ"], ["ነ", "ኰ"], ["ኲ", "ኵ"], ["ኸ", "ኾ"], "ዀ", ["ዂ", "ዅ"], ["ወ", "ዖ"], ["ዘ", "ጐ"], ["ጒ", "ጕ"], ["ጘ", "ፚ"], ["ᎀ", "ᎏ"], ["Ꭰ", "Ᏽ"], ["ᏸ", "ᏽ"], ["ᐁ", "ᙬ"], ["ᙯ", "ᙿ"], ["ᚁ", "ᚚ"], ["ᚠ", "ᛪ"], ["ᛮ", "ᛸ"], ["ᜀ", "ᜌ"], ["ᜎ", "ᜑ"], ["ᜠ", "ᜱ"], ["ᝀ", "ᝑ"], ["ᝠ", "ᝬ"], ["ᝮ", "ᝰ"], ["ក", "ឳ"], "ៗ", "ៜ", ["ᠠ", "ᡸ"], ["ᢀ", "ᢄ"], ["ᢇ", "ᢨ"], "ᢪ", ["ᢰ", "ᣵ"], ["ᤀ", "ᤞ"], ["ᥐ", "ᥭ"], ["ᥰ", "ᥴ"], ["ᦀ", "ᦫ"], ["ᦰ", "ᧉ"], ["ᨀ", "ᨖ"], ["ᨠ", "ᩔ"], "ᪧ", ["ᬅ", "ᬳ"], ["ᭅ", "ᭋ"], ["ᮃ", "ᮠ"], ["ᮮ", "ᮯ"], ["ᮺ", "ᯥ"], ["ᰀ", "ᰣ"], ["ᱍ", "ᱏ"], ["ᱚ", "ᱽ"], ["ᲀ", "ᲈ"], ["Ა", "Ჺ"], ["Ჽ", "Ჿ"], ["ᳩ", "ᳬ"], ["ᳮ", "ᳱ"], ["ᳵ", "ᳶ"], ["ᴀ", "ᶿ"], ["Ḁ", "ἕ"], ["Ἐ", "Ἕ"], ["ἠ", "ὅ"], ["Ὀ", "Ὅ"], ["ὐ", "ὗ"], "Ὑ", "Ὓ", "Ὕ", ["Ὗ", "ώ"], ["ᾀ", "ᾴ"], ["ᾶ", "ᾼ"], "ι", ["ῂ", "ῄ"], ["ῆ", "ῌ"], ["ῐ", "ΐ"], ["ῖ", "Ί"], ["ῠ", "Ῥ"], ["ῲ", "ῴ"], ["ῶ", "ῼ"], "ⁱ", "ⁿ", ["ₐ", "ₜ"], "ℂ", "ℇ", ["ℊ", "ℓ"], "ℕ", ["ℙ", "ℝ"], "ℤ", "Ω", "ℨ", ["K", "ℭ"], ["ℯ", "ℹ"], ["ℼ", "ℿ"], ["ⅅ", "ⅉ"], "ⅎ", ["Ⅰ", "ↈ"], ["Ⰰ", "Ⱞ"], ["ⰰ", "ⱞ"], ["Ⱡ", "ⳤ"], ["Ⳬ", "ⳮ"], ["Ⳳ", "ⳳ"], ["ⴀ", "ⴥ"], "ⴧ", "ⴭ", ["ⴰ", "ⵧ"], "ⵯ", ["ⶀ", "ⶖ"], ["ⶠ", "ⶦ"], ["ⶨ", "ⶮ"], ["ⶰ", "ⶶ"], ["ⶸ", "ⶾ"], ["ⷀ", "ⷆ"], ["ⷈ", "ⷎ"], ["ⷐ", "ⷖ"], ["ⷘ", "ⷞ"], "ⸯ", ["々", "〇"], ["〡", "〩"], ["〱", "〵"], ["〸", "〼"], ["ぁ", "ゖ"], ["ゝ", "ゟ"], ["ァ", "ヺ"], ["ー", "ヿ"], ["ㄅ", "ㄯ"], ["ㄱ", "ㆎ"], ["ㆠ", "ㆺ"], ["ㇰ", "ㇿ"], ["㐀", "䶵"], ["一", "鿯"], ["ꀀ", "ꒌ"], ["ꓐ", "ꓽ"], ["ꔀ", "ꘌ"], ["ꘐ", "ꘟ"], ["ꘪ", "ꘫ"], ["Ꙁ", "ꙮ"], ["ꙿ", "ꚝ"], ["ꚠ", "ꛯ"], ["ꜗ", "ꜟ"], ["Ꜣ", "ꞈ"], ["Ꞌ", "ꞹ"], ["ꟷ", "ꠁ"], ["ꠃ", "ꠅ"], ["ꠇ", "ꠊ"], ["ꠌ", "ꠢ"], ["ꡀ", "ꡳ"], ["ꢂ", "ꢳ"], ["ꣲ", "ꣷ"], "ꣻ", ["ꣽ", "ꣾ"], ["ꤊ", "ꤥ"], ["ꤰ", "ꥆ"], ["ꥠ", "ꥼ"], ["ꦄ", "ꦲ"], "ꧏ", ["ꧠ", "ꧤ"], ["ꧦ", "ꧯ"], ["ꧺ", "ꧾ"], ["ꨀ", "ꨨ"], ["ꩀ", "ꩂ"], ["ꩄ", "ꩋ"], ["ꩠ", "ꩶ"], "ꩺ", ["ꩾ", "ꪯ"], "ꪱ", ["ꪵ", "ꪶ"], ["ꪹ", "ꪽ"], "ꫀ", "ꫂ", ["ꫛ", "ꫝ"], ["ꫠ", "ꫪ"], ["ꫲ", "ꫴ"], ["ꬁ", "ꬆ"], ["ꬉ", "ꬎ"], ["ꬑ", "ꬖ"], ["ꬠ", "ꬦ"], ["ꬨ", "ꬮ"], ["ꬰ", "ꭚ"], ["ꭜ", "ꭥ"], ["ꭰ", "ꯢ"], ["가", "힣"], ["ힰ", "ퟆ"], ["ퟋ", "ퟻ"], ["豈", "舘"], ["並", "龎"], ["ﬀ", "ﬆ"], ["ﬓ", "ﬗ"], "יִ", ["ײַ", "ﬨ"], ["שׁ", "זּ"], ["טּ", "לּ"], "מּ", ["נּ", "סּ"], ["ףּ", "פּ"], ["צּ", "ﮱ"], ["ﯓ", "ﴽ"], ["ﵐ", "ﶏ"], ["ﶒ", "ﷇ"], ["ﷰ", "ﷻ"], ["ﹰ", "ﹴ"], ["ﹶ", "ﻼ"], ["Ａ", "Ｚ"], ["ａ", "ｚ"], ["ｦ", "ﾾ"], ["ￂ", "ￇ"], ["ￊ", "ￏ"], ["ￒ", "ￗ"], ["ￚ", "ￜ"]], !1, !1), Ve = st("[", !1), Us = st("]", !1), yi = st("{", !1), Qn = st("}", !1), Nr = st("%", !1), rt = st("<", !1), it = st(">", !1), gt = Xr(["@", "_"], !1, !1), zt = st("!", !1), ut = st("(", !1), en = st(")", !1), kt = st("/", !1), xr = st("*", !1), qs = st("?", !1), Oi = st(":", !1), Gs = st("..", !1), O = st("^", !1), D = st("struct", !1), A = st("target", !1), P = st("euclid", !1), R = st("slow", !1), Y = st("rotL", !1), se = st("rotR", !1), le = st("fast", !1), ge = st("scale", !1), We = st("//", !1), St = Xr([`
`], !0, !1), Xt = st("cat", !1), jn = st("$", !1), Ge = st("setcps", !1), gn = st("setbpm", !1), Ct = st("hush", !1), _n = function() {
    return parseFloat(is());
  }, vi = function(w) {
    const Q = w.join("");
    return Q === "." || Q === "_";
  }, nh = function(w) {
    return new U3(w.join(""));
  }, gl = function(w) {
    return w;
  }, rh = function(w, Q) {
    return w.arguments_.stepsPerCycle = Q, w;
  }, bl = function(w) {
    return w;
  }, Ua = function(w) {
    return w.arguments_.alignment = "polymeter_slowcat", w;
  }, sh = function(w) {
    return (Q) => Q.options_.weight = (Q.options_.weight ?? 1) + (w ?? 2) - 1;
  }, Vr = function(w) {
    return (Q) => {
      const I = (Q.options_.reps ?? 1) + (w ?? 2) - 1;
      Q.options_.reps = I, Q.options_.ops = Q.options_.ops.filter((ce) => ce.type_ !== "replicate"), Q.options_.ops.push({ type_: "replicate", arguments_: { amount: I } }), Q.options_.weight = I;
    };
  }, ih = function(w, Q, I) {
    return (ce) => ce.options_.ops.push({ type_: "bjorklund", arguments_: { pulse: w, step: Q, rotation: I } });
  }, yl = function(w) {
    return (Q) => Q.options_.ops.push({ type_: "stretch", arguments_: { amount: w, type: "slow" } });
  }, Ol = function(w) {
    return (Q) => Q.options_.ops.push({ type_: "stretch", arguments_: { amount: w, type: "fast" } });
  }, ah = function(w) {
    return (Q) => Q.options_.ops.push({ type_: "degradeBy", arguments_: { amount: w, seed: kh++ } });
  }, vl = function(w) {
    return (Q) => Q.options_.ops.push({ type_: "tail", arguments_: { element: w } });
  }, oh = function(w) {
    return (Q) => Q.options_.ops.push({ type_: "range", arguments_: { element: w } });
  }, lh = function(w, Q) {
    const I = new G3(w, { ops: [], weight: 1, reps: 1 });
    for (const ce of Q)
      ce(I);
    return I;
  }, cr = function(w, Q) {
    return new Ql(Q, "fastcat", void 0, !!w);
  }, ch = function(w) {
    return { alignment: "stack", list: w };
  }, uh = function(w) {
    return { alignment: "rand", list: w, seed: kh++ };
  }, xl = function(w) {
    return { alignment: "feet", list: w, seed: kh++ };
  }, wl = function(w, Q) {
    return Q && Q.list.length > 0 ? new Ql([w, ...Q.list], Q.alignment, Q.seed) : w;
  }, hh = function(w, Q) {
    return new Ql(Q ? [w, ...Q.list] : [w], "polymeter");
  }, kl = function(w) {
    return w;
  }, ph = function(w) {
    return { name: "struct", args: { mini: w } };
  }, Cl = function(w) {
    return { name: "target", args: { name: w } };
  }, fh = function(w, Q, I) {
    return { name: "bjorklund", args: { pulse: w, step: parseInt(Q) } };
  }, dh = function(w) {
    return { name: "stretch", args: { amount: w } };
  }, ss = function(w) {
    return { name: "shift", args: { amount: "-" + w } };
  }, bt = function(w) {
    return { name: "shift", args: { amount: w } };
  }, mh = function(w) {
    return { name: "stretch", args: { amount: "1/" + w } };
  }, xi = function(w) {
    return { name: "scale", args: { scale: w.join("") } };
  }, Sl = function(w, Q) {
    return Q;
  }, wi = function(w, Q) {
    return Q.unshift(w), new Ql(Q, "slowcat");
  }, gh = function(w) {
    return w;
  }, ki = function(w, Q) {
    return new q3(w.name, w.args, Q);
  }, Al = function(w) {
    return w;
  }, Pl = function(w) {
    return w;
  }, bh = function(w) {
    return new wh("setcps", { value: w });
  }, qa = function(w) {
    return new wh("setcps", { value: w / 120 / 2 });
  }, yh = function() {
    return new wh("hush");
  }, L = e.peg$currPos | 0, Ie = L, As = [{ line: 1, column: 1 }], ur = L, Ci = e.peg$maxFailExpected || [], Se = e.peg$silentFails | 0, Si;
  if (e.startRule) {
    if (!(e.startRule in s))
      throw new Error(`Can't start parsing from rule "` + e.startRule + '".');
    i = s[e.startRule];
  }
  function is() {
    return t.substring(Ie, L);
  }
  function Ga() {
    return Ui(Ie, L);
  }
  function st(w, Q) {
    return { type: "literal", text: w, ignoreCase: Q };
  }
  function Xr(w, Q, I) {
    return { type: "class", parts: w, inverted: Q, ignoreCase: I };
  }
  function Oh() {
    return { type: "end" };
  }
  function za(w) {
    return { type: "other", description: w };
  }
  function Dl(w) {
    var Q = As[w], I;
    if (Q)
      return Q;
    if (w >= As.length)
      I = As.length - 1;
    else
      for (I = w; !As[--I]; )
        ;
    for (Q = As[I], Q = {
      line: Q.line,
      column: Q.column
    }; I < w; )
      t.charCodeAt(I) === 10 ? (Q.line++, Q.column = 1) : Q.column++, I++;
    return As[w] = Q, Q;
  }
  function Ui(w, Q, I) {
    var ce = Dl(w), Te = Dl(Q), Lt = {
      source: r,
      start: {
        offset: w,
        line: ce.line,
        column: ce.column
      },
      end: {
        offset: Q,
        line: Te.line,
        column: Te.column
      }
    };
    return Lt;
  }
  function Qe(w) {
    L < ur || (L > ur && (ur = L, Ci = []), Ci.push(w));
  }
  function El(w, Q, I) {
    return new Zi(
      Zi.buildMessage(w, Q),
      w,
      Q,
      I
    );
  }
  function qi() {
    var w;
    return w = W3(), w;
  }
  function wr() {
    var w, Q;
    return Se++, w = L, d(), Q = p(), Q !== n ? (vh(), Ya(), Ie = w, w = _n()) : (L = w, w = n), Se--, w === n && Se === 0 && Qe(Tt), w;
  }
  function Fl() {
    var w;
    return t.charCodeAt(L) === 46 ? (w = a, L++) : (w = n, Se === 0 && Qe(Gt)), w;
  }
  function Bl() {
    var w;
    return w = t.charAt(L), dt.test(w) ? L++ : (w = n, Se === 0 && Qe(An)), w;
  }
  function Ml() {
    var w;
    return w = t.charAt(L), $e.test(w) ? L++ : (w = n, Se === 0 && Qe(Wn)), w;
  }
  function Ya() {
    var w, Q, I, ce, Te;
    if (w = L, Q = Ml(), Q !== n) {
      if (I = t.charAt(L), Ft.test(I) ? L++ : (I = n, Se === 0 && Qe(Un)), I === n && (I = null), ce = [], Te = y(), Te !== n)
        for (; Te !== n; )
          ce.push(Te), Te = y();
      else
        ce = n;
      ce !== n ? (Q = [Q, I, ce], w = Q) : (L = w, w = n);
    } else
      L = w, w = n;
    return w;
  }
  function vh() {
    var w, Q, I, ce;
    if (w = L, Q = Fl(), Q !== n) {
      if (I = [], ce = y(), ce !== n)
        for (; ce !== n; )
          I.push(ce), ce = y();
      else
        I = n;
      I !== n ? (Q = [Q, I], w = Q) : (L = w, w = n);
    } else
      L = w, w = n;
    return w;
  }
  function p() {
    var w, Q, I, ce;
    if (w = g(), w === n)
      if (w = L, Q = Bl(), Q !== n) {
        for (I = [], ce = y(); ce !== n; )
          I.push(ce), ce = y();
        Q = [Q, I], w = Q;
      } else
        L = w, w = n;
    return w;
  }
  function d() {
    var w;
    return t.charCodeAt(L) === 45 ? (w = o, L++) : (w = n, Se === 0 && Qe(Pn)), w;
  }
  function g() {
    var w;
    return t.charCodeAt(L) === 48 ? (w = l, L++) : (w = n, Se === 0 && Qe(Jt)), w;
  }
  function y() {
    var w;
    return w = t.charAt(L), tt.test(w) ? L++ : (w = n, Se === 0 && Qe(Lr)), w;
  }
  function x() {
    var w, Q;
    for (Se++, w = [], Q = t.charAt(L), Bt.test(Q) ? L++ : (Q = n, Se === 0 && Qe(un)); Q !== n; )
      w.push(Q), Q = t.charAt(L), Bt.test(Q) ? L++ : (Q = n, Se === 0 && Qe(un));
    return Se--, Q = n, Se === 0 && Qe(vr), w;
  }
  function k() {
    var w, Q, I, ce;
    return w = L, Q = x(), t.charCodeAt(L) === 44 ? (I = u, L++) : (I = n, Se === 0 && Qe(Ir)), I !== n ? (ce = x(), Q = [Q, I, ce], w = Q) : (L = w, w = n), w;
  }
  function E() {
    var w, Q, I, ce;
    return w = L, Q = x(), t.charCodeAt(L) === 124 ? (I = h, L++) : (I = n, Se === 0 && Qe(qe)), I !== n ? (ce = x(), Q = [Q, I, ce], w = Q) : (L = w, w = n), w;
  }
  function T() {
    var w, Q, I, ce;
    return w = L, Q = x(), t.charCodeAt(L) === 46 ? (I = a, L++) : (I = n, Se === 0 && Qe(Gt)), I !== n ? (ce = x(), Q = [Q, I, ce], w = Q) : (L = w, w = n), w;
  }
  function j() {
    var w;
    return w = t.charAt(L), Tn.test(w) ? L++ : (w = n, Se === 0 && Qe(xt)), w;
  }
  function V() {
    var w;
    return Se++, w = t.charAt(L), Sn.test(w) ? L++ : (w = n, Se === 0 && Qe(wt)), Se--, w === n && Se === 0 && Qe(xe), w;
  }
  function U() {
    var w, Q, I, ce;
    if (w = L, x(), Q = [], I = V(), I !== n)
      for (; I !== n; )
        Q.push(I), I = V();
    else
      Q = n;
    return Q !== n ? (I = x(), Ie = L, ce = vi(Q), ce ? ce = n : ce = void 0, ce !== n ? (Ie = w, w = nh(Q)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function K() {
    var w, Q, I, ce;
    return w = L, x(), t.charCodeAt(L) === 91 ? (Q = f, L++) : (Q = n, Se === 0 && Qe(Ve)), Q !== n ? (x(), I = Gi(), I !== n ? (x(), t.charCodeAt(L) === 93 ? (ce = m, L++) : (ce = n, Se === 0 && Qe(Us)), ce !== n ? (x(), Ie = w, w = gl(I)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function ee() {
    var w, Q, I, ce, Te;
    return w = L, x(), t.charCodeAt(L) === 123 ? (Q = b, L++) : (Q = n, Se === 0 && Qe(yi)), Q !== n ? (x(), I = Tl(), I !== n ? (x(), t.charCodeAt(L) === 125 ? (ce = v, L++) : (ce = n, Se === 0 && Qe(Qn)), ce !== n ? (Te = z(), Te === n && (Te = null), x(), Ie = w, w = rh(I, Te)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function z() {
    var w, Q, I;
    return w = L, t.charCodeAt(L) === 37 ? (Q = C, L++) : (Q = n, Se === 0 && Qe(Nr)), Q !== n ? (I = te(), I !== n ? (Ie = w, w = bl(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function G() {
    var w, Q, I, ce;
    return w = L, x(), t.charCodeAt(L) === 60 ? (Q = S, L++) : (Q = n, Se === 0 && Qe(rt)), Q !== n ? (x(), I = Tl(), I !== n ? (x(), t.charCodeAt(L) === 62 ? (ce = B, L++) : (ce = n, Se === 0 && Qe(it)), ce !== n ? (x(), Ie = w, w = Ua(I)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function te() {
    var w;
    return w = U(), w === n && (w = K(), w === n && (w = ee(), w === n && (w = G()))), w;
  }
  function he() {
    var w;
    return w = Re(), w === n && (w = Ne(), w === n && (w = yt(), w === n && (w = bn(), w === n && (w = Fe(), w === n && (w = Yt(), w === n && (w = hn(), w === n && (w = at()))))))), w;
  }
  function Re() {
    var w, Q, I;
    return w = L, x(), Q = t.charAt(L), vt.test(Q) ? L++ : (Q = n, Se === 0 && Qe(gt)), Q !== n ? (I = wr(), I === n && (I = null), Ie = w, w = sh(I)) : (L = w, w = n), w;
  }
  function Fe() {
    var w, Q, I;
    return w = L, x(), t.charCodeAt(L) === 33 ? (Q = $, L++) : (Q = n, Se === 0 && Qe(zt)), Q !== n ? (I = wr(), I === n && (I = null), Ie = w, w = Vr(I)) : (L = w, w = n), w;
  }
  function Ne() {
    var w, Q, I, ce, Te, Lt, Wr;
    return w = L, t.charCodeAt(L) === 40 ? (Q = W, L++) : (Q = n, Se === 0 && Qe(ut)), Q !== n ? (x(), I = Ke(), I !== n ? (x(), ce = k(), ce !== n ? (x(), Te = Ke(), Te !== n ? (x(), k(), x(), Lt = Ke(), Lt === n && (Lt = null), x(), t.charCodeAt(L) === 41 ? (Wr = _, L++) : (Wr = n, Se === 0 && Qe(en)), Wr !== n ? (Ie = w, w = ih(I, Te, Lt)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function yt() {
    var w, Q, I;
    return w = L, t.charCodeAt(L) === 47 ? (Q = M, L++) : (Q = n, Se === 0 && Qe(kt)), Q !== n ? (I = te(), I !== n ? (Ie = w, w = yl(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function bn() {
    var w, Q, I;
    return w = L, t.charCodeAt(L) === 42 ? (Q = Z, L++) : (Q = n, Se === 0 && Qe(xr)), Q !== n ? (I = te(), I !== n ? (Ie = w, w = Ol(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function Yt() {
    var w, Q, I;
    return w = L, t.charCodeAt(L) === 63 ? (Q = N, L++) : (Q = n, Se === 0 && Qe(qs)), Q !== n ? (I = wr(), I === n && (I = null), Ie = w, w = ah(I)) : (L = w, w = n), w;
  }
  function hn() {
    var w, Q, I;
    return w = L, t.charCodeAt(L) === 58 ? (Q = q, L++) : (Q = n, Se === 0 && Qe(Oi)), Q !== n ? (I = te(), I !== n ? (Ie = w, w = vl(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function at() {
    var w, Q, I;
    return w = L, t.substr(L, 2) === ae ? (Q = ae, L += 2) : (Q = n, Se === 0 && Qe(Gs)), Q !== n ? (I = te(), I !== n ? (Ie = w, w = oh(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function Ke() {
    var w, Q, I, ce;
    if (w = L, Q = te(), Q !== n) {
      for (I = [], ce = he(); ce !== n; )
        I.push(ce), ce = he();
      Ie = w, w = lh(Q, I);
    } else
      L = w, w = n;
    return w;
  }
  function $t() {
    var w, Q, I, ce;
    if (w = L, t.charCodeAt(L) === 94 ? (Q = J, L++) : (Q = n, Se === 0 && Qe(O)), Q === n && (Q = null), I = [], ce = Ke(), ce !== n)
      for (; ce !== n; )
        I.push(ce), ce = Ke();
    else
      I = n;
    return I !== n ? (Ie = w, w = cr(Q, I)) : (L = w, w = n), w;
  }
  function tn() {
    var w, Q, I, ce, Te;
    if (w = L, Q = [], I = L, ce = k(), ce !== n ? (Te = $t(), Te !== n ? I = Te : (L = I, I = n)) : (L = I, I = n), I !== n)
      for (; I !== n; )
        Q.push(I), I = L, ce = k(), ce !== n ? (Te = $t(), Te !== n ? I = Te : (L = I, I = n)) : (L = I, I = n);
    else
      Q = n;
    return Q !== n && (Ie = w, Q = ch(Q)), w = Q, w;
  }
  function nn() {
    var w, Q, I, ce, Te;
    if (w = L, Q = [], I = L, ce = E(), ce !== n ? (Te = $t(), Te !== n ? I = Te : (L = I, I = n)) : (L = I, I = n), I !== n)
      for (; I !== n; )
        Q.push(I), I = L, ce = E(), ce !== n ? (Te = $t(), Te !== n ? I = Te : (L = I, I = n)) : (L = I, I = n);
    else
      Q = n;
    return Q !== n && (Ie = w, Q = uh(Q)), w = Q, w;
  }
  function kr() {
    var w, Q, I, ce, Te;
    if (w = L, Q = [], I = L, ce = T(), ce !== n ? (Te = $t(), Te !== n ? I = Te : (L = I, I = n)) : (L = I, I = n), I !== n)
      for (; I !== n; )
        Q.push(I), I = L, ce = T(), ce !== n ? (Te = $t(), Te !== n ? I = Te : (L = I, I = n)) : (L = I, I = n);
    else
      Q = n;
    return Q !== n && (Ie = w, Q = xl(Q)), w = Q, w;
  }
  function Gi() {
    var w, Q, I;
    return w = L, Q = $t(), Q !== n ? (I = tn(), I === n && (I = nn(), I === n && (I = kr())), I === n && (I = null), Ie = w, w = wl(Q, I)) : (L = w, w = n), w;
  }
  function Tl() {
    var w, Q, I;
    return w = L, Q = $t(), Q !== n ? (I = tn(), I === n && (I = null), Ie = w, w = hh(Q, I)) : (L = w, w = n), w;
  }
  function Ha() {
    var w, Q, I, ce;
    return w = L, x(), Q = j(), Q !== n ? (x(), I = Gi(), I !== n ? (x(), ce = j(), ce !== n ? (Ie = w, w = kl(I)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function D3() {
    var w;
    return w = _3(), w === n && (w = M3(), w === n && (w = j3(), w === n && (w = F3(), w === n && (w = B3(), w === n && (w = E3(), w === n && (w = Q3(), w === n && (w = T3()))))))), w;
  }
  function E3() {
    var w, Q, I;
    return w = L, t.substr(L, 6) === pe ? (Q = pe, L += 6) : (Q = n, Se === 0 && Qe(D)), Q !== n ? (x(), I = zi(), I !== n ? (Ie = w, w = ph(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function F3() {
    var w, Q, I, ce, Te;
    return w = L, t.substr(L, 6) === H ? (Q = H, L += 6) : (Q = n, Se === 0 && Qe(A)), Q !== n ? (x(), I = j(), I !== n ? (ce = U(), ce !== n ? (Te = j(), Te !== n ? (Ie = w, w = Cl(ce)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function B3() {
    var w, Q, I, ce;
    return w = L, t.substr(L, 6) === oe ? (Q = oe, L += 6) : (Q = n, Se === 0 && Qe(P)), Q !== n ? (x(), I = p(), I !== n ? (x(), ce = p(), ce !== n ? (x(), p(), Ie = w, w = fh(I, ce)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function M3() {
    var w, Q, I;
    return w = L, t.substr(L, 4) === fe ? (Q = fe, L += 4) : (Q = n, Se === 0 && Qe(R)), Q !== n ? (x(), I = wr(), I !== n ? (Ie = w, w = dh(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function T3() {
    var w, Q, I;
    return w = L, t.substr(L, 4) === ke ? (Q = ke, L += 4) : (Q = n, Se === 0 && Qe(Y)), Q !== n ? (x(), I = wr(), I !== n ? (Ie = w, w = ss(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function Q3() {
    var w, Q, I;
    return w = L, t.substr(L, 4) === Pe ? (Q = Pe, L += 4) : (Q = n, Se === 0 && Qe(se)), Q !== n ? (x(), I = wr(), I !== n ? (Ie = w, w = bt(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function j3() {
    var w, Q, I;
    return w = L, t.substr(L, 4) === ie ? (Q = ie, L += 4) : (Q = n, Se === 0 && Qe(le)), Q !== n ? (x(), I = wr(), I !== n ? (Ie = w, w = mh(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function _3() {
    var w, Q, I, ce, Te;
    if (w = L, t.substr(L, 5) === Ce ? (Q = Ce, L += 5) : (Q = n, Se === 0 && Qe(ge)), Q !== n)
      if (x(), I = j(), I !== n) {
        if (ce = [], Te = V(), Te !== n)
          for (; Te !== n; )
            ce.push(Te), Te = V();
        else
          ce = n;
        ce !== n ? (Te = j(), Te !== n ? (Ie = w, w = xi(ce)) : (L = w, w = n)) : (L = w, w = n);
      } else
        L = w, w = n;
    else
      L = w, w = n;
    return w;
  }
  function xh() {
    var w, Q, I, ce;
    if (w = L, t.substr(L, 2) === Le ? (Q = Le, L += 2) : (Q = n, Se === 0 && Qe(We)), Q !== n) {
      for (I = [], ce = t.charAt(L), Mt.test(ce) ? L++ : (ce = n, Se === 0 && Qe(St)); ce !== n; )
        I.push(ce), ce = t.charAt(L), Mt.test(ce) ? L++ : (ce = n, Se === 0 && Qe(St));
      Q = [Q, I], w = Q;
    } else
      L = w, w = n;
    return w;
  }
  function R3() {
    var w, Q, I, ce, Te, Lt, Wr, Yi;
    if (w = L, t.substr(L, 3) === Ue ? (Q = Ue, L += 3) : (Q = n, Se === 0 && Qe(Xt)), Q !== n)
      if (x(), t.charCodeAt(L) === 91 ? (I = f, L++) : (I = n, Se === 0 && Qe(Ve)), I !== n)
        if (x(), ce = zi(), ce !== n) {
          for (Te = [], Lt = L, Wr = k(), Wr !== n ? (Yi = zi(), Yi !== n ? (Ie = Lt, Lt = Sl(ce, Yi)) : (L = Lt, Lt = n)) : (L = Lt, Lt = n); Lt !== n; )
            Te.push(Lt), Lt = L, Wr = k(), Wr !== n ? (Yi = zi(), Yi !== n ? (Ie = Lt, Lt = Sl(ce, Yi)) : (L = Lt, Lt = n)) : (L = Lt, Lt = n);
          Lt = x(), t.charCodeAt(L) === 93 ? (Wr = m, L++) : (Wr = n, Se === 0 && Qe(Us)), Wr !== n ? (Ie = w, w = wi(ce, Te)) : (L = w, w = n);
        } else
          L = w, w = n;
      else
        L = w, w = n;
    else
      L = w, w = n;
    return w;
  }
  function Z3() {
    var w;
    return w = R3(), w === n && (w = Ha()), w;
  }
  function zi() {
    var w, Q, I, ce, Te;
    if (w = L, Q = Z3(), Q !== n) {
      for (x(), I = [], ce = xh(); ce !== n; )
        I.push(ce), ce = xh();
      Ie = w, w = gh(Q);
    } else
      L = w, w = n;
    return w === n && (w = L, Q = D3(), Q !== n ? (x(), t.charCodeAt(L) === 36 ? (I = De, L++) : (I = n, Se === 0 && Qe(jn)), I !== n ? (ce = x(), Te = zi(), Te !== n ? (Ie = w, w = ki(Q, Te)) : (L = w, w = n)) : (L = w, w = n)) : (L = w, w = n)), w;
  }
  function $3() {
    var w, Q;
    return w = L, Q = zi(), Q !== n && (Ie = w, Q = Al(Q)), w = Q, w === n && (w = xh()), w;
  }
  function L3() {
    var w;
    return w = $3(), w;
  }
  function I3() {
    var w, Q;
    return w = L, x(), Q = N3(), Q === n && (Q = V3(), Q === n && (Q = X3())), Q !== n ? (x(), Ie = w, w = Pl(Q)) : (L = w, w = n), w;
  }
  function N3() {
    var w, Q, I;
    return w = L, t.substr(L, 6) === ue ? (Q = ue, L += 6) : (Q = n, Se === 0 && Qe(Ge)), Q !== n ? (x(), I = wr(), I !== n ? (Ie = w, w = bh(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function V3() {
    var w, Q, I;
    return w = L, t.substr(L, 6) === _e ? (Q = _e, L += 6) : (Q = n, Se === 0 && Qe(gn)), Q !== n ? (x(), I = wr(), I !== n ? (Ie = w, w = qa(I)) : (L = w, w = n)) : (L = w, w = n), w;
  }
  function X3() {
    var w, Q;
    return w = L, t.substr(L, 4) === He ? (Q = He, L += 4) : (Q = n, Se === 0 && Qe(Ct)), Q !== n && (Ie = w, Q = yh()), w = Q, w;
  }
  function W3() {
    var w;
    return w = L3(), w === n && (w = I3()), w;
  }
  var U3 = function(w) {
    this.type_ = "atom", this.source_ = w, this.location_ = Ga();
  }, Ql = function(w, Q, I, ce) {
    this.type_ = "pattern", this.arguments_ = { alignment: Q, _steps: ce }, I !== void 0 && (this.arguments_.seed = I), this.source_ = w;
  }, q3 = function(w, Q, I) {
    this.type_ = w, this.arguments_ = Q, this.source_ = I;
  }, G3 = function(w, Q) {
    this.type_ = "element", this.source_ = w, this.options_ = Q, this.location_ = Ga();
  }, wh = function(w, Q) {
    this.type_ = "command", this.name_ = w, this.options_ = Q;
  }, kh = 0;
  if (Si = i(), e.peg$library)
    return (
      /** @type {any} */
      {
        peg$result: Si,
        peg$currPos: L,
        peg$FAILED: n,
        peg$maxFailExpected: Ci,
        peg$maxFailPos: ur
      }
    );
  if (Si !== n && L === t.length)
    return Si;
  throw Si !== n && L < t.length && Qe(Oh()), El(
    Ci,
    ur < t.length ? t.charAt(ur) : null,
    ur < t.length ? Ui(ur, ur + 1) : Ui(ur, ur)
  );
}
const J9 = [
  "start"
], Ek = 3e-4, eB = (t, e) => (n, r) => {
  const a = t.source_[r].options_?.ops, o = n.__steps_source;
  if (a)
    for (const l of a)
      switch (l.type_) {
        case "stretch": {
          const u = ["fast", "slow"], { type: h, amount: f } = l.arguments_;
          if (!u.includes(h))
            throw new Error(`mini: stretch: type must be one of ${u.join("|")} but got ${h}`);
          n = be(n)[h](e(f));
          break;
        }
        case "replicate": {
          const { amount: u } = l.arguments_;
          n = be(n), n = n._repeatCycles(u)._fast(u);
          break;
        }
        case "bjorklund": {
          l.arguments_.rotation ? n = n.euclidRot(e(l.arguments_.pulse), e(l.arguments_.step), e(l.arguments_.rotation)) : n = n.euclid(e(l.arguments_.pulse), e(l.arguments_.step));
          break;
        }
        case "degradeBy": {
          n = be(n)._degradeByWith(Vn.early(Ek * l.arguments_.seed), l.arguments_.amount ?? 0.5);
          break;
        }
        case "tail": {
          const u = e(l.arguments_.element);
          n = n.fmap((h) => (f) => Array.isArray(h) ? [...h, f] : [h, f]).appLeft(u);
          break;
        }
        case "range": {
          const u = e(l.arguments_.element);
          n = be(n);
          const h = (m, b, v = 1) => Array.from(
            { length: Math.abs(b - m) / v + 1 },
            (C, S) => m < b ? m + S * v : m - S * v
          );
          n = ((m, b) => m.squeezeBind((v) => b.bind((C) => Bn(...h(v, C)))))(n, u);
          break;
        }
        default:
          console.warn(`operator "${l.type_}" not implemented`);
      }
  return n.__steps_source = n.__steps_source || o, n;
};
function ja(t, e, n, r = 0) {
  n?.(t);
  const s = (i) => ja(i, e, n, r);
  switch (t.type_) {
    case "pattern": {
      const i = t.source_.map((u) => s(u)).map(eB(t, s)), a = t.arguments_.alignment, o = i.filter((u) => u.__steps_source);
      let l;
      switch (a) {
        case "stack": {
          l = Wt(...i), o.length && (l._steps = Hr(...o.map((u) => de(u._steps))));
          break;
        }
        case "polymeter_slowcat": {
          l = Wt(...i.map((u) => u._slow(u.__weight))), o.length && (l._steps = Hr(...o.map((u) => de(u._steps))));
          break;
        }
        case "polymeter": {
          const u = t.arguments_.stepsPerCycle ? s(t.arguments_.stepsPerCycle).fmap((f) => de(f)) : dn(de(i.length > 0 ? i[0].__weight : 1)), h = i.map((f) => f.fast(u.fmap((m) => m.div(f.__weight))));
          l = Wt(...h);
          break;
        }
        case "rand": {
          l = ju(Vn.early(Ek * t.arguments_.seed).segment(1), i), o.length && (l._steps = Hr(...o.map((u) => de(u._steps))));
          break;
        }
        case "feet": {
          l = Bn(...i);
          break;
        }
        default: {
          if (t.source_.some((h) => !!h.options_?.weight)) {
            const h = t.source_.reduce(
              (f, m) => f.add(m.options_?.weight || de(1)),
              de(0)
            );
            l = hd(
              ...t.source_.map((f, m) => [f.options_?.weight || de(1), i[m]])
            ), l.__weight = h, l._steps = h, o.length && (l._steps = l._steps.mul(Hr(...o.map((f) => de(f._steps)))));
          } else
            l = Jr(...i), l._steps = i.length;
          t.arguments_._steps && (l.__steps_source = !0);
        }
      }
      return o.length && (l.__steps_source = !0), l;
    }
    case "element":
      return s(t.source_);
    case "atom": {
      if (t.source_ === "~" || t.source_ === "-")
        return Pt;
      if (!t.location_)
        return console.warn("no location for", t), t.source_;
      const i = isNaN(Number(t.source_)) ? t.source_ : Number(t.source_);
      if (r === -1)
        return dn(i);
      const [a, o] = Ed(e, t, r);
      return dn(i).withLoc(a, o);
    }
    case "stretch":
      return s(t.source_).slow(s(t.arguments_.amount));
    default:
      return console.warn(`node type "${t.type_}" not implemented -> returning silence`), Pt;
  }
}
const Ed = (t, e, n = 0) => {
  const { start: r, end: s } = e.location_, i = t?.split("").slice(r.offset, s.offset).join(""), [a = 0, o = 0] = i ? i.split(e.source_).map((l) => l.split("").filter((u) => u === " ").length) : [];
  return [r.offset + a + n, s.offset - o + n];
}, tl = (t, e = 0, n = t) => {
  try {
    return Dk(t);
  } catch (r) {
    const s = [r.location.start.offset + e, r.location.end.offset + e], i = n.slice(0, s[0]).split(`
`).length;
    throw new Error(`[mini] parse error at line ${i}: ${r.message}`);
  }
}, Fk = (t, e, n) => {
  const r = tl(t, e, n);
  let s = [];
  return ja(
    r,
    t,
    (i) => {
      i.type_ === "atom" && s.push(i);
    },
    -1
  ), s;
}, Fd = (t, e = 0, n) => Fk(t, e, n).map((r) => Ed(t, r, e)), Bd = (...t) => {
  const e = t.map((n) => {
    const r = `"${n}"`, s = tl(r);
    return ja(s, r);
  });
  return Jr(...e);
}, tB = (t, e) => {
  const n = `"${t}"`, r = tl(n);
  return ja(r, n, null, e);
}, nB = (t) => {
  const e = tl(t);
  return ja(e, t);
};
function rB(t) {
  return typeof t == "string" ? Bd(t) : be(t);
}
function sB() {
  Kb(Bd);
}
const iB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  StartRules: J9,
  SyntaxError: Zi,
  getLeafLocation: Ed,
  getLeafLocations: Fd,
  getLeaves: Fk,
  h: nB,
  m: tB,
  mini: Bd,
  mini2ast: tl,
  miniAllStrings: sB,
  minify: rB,
  parse: Dk,
  patternifyAST: ja
}, Symbol.toStringTag, { value: "Module" }));
var aB = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239], Bk = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], oB = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࢗ-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･", Mk = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲊᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟍꟐꟑꟓꟕ-Ƛꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ", Sh = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
}, Ah = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this", lB = {
  5: Ah,
  "5module": Ah + " export import",
  6: Ah + " const class extends export import super"
}, cB = /^in(stanceof)?$/, uB = new RegExp("[" + Mk + "]"), hB = new RegExp("[" + Mk + oB + "]");
function Mp(t, e) {
  for (var n = 65536, r = 0; r < e.length; r += 2) {
    if (n += e[r], n > t)
      return !1;
    if (n += e[r + 1], n >= t)
      return !0;
  }
  return !1;
}
function Rs(t, e) {
  return t < 65 ? t === 36 : t < 91 ? !0 : t < 97 ? t === 95 : t < 123 ? !0 : t <= 65535 ? t >= 170 && uB.test(String.fromCharCode(t)) : e === !1 ? !1 : Mp(t, Bk);
}
function wa(t, e) {
  return t < 48 ? t === 36 : t < 58 ? !0 : t < 65 ? !1 : t < 91 ? !0 : t < 97 ? t === 95 : t < 123 ? !0 : t <= 65535 ? t >= 170 && hB.test(String.fromCharCode(t)) : e === !1 ? !1 : Mp(t, Bk) || Mp(t, aB);
}
var pt = function(e, n) {
  n === void 0 && (n = {}), this.label = e, this.keyword = n.keyword, this.beforeExpr = !!n.beforeExpr, this.startsExpr = !!n.startsExpr, this.isLoop = !!n.isLoop, this.isAssign = !!n.isAssign, this.prefix = !!n.prefix, this.postfix = !!n.postfix, this.binop = n.binop || null, this.updateContext = null;
};
function Cr(t, e) {
  return new pt(t, { beforeExpr: !0, binop: e });
}
var Sr = { beforeExpr: !0 }, qn = { startsExpr: !0 }, Md = {};
function ct(t, e) {
  return e === void 0 && (e = {}), e.keyword = t, Md[t] = new pt(t, e);
}
var F = {
  num: new pt("num", qn),
  regexp: new pt("regexp", qn),
  string: new pt("string", qn),
  name: new pt("name", qn),
  privateId: new pt("privateId", qn),
  eof: new pt("eof"),
  // Punctuation token types.
  bracketL: new pt("[", { beforeExpr: !0, startsExpr: !0 }),
  bracketR: new pt("]"),
  braceL: new pt("{", { beforeExpr: !0, startsExpr: !0 }),
  braceR: new pt("}"),
  parenL: new pt("(", { beforeExpr: !0, startsExpr: !0 }),
  parenR: new pt(")"),
  comma: new pt(",", Sr),
  semi: new pt(";", Sr),
  colon: new pt(":", Sr),
  dot: new pt("."),
  question: new pt("?", Sr),
  questionDot: new pt("?."),
  arrow: new pt("=>", Sr),
  template: new pt("template"),
  invalidTemplate: new pt("invalidTemplate"),
  ellipsis: new pt("...", Sr),
  backQuote: new pt("`", qn),
  dollarBraceL: new pt("${", { beforeExpr: !0, startsExpr: !0 }),
  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.
  eq: new pt("=", { beforeExpr: !0, isAssign: !0 }),
  assign: new pt("_=", { beforeExpr: !0, isAssign: !0 }),
  incDec: new pt("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
  prefix: new pt("!/~", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
  logicalOR: Cr("||", 1),
  logicalAND: Cr("&&", 2),
  bitwiseOR: Cr("|", 3),
  bitwiseXOR: Cr("^", 4),
  bitwiseAND: Cr("&", 5),
  equality: Cr("==/!=/===/!==", 6),
  relational: Cr("</>/<=/>=", 7),
  bitShift: Cr("<</>>/>>>", 8),
  plusMin: new pt("+/-", { beforeExpr: !0, binop: 9, prefix: !0, startsExpr: !0 }),
  modulo: Cr("%", 10),
  star: Cr("*", 10),
  slash: Cr("/", 10),
  starstar: new pt("**", { beforeExpr: !0 }),
  coalesce: Cr("??", 1),
  // Keyword token types.
  _break: ct("break"),
  _case: ct("case", Sr),
  _catch: ct("catch"),
  _continue: ct("continue"),
  _debugger: ct("debugger"),
  _default: ct("default", Sr),
  _do: ct("do", { isLoop: !0, beforeExpr: !0 }),
  _else: ct("else", Sr),
  _finally: ct("finally"),
  _for: ct("for", { isLoop: !0 }),
  _function: ct("function", qn),
  _if: ct("if"),
  _return: ct("return", Sr),
  _switch: ct("switch"),
  _throw: ct("throw", Sr),
  _try: ct("try"),
  _var: ct("var"),
  _const: ct("const"),
  _while: ct("while", { isLoop: !0 }),
  _with: ct("with"),
  _new: ct("new", { beforeExpr: !0, startsExpr: !0 }),
  _this: ct("this", qn),
  _super: ct("super", qn),
  _class: ct("class", qn),
  _extends: ct("extends", Sr),
  _export: ct("export"),
  _import: ct("import", qn),
  _null: ct("null", qn),
  _true: ct("true", qn),
  _false: ct("false", qn),
  _in: ct("in", { beforeExpr: !0, binop: 7 }),
  _instanceof: ct("instanceof", { beforeExpr: !0, binop: 7 }),
  _typeof: ct("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
  _void: ct("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
  _delete: ct("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 })
}, Rr = /\r\n?|\n|\u2028|\u2029/, pB = new RegExp(Rr.source, "g");
function _a(t) {
  return t === 10 || t === 13 || t === 8232 || t === 8233;
}
function Tk(t, e, n) {
  n === void 0 && (n = t.length);
  for (var r = e; r < n; r++) {
    var s = t.charCodeAt(r);
    if (_a(s))
      return r < n - 1 && s === 13 && t.charCodeAt(r + 1) === 10 ? r + 2 : r + 1;
  }
  return -1;
}
var Qk = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/, Pr = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, jk = Object.prototype, fB = jk.hasOwnProperty, dB = jk.toString, Ra = Object.hasOwn || function(t, e) {
  return fB.call(t, e);
}, ig = Array.isArray || function(t) {
  return dB.call(t) === "[object Array]";
}, ag = /* @__PURE__ */ Object.create(null);
function ti(t) {
  return ag[t] || (ag[t] = new RegExp("^(?:" + t.replace(/ /g, "|") + ")$"));
}
function Zs(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));
}
var mB = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, Fo = function(e, n) {
  this.line = e, this.column = n;
};
Fo.prototype.offset = function(e) {
  return new Fo(this.line, this.column + e);
};
var _u = function(e, n, r) {
  this.start = n, this.end = r, e.sourceFile !== null && (this.source = e.sourceFile);
};
function _k(t, e) {
  for (var n = 1, r = 0; ; ) {
    var s = Tk(t, r, e);
    if (s < 0)
      return new Fo(n, e - r);
    ++n, r = s;
  }
}
var Tp = {
  // `ecmaVersion` indicates the ECMAScript version to parse. Must be
  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
  // (the latest version the library supports). This influences
  // support for strict mode, the set of reserved words, and support
  // for new syntax features.
  ecmaVersion: null,
  // `sourceType` indicates the mode the code should be parsed in.
  // Can be either `"script"` or `"module"`. This influences global
  // strict mode and parsing of `import` and `export` declarations.
  sourceType: "script",
  // `onInsertedSemicolon` can be a callback that will be called when
  // a semicolon is automatically inserted. It will be passed the
  // position of the inserted semicolon as an offset, and if
  // `locations` is enabled, it is given the location as a `{line,
  // column}` object as second argument.
  onInsertedSemicolon: null,
  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
  // trailing commas.
  onTrailingComma: null,
  // By default, reserved words are only enforced if ecmaVersion >= 5.
  // Set `allowReserved` to a boolean value to explicitly turn this on
  // an off. When this option has the value "never", reserved words
  // and keywords can also not be used as property names.
  allowReserved: null,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: !1,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program, and an import.meta expression
  // in a script isn't considered an error.
  allowImportExportEverywhere: !1,
  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
  // When enabled, await identifiers are allowed to appear at the top-level scope,
  // but they are still not allowed in non-async functions.
  allowAwaitOutsideFunction: null,
  // When enabled, super identifiers are not constrained to
  // appearing in methods and do not raise an error when they appear elsewhere.
  allowSuperOutsideMethod: null,
  // When enabled, hashbang directive in the beginning of file is
  // allowed and treated as a line comment. Enabled by default when
  // `ecmaVersion` >= 2023.
  allowHashBang: !1,
  // By default, the parser will verify that private properties are
  // only used in places where they are valid and have been declared.
  // Set this to false to turn such checks off.
  checkPrivateFields: !0,
  // When `locations` is on, `loc` properties holding objects with
  // `start` and `end` properties in `{line, column}` form (with
  // line being 1-based and column 0-based) will be attached to the
  // nodes.
  locations: !1,
  // A function can be passed as `onToken` option, which will
  // cause Acorn to call that function with object in the same
  // format as tokens returned from `tokenizer().getToken()`. Note
  // that you are not allowed to call the parser from the
  // callback—that will corrupt its internal state.
  onToken: null,
  // A function can be passed as `onComment` option, which will
  // cause Acorn to call that function with `(block, text, start,
  // end)` parameters whenever a comment is skipped. `block` is a
  // boolean indicating whether this is a block (`/* */`) comment,
  // `text` is the content of the comment, and `start` and `end` are
  // character offsets that denote the start and end of the comment.
  // When the `locations` option is on, two more parameters are
  // passed, the full `{line, column}` locations of the start and
  // end of the comments. Note that you are not allowed to call the
  // parser from the callback—that will corrupt its internal state.
  // When this option has an array as value, objects representing the
  // comments are pushed to it.
  onComment: null,
  // Nodes have their start and end characters offsets recorded in
  // `start` and `end` properties (directly on the node, rather than
  // the `loc` object, which holds line/column data. To also add a
  // [semi-standardized][range] `range` property holding a `[start,
  // end]` array with the same numbers, set the `ranges` option to
  // `true`.
  //
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
  ranges: !1,
  // It is possible to parse multiple files into a single AST by
  // passing the tree produced by parsing the first file as
  // `program` option in subsequent parses. This will add the
  // toplevel forms of the parsed file to the `Program` (top) node
  // of an existing parse tree.
  program: null,
  // When `locations` is on, you can pass this to record the source
  // file in every node's `loc` object.
  sourceFile: null,
  // This value, if given, is stored in every node, whether
  // `locations` is on or off.
  directSourceFile: null,
  // When enabled, parenthesized expressions are represented by
  // (non-standard) ParenthesizedExpression nodes
  preserveParens: !1
}, og = !1;
function gB(t) {
  var e = {};
  for (var n in Tp)
    e[n] = t && Ra(t, n) ? t[n] : Tp[n];
  if (e.ecmaVersion === "latest" ? e.ecmaVersion = 1e8 : e.ecmaVersion == null ? (!og && typeof console == "object" && console.warn && (og = !0, console.warn(`Since Acorn 8.0.0, options.ecmaVersion is required.
Defaulting to 2020, but this will stop working in the future.`)), e.ecmaVersion = 11) : e.ecmaVersion >= 2015 && (e.ecmaVersion -= 2009), e.allowReserved == null && (e.allowReserved = e.ecmaVersion < 5), (!t || t.allowHashBang == null) && (e.allowHashBang = e.ecmaVersion >= 14), ig(e.onToken)) {
    var r = e.onToken;
    e.onToken = function(s) {
      return r.push(s);
    };
  }
  return ig(e.onComment) && (e.onComment = bB(e, e.onComment)), e;
}
function bB(t, e) {
  return function(n, r, s, i, a, o) {
    var l = {
      type: n ? "Block" : "Line",
      value: r,
      start: s,
      end: i
    };
    t.locations && (l.loc = new _u(this, a, o)), t.ranges && (l.range = [s, i]), e.push(l);
  };
}
var Bo = 1, Za = 2, Td = 4, Rk = 8, Zk = 16, $k = 32, Qd = 64, Lk = 128, nl = 256, jd = Bo | Za | nl;
function _d(t, e) {
  return Za | (t ? Td : 0) | (e ? Rk : 0);
}
var Pc = 0, Rd = 1, Ns = 2, Ik = 3, Nk = 4, Vk = 5, mn = function(e, n, r) {
  this.options = e = gB(e), this.sourceFile = e.sourceFile, this.keywords = ti(lB[e.ecmaVersion >= 6 ? 6 : e.sourceType === "module" ? "5module" : 5]);
  var s = "";
  e.allowReserved !== !0 && (s = Sh[e.ecmaVersion >= 6 ? 6 : e.ecmaVersion === 5 ? 5 : 3], e.sourceType === "module" && (s += " await")), this.reservedWords = ti(s);
  var i = (s ? s + " " : "") + Sh.strict;
  this.reservedWordsStrict = ti(i), this.reservedWordsStrictBind = ti(i + " " + Sh.strictBind), this.input = String(n), this.containsEsc = !1, r ? (this.pos = r, this.lineStart = this.input.lastIndexOf(`
`, r - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(Rr).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = F.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = e.sourceType === "module", this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* @__PURE__ */ Object.create(null), this.pos === 0 && e.allowHashBang && this.input.slice(0, 2) === "#!" && this.skipLineComment(2), this.scopeStack = [], this.enterScope(Bo), this.regexpState = null, this.privateNameStack = [];
}, ks = { inFunction: { configurable: !0 }, inGenerator: { configurable: !0 }, inAsync: { configurable: !0 }, canAwait: { configurable: !0 }, allowSuper: { configurable: !0 }, allowDirectSuper: { configurable: !0 }, treatFunctionsAsVar: { configurable: !0 }, allowNewDotTarget: { configurable: !0 }, inClassStaticBlock: { configurable: !0 } };
mn.prototype.parse = function() {
  var e = this.options.program || this.startNode();
  return this.nextToken(), this.parseTopLevel(e);
};
ks.inFunction.get = function() {
  return (this.currentVarScope().flags & Za) > 0;
};
ks.inGenerator.get = function() {
  return (this.currentVarScope().flags & Rk) > 0 && !this.currentVarScope().inClassFieldInit;
};
ks.inAsync.get = function() {
  return (this.currentVarScope().flags & Td) > 0 && !this.currentVarScope().inClassFieldInit;
};
ks.canAwait.get = function() {
  for (var t = this.scopeStack.length - 1; t >= 0; t--) {
    var e = this.scopeStack[t];
    if (e.inClassFieldInit || e.flags & nl)
      return !1;
    if (e.flags & Za)
      return (e.flags & Td) > 0;
  }
  return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
};
ks.allowSuper.get = function() {
  var t = this.currentThisScope(), e = t.flags, n = t.inClassFieldInit;
  return (e & Qd) > 0 || n || this.options.allowSuperOutsideMethod;
};
ks.allowDirectSuper.get = function() {
  return (this.currentThisScope().flags & Lk) > 0;
};
ks.treatFunctionsAsVar.get = function() {
  return this.treatFunctionsAsVarInScope(this.currentScope());
};
ks.allowNewDotTarget.get = function() {
  var t = this.currentThisScope(), e = t.flags, n = t.inClassFieldInit;
  return (e & (Za | nl)) > 0 || n;
};
ks.inClassStaticBlock.get = function() {
  return (this.currentVarScope().flags & nl) > 0;
};
mn.extend = function() {
  for (var e = [], n = arguments.length; n--; ) e[n] = arguments[n];
  for (var r = this, s = 0; s < e.length; s++)
    r = e[s](r);
  return r;
};
mn.parse = function(e, n) {
  return new this(n, e).parse();
};
mn.parseExpressionAt = function(e, n, r) {
  var s = new this(r, e, n);
  return s.nextToken(), s.parseExpression();
};
mn.tokenizer = function(e, n) {
  return new this(n, e);
};
Object.defineProperties(mn.prototype, ks);
var Xn = mn.prototype, yB = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
Xn.strictDirective = function(t) {
  if (this.options.ecmaVersion < 5)
    return !1;
  for (; ; ) {
    Pr.lastIndex = t, t += Pr.exec(this.input)[0].length;
    var e = yB.exec(this.input.slice(t));
    if (!e)
      return !1;
    if ((e[1] || e[2]) === "use strict") {
      Pr.lastIndex = t + e[0].length;
      var n = Pr.exec(this.input), r = n.index + n[0].length, s = this.input.charAt(r);
      return s === ";" || s === "}" || Rr.test(n[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(s) || s === "!" && this.input.charAt(r + 1) === "=");
    }
    t += e[0].length, Pr.lastIndex = t, t += Pr.exec(this.input)[0].length, this.input[t] === ";" && t++;
  }
};
Xn.eat = function(t) {
  return this.type === t ? (this.next(), !0) : !1;
};
Xn.isContextual = function(t) {
  return this.type === F.name && this.value === t && !this.containsEsc;
};
Xn.eatContextual = function(t) {
  return this.isContextual(t) ? (this.next(), !0) : !1;
};
Xn.expectContextual = function(t) {
  this.eatContextual(t) || this.unexpected();
};
Xn.canInsertSemicolon = function() {
  return this.type === F.eof || this.type === F.braceR || Rr.test(this.input.slice(this.lastTokEnd, this.start));
};
Xn.insertSemicolon = function() {
  if (this.canInsertSemicolon())
    return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;
};
Xn.semicolon = function() {
  !this.eat(F.semi) && !this.insertSemicolon() && this.unexpected();
};
Xn.afterTrailingComma = function(t, e) {
  if (this.type === t)
    return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), e || this.next(), !0;
};
Xn.expect = function(t) {
  this.eat(t) || this.unexpected();
};
Xn.unexpected = function(t) {
  this.raise(t ?? this.start, "Unexpected token");
};
var Ru = function() {
  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
};
Xn.checkPatternErrors = function(t, e) {
  if (t) {
    t.trailingComma > -1 && this.raiseRecoverable(t.trailingComma, "Comma is not permitted after the rest element");
    var n = e ? t.parenthesizedAssign : t.parenthesizedBind;
    n > -1 && this.raiseRecoverable(n, e ? "Assigning to rvalue" : "Parenthesized pattern");
  }
};
Xn.checkExpressionErrors = function(t, e) {
  if (!t)
    return !1;
  var n = t.shorthandAssign, r = t.doubleProto;
  if (!e)
    return n >= 0 || r >= 0;
  n >= 0 && this.raise(n, "Shorthand property assignments are valid only in destructuring patterns"), r >= 0 && this.raiseRecoverable(r, "Redefinition of __proto__ property");
};
Xn.checkYieldAwaitInDefaultParams = function() {
  this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
};
Xn.isSimpleAssignTarget = function(t) {
  return t.type === "ParenthesizedExpression" ? this.isSimpleAssignTarget(t.expression) : t.type === "Identifier" || t.type === "MemberExpression";
};
var Me = mn.prototype;
Me.parseTopLevel = function(t) {
  var e = /* @__PURE__ */ Object.create(null);
  for (t.body || (t.body = []); this.type !== F.eof; ) {
    var n = this.parseStatement(null, !0, e);
    t.body.push(n);
  }
  if (this.inModule)
    for (var r = 0, s = Object.keys(this.undefinedExports); r < s.length; r += 1) {
      var i = s[r];
      this.raiseRecoverable(this.undefinedExports[i].start, "Export '" + i + "' is not defined");
    }
  return this.adaptDirectivePrologue(t.body), this.next(), t.sourceType = this.options.sourceType, this.finishNode(t, "Program");
};
var Zd = { kind: "loop" }, OB = { kind: "switch" };
Me.isLet = function(t) {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let"))
    return !1;
  Pr.lastIndex = this.pos;
  var e = Pr.exec(this.input), n = this.pos + e[0].length, r = this.input.charCodeAt(n);
  if (r === 91 || r === 92)
    return !0;
  if (t)
    return !1;
  if (r === 123 || r > 55295 && r < 56320)
    return !0;
  if (Rs(r, !0)) {
    for (var s = n + 1; wa(r = this.input.charCodeAt(s), !0); )
      ++s;
    if (r === 92 || r > 55295 && r < 56320)
      return !0;
    var i = this.input.slice(n, s);
    if (!cB.test(i))
      return !0;
  }
  return !1;
};
Me.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
    return !1;
  Pr.lastIndex = this.pos;
  var t = Pr.exec(this.input), e = this.pos + t[0].length, n;
  return !Rr.test(this.input.slice(this.pos, e)) && this.input.slice(e, e + 8) === "function" && (e + 8 === this.input.length || !(wa(n = this.input.charCodeAt(e + 8)) || n > 55295 && n < 56320));
};
Me.parseStatement = function(t, e, n) {
  var r = this.type, s = this.startNode(), i;
  switch (this.isLet(t) && (r = F._var, i = "let"), r) {
    case F._break:
    case F._continue:
      return this.parseBreakContinueStatement(s, r.keyword);
    case F._debugger:
      return this.parseDebuggerStatement(s);
    case F._do:
      return this.parseDoStatement(s);
    case F._for:
      return this.parseForStatement(s);
    case F._function:
      return t && (this.strict || t !== "if" && t !== "label") && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(s, !1, !t);
    case F._class:
      return t && this.unexpected(), this.parseClass(s, !0);
    case F._if:
      return this.parseIfStatement(s);
    case F._return:
      return this.parseReturnStatement(s);
    case F._switch:
      return this.parseSwitchStatement(s);
    case F._throw:
      return this.parseThrowStatement(s);
    case F._try:
      return this.parseTryStatement(s);
    case F._const:
    case F._var:
      return i = i || this.value, t && i !== "var" && this.unexpected(), this.parseVarStatement(s, i);
    case F._while:
      return this.parseWhileStatement(s);
    case F._with:
      return this.parseWithStatement(s);
    case F.braceL:
      return this.parseBlock(!0, s);
    case F.semi:
      return this.parseEmptyStatement(s);
    case F._export:
    case F._import:
      if (this.options.ecmaVersion > 10 && r === F._import) {
        Pr.lastIndex = this.pos;
        var a = Pr.exec(this.input), o = this.pos + a[0].length, l = this.input.charCodeAt(o);
        if (l === 40 || l === 46)
          return this.parseExpressionStatement(s, this.parseExpression());
      }
      return this.options.allowImportExportEverywhere || (e || this.raise(this.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), r === F._import ? this.parseImport(s) : this.parseExport(s, n);
    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
    default:
      if (this.isAsyncFunction())
        return t && this.unexpected(), this.next(), this.parseFunctionStatement(s, !0, !t);
      var u = this.value, h = this.parseExpression();
      return r === F.name && h.type === "Identifier" && this.eat(F.colon) ? this.parseLabeledStatement(s, u, h, t) : this.parseExpressionStatement(s, h);
  }
};
Me.parseBreakContinueStatement = function(t, e) {
  var n = e === "break";
  this.next(), this.eat(F.semi) || this.insertSemicolon() ? t.label = null : this.type !== F.name ? this.unexpected() : (t.label = this.parseIdent(), this.semicolon());
  for (var r = 0; r < this.labels.length; ++r) {
    var s = this.labels[r];
    if ((t.label == null || s.name === t.label.name) && (s.kind != null && (n || s.kind === "loop") || t.label && n))
      break;
  }
  return r === this.labels.length && this.raise(t.start, "Unsyntactic " + e), this.finishNode(t, n ? "BreakStatement" : "ContinueStatement");
};
Me.parseDebuggerStatement = function(t) {
  return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");
};
Me.parseDoStatement = function(t) {
  return this.next(), this.labels.push(Zd), t.body = this.parseStatement("do"), this.labels.pop(), this.expect(F._while), t.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(F.semi) : this.semicolon(), this.finishNode(t, "DoWhileStatement");
};
Me.parseForStatement = function(t) {
  this.next();
  var e = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
  if (this.labels.push(Zd), this.enterScope(0), this.expect(F.parenL), this.type === F.semi)
    return e > -1 && this.unexpected(e), this.parseFor(t, null);
  var n = this.isLet();
  if (this.type === F._var || this.type === F._const || n) {
    var r = this.startNode(), s = n ? "let" : this.value;
    return this.next(), this.parseVar(r, !0, s), this.finishNode(r, "VariableDeclaration"), (this.type === F._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && r.declarations.length === 1 ? (this.options.ecmaVersion >= 9 && (this.type === F._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.parseForIn(t, r)) : (e > -1 && this.unexpected(e), this.parseFor(t, r));
  }
  var i = this.isContextual("let"), a = !1, o = this.containsEsc, l = new Ru(), u = this.start, h = e > -1 ? this.parseExprSubscripts(l, "await") : this.parseExpression(!0, l);
  return this.type === F._in || (a = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (e > -1 ? (this.type === F._in && this.unexpected(e), t.await = !0) : a && this.options.ecmaVersion >= 8 && (h.start === u && !o && h.type === "Identifier" && h.name === "async" ? this.unexpected() : this.options.ecmaVersion >= 9 && (t.await = !1)), i && a && this.raise(h.start, "The left-hand side of a for-of loop may not start with 'let'."), this.toAssignable(h, !1, l), this.checkLValPattern(h), this.parseForIn(t, h)) : (this.checkExpressionErrors(l, !0), e > -1 && this.unexpected(e), this.parseFor(t, h));
};
Me.parseFunctionStatement = function(t, e, n) {
  return this.next(), this.parseFunction(t, vo | (n ? 0 : Qp), !1, e);
};
Me.parseIfStatement = function(t) {
  return this.next(), t.test = this.parseParenExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(F._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement");
};
Me.parseReturnStatement = function(t) {
  return !this.inFunction && !this.options.allowReturnOutsideFunction && this.raise(this.start, "'return' outside of function"), this.next(), this.eat(F.semi) || this.insertSemicolon() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");
};
Me.parseSwitchStatement = function(t) {
  this.next(), t.discriminant = this.parseParenExpression(), t.cases = [], this.expect(F.braceL), this.labels.push(OB), this.enterScope(0);
  for (var e, n = !1; this.type !== F.braceR; )
    if (this.type === F._case || this.type === F._default) {
      var r = this.type === F._case;
      e && this.finishNode(e, "SwitchCase"), t.cases.push(e = this.startNode()), e.consequent = [], this.next(), r ? e.test = this.parseExpression() : (n && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), n = !0, e.test = null), this.expect(F.colon);
    } else
      e || this.unexpected(), e.consequent.push(this.parseStatement(null));
  return this.exitScope(), e && this.finishNode(e, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(t, "SwitchStatement");
};
Me.parseThrowStatement = function(t) {
  return this.next(), Rr.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");
};
var vB = [];
Me.parseCatchClauseParam = function() {
  var t = this.parseBindingAtom(), e = t.type === "Identifier";
  return this.enterScope(e ? $k : 0), this.checkLValPattern(t, e ? Nk : Ns), this.expect(F.parenR), t;
};
Me.parseTryStatement = function(t) {
  if (this.next(), t.block = this.parseBlock(), t.handler = null, this.type === F._catch) {
    var e = this.startNode();
    this.next(), this.eat(F.parenL) ? e.param = this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && this.unexpected(), e.param = null, this.enterScope(0)), e.body = this.parseBlock(!1), this.exitScope(), t.handler = this.finishNode(e, "CatchClause");
  }
  return t.finalizer = this.eat(F._finally) ? this.parseBlock() : null, !t.handler && !t.finalizer && this.raise(t.start, "Missing catch or finally clause"), this.finishNode(t, "TryStatement");
};
Me.parseVarStatement = function(t, e, n) {
  return this.next(), this.parseVar(t, !1, e, n), this.semicolon(), this.finishNode(t, "VariableDeclaration");
};
Me.parseWhileStatement = function(t) {
  return this.next(), t.test = this.parseParenExpression(), this.labels.push(Zd), t.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(t, "WhileStatement");
};
Me.parseWithStatement = function(t) {
  return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), t.object = this.parseParenExpression(), t.body = this.parseStatement("with"), this.finishNode(t, "WithStatement");
};
Me.parseEmptyStatement = function(t) {
  return this.next(), this.finishNode(t, "EmptyStatement");
};
Me.parseLabeledStatement = function(t, e, n, r) {
  for (var s = 0, i = this.labels; s < i.length; s += 1) {
    var a = i[s];
    a.name === e && this.raise(n.start, "Label '" + e + "' is already declared");
  }
  for (var o = this.type.isLoop ? "loop" : this.type === F._switch ? "switch" : null, l = this.labels.length - 1; l >= 0; l--) {
    var u = this.labels[l];
    if (u.statementStart === t.start)
      u.statementStart = this.start, u.kind = o;
    else
      break;
  }
  return this.labels.push({ name: e, kind: o, statementStart: this.start }), t.body = this.parseStatement(r ? r.indexOf("label") === -1 ? r + "label" : r : "label"), this.labels.pop(), t.label = n, this.finishNode(t, "LabeledStatement");
};
Me.parseExpressionStatement = function(t, e) {
  return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");
};
Me.parseBlock = function(t, e, n) {
  for (t === void 0 && (t = !0), e === void 0 && (e = this.startNode()), e.body = [], this.expect(F.braceL), t && this.enterScope(0); this.type !== F.braceR; ) {
    var r = this.parseStatement(null);
    e.body.push(r);
  }
  return n && (this.strict = !1), this.next(), t && this.exitScope(), this.finishNode(e, "BlockStatement");
};
Me.parseFor = function(t, e) {
  return t.init = e, this.expect(F.semi), t.test = this.type === F.semi ? null : this.parseExpression(), this.expect(F.semi), t.update = this.type === F.parenR ? null : this.parseExpression(), this.expect(F.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, "ForStatement");
};
Me.parseForIn = function(t, e) {
  var n = this.type === F._in;
  return this.next(), e.type === "VariableDeclaration" && e.declarations[0].init != null && (!n || this.options.ecmaVersion < 8 || this.strict || e.kind !== "var" || e.declarations[0].id.type !== "Identifier") && this.raise(
    e.start,
    (n ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
  ), t.left = e, t.right = n ? this.parseExpression() : this.parseMaybeAssign(), this.expect(F.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, n ? "ForInStatement" : "ForOfStatement");
};
Me.parseVar = function(t, e, n, r) {
  for (t.declarations = [], t.kind = n; ; ) {
    var s = this.startNode();
    if (this.parseVarId(s, n), this.eat(F.eq) ? s.init = this.parseMaybeAssign(e) : !r && n === "const" && !(this.type === F._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) ? this.unexpected() : !r && s.id.type !== "Identifier" && !(e && (this.type === F._in || this.isContextual("of"))) ? this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : s.init = null, t.declarations.push(this.finishNode(s, "VariableDeclarator")), !this.eat(F.comma))
      break;
  }
  return t;
};
Me.parseVarId = function(t, e) {
  t.id = this.parseBindingAtom(), this.checkLValPattern(t.id, e === "var" ? Rd : Ns, !1);
};
var vo = 1, Qp = 2, Xk = 4;
Me.parseFunction = function(t, e, n, r, s) {
  this.initFunction(t), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !r) && (this.type === F.star && e & Qp && this.unexpected(), t.generator = this.eat(F.star)), this.options.ecmaVersion >= 8 && (t.async = !!r), e & vo && (t.id = e & Xk && this.type !== F.name ? null : this.parseIdent(), t.id && !(e & Qp) && this.checkLValSimple(t.id, this.strict || t.generator || t.async ? this.treatFunctionsAsVar ? Rd : Ns : Ik));
  var i = this.yieldPos, a = this.awaitPos, o = this.awaitIdentPos;
  return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(_d(t.async, t.generator)), e & vo || (t.id = this.type === F.name ? this.parseIdent() : null), this.parseFunctionParams(t), this.parseFunctionBody(t, n, !1, s), this.yieldPos = i, this.awaitPos = a, this.awaitIdentPos = o, this.finishNode(t, e & vo ? "FunctionDeclaration" : "FunctionExpression");
};
Me.parseFunctionParams = function(t) {
  this.expect(F.parenL), t.params = this.parseBindingList(F.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
};
Me.parseClass = function(t, e) {
  this.next();
  var n = this.strict;
  this.strict = !0, this.parseClassId(t, e), this.parseClassSuper(t);
  var r = this.enterClassBody(), s = this.startNode(), i = !1;
  for (s.body = [], this.expect(F.braceL); this.type !== F.braceR; ) {
    var a = this.parseClassElement(t.superClass !== null);
    a && (s.body.push(a), a.type === "MethodDefinition" && a.kind === "constructor" ? (i && this.raiseRecoverable(a.start, "Duplicate constructor in the same class"), i = !0) : a.key && a.key.type === "PrivateIdentifier" && xB(r, a) && this.raiseRecoverable(a.key.start, "Identifier '#" + a.key.name + "' has already been declared"));
  }
  return this.strict = n, this.next(), t.body = this.finishNode(s, "ClassBody"), this.exitClassBody(), this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");
};
Me.parseClassElement = function(t) {
  if (this.eat(F.semi))
    return null;
  var e = this.options.ecmaVersion, n = this.startNode(), r = "", s = !1, i = !1, a = "method", o = !1;
  if (this.eatContextual("static")) {
    if (e >= 13 && this.eat(F.braceL))
      return this.parseClassStaticBlock(n), n;
    this.isClassElementNameStart() || this.type === F.star ? o = !0 : r = "static";
  }
  if (n.static = o, !r && e >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === F.star) && !this.canInsertSemicolon() ? i = !0 : r = "async"), !r && (e >= 9 || !i) && this.eat(F.star) && (s = !0), !r && !i && !s) {
    var l = this.value;
    (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a = l : r = l);
  }
  if (r ? (n.computed = !1, n.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), n.key.name = r, this.finishNode(n.key, "Identifier")) : this.parseClassElementName(n), e < 13 || this.type === F.parenL || a !== "method" || s || i) {
    var u = !n.static && Dc(n, "constructor"), h = u && t;
    u && a !== "method" && this.raise(n.key.start, "Constructor can't have get/set modifier"), n.kind = u ? "constructor" : a, this.parseClassMethod(n, s, i, h);
  } else
    this.parseClassField(n);
  return n;
};
Me.isClassElementNameStart = function() {
  return this.type === F.name || this.type === F.privateId || this.type === F.num || this.type === F.string || this.type === F.bracketL || this.type.keyword;
};
Me.parseClassElementName = function(t) {
  this.type === F.privateId ? (this.value === "constructor" && this.raise(this.start, "Classes can't have an element named '#constructor'"), t.computed = !1, t.key = this.parsePrivateIdent()) : this.parsePropertyName(t);
};
Me.parseClassMethod = function(t, e, n, r) {
  var s = t.key;
  t.kind === "constructor" ? (e && this.raise(s.start, "Constructor can't be a generator"), n && this.raise(s.start, "Constructor can't be an async method")) : t.static && Dc(t, "prototype") && this.raise(s.start, "Classes may not have a static property named prototype");
  var i = t.value = this.parseMethod(e, n, r);
  return t.kind === "get" && i.params.length !== 0 && this.raiseRecoverable(i.start, "getter should have no params"), t.kind === "set" && i.params.length !== 1 && this.raiseRecoverable(i.start, "setter should have exactly one param"), t.kind === "set" && i.params[0].type === "RestElement" && this.raiseRecoverable(i.params[0].start, "Setter cannot use rest params"), this.finishNode(t, "MethodDefinition");
};
Me.parseClassField = function(t) {
  if (Dc(t, "constructor") ? this.raise(t.key.start, "Classes can't have a field named 'constructor'") : t.static && Dc(t, "prototype") && this.raise(t.key.start, "Classes can't have a static field named 'prototype'"), this.eat(F.eq)) {
    var e = this.currentThisScope(), n = e.inClassFieldInit;
    e.inClassFieldInit = !0, t.value = this.parseMaybeAssign(), e.inClassFieldInit = n;
  } else
    t.value = null;
  return this.semicolon(), this.finishNode(t, "PropertyDefinition");
};
Me.parseClassStaticBlock = function(t) {
  t.body = [];
  var e = this.labels;
  for (this.labels = [], this.enterScope(nl | Qd); this.type !== F.braceR; ) {
    var n = this.parseStatement(null);
    t.body.push(n);
  }
  return this.next(), this.exitScope(), this.labels = e, this.finishNode(t, "StaticBlock");
};
Me.parseClassId = function(t, e) {
  this.type === F.name ? (t.id = this.parseIdent(), e && this.checkLValSimple(t.id, Ns, !1)) : (e === !0 && this.unexpected(), t.id = null);
};
Me.parseClassSuper = function(t) {
  t.superClass = this.eat(F._extends) ? this.parseExprSubscripts(null, !1) : null;
};
Me.enterClassBody = function() {
  var t = { declared: /* @__PURE__ */ Object.create(null), used: [] };
  return this.privateNameStack.push(t), t.declared;
};
Me.exitClassBody = function() {
  var t = this.privateNameStack.pop(), e = t.declared, n = t.used;
  if (this.options.checkPrivateFields)
    for (var r = this.privateNameStack.length, s = r === 0 ? null : this.privateNameStack[r - 1], i = 0; i < n.length; ++i) {
      var a = n[i];
      Ra(e, a.name) || (s ? s.used.push(a) : this.raiseRecoverable(a.start, "Private field '#" + a.name + "' must be declared in an enclosing class"));
    }
};
function xB(t, e) {
  var n = e.key.name, r = t[n], s = "true";
  return e.type === "MethodDefinition" && (e.kind === "get" || e.kind === "set") && (s = (e.static ? "s" : "i") + e.kind), r === "iget" && s === "iset" || r === "iset" && s === "iget" || r === "sget" && s === "sset" || r === "sset" && s === "sget" ? (t[n] = "true", !1) : r ? !0 : (t[n] = s, !1);
}
function Dc(t, e) {
  var n = t.computed, r = t.key;
  return !n && (r.type === "Identifier" && r.name === e || r.type === "Literal" && r.value === e);
}
Me.parseExportAllDeclaration = function(t, e) {
  return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (t.exported = this.parseModuleExportName(), this.checkExport(e, t.exported, this.lastTokStart)) : t.exported = null), this.expectContextual("from"), this.type !== F.string && this.unexpected(), t.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(t, "ExportAllDeclaration");
};
Me.parseExport = function(t, e) {
  if (this.next(), this.eat(F.star))
    return this.parseExportAllDeclaration(t, e);
  if (this.eat(F._default))
    return this.checkExport(e, "default", this.lastTokStart), t.declaration = this.parseExportDefaultDeclaration(), this.finishNode(t, "ExportDefaultDeclaration");
  if (this.shouldParseExportStatement())
    t.declaration = this.parseExportDeclaration(t), t.declaration.type === "VariableDeclaration" ? this.checkVariableExport(e, t.declaration.declarations) : this.checkExport(e, t.declaration.id, t.declaration.id.start), t.specifiers = [], t.source = null;
  else {
    if (t.declaration = null, t.specifiers = this.parseExportSpecifiers(e), this.eatContextual("from"))
      this.type !== F.string && this.unexpected(), t.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause());
    else {
      for (var n = 0, r = t.specifiers; n < r.length; n += 1) {
        var s = r[n];
        this.checkUnreserved(s.local), this.checkLocalExport(s.local), s.local.type === "Literal" && this.raise(s.local.start, "A string literal cannot be used as an exported binding without `from`.");
      }
      t.source = null;
    }
    this.semicolon();
  }
  return this.finishNode(t, "ExportNamedDeclaration");
};
Me.parseExportDeclaration = function(t) {
  return this.parseStatement(null);
};
Me.parseExportDefaultDeclaration = function() {
  var t;
  if (this.type === F._function || (t = this.isAsyncFunction())) {
    var e = this.startNode();
    return this.next(), t && this.next(), this.parseFunction(e, vo | Xk, !1, t);
  } else if (this.type === F._class) {
    var n = this.startNode();
    return this.parseClass(n, "nullableID");
  } else {
    var r = this.parseMaybeAssign();
    return this.semicolon(), r;
  }
};
Me.checkExport = function(t, e, n) {
  t && (typeof e != "string" && (e = e.type === "Identifier" ? e.name : e.value), Ra(t, e) && this.raiseRecoverable(n, "Duplicate export '" + e + "'"), t[e] = !0);
};
Me.checkPatternExport = function(t, e) {
  var n = e.type;
  if (n === "Identifier")
    this.checkExport(t, e, e.start);
  else if (n === "ObjectPattern")
    for (var r = 0, s = e.properties; r < s.length; r += 1) {
      var i = s[r];
      this.checkPatternExport(t, i);
    }
  else if (n === "ArrayPattern")
    for (var a = 0, o = e.elements; a < o.length; a += 1) {
      var l = o[a];
      l && this.checkPatternExport(t, l);
    }
  else n === "Property" ? this.checkPatternExport(t, e.value) : n === "AssignmentPattern" ? this.checkPatternExport(t, e.left) : n === "RestElement" && this.checkPatternExport(t, e.argument);
};
Me.checkVariableExport = function(t, e) {
  if (t)
    for (var n = 0, r = e; n < r.length; n += 1) {
      var s = r[n];
      this.checkPatternExport(t, s.id);
    }
};
Me.shouldParseExportStatement = function() {
  return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
};
Me.parseExportSpecifier = function(t) {
  var e = this.startNode();
  return e.local = this.parseModuleExportName(), e.exported = this.eatContextual("as") ? this.parseModuleExportName() : e.local, this.checkExport(
    t,
    e.exported,
    e.exported.start
  ), this.finishNode(e, "ExportSpecifier");
};
Me.parseExportSpecifiers = function(t) {
  var e = [], n = !0;
  for (this.expect(F.braceL); !this.eat(F.braceR); ) {
    if (n)
      n = !1;
    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))
      break;
    e.push(this.parseExportSpecifier(t));
  }
  return e;
};
Me.parseImport = function(t) {
  return this.next(), this.type === F.string ? (t.specifiers = vB, t.source = this.parseExprAtom()) : (t.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), t.source = this.type === F.string ? this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(t, "ImportDeclaration");
};
Me.parseImportSpecifier = function() {
  var t = this.startNode();
  return t.imported = this.parseModuleExportName(), this.eatContextual("as") ? t.local = this.parseIdent() : (this.checkUnreserved(t.imported), t.local = t.imported), this.checkLValSimple(t.local, Ns), this.finishNode(t, "ImportSpecifier");
};
Me.parseImportDefaultSpecifier = function() {
  var t = this.startNode();
  return t.local = this.parseIdent(), this.checkLValSimple(t.local, Ns), this.finishNode(t, "ImportDefaultSpecifier");
};
Me.parseImportNamespaceSpecifier = function() {
  var t = this.startNode();
  return this.next(), this.expectContextual("as"), t.local = this.parseIdent(), this.checkLValSimple(t.local, Ns), this.finishNode(t, "ImportNamespaceSpecifier");
};
Me.parseImportSpecifiers = function() {
  var t = [], e = !0;
  if (this.type === F.name && (t.push(this.parseImportDefaultSpecifier()), !this.eat(F.comma)))
    return t;
  if (this.type === F.star)
    return t.push(this.parseImportNamespaceSpecifier()), t;
  for (this.expect(F.braceL); !this.eat(F.braceR); ) {
    if (e)
      e = !1;
    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))
      break;
    t.push(this.parseImportSpecifier());
  }
  return t;
};
Me.parseWithClause = function() {
  var t = [];
  if (!this.eat(F._with))
    return t;
  this.expect(F.braceL);
  for (var e = {}, n = !0; !this.eat(F.braceR); ) {
    if (n)
      n = !1;
    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))
      break;
    var r = this.parseImportAttribute(), s = r.key.type === "Identifier" ? r.key.name : r.key.value;
    Ra(e, s) && this.raiseRecoverable(r.key.start, "Duplicate attribute key '" + s + "'"), e[s] = !0, t.push(r);
  }
  return t;
};
Me.parseImportAttribute = function() {
  var t = this.startNode();
  return t.key = this.type === F.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never"), this.expect(F.colon), this.type !== F.string && this.unexpected(), t.value = this.parseExprAtom(), this.finishNode(t, "ImportAttribute");
};
Me.parseModuleExportName = function() {
  if (this.options.ecmaVersion >= 13 && this.type === F.string) {
    var t = this.parseLiteral(this.value);
    return mB.test(t.value) && this.raise(t.start, "An export name cannot include a lone surrogate."), t;
  }
  return this.parseIdent(!0);
};
Me.adaptDirectivePrologue = function(t) {
  for (var e = 0; e < t.length && this.isDirectiveCandidate(t[e]); ++e)
    t[e].directive = t[e].expression.raw.slice(1, -1);
};
Me.isDirectiveCandidate = function(t) {
  return this.options.ecmaVersion >= 5 && t.type === "ExpressionStatement" && t.expression.type === "Literal" && typeof t.expression.value == "string" && // Reject parenthesized strings.
  (this.input[t.start] === '"' || this.input[t.start] === "'");
};
var Zr = mn.prototype;
Zr.toAssignable = function(t, e, n) {
  if (this.options.ecmaVersion >= 6 && t)
    switch (t.type) {
      case "Identifier":
        this.inAsync && t.name === "await" && this.raise(t.start, "Cannot use 'await' as identifier inside an async function");
        break;
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
      case "RestElement":
        break;
      case "ObjectExpression":
        t.type = "ObjectPattern", n && this.checkPatternErrors(n, !0);
        for (var r = 0, s = t.properties; r < s.length; r += 1) {
          var i = s[r];
          this.toAssignable(i, e), i.type === "RestElement" && (i.argument.type === "ArrayPattern" || i.argument.type === "ObjectPattern") && this.raise(i.argument.start, "Unexpected token");
        }
        break;
      case "Property":
        t.kind !== "init" && this.raise(t.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(t.value, e);
        break;
      case "ArrayExpression":
        t.type = "ArrayPattern", n && this.checkPatternErrors(n, !0), this.toAssignableList(t.elements, e);
        break;
      case "SpreadElement":
        t.type = "RestElement", this.toAssignable(t.argument, e), t.argument.type === "AssignmentPattern" && this.raise(t.argument.start, "Rest elements cannot have a default value");
        break;
      case "AssignmentExpression":
        t.operator !== "=" && this.raise(t.left.end, "Only '=' operator can be used for specifying default value."), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left, e);
        break;
      case "ParenthesizedExpression":
        this.toAssignable(t.expression, e, n);
        break;
      case "ChainExpression":
        this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");
        break;
      case "MemberExpression":
        if (!e)
          break;
      default:
        this.raise(t.start, "Assigning to rvalue");
    }
  else n && this.checkPatternErrors(n, !0);
  return t;
};
Zr.toAssignableList = function(t, e) {
  for (var n = t.length, r = 0; r < n; r++) {
    var s = t[r];
    s && this.toAssignable(s, e);
  }
  if (n) {
    var i = t[n - 1];
    this.options.ecmaVersion === 6 && e && i && i.type === "RestElement" && i.argument.type !== "Identifier" && this.unexpected(i.argument.start);
  }
  return t;
};
Zr.parseSpread = function(t) {
  var e = this.startNode();
  return this.next(), e.argument = this.parseMaybeAssign(!1, t), this.finishNode(e, "SpreadElement");
};
Zr.parseRestBinding = function() {
  var t = this.startNode();
  return this.next(), this.options.ecmaVersion === 6 && this.type !== F.name && this.unexpected(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");
};
Zr.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6)
    switch (this.type) {
      case F.bracketL:
        var t = this.startNode();
        return this.next(), t.elements = this.parseBindingList(F.bracketR, !0, !0), this.finishNode(t, "ArrayPattern");
      case F.braceL:
        return this.parseObj(!0);
    }
  return this.parseIdent();
};
Zr.parseBindingList = function(t, e, n, r) {
  for (var s = [], i = !0; !this.eat(t); )
    if (i ? i = !1 : this.expect(F.comma), e && this.type === F.comma)
      s.push(null);
    else {
      if (n && this.afterTrailingComma(t))
        break;
      if (this.type === F.ellipsis) {
        var a = this.parseRestBinding();
        this.parseBindingListItem(a), s.push(a), this.type === F.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.expect(t);
        break;
      } else
        s.push(this.parseAssignableListItem(r));
    }
  return s;
};
Zr.parseAssignableListItem = function(t) {
  var e = this.parseMaybeDefault(this.start, this.startLoc);
  return this.parseBindingListItem(e), e;
};
Zr.parseBindingListItem = function(t) {
  return t;
};
Zr.parseMaybeDefault = function(t, e, n) {
  if (n = n || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(F.eq))
    return n;
  var r = this.startNodeAt(t, e);
  return r.left = n, r.right = this.parseMaybeAssign(), this.finishNode(r, "AssignmentPattern");
};
Zr.checkLValSimple = function(t, e, n) {
  e === void 0 && (e = Pc);
  var r = e !== Pc;
  switch (t.type) {
    case "Identifier":
      this.strict && this.reservedWordsStrictBind.test(t.name) && this.raiseRecoverable(t.start, (r ? "Binding " : "Assigning to ") + t.name + " in strict mode"), r && (e === Ns && t.name === "let" && this.raiseRecoverable(t.start, "let is disallowed as a lexically bound name"), n && (Ra(n, t.name) && this.raiseRecoverable(t.start, "Argument name clash"), n[t.name] = !0), e !== Vk && this.declareName(t.name, e, t.start));
      break;
    case "ChainExpression":
      this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");
      break;
    case "MemberExpression":
      r && this.raiseRecoverable(t.start, "Binding member expression");
      break;
    case "ParenthesizedExpression":
      return r && this.raiseRecoverable(t.start, "Binding parenthesized expression"), this.checkLValSimple(t.expression, e, n);
    default:
      this.raise(t.start, (r ? "Binding" : "Assigning to") + " rvalue");
  }
};
Zr.checkLValPattern = function(t, e, n) {
  switch (e === void 0 && (e = Pc), t.type) {
    case "ObjectPattern":
      for (var r = 0, s = t.properties; r < s.length; r += 1) {
        var i = s[r];
        this.checkLValInnerPattern(i, e, n);
      }
      break;
    case "ArrayPattern":
      for (var a = 0, o = t.elements; a < o.length; a += 1) {
        var l = o[a];
        l && this.checkLValInnerPattern(l, e, n);
      }
      break;
    default:
      this.checkLValSimple(t, e, n);
  }
};
Zr.checkLValInnerPattern = function(t, e, n) {
  switch (e === void 0 && (e = Pc), t.type) {
    case "Property":
      this.checkLValInnerPattern(t.value, e, n);
      break;
    case "AssignmentPattern":
      this.checkLValPattern(t.left, e, n);
      break;
    case "RestElement":
      this.checkLValPattern(t.argument, e, n);
      break;
    default:
      this.checkLValPattern(t, e, n);
  }
};
var Gr = function(e, n, r, s, i) {
  this.token = e, this.isExpr = !!n, this.preserveSpace = !!r, this.override = s, this.generator = !!i;
}, Nt = {
  b_stat: new Gr("{", !1),
  b_expr: new Gr("{", !0),
  b_tmpl: new Gr("${", !1),
  p_stat: new Gr("(", !1),
  p_expr: new Gr("(", !0),
  q_tmpl: new Gr("`", !0, !0, function(t) {
    return t.tryReadTemplateToken();
  }),
  f_stat: new Gr("function", !1),
  f_expr: new Gr("function", !0),
  f_expr_gen: new Gr("function", !0, !1, null, !0),
  f_gen: new Gr("function", !1, !1, null, !0)
}, $a = mn.prototype;
$a.initialContext = function() {
  return [Nt.b_stat];
};
$a.curContext = function() {
  return this.context[this.context.length - 1];
};
$a.braceIsBlock = function(t) {
  var e = this.curContext();
  return e === Nt.f_expr || e === Nt.f_stat ? !0 : t === F.colon && (e === Nt.b_stat || e === Nt.b_expr) ? !e.isExpr : t === F._return || t === F.name && this.exprAllowed ? Rr.test(this.input.slice(this.lastTokEnd, this.start)) : t === F._else || t === F.semi || t === F.eof || t === F.parenR || t === F.arrow ? !0 : t === F.braceL ? e === Nt.b_stat : t === F._var || t === F._const || t === F.name ? !1 : !this.exprAllowed;
};
$a.inGeneratorContext = function() {
  for (var t = this.context.length - 1; t >= 1; t--) {
    var e = this.context[t];
    if (e.token === "function")
      return e.generator;
  }
  return !1;
};
$a.updateContext = function(t) {
  var e, n = this.type;
  n.keyword && t === F.dot ? this.exprAllowed = !1 : (e = n.updateContext) ? e.call(this, t) : this.exprAllowed = n.beforeExpr;
};
$a.overrideContext = function(t) {
  this.curContext() !== t && (this.context[this.context.length - 1] = t);
};
F.parenR.updateContext = F.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = !0;
    return;
  }
  var t = this.context.pop();
  t === Nt.b_stat && this.curContext().token === "function" && (t = this.context.pop()), this.exprAllowed = !t.isExpr;
};
F.braceL.updateContext = function(t) {
  this.context.push(this.braceIsBlock(t) ? Nt.b_stat : Nt.b_expr), this.exprAllowed = !0;
};
F.dollarBraceL.updateContext = function() {
  this.context.push(Nt.b_tmpl), this.exprAllowed = !0;
};
F.parenL.updateContext = function(t) {
  var e = t === F._if || t === F._for || t === F._with || t === F._while;
  this.context.push(e ? Nt.p_stat : Nt.p_expr), this.exprAllowed = !0;
};
F.incDec.updateContext = function() {
};
F._function.updateContext = F._class.updateContext = function(t) {
  t.beforeExpr && t !== F._else && !(t === F.semi && this.curContext() !== Nt.p_stat) && !(t === F._return && Rr.test(this.input.slice(this.lastTokEnd, this.start))) && !((t === F.colon || t === F.braceL) && this.curContext() === Nt.b_stat) ? this.context.push(Nt.f_expr) : this.context.push(Nt.f_stat), this.exprAllowed = !1;
};
F.colon.updateContext = function() {
  this.curContext().token === "function" && this.context.pop(), this.exprAllowed = !0;
};
F.backQuote.updateContext = function() {
  this.curContext() === Nt.q_tmpl ? this.context.pop() : this.context.push(Nt.q_tmpl), this.exprAllowed = !1;
};
F.star.updateContext = function(t) {
  if (t === F._function) {
    var e = this.context.length - 1;
    this.context[e] === Nt.f_expr ? this.context[e] = Nt.f_expr_gen : this.context[e] = Nt.f_gen;
  }
  this.exprAllowed = !0;
};
F.name.updateContext = function(t) {
  var e = !1;
  this.options.ecmaVersion >= 6 && t !== F.dot && (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) && (e = !0), this.exprAllowed = e;
};
var Xe = mn.prototype;
Xe.checkPropClash = function(t, e, n) {
  if (!(this.options.ecmaVersion >= 9 && t.type === "SpreadElement") && !(this.options.ecmaVersion >= 6 && (t.computed || t.method || t.shorthand))) {
    var r = t.key, s;
    switch (r.type) {
      case "Identifier":
        s = r.name;
        break;
      case "Literal":
        s = String(r.value);
        break;
      default:
        return;
    }
    var i = t.kind;
    if (this.options.ecmaVersion >= 6) {
      s === "__proto__" && i === "init" && (e.proto && (n ? n.doubleProto < 0 && (n.doubleProto = r.start) : this.raiseRecoverable(r.start, "Redefinition of __proto__ property")), e.proto = !0);
      return;
    }
    s = "$" + s;
    var a = e[s];
    if (a) {
      var o;
      i === "init" ? o = this.strict && a.init || a.get || a.set : o = a.init || a[i], o && this.raiseRecoverable(r.start, "Redefinition of property");
    } else
      a = e[s] = {
        init: !1,
        get: !1,
        set: !1
      };
    a[i] = !0;
  }
};
Xe.parseExpression = function(t, e) {
  var n = this.start, r = this.startLoc, s = this.parseMaybeAssign(t, e);
  if (this.type === F.comma) {
    var i = this.startNodeAt(n, r);
    for (i.expressions = [s]; this.eat(F.comma); )
      i.expressions.push(this.parseMaybeAssign(t, e));
    return this.finishNode(i, "SequenceExpression");
  }
  return s;
};
Xe.parseMaybeAssign = function(t, e, n) {
  if (this.isContextual("yield")) {
    if (this.inGenerator)
      return this.parseYield(t);
    this.exprAllowed = !1;
  }
  var r = !1, s = -1, i = -1, a = -1;
  e ? (s = e.parenthesizedAssign, i = e.trailingComma, a = e.doubleProto, e.parenthesizedAssign = e.trailingComma = -1) : (e = new Ru(), r = !0);
  var o = this.start, l = this.startLoc;
  (this.type === F.parenL || this.type === F.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = t === "await");
  var u = this.parseMaybeConditional(t, e);
  if (n && (u = n.call(this, u, o, l)), this.type.isAssign) {
    var h = this.startNodeAt(o, l);
    return h.operator = this.value, this.type === F.eq && (u = this.toAssignable(u, !1, e)), r || (e.parenthesizedAssign = e.trailingComma = e.doubleProto = -1), e.shorthandAssign >= u.start && (e.shorthandAssign = -1), this.type === F.eq ? this.checkLValPattern(u) : this.checkLValSimple(u), h.left = u, this.next(), h.right = this.parseMaybeAssign(t), a > -1 && (e.doubleProto = a), this.finishNode(h, "AssignmentExpression");
  } else
    r && this.checkExpressionErrors(e, !0);
  return s > -1 && (e.parenthesizedAssign = s), i > -1 && (e.trailingComma = i), u;
};
Xe.parseMaybeConditional = function(t, e) {
  var n = this.start, r = this.startLoc, s = this.parseExprOps(t, e);
  if (this.checkExpressionErrors(e))
    return s;
  if (this.eat(F.question)) {
    var i = this.startNodeAt(n, r);
    return i.test = s, i.consequent = this.parseMaybeAssign(), this.expect(F.colon), i.alternate = this.parseMaybeAssign(t), this.finishNode(i, "ConditionalExpression");
  }
  return s;
};
Xe.parseExprOps = function(t, e) {
  var n = this.start, r = this.startLoc, s = this.parseMaybeUnary(e, !1, !1, t);
  return this.checkExpressionErrors(e) || s.start === n && s.type === "ArrowFunctionExpression" ? s : this.parseExprOp(s, n, r, -1, t);
};
Xe.parseExprOp = function(t, e, n, r, s) {
  var i = this.type.binop;
  if (i != null && (!s || this.type !== F._in) && i > r) {
    var a = this.type === F.logicalOR || this.type === F.logicalAND, o = this.type === F.coalesce;
    o && (i = F.logicalAND.binop);
    var l = this.value;
    this.next();
    var u = this.start, h = this.startLoc, f = this.parseExprOp(this.parseMaybeUnary(null, !1, !1, s), u, h, i, s), m = this.buildBinary(e, n, t, f, l, a || o);
    return (a && this.type === F.coalesce || o && (this.type === F.logicalOR || this.type === F.logicalAND)) && this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(m, e, n, r, s);
  }
  return t;
};
Xe.buildBinary = function(t, e, n, r, s, i) {
  r.type === "PrivateIdentifier" && this.raise(r.start, "Private identifier can only be left side of binary expression");
  var a = this.startNodeAt(t, e);
  return a.left = n, a.operator = s, a.right = r, this.finishNode(a, i ? "LogicalExpression" : "BinaryExpression");
};
Xe.parseMaybeUnary = function(t, e, n, r) {
  var s = this.start, i = this.startLoc, a;
  if (this.isContextual("await") && this.canAwait)
    a = this.parseAwait(r), e = !0;
  else if (this.type.prefix) {
    var o = this.startNode(), l = this.type === F.incDec;
    o.operator = this.value, o.prefix = !0, this.next(), o.argument = this.parseMaybeUnary(null, !0, l, r), this.checkExpressionErrors(t, !0), l ? this.checkLValSimple(o.argument) : this.strict && o.operator === "delete" && Wk(o.argument) ? this.raiseRecoverable(o.start, "Deleting local variable in strict mode") : o.operator === "delete" && jp(o.argument) ? this.raiseRecoverable(o.start, "Private fields can not be deleted") : e = !0, a = this.finishNode(o, l ? "UpdateExpression" : "UnaryExpression");
  } else if (!e && this.type === F.privateId)
    (r || this.privateNameStack.length === 0) && this.options.checkPrivateFields && this.unexpected(), a = this.parsePrivateIdent(), this.type !== F._in && this.unexpected();
  else {
    if (a = this.parseExprSubscripts(t, r), this.checkExpressionErrors(t))
      return a;
    for (; this.type.postfix && !this.canInsertSemicolon(); ) {
      var u = this.startNodeAt(s, i);
      u.operator = this.value, u.prefix = !1, u.argument = a, this.checkLValSimple(a), this.next(), a = this.finishNode(u, "UpdateExpression");
    }
  }
  if (!n && this.eat(F.starstar))
    if (e)
      this.unexpected(this.lastTokStart);
    else
      return this.buildBinary(s, i, a, this.parseMaybeUnary(null, !1, !1, r), "**", !1);
  else
    return a;
};
function Wk(t) {
  return t.type === "Identifier" || t.type === "ParenthesizedExpression" && Wk(t.expression);
}
function jp(t) {
  return t.type === "MemberExpression" && t.property.type === "PrivateIdentifier" || t.type === "ChainExpression" && jp(t.expression) || t.type === "ParenthesizedExpression" && jp(t.expression);
}
Xe.parseExprSubscripts = function(t, e) {
  var n = this.start, r = this.startLoc, s = this.parseExprAtom(t, e);
  if (s.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
    return s;
  var i = this.parseSubscripts(s, n, r, !1, e);
  return t && i.type === "MemberExpression" && (t.parenthesizedAssign >= i.start && (t.parenthesizedAssign = -1), t.parenthesizedBind >= i.start && (t.parenthesizedBind = -1), t.trailingComma >= i.start && (t.trailingComma = -1)), i;
};
Xe.parseSubscripts = function(t, e, n, r, s) {
  for (var i = this.options.ecmaVersion >= 8 && t.type === "Identifier" && t.name === "async" && this.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start === 5 && this.potentialArrowAt === t.start, a = !1; ; ) {
    var o = this.parseSubscript(t, e, n, r, i, a, s);
    if (o.optional && (a = !0), o === t || o.type === "ArrowFunctionExpression") {
      if (a) {
        var l = this.startNodeAt(e, n);
        l.expression = o, o = this.finishNode(l, "ChainExpression");
      }
      return o;
    }
    t = o;
  }
};
Xe.shouldParseAsyncArrow = function() {
  return !this.canInsertSemicolon() && this.eat(F.arrow);
};
Xe.parseSubscriptAsyncArrow = function(t, e, n, r) {
  return this.parseArrowExpression(this.startNodeAt(t, e), n, !0, r);
};
Xe.parseSubscript = function(t, e, n, r, s, i, a) {
  var o = this.options.ecmaVersion >= 11, l = o && this.eat(F.questionDot);
  r && l && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
  var u = this.eat(F.bracketL);
  if (u || l && this.type !== F.parenL && this.type !== F.backQuote || this.eat(F.dot)) {
    var h = this.startNodeAt(e, n);
    h.object = t, u ? (h.property = this.parseExpression(), this.expect(F.bracketR)) : this.type === F.privateId && t.type !== "Super" ? h.property = this.parsePrivateIdent() : h.property = this.parseIdent(this.options.allowReserved !== "never"), h.computed = !!u, o && (h.optional = l), t = this.finishNode(h, "MemberExpression");
  } else if (!r && this.eat(F.parenL)) {
    var f = new Ru(), m = this.yieldPos, b = this.awaitPos, v = this.awaitIdentPos;
    this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
    var C = this.parseExprList(F.parenR, this.options.ecmaVersion >= 8, !1, f);
    if (s && !l && this.shouldParseAsyncArrow())
      return this.checkPatternErrors(f, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"), this.yieldPos = m, this.awaitPos = b, this.awaitIdentPos = v, this.parseSubscriptAsyncArrow(e, n, C, a);
    this.checkExpressionErrors(f, !0), this.yieldPos = m || this.yieldPos, this.awaitPos = b || this.awaitPos, this.awaitIdentPos = v || this.awaitIdentPos;
    var S = this.startNodeAt(e, n);
    S.callee = t, S.arguments = C, o && (S.optional = l), t = this.finishNode(S, "CallExpression");
  } else if (this.type === F.backQuote) {
    (l || i) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
    var B = this.startNodeAt(e, n);
    B.tag = t, B.quasi = this.parseTemplate({ isTagged: !0 }), t = this.finishNode(B, "TaggedTemplateExpression");
  }
  return t;
};
Xe.parseExprAtom = function(t, e, n) {
  this.type === F.slash && this.readRegexp();
  var r, s = this.potentialArrowAt === this.start;
  switch (this.type) {
    case F._super:
      return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), r = this.startNode(), this.next(), this.type === F.parenL && !this.allowDirectSuper && this.raise(r.start, "super() call outside constructor of a subclass"), this.type !== F.dot && this.type !== F.bracketL && this.type !== F.parenL && this.unexpected(), this.finishNode(r, "Super");
    case F._this:
      return r = this.startNode(), this.next(), this.finishNode(r, "ThisExpression");
    case F.name:
      var i = this.start, a = this.startLoc, o = this.containsEsc, l = this.parseIdent(!1);
      if (this.options.ecmaVersion >= 8 && !o && l.name === "async" && !this.canInsertSemicolon() && this.eat(F._function))
        return this.overrideContext(Nt.f_expr), this.parseFunction(this.startNodeAt(i, a), 0, !1, !0, e);
      if (s && !this.canInsertSemicolon()) {
        if (this.eat(F.arrow))
          return this.parseArrowExpression(this.startNodeAt(i, a), [l], !1, e);
        if (this.options.ecmaVersion >= 8 && l.name === "async" && this.type === F.name && !o && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc))
          return l = this.parseIdent(!1), (this.canInsertSemicolon() || !this.eat(F.arrow)) && this.unexpected(), this.parseArrowExpression(this.startNodeAt(i, a), [l], !0, e);
      }
      return l;
    case F.regexp:
      var u = this.value;
      return r = this.parseLiteral(u.value), r.regex = { pattern: u.pattern, flags: u.flags }, r;
    case F.num:
    case F.string:
      return this.parseLiteral(this.value);
    case F._null:
    case F._true:
    case F._false:
      return r = this.startNode(), r.value = this.type === F._null ? null : this.type === F._true, r.raw = this.type.keyword, this.next(), this.finishNode(r, "Literal");
    case F.parenL:
      var h = this.start, f = this.parseParenAndDistinguishExpression(s, e);
      return t && (t.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(f) && (t.parenthesizedAssign = h), t.parenthesizedBind < 0 && (t.parenthesizedBind = h)), f;
    case F.bracketL:
      return r = this.startNode(), this.next(), r.elements = this.parseExprList(F.bracketR, !0, !0, t), this.finishNode(r, "ArrayExpression");
    case F.braceL:
      return this.overrideContext(Nt.b_expr), this.parseObj(!1, t);
    case F._function:
      return r = this.startNode(), this.next(), this.parseFunction(r, 0);
    case F._class:
      return this.parseClass(this.startNode(), !1);
    case F._new:
      return this.parseNew();
    case F.backQuote:
      return this.parseTemplate();
    case F._import:
      return this.options.ecmaVersion >= 11 ? this.parseExprImport(n) : this.unexpected();
    default:
      return this.parseExprAtomDefault();
  }
};
Xe.parseExprAtomDefault = function() {
  this.unexpected();
};
Xe.parseExprImport = function(t) {
  var e = this.startNode();
  if (this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import"), this.next(), this.type === F.parenL && !t)
    return this.parseDynamicImport(e);
  if (this.type === F.dot) {
    var n = this.startNodeAt(e.start, e.loc && e.loc.start);
    return n.name = "import", e.meta = this.finishNode(n, "Identifier"), this.parseImportMeta(e);
  } else
    this.unexpected();
};
Xe.parseDynamicImport = function(t) {
  if (this.next(), t.source = this.parseMaybeAssign(), this.options.ecmaVersion >= 16)
    this.eat(F.parenR) ? t.options = null : (this.expect(F.comma), this.afterTrailingComma(F.parenR) ? t.options = null : (t.options = this.parseMaybeAssign(), this.eat(F.parenR) || (this.expect(F.comma), this.afterTrailingComma(F.parenR) || this.unexpected())));
  else if (!this.eat(F.parenR)) {
    var e = this.start;
    this.eat(F.comma) && this.eat(F.parenR) ? this.raiseRecoverable(e, "Trailing comma is not allowed in import()") : this.unexpected(e);
  }
  return this.finishNode(t, "ImportExpression");
};
Xe.parseImportMeta = function(t) {
  this.next();
  var e = this.containsEsc;
  return t.property = this.parseIdent(!0), t.property.name !== "meta" && this.raiseRecoverable(t.property.start, "The only valid meta property for import is 'import.meta'"), e && this.raiseRecoverable(t.start, "'import.meta' must not contain escaped characters"), this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere && this.raiseRecoverable(t.start, "Cannot use 'import.meta' outside a module"), this.finishNode(t, "MetaProperty");
};
Xe.parseLiteral = function(t) {
  var e = this.startNode();
  return e.value = t, e.raw = this.input.slice(this.start, this.end), e.raw.charCodeAt(e.raw.length - 1) === 110 && (e.bigint = e.raw.slice(0, -1).replace(/_/g, "")), this.next(), this.finishNode(e, "Literal");
};
Xe.parseParenExpression = function() {
  this.expect(F.parenL);
  var t = this.parseExpression();
  return this.expect(F.parenR), t;
};
Xe.shouldParseArrow = function(t) {
  return !this.canInsertSemicolon();
};
Xe.parseParenAndDistinguishExpression = function(t, e) {
  var n = this.start, r = this.startLoc, s, i = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();
    var a = this.start, o = this.startLoc, l = [], u = !0, h = !1, f = new Ru(), m = this.yieldPos, b = this.awaitPos, v;
    for (this.yieldPos = 0, this.awaitPos = 0; this.type !== F.parenR; )
      if (u ? u = !1 : this.expect(F.comma), i && this.afterTrailingComma(F.parenR, !0)) {
        h = !0;
        break;
      } else if (this.type === F.ellipsis) {
        v = this.start, l.push(this.parseParenItem(this.parseRestBinding())), this.type === F.comma && this.raiseRecoverable(
          this.start,
          "Comma is not permitted after the rest element"
        );
        break;
      } else
        l.push(this.parseMaybeAssign(!1, f, this.parseParenItem));
    var C = this.lastTokEnd, S = this.lastTokEndLoc;
    if (this.expect(F.parenR), t && this.shouldParseArrow(l) && this.eat(F.arrow))
      return this.checkPatternErrors(f, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = m, this.awaitPos = b, this.parseParenArrowList(n, r, l, e);
    (!l.length || h) && this.unexpected(this.lastTokStart), v && this.unexpected(v), this.checkExpressionErrors(f, !0), this.yieldPos = m || this.yieldPos, this.awaitPos = b || this.awaitPos, l.length > 1 ? (s = this.startNodeAt(a, o), s.expressions = l, this.finishNodeAt(s, "SequenceExpression", C, S)) : s = l[0];
  } else
    s = this.parseParenExpression();
  if (this.options.preserveParens) {
    var B = this.startNodeAt(n, r);
    return B.expression = s, this.finishNode(B, "ParenthesizedExpression");
  } else
    return s;
};
Xe.parseParenItem = function(t) {
  return t;
};
Xe.parseParenArrowList = function(t, e, n, r) {
  return this.parseArrowExpression(this.startNodeAt(t, e), n, !1, r);
};
var wB = [];
Xe.parseNew = function() {
  this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
  var t = this.startNode();
  if (this.next(), this.options.ecmaVersion >= 6 && this.type === F.dot) {
    var e = this.startNodeAt(t.start, t.loc && t.loc.start);
    e.name = "new", t.meta = this.finishNode(e, "Identifier"), this.next();
    var n = this.containsEsc;
    return t.property = this.parseIdent(!0), t.property.name !== "target" && this.raiseRecoverable(t.property.start, "The only valid meta property for new is 'new.target'"), n && this.raiseRecoverable(t.start, "'new.target' must not contain escaped characters"), this.allowNewDotTarget || this.raiseRecoverable(t.start, "'new.target' can only be used in functions and class static block"), this.finishNode(t, "MetaProperty");
  }
  var r = this.start, s = this.startLoc;
  return t.callee = this.parseSubscripts(this.parseExprAtom(null, !1, !0), r, s, !0, !1), this.eat(F.parenL) ? t.arguments = this.parseExprList(F.parenR, this.options.ecmaVersion >= 8, !1) : t.arguments = wB, this.finishNode(t, "NewExpression");
};
Xe.parseTemplateElement = function(t) {
  var e = t.isTagged, n = this.startNode();
  return this.type === F.invalidTemplate ? (e || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), n.value = {
    raw: this.value.replace(/\r\n?/g, `
`),
    cooked: null
  }) : n.value = {
    raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, `
`),
    cooked: this.value
  }, this.next(), n.tail = this.type === F.backQuote, this.finishNode(n, "TemplateElement");
};
Xe.parseTemplate = function(t) {
  t === void 0 && (t = {});
  var e = t.isTagged;
  e === void 0 && (e = !1);
  var n = this.startNode();
  this.next(), n.expressions = [];
  var r = this.parseTemplateElement({ isTagged: e });
  for (n.quasis = [r]; !r.tail; )
    this.type === F.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(F.dollarBraceL), n.expressions.push(this.parseExpression()), this.expect(F.braceR), n.quasis.push(r = this.parseTemplateElement({ isTagged: e }));
  return this.next(), this.finishNode(n, "TemplateLiteral");
};
Xe.isAsyncProp = function(t) {
  return !t.computed && t.key.type === "Identifier" && t.key.name === "async" && (this.type === F.name || this.type === F.num || this.type === F.string || this.type === F.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === F.star) && !Rr.test(this.input.slice(this.lastTokEnd, this.start));
};
Xe.parseObj = function(t, e) {
  var n = this.startNode(), r = !0, s = {};
  for (n.properties = [], this.next(); !this.eat(F.braceR); ) {
    if (r)
      r = !1;
    else if (this.expect(F.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(F.braceR))
      break;
    var i = this.parseProperty(t, e);
    t || this.checkPropClash(i, s, e), n.properties.push(i);
  }
  return this.finishNode(n, t ? "ObjectPattern" : "ObjectExpression");
};
Xe.parseProperty = function(t, e) {
  var n = this.startNode(), r, s, i, a;
  if (this.options.ecmaVersion >= 9 && this.eat(F.ellipsis))
    return t ? (n.argument = this.parseIdent(!1), this.type === F.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.finishNode(n, "RestElement")) : (n.argument = this.parseMaybeAssign(!1, e), this.type === F.comma && e && e.trailingComma < 0 && (e.trailingComma = this.start), this.finishNode(n, "SpreadElement"));
  this.options.ecmaVersion >= 6 && (n.method = !1, n.shorthand = !1, (t || e) && (i = this.start, a = this.startLoc), t || (r = this.eat(F.star)));
  var o = this.containsEsc;
  return this.parsePropertyName(n), !t && !o && this.options.ecmaVersion >= 8 && !r && this.isAsyncProp(n) ? (s = !0, r = this.options.ecmaVersion >= 9 && this.eat(F.star), this.parsePropertyName(n)) : s = !1, this.parsePropertyValue(n, t, r, s, i, a, e, o), this.finishNode(n, "Property");
};
Xe.parseGetterSetter = function(t) {
  t.kind = t.key.name, this.parsePropertyName(t), t.value = this.parseMethod(!1);
  var e = t.kind === "get" ? 0 : 1;
  if (t.value.params.length !== e) {
    var n = t.value.start;
    t.kind === "get" ? this.raiseRecoverable(n, "getter should have no params") : this.raiseRecoverable(n, "setter should have exactly one param");
  } else
    t.kind === "set" && t.value.params[0].type === "RestElement" && this.raiseRecoverable(t.value.params[0].start, "Setter cannot use rest params");
};
Xe.parsePropertyValue = function(t, e, n, r, s, i, a, o) {
  (n || r) && this.type === F.colon && this.unexpected(), this.eat(F.colon) ? (t.value = e ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, a), t.kind = "init") : this.options.ecmaVersion >= 6 && this.type === F.parenL ? (e && this.unexpected(), t.kind = "init", t.method = !0, t.value = this.parseMethod(n, r)) : !e && !o && this.options.ecmaVersion >= 5 && !t.computed && t.key.type === "Identifier" && (t.key.name === "get" || t.key.name === "set") && this.type !== F.comma && this.type !== F.braceR && this.type !== F.eq ? ((n || r) && this.unexpected(), this.parseGetterSetter(t)) : this.options.ecmaVersion >= 6 && !t.computed && t.key.type === "Identifier" ? ((n || r) && this.unexpected(), this.checkUnreserved(t.key), t.key.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = s), t.kind = "init", e ? t.value = this.parseMaybeDefault(s, i, this.copyNode(t.key)) : this.type === F.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start), t.value = this.parseMaybeDefault(s, i, this.copyNode(t.key))) : t.value = this.copyNode(t.key), t.shorthand = !0) : this.unexpected();
};
Xe.parsePropertyName = function(t) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(F.bracketL))
      return t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(F.bracketR), t.key;
    t.computed = !1;
  }
  return t.key = this.type === F.num || this.type === F.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
};
Xe.initFunction = function(t) {
  t.id = null, this.options.ecmaVersion >= 6 && (t.generator = t.expression = !1), this.options.ecmaVersion >= 8 && (t.async = !1);
};
Xe.parseMethod = function(t, e, n) {
  var r = this.startNode(), s = this.yieldPos, i = this.awaitPos, a = this.awaitIdentPos;
  return this.initFunction(r), this.options.ecmaVersion >= 6 && (r.generator = t), this.options.ecmaVersion >= 8 && (r.async = !!e), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(_d(e, r.generator) | Qd | (n ? Lk : 0)), this.expect(F.parenL), r.params = this.parseBindingList(F.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(r, !1, !0, !1), this.yieldPos = s, this.awaitPos = i, this.awaitIdentPos = a, this.finishNode(r, "FunctionExpression");
};
Xe.parseArrowExpression = function(t, e, n, r) {
  var s = this.yieldPos, i = this.awaitPos, a = this.awaitIdentPos;
  return this.enterScope(_d(n, !1) | Zk), this.initFunction(t), this.options.ecmaVersion >= 8 && (t.async = !!n), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, t.params = this.toAssignableList(e, !0), this.parseFunctionBody(t, !0, !1, r), this.yieldPos = s, this.awaitPos = i, this.awaitIdentPos = a, this.finishNode(t, "ArrowFunctionExpression");
};
Xe.parseFunctionBody = function(t, e, n, r) {
  var s = e && this.type !== F.braceL, i = this.strict, a = !1;
  if (s)
    t.body = this.parseMaybeAssign(r), t.expression = !0, this.checkParams(t, !1);
  else {
    var o = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(t.params);
    (!i || o) && (a = this.strictDirective(this.end), a && o && this.raiseRecoverable(t.start, "Illegal 'use strict' directive in function with non-simple parameter list"));
    var l = this.labels;
    this.labels = [], a && (this.strict = !0), this.checkParams(t, !i && !a && !e && !n && this.isSimpleParamList(t.params)), this.strict && t.id && this.checkLValSimple(t.id, Vk), t.body = this.parseBlock(!1, void 0, a && !i), t.expression = !1, this.adaptDirectivePrologue(t.body.body), this.labels = l;
  }
  this.exitScope();
};
Xe.isSimpleParamList = function(t) {
  for (var e = 0, n = t; e < n.length; e += 1) {
    var r = n[e];
    if (r.type !== "Identifier")
      return !1;
  }
  return !0;
};
Xe.checkParams = function(t, e) {
  for (var n = /* @__PURE__ */ Object.create(null), r = 0, s = t.params; r < s.length; r += 1) {
    var i = s[r];
    this.checkLValInnerPattern(i, Rd, e ? null : n);
  }
};
Xe.parseExprList = function(t, e, n, r) {
  for (var s = [], i = !0; !this.eat(t); ) {
    if (i)
      i = !1;
    else if (this.expect(F.comma), e && this.afterTrailingComma(t))
      break;
    var a = void 0;
    n && this.type === F.comma ? a = null : this.type === F.ellipsis ? (a = this.parseSpread(r), r && this.type === F.comma && r.trailingComma < 0 && (r.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, r), s.push(a);
  }
  return s;
};
Xe.checkUnreserved = function(t) {
  var e = t.start, n = t.end, r = t.name;
  if (this.inGenerator && r === "yield" && this.raiseRecoverable(e, "Cannot use 'yield' as identifier inside a generator"), this.inAsync && r === "await" && this.raiseRecoverable(e, "Cannot use 'await' as identifier inside an async function"), this.currentThisScope().inClassFieldInit && r === "arguments" && this.raiseRecoverable(e, "Cannot use 'arguments' in class field initializer"), this.inClassStaticBlock && (r === "arguments" || r === "await") && this.raise(e, "Cannot use " + r + " in class static initialization block"), this.keywords.test(r) && this.raise(e, "Unexpected keyword '" + r + "'"), !(this.options.ecmaVersion < 6 && this.input.slice(e, n).indexOf("\\") !== -1)) {
    var s = this.strict ? this.reservedWordsStrict : this.reservedWords;
    s.test(r) && (!this.inAsync && r === "await" && this.raiseRecoverable(e, "Cannot use keyword 'await' outside an async function"), this.raiseRecoverable(e, "The keyword '" + r + "' is reserved"));
  }
};
Xe.parseIdent = function(t) {
  var e = this.parseIdentNode();
  return this.next(!!t), this.finishNode(e, "Identifier"), t || (this.checkUnreserved(e), e.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = e.start)), e;
};
Xe.parseIdentNode = function() {
  var t = this.startNode();
  return this.type === F.name ? t.name = this.value : this.type.keyword ? (t.name = this.type.keyword, (t.name === "class" || t.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46) && this.context.pop(), this.type = F.name) : this.unexpected(), t;
};
Xe.parsePrivateIdent = function() {
  var t = this.startNode();
  return this.type === F.privateId ? t.name = this.value : this.unexpected(), this.next(), this.finishNode(t, "PrivateIdentifier"), this.options.checkPrivateFields && (this.privateNameStack.length === 0 ? this.raise(t.start, "Private field '#" + t.name + "' must be declared in an enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(t)), t;
};
Xe.parseYield = function(t) {
  this.yieldPos || (this.yieldPos = this.start);
  var e = this.startNode();
  return this.next(), this.type === F.semi || this.canInsertSemicolon() || this.type !== F.star && !this.type.startsExpr ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(F.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression");
};
Xe.parseAwait = function(t) {
  this.awaitPos || (this.awaitPos = this.start);
  var e = this.startNode();
  return this.next(), e.argument = this.parseMaybeUnary(null, !0, !1, t), this.finishNode(e, "AwaitExpression");
};
var Ec = mn.prototype;
Ec.raise = function(t, e) {
  var n = _k(this.input, t);
  e += " (" + n.line + ":" + n.column + ")";
  var r = new SyntaxError(e);
  throw r.pos = t, r.loc = n, r.raisedAt = this.pos, r;
};
Ec.raiseRecoverable = Ec.raise;
Ec.curPosition = function() {
  if (this.options.locations)
    return new Fo(this.curLine, this.pos - this.lineStart);
};
var gi = mn.prototype, kB = function(e) {
  this.flags = e, this.var = [], this.lexical = [], this.functions = [], this.inClassFieldInit = !1;
};
gi.enterScope = function(t) {
  this.scopeStack.push(new kB(t));
};
gi.exitScope = function() {
  this.scopeStack.pop();
};
gi.treatFunctionsAsVarInScope = function(t) {
  return t.flags & Za || !this.inModule && t.flags & Bo;
};
gi.declareName = function(t, e, n) {
  var r = !1;
  if (e === Ns) {
    var s = this.currentScope();
    r = s.lexical.indexOf(t) > -1 || s.functions.indexOf(t) > -1 || s.var.indexOf(t) > -1, s.lexical.push(t), this.inModule && s.flags & Bo && delete this.undefinedExports[t];
  } else if (e === Nk) {
    var i = this.currentScope();
    i.lexical.push(t);
  } else if (e === Ik) {
    var a = this.currentScope();
    this.treatFunctionsAsVar ? r = a.lexical.indexOf(t) > -1 : r = a.lexical.indexOf(t) > -1 || a.var.indexOf(t) > -1, a.functions.push(t);
  } else
    for (var o = this.scopeStack.length - 1; o >= 0; --o) {
      var l = this.scopeStack[o];
      if (l.lexical.indexOf(t) > -1 && !(l.flags & $k && l.lexical[0] === t) || !this.treatFunctionsAsVarInScope(l) && l.functions.indexOf(t) > -1) {
        r = !0;
        break;
      }
      if (l.var.push(t), this.inModule && l.flags & Bo && delete this.undefinedExports[t], l.flags & jd)
        break;
    }
  r && this.raiseRecoverable(n, "Identifier '" + t + "' has already been declared");
};
gi.checkLocalExport = function(t) {
  this.scopeStack[0].lexical.indexOf(t.name) === -1 && this.scopeStack[0].var.indexOf(t.name) === -1 && (this.undefinedExports[t.name] = t);
};
gi.currentScope = function() {
  return this.scopeStack[this.scopeStack.length - 1];
};
gi.currentVarScope = function() {
  for (var t = this.scopeStack.length - 1; ; t--) {
    var e = this.scopeStack[t];
    if (e.flags & jd)
      return e;
  }
};
gi.currentThisScope = function() {
  for (var t = this.scopeStack.length - 1; ; t--) {
    var e = this.scopeStack[t];
    if (e.flags & jd && !(e.flags & Zk))
      return e;
  }
};
var Zu = function(e, n, r) {
  this.type = "", this.start = n, this.end = 0, e.options.locations && (this.loc = new _u(e, r)), e.options.directSourceFile && (this.sourceFile = e.options.directSourceFile), e.options.ranges && (this.range = [n, 0]);
}, rl = mn.prototype;
rl.startNode = function() {
  return new Zu(this, this.start, this.startLoc);
};
rl.startNodeAt = function(t, e) {
  return new Zu(this, t, e);
};
function Uk(t, e, n, r) {
  return t.type = e, t.end = n, this.options.locations && (t.loc.end = r), this.options.ranges && (t.range[1] = n), t;
}
rl.finishNode = function(t, e) {
  return Uk.call(this, t, e, this.lastTokEnd, this.lastTokEndLoc);
};
rl.finishNodeAt = function(t, e, n, r) {
  return Uk.call(this, t, e, n, r);
};
rl.copyNode = function(t) {
  var e = new Zu(this, t.start, this.startLoc);
  for (var n in t)
    e[n] = t[n];
  return e;
};
var CB = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz", qk = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS", Gk = qk + " Extended_Pictographic", zk = Gk, Yk = zk + " EBase EComp EMod EPres ExtPict", Hk = Yk, SB = Hk, AB = {
  9: qk,
  10: Gk,
  11: zk,
  12: Yk,
  13: Hk,
  14: SB
}, PB = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji", DB = {
  9: "",
  10: "",
  11: "",
  12: "",
  13: "",
  14: PB
}, lg = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", Kk = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb", Jk = Kk + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd", e2 = Jk + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", t2 = e2 + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi", n2 = t2 + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", EB = n2 + " " + CB, FB = {
  9: Kk,
  10: Jk,
  11: e2,
  12: t2,
  13: n2,
  14: EB
}, r2 = {};
function BB(t) {
  var e = r2[t] = {
    binary: ti(AB[t] + " " + lg),
    binaryOfStrings: ti(DB[t]),
    nonBinary: {
      General_Category: ti(lg),
      Script: ti(FB[t])
    }
  };
  e.nonBinary.Script_Extensions = e.nonBinary.Script, e.nonBinary.gc = e.nonBinary.General_Category, e.nonBinary.sc = e.nonBinary.Script, e.nonBinary.scx = e.nonBinary.Script_Extensions;
}
for (var Ph = 0, cg = [9, 10, 11, 12, 13, 14]; Ph < cg.length; Ph += 1) {
  var MB = cg[Ph];
  BB(MB);
}
var Ee = mn.prototype, Fc = function(e, n) {
  this.parent = e, this.base = n || this;
};
Fc.prototype.separatedFrom = function(e) {
  for (var n = this; n; n = n.parent)
    for (var r = e; r; r = r.parent)
      if (n.base === r.base && n !== r)
        return !0;
  return !1;
};
Fc.prototype.sibling = function() {
  return new Fc(this.parent, this.base);
};
var Cs = function(e) {
  this.parser = e, this.validFlags = "gim" + (e.options.ecmaVersion >= 6 ? "uy" : "") + (e.options.ecmaVersion >= 9 ? "s" : "") + (e.options.ecmaVersion >= 13 ? "d" : "") + (e.options.ecmaVersion >= 15 ? "v" : ""), this.unicodeProperties = r2[e.options.ecmaVersion >= 14 ? 14 : e.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchV = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = /* @__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID = null;
};
Cs.prototype.reset = function(e, n, r) {
  var s = r.indexOf("v") !== -1, i = r.indexOf("u") !== -1;
  this.start = e | 0, this.source = n + "", this.flags = r, s && this.parser.options.ecmaVersion >= 15 ? (this.switchU = !0, this.switchV = !0, this.switchN = !0) : (this.switchU = i && this.parser.options.ecmaVersion >= 6, this.switchV = !1, this.switchN = i && this.parser.options.ecmaVersion >= 9);
};
Cs.prototype.raise = function(e) {
  this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + e);
};
Cs.prototype.at = function(e, n) {
  n === void 0 && (n = !1);
  var r = this.source, s = r.length;
  if (e >= s)
    return -1;
  var i = r.charCodeAt(e);
  if (!(n || this.switchU) || i <= 55295 || i >= 57344 || e + 1 >= s)
    return i;
  var a = r.charCodeAt(e + 1);
  return a >= 56320 && a <= 57343 ? (i << 10) + a - 56613888 : i;
};
Cs.prototype.nextIndex = function(e, n) {
  n === void 0 && (n = !1);
  var r = this.source, s = r.length;
  if (e >= s)
    return s;
  var i = r.charCodeAt(e), a;
  return !(n || this.switchU) || i <= 55295 || i >= 57344 || e + 1 >= s || (a = r.charCodeAt(e + 1)) < 56320 || a > 57343 ? e + 1 : e + 2;
};
Cs.prototype.current = function(e) {
  return e === void 0 && (e = !1), this.at(this.pos, e);
};
Cs.prototype.lookahead = function(e) {
  return e === void 0 && (e = !1), this.at(this.nextIndex(this.pos, e), e);
};
Cs.prototype.advance = function(e) {
  e === void 0 && (e = !1), this.pos = this.nextIndex(this.pos, e);
};
Cs.prototype.eat = function(e, n) {
  return n === void 0 && (n = !1), this.current(n) === e ? (this.advance(n), !0) : !1;
};
Cs.prototype.eatChars = function(e, n) {
  n === void 0 && (n = !1);
  for (var r = this.pos, s = 0, i = e; s < i.length; s += 1) {
    var a = i[s], o = this.at(r, n);
    if (o === -1 || o !== a)
      return !1;
    r = this.nextIndex(r, n);
  }
  return this.pos = r, !0;
};
Ee.validateRegExpFlags = function(t) {
  for (var e = t.validFlags, n = t.flags, r = !1, s = !1, i = 0; i < n.length; i++) {
    var a = n.charAt(i);
    e.indexOf(a) === -1 && this.raise(t.start, "Invalid regular expression flag"), n.indexOf(a, i + 1) > -1 && this.raise(t.start, "Duplicate regular expression flag"), a === "u" && (r = !0), a === "v" && (s = !0);
  }
  this.options.ecmaVersion >= 15 && r && s && this.raise(t.start, "Invalid regular expression flag");
};
function TB(t) {
  for (var e in t)
    return !0;
  return !1;
}
Ee.validateRegExpPattern = function(t) {
  this.regexp_pattern(t), !t.switchN && this.options.ecmaVersion >= 9 && TB(t.groupNames) && (t.switchN = !0, this.regexp_pattern(t));
};
Ee.regexp_pattern = function(t) {
  t.pos = 0, t.lastIntValue = 0, t.lastStringValue = "", t.lastAssertionIsQuantifiable = !1, t.numCapturingParens = 0, t.maxBackReference = 0, t.groupNames = /* @__PURE__ */ Object.create(null), t.backReferenceNames.length = 0, t.branchID = null, this.regexp_disjunction(t), t.pos !== t.source.length && (t.eat(
    41
    /* ) */
  ) && t.raise("Unmatched ')'"), (t.eat(
    93
    /* ] */
  ) || t.eat(
    125
    /* } */
  )) && t.raise("Lone quantifier brackets")), t.maxBackReference > t.numCapturingParens && t.raise("Invalid escape");
  for (var e = 0, n = t.backReferenceNames; e < n.length; e += 1) {
    var r = n[e];
    t.groupNames[r] || t.raise("Invalid named capture referenced");
  }
};
Ee.regexp_disjunction = function(t) {
  var e = this.options.ecmaVersion >= 16;
  for (e && (t.branchID = new Fc(t.branchID, null)), this.regexp_alternative(t); t.eat(
    124
    /* | */
  ); )
    e && (t.branchID = t.branchID.sibling()), this.regexp_alternative(t);
  e && (t.branchID = t.branchID.parent), this.regexp_eatQuantifier(t, !0) && t.raise("Nothing to repeat"), t.eat(
    123
    /* { */
  ) && t.raise("Lone quantifier brackets");
};
Ee.regexp_alternative = function(t) {
  for (; t.pos < t.source.length && this.regexp_eatTerm(t); )
    ;
};
Ee.regexp_eatTerm = function(t) {
  return this.regexp_eatAssertion(t) ? (t.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(t) && t.switchU && t.raise("Invalid quantifier"), !0) : (t.switchU ? this.regexp_eatAtom(t) : this.regexp_eatExtendedAtom(t)) ? (this.regexp_eatQuantifier(t), !0) : !1;
};
Ee.regexp_eatAssertion = function(t) {
  var e = t.pos;
  if (t.lastAssertionIsQuantifiable = !1, t.eat(
    94
    /* ^ */
  ) || t.eat(
    36
    /* $ */
  ))
    return !0;
  if (t.eat(
    92
    /* \ */
  )) {
    if (t.eat(
      66
      /* B */
    ) || t.eat(
      98
      /* b */
    ))
      return !0;
    t.pos = e;
  }
  if (t.eat(
    40
    /* ( */
  ) && t.eat(
    63
    /* ? */
  )) {
    var n = !1;
    if (this.options.ecmaVersion >= 9 && (n = t.eat(
      60
      /* < */
    )), t.eat(
      61
      /* = */
    ) || t.eat(
      33
      /* ! */
    ))
      return this.regexp_disjunction(t), t.eat(
        41
        /* ) */
      ) || t.raise("Unterminated group"), t.lastAssertionIsQuantifiable = !n, !0;
  }
  return t.pos = e, !1;
};
Ee.regexp_eatQuantifier = function(t, e) {
  return e === void 0 && (e = !1), this.regexp_eatQuantifierPrefix(t, e) ? (t.eat(
    63
    /* ? */
  ), !0) : !1;
};
Ee.regexp_eatQuantifierPrefix = function(t, e) {
  return t.eat(
    42
    /* * */
  ) || t.eat(
    43
    /* + */
  ) || t.eat(
    63
    /* ? */
  ) || this.regexp_eatBracedQuantifier(t, e);
};
Ee.regexp_eatBracedQuantifier = function(t, e) {
  var n = t.pos;
  if (t.eat(
    123
    /* { */
  )) {
    var r = 0, s = -1;
    if (this.regexp_eatDecimalDigits(t) && (r = t.lastIntValue, t.eat(
      44
      /* , */
    ) && this.regexp_eatDecimalDigits(t) && (s = t.lastIntValue), t.eat(
      125
      /* } */
    )))
      return s !== -1 && s < r && !e && t.raise("numbers out of order in {} quantifier"), !0;
    t.switchU && !e && t.raise("Incomplete quantifier"), t.pos = n;
  }
  return !1;
};
Ee.regexp_eatAtom = function(t) {
  return this.regexp_eatPatternCharacters(t) || t.eat(
    46
    /* . */
  ) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t);
};
Ee.regexp_eatReverseSolidusAtomEscape = function(t) {
  var e = t.pos;
  if (t.eat(
    92
    /* \ */
  )) {
    if (this.regexp_eatAtomEscape(t))
      return !0;
    t.pos = e;
  }
  return !1;
};
Ee.regexp_eatUncapturingGroup = function(t) {
  var e = t.pos;
  if (t.eat(
    40
    /* ( */
  )) {
    if (t.eat(
      63
      /* ? */
    )) {
      if (this.options.ecmaVersion >= 16) {
        var n = this.regexp_eatModifiers(t), r = t.eat(
          45
          /* - */
        );
        if (n || r) {
          for (var s = 0; s < n.length; s++) {
            var i = n.charAt(s);
            n.indexOf(i, s + 1) > -1 && t.raise("Duplicate regular expression modifiers");
          }
          if (r) {
            var a = this.regexp_eatModifiers(t);
            !n && !a && t.current() === 58 && t.raise("Invalid regular expression modifiers");
            for (var o = 0; o < a.length; o++) {
              var l = a.charAt(o);
              (a.indexOf(l, o + 1) > -1 || n.indexOf(l) > -1) && t.raise("Duplicate regular expression modifiers");
            }
          }
        }
      }
      if (t.eat(
        58
        /* : */
      )) {
        if (this.regexp_disjunction(t), t.eat(
          41
          /* ) */
        ))
          return !0;
        t.raise("Unterminated group");
      }
    }
    t.pos = e;
  }
  return !1;
};
Ee.regexp_eatCapturingGroup = function(t) {
  if (t.eat(
    40
    /* ( */
  )) {
    if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(t) : t.current() === 63 && t.raise("Invalid group"), this.regexp_disjunction(t), t.eat(
      41
      /* ) */
    ))
      return t.numCapturingParens += 1, !0;
    t.raise("Unterminated group");
  }
  return !1;
};
Ee.regexp_eatModifiers = function(t) {
  for (var e = "", n = 0; (n = t.current()) !== -1 && QB(n); )
    e += Zs(n), t.advance();
  return e;
};
function QB(t) {
  return t === 105 || t === 109 || t === 115;
}
Ee.regexp_eatExtendedAtom = function(t) {
  return t.eat(
    46
    /* . */
  ) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t) || this.regexp_eatInvalidBracedQuantifier(t) || this.regexp_eatExtendedPatternCharacter(t);
};
Ee.regexp_eatInvalidBracedQuantifier = function(t) {
  return this.regexp_eatBracedQuantifier(t, !0) && t.raise("Nothing to repeat"), !1;
};
Ee.regexp_eatSyntaxCharacter = function(t) {
  var e = t.current();
  return s2(e) ? (t.lastIntValue = e, t.advance(), !0) : !1;
};
function s2(t) {
  return t === 36 || t >= 40 && t <= 43 || t === 46 || t === 63 || t >= 91 && t <= 94 || t >= 123 && t <= 125;
}
Ee.regexp_eatPatternCharacters = function(t) {
  for (var e = t.pos, n = 0; (n = t.current()) !== -1 && !s2(n); )
    t.advance();
  return t.pos !== e;
};
Ee.regexp_eatExtendedPatternCharacter = function(t) {
  var e = t.current();
  return e !== -1 && e !== 36 && !(e >= 40 && e <= 43) && e !== 46 && e !== 63 && e !== 91 && e !== 94 && e !== 124 ? (t.advance(), !0) : !1;
};
Ee.regexp_groupSpecifier = function(t) {
  if (t.eat(
    63
    /* ? */
  )) {
    this.regexp_eatGroupName(t) || t.raise("Invalid group");
    var e = this.options.ecmaVersion >= 16, n = t.groupNames[t.lastStringValue];
    if (n)
      if (e)
        for (var r = 0, s = n; r < s.length; r += 1) {
          var i = s[r];
          i.separatedFrom(t.branchID) || t.raise("Duplicate capture group name");
        }
      else
        t.raise("Duplicate capture group name");
    e ? (n || (t.groupNames[t.lastStringValue] = [])).push(t.branchID) : t.groupNames[t.lastStringValue] = !0;
  }
};
Ee.regexp_eatGroupName = function(t) {
  if (t.lastStringValue = "", t.eat(
    60
    /* < */
  )) {
    if (this.regexp_eatRegExpIdentifierName(t) && t.eat(
      62
      /* > */
    ))
      return !0;
    t.raise("Invalid capture group name");
  }
  return !1;
};
Ee.regexp_eatRegExpIdentifierName = function(t) {
  if (t.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(t)) {
    for (t.lastStringValue += Zs(t.lastIntValue); this.regexp_eatRegExpIdentifierPart(t); )
      t.lastStringValue += Zs(t.lastIntValue);
    return !0;
  }
  return !1;
};
Ee.regexp_eatRegExpIdentifierStart = function(t) {
  var e = t.pos, n = this.options.ecmaVersion >= 11, r = t.current(n);
  return t.advance(n), r === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(t, n) && (r = t.lastIntValue), jB(r) ? (t.lastIntValue = r, !0) : (t.pos = e, !1);
};
function jB(t) {
  return Rs(t, !0) || t === 36 || t === 95;
}
Ee.regexp_eatRegExpIdentifierPart = function(t) {
  var e = t.pos, n = this.options.ecmaVersion >= 11, r = t.current(n);
  return t.advance(n), r === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(t, n) && (r = t.lastIntValue), _B(r) ? (t.lastIntValue = r, !0) : (t.pos = e, !1);
};
function _B(t) {
  return wa(t, !0) || t === 36 || t === 95 || t === 8204 || t === 8205;
}
Ee.regexp_eatAtomEscape = function(t) {
  return this.regexp_eatBackReference(t) || this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t) || t.switchN && this.regexp_eatKGroupName(t) ? !0 : (t.switchU && (t.current() === 99 && t.raise("Invalid unicode escape"), t.raise("Invalid escape")), !1);
};
Ee.regexp_eatBackReference = function(t) {
  var e = t.pos;
  if (this.regexp_eatDecimalEscape(t)) {
    var n = t.lastIntValue;
    if (t.switchU)
      return n > t.maxBackReference && (t.maxBackReference = n), !0;
    if (n <= t.numCapturingParens)
      return !0;
    t.pos = e;
  }
  return !1;
};
Ee.regexp_eatKGroupName = function(t) {
  if (t.eat(
    107
    /* k */
  )) {
    if (this.regexp_eatGroupName(t))
      return t.backReferenceNames.push(t.lastStringValue), !0;
    t.raise("Invalid named reference");
  }
  return !1;
};
Ee.regexp_eatCharacterEscape = function(t) {
  return this.regexp_eatControlEscape(t) || this.regexp_eatCControlLetter(t) || this.regexp_eatZero(t) || this.regexp_eatHexEscapeSequence(t) || this.regexp_eatRegExpUnicodeEscapeSequence(t, !1) || !t.switchU && this.regexp_eatLegacyOctalEscapeSequence(t) || this.regexp_eatIdentityEscape(t);
};
Ee.regexp_eatCControlLetter = function(t) {
  var e = t.pos;
  if (t.eat(
    99
    /* c */
  )) {
    if (this.regexp_eatControlLetter(t))
      return !0;
    t.pos = e;
  }
  return !1;
};
Ee.regexp_eatZero = function(t) {
  return t.current() === 48 && !$u(t.lookahead()) ? (t.lastIntValue = 0, t.advance(), !0) : !1;
};
Ee.regexp_eatControlEscape = function(t) {
  var e = t.current();
  return e === 116 ? (t.lastIntValue = 9, t.advance(), !0) : e === 110 ? (t.lastIntValue = 10, t.advance(), !0) : e === 118 ? (t.lastIntValue = 11, t.advance(), !0) : e === 102 ? (t.lastIntValue = 12, t.advance(), !0) : e === 114 ? (t.lastIntValue = 13, t.advance(), !0) : !1;
};
Ee.regexp_eatControlLetter = function(t) {
  var e = t.current();
  return i2(e) ? (t.lastIntValue = e % 32, t.advance(), !0) : !1;
};
function i2(t) {
  return t >= 65 && t <= 90 || t >= 97 && t <= 122;
}
Ee.regexp_eatRegExpUnicodeEscapeSequence = function(t, e) {
  e === void 0 && (e = !1);
  var n = t.pos, r = e || t.switchU;
  if (t.eat(
    117
    /* u */
  )) {
    if (this.regexp_eatFixedHexDigits(t, 4)) {
      var s = t.lastIntValue;
      if (r && s >= 55296 && s <= 56319) {
        var i = t.pos;
        if (t.eat(
          92
          /* \ */
        ) && t.eat(
          117
          /* u */
        ) && this.regexp_eatFixedHexDigits(t, 4)) {
          var a = t.lastIntValue;
          if (a >= 56320 && a <= 57343)
            return t.lastIntValue = (s - 55296) * 1024 + (a - 56320) + 65536, !0;
        }
        t.pos = i, t.lastIntValue = s;
      }
      return !0;
    }
    if (r && t.eat(
      123
      /* { */
    ) && this.regexp_eatHexDigits(t) && t.eat(
      125
      /* } */
    ) && RB(t.lastIntValue))
      return !0;
    r && t.raise("Invalid unicode escape"), t.pos = n;
  }
  return !1;
};
function RB(t) {
  return t >= 0 && t <= 1114111;
}
Ee.regexp_eatIdentityEscape = function(t) {
  if (t.switchU)
    return this.regexp_eatSyntaxCharacter(t) ? !0 : t.eat(
      47
      /* / */
    ) ? (t.lastIntValue = 47, !0) : !1;
  var e = t.current();
  return e !== 99 && (!t.switchN || e !== 107) ? (t.lastIntValue = e, t.advance(), !0) : !1;
};
Ee.regexp_eatDecimalEscape = function(t) {
  t.lastIntValue = 0;
  var e = t.current();
  if (e >= 49 && e <= 57) {
    do
      t.lastIntValue = 10 * t.lastIntValue + (e - 48), t.advance();
    while ((e = t.current()) >= 48 && e <= 57);
    return !0;
  }
  return !1;
};
var a2 = 0, $s = 1, Er = 2;
Ee.regexp_eatCharacterClassEscape = function(t) {
  var e = t.current();
  if (ZB(e))
    return t.lastIntValue = -1, t.advance(), $s;
  var n = !1;
  if (t.switchU && this.options.ecmaVersion >= 9 && ((n = e === 80) || e === 112)) {
    t.lastIntValue = -1, t.advance();
    var r;
    if (t.eat(
      123
      /* { */
    ) && (r = this.regexp_eatUnicodePropertyValueExpression(t)) && t.eat(
      125
      /* } */
    ))
      return n && r === Er && t.raise("Invalid property name"), r;
    t.raise("Invalid property name");
  }
  return a2;
};
function ZB(t) {
  return t === 100 || t === 68 || t === 115 || t === 83 || t === 119 || t === 87;
}
Ee.regexp_eatUnicodePropertyValueExpression = function(t) {
  var e = t.pos;
  if (this.regexp_eatUnicodePropertyName(t) && t.eat(
    61
    /* = */
  )) {
    var n = t.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(t)) {
      var r = t.lastStringValue;
      return this.regexp_validateUnicodePropertyNameAndValue(t, n, r), $s;
    }
  }
  if (t.pos = e, this.regexp_eatLoneUnicodePropertyNameOrValue(t)) {
    var s = t.lastStringValue;
    return this.regexp_validateUnicodePropertyNameOrValue(t, s);
  }
  return a2;
};
Ee.regexp_validateUnicodePropertyNameAndValue = function(t, e, n) {
  Ra(t.unicodeProperties.nonBinary, e) || t.raise("Invalid property name"), t.unicodeProperties.nonBinary[e].test(n) || t.raise("Invalid property value");
};
Ee.regexp_validateUnicodePropertyNameOrValue = function(t, e) {
  if (t.unicodeProperties.binary.test(e))
    return $s;
  if (t.switchV && t.unicodeProperties.binaryOfStrings.test(e))
    return Er;
  t.raise("Invalid property name");
};
Ee.regexp_eatUnicodePropertyName = function(t) {
  var e = 0;
  for (t.lastStringValue = ""; o2(e = t.current()); )
    t.lastStringValue += Zs(e), t.advance();
  return t.lastStringValue !== "";
};
function o2(t) {
  return i2(t) || t === 95;
}
Ee.regexp_eatUnicodePropertyValue = function(t) {
  var e = 0;
  for (t.lastStringValue = ""; $B(e = t.current()); )
    t.lastStringValue += Zs(e), t.advance();
  return t.lastStringValue !== "";
};
function $B(t) {
  return o2(t) || $u(t);
}
Ee.regexp_eatLoneUnicodePropertyNameOrValue = function(t) {
  return this.regexp_eatUnicodePropertyValue(t);
};
Ee.regexp_eatCharacterClass = function(t) {
  if (t.eat(
    91
    /* [ */
  )) {
    var e = t.eat(
      94
      /* ^ */
    ), n = this.regexp_classContents(t);
    return t.eat(
      93
      /* ] */
    ) || t.raise("Unterminated character class"), e && n === Er && t.raise("Negated character class may contain strings"), !0;
  }
  return !1;
};
Ee.regexp_classContents = function(t) {
  return t.current() === 93 ? $s : t.switchV ? this.regexp_classSetExpression(t) : (this.regexp_nonEmptyClassRanges(t), $s);
};
Ee.regexp_nonEmptyClassRanges = function(t) {
  for (; this.regexp_eatClassAtom(t); ) {
    var e = t.lastIntValue;
    if (t.eat(
      45
      /* - */
    ) && this.regexp_eatClassAtom(t)) {
      var n = t.lastIntValue;
      t.switchU && (e === -1 || n === -1) && t.raise("Invalid character class"), e !== -1 && n !== -1 && e > n && t.raise("Range out of order in character class");
    }
  }
};
Ee.regexp_eatClassAtom = function(t) {
  var e = t.pos;
  if (t.eat(
    92
    /* \ */
  )) {
    if (this.regexp_eatClassEscape(t))
      return !0;
    if (t.switchU) {
      var n = t.current();
      (n === 99 || u2(n)) && t.raise("Invalid class escape"), t.raise("Invalid escape");
    }
    t.pos = e;
  }
  var r = t.current();
  return r !== 93 ? (t.lastIntValue = r, t.advance(), !0) : !1;
};
Ee.regexp_eatClassEscape = function(t) {
  var e = t.pos;
  if (t.eat(
    98
    /* b */
  ))
    return t.lastIntValue = 8, !0;
  if (t.switchU && t.eat(
    45
    /* - */
  ))
    return t.lastIntValue = 45, !0;
  if (!t.switchU && t.eat(
    99
    /* c */
  )) {
    if (this.regexp_eatClassControlLetter(t))
      return !0;
    t.pos = e;
  }
  return this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t);
};
Ee.regexp_classSetExpression = function(t) {
  var e = $s, n;
  if (!this.regexp_eatClassSetRange(t)) if (n = this.regexp_eatClassSetOperand(t)) {
    n === Er && (e = Er);
    for (var r = t.pos; t.eatChars(
      [38, 38]
      /* && */
    ); ) {
      if (t.current() !== 38 && (n = this.regexp_eatClassSetOperand(t))) {
        n !== Er && (e = $s);
        continue;
      }
      t.raise("Invalid character in character class");
    }
    if (r !== t.pos)
      return e;
    for (; t.eatChars(
      [45, 45]
      /* -- */
    ); )
      this.regexp_eatClassSetOperand(t) || t.raise("Invalid character in character class");
    if (r !== t.pos)
      return e;
  } else
    t.raise("Invalid character in character class");
  for (; ; )
    if (!this.regexp_eatClassSetRange(t)) {
      if (n = this.regexp_eatClassSetOperand(t), !n)
        return e;
      n === Er && (e = Er);
    }
};
Ee.regexp_eatClassSetRange = function(t) {
  var e = t.pos;
  if (this.regexp_eatClassSetCharacter(t)) {
    var n = t.lastIntValue;
    if (t.eat(
      45
      /* - */
    ) && this.regexp_eatClassSetCharacter(t)) {
      var r = t.lastIntValue;
      return n !== -1 && r !== -1 && n > r && t.raise("Range out of order in character class"), !0;
    }
    t.pos = e;
  }
  return !1;
};
Ee.regexp_eatClassSetOperand = function(t) {
  return this.regexp_eatClassSetCharacter(t) ? $s : this.regexp_eatClassStringDisjunction(t) || this.regexp_eatNestedClass(t);
};
Ee.regexp_eatNestedClass = function(t) {
  var e = t.pos;
  if (t.eat(
    91
    /* [ */
  )) {
    var n = t.eat(
      94
      /* ^ */
    ), r = this.regexp_classContents(t);
    if (t.eat(
      93
      /* ] */
    ))
      return n && r === Er && t.raise("Negated character class may contain strings"), r;
    t.pos = e;
  }
  if (t.eat(
    92
    /* \ */
  )) {
    var s = this.regexp_eatCharacterClassEscape(t);
    if (s)
      return s;
    t.pos = e;
  }
  return null;
};
Ee.regexp_eatClassStringDisjunction = function(t) {
  var e = t.pos;
  if (t.eatChars(
    [92, 113]
    /* \q */
  )) {
    if (t.eat(
      123
      /* { */
    )) {
      var n = this.regexp_classStringDisjunctionContents(t);
      if (t.eat(
        125
        /* } */
      ))
        return n;
    } else
      t.raise("Invalid escape");
    t.pos = e;
  }
  return null;
};
Ee.regexp_classStringDisjunctionContents = function(t) {
  for (var e = this.regexp_classString(t); t.eat(
    124
    /* | */
  ); )
    this.regexp_classString(t) === Er && (e = Er);
  return e;
};
Ee.regexp_classString = function(t) {
  for (var e = 0; this.regexp_eatClassSetCharacter(t); )
    e++;
  return e === 1 ? $s : Er;
};
Ee.regexp_eatClassSetCharacter = function(t) {
  var e = t.pos;
  if (t.eat(
    92
    /* \ */
  ))
    return this.regexp_eatCharacterEscape(t) || this.regexp_eatClassSetReservedPunctuator(t) ? !0 : t.eat(
      98
      /* b */
    ) ? (t.lastIntValue = 8, !0) : (t.pos = e, !1);
  var n = t.current();
  return n < 0 || n === t.lookahead() && LB(n) || IB(n) ? !1 : (t.advance(), t.lastIntValue = n, !0);
};
function LB(t) {
  return t === 33 || t >= 35 && t <= 38 || t >= 42 && t <= 44 || t === 46 || t >= 58 && t <= 64 || t === 94 || t === 96 || t === 126;
}
function IB(t) {
  return t === 40 || t === 41 || t === 45 || t === 47 || t >= 91 && t <= 93 || t >= 123 && t <= 125;
}
Ee.regexp_eatClassSetReservedPunctuator = function(t) {
  var e = t.current();
  return NB(e) ? (t.lastIntValue = e, t.advance(), !0) : !1;
};
function NB(t) {
  return t === 33 || t === 35 || t === 37 || t === 38 || t === 44 || t === 45 || t >= 58 && t <= 62 || t === 64 || t === 96 || t === 126;
}
Ee.regexp_eatClassControlLetter = function(t) {
  var e = t.current();
  return $u(e) || e === 95 ? (t.lastIntValue = e % 32, t.advance(), !0) : !1;
};
Ee.regexp_eatHexEscapeSequence = function(t) {
  var e = t.pos;
  if (t.eat(
    120
    /* x */
  )) {
    if (this.regexp_eatFixedHexDigits(t, 2))
      return !0;
    t.switchU && t.raise("Invalid escape"), t.pos = e;
  }
  return !1;
};
Ee.regexp_eatDecimalDigits = function(t) {
  var e = t.pos, n = 0;
  for (t.lastIntValue = 0; $u(n = t.current()); )
    t.lastIntValue = 10 * t.lastIntValue + (n - 48), t.advance();
  return t.pos !== e;
};
function $u(t) {
  return t >= 48 && t <= 57;
}
Ee.regexp_eatHexDigits = function(t) {
  var e = t.pos, n = 0;
  for (t.lastIntValue = 0; l2(n = t.current()); )
    t.lastIntValue = 16 * t.lastIntValue + c2(n), t.advance();
  return t.pos !== e;
};
function l2(t) {
  return t >= 48 && t <= 57 || t >= 65 && t <= 70 || t >= 97 && t <= 102;
}
function c2(t) {
  return t >= 65 && t <= 70 ? 10 + (t - 65) : t >= 97 && t <= 102 ? 10 + (t - 97) : t - 48;
}
Ee.regexp_eatLegacyOctalEscapeSequence = function(t) {
  if (this.regexp_eatOctalDigit(t)) {
    var e = t.lastIntValue;
    if (this.regexp_eatOctalDigit(t)) {
      var n = t.lastIntValue;
      e <= 3 && this.regexp_eatOctalDigit(t) ? t.lastIntValue = e * 64 + n * 8 + t.lastIntValue : t.lastIntValue = e * 8 + n;
    } else
      t.lastIntValue = e;
    return !0;
  }
  return !1;
};
Ee.regexp_eatOctalDigit = function(t) {
  var e = t.current();
  return u2(e) ? (t.lastIntValue = e - 48, t.advance(), !0) : (t.lastIntValue = 0, !1);
};
function u2(t) {
  return t >= 48 && t <= 55;
}
Ee.regexp_eatFixedHexDigits = function(t, e) {
  var n = t.pos;
  t.lastIntValue = 0;
  for (var r = 0; r < e; ++r) {
    var s = t.current();
    if (!l2(s))
      return t.pos = n, !1;
    t.lastIntValue = 16 * t.lastIntValue + c2(s), t.advance();
  }
  return !0;
};
var $d = function(e) {
  this.type = e.type, this.value = e.value, this.start = e.start, this.end = e.end, e.options.locations && (this.loc = new _u(e, e.startLoc, e.endLoc)), e.options.ranges && (this.range = [e.start, e.end]);
}, lt = mn.prototype;
lt.next = function(t) {
  !t && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new $d(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
};
lt.getToken = function() {
  return this.next(), new $d(this);
};
typeof Symbol < "u" && (lt[Symbol.iterator] = function() {
  var t = this;
  return {
    next: function() {
      var e = t.getToken();
      return {
        done: e.type === F.eof,
        value: e
      };
    }
  };
});
lt.nextToken = function() {
  var t = this.curContext();
  if ((!t || !t.preserveSpace) && this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length)
    return this.finishToken(F.eof);
  if (t.override)
    return t.override(this);
  this.readToken(this.fullCharCodeAtPos());
};
lt.readToken = function(t) {
  return Rs(t, this.options.ecmaVersion >= 6) || t === 92 ? this.readWord() : this.getTokenFromCode(t);
};
lt.fullCharCodeAtPos = function() {
  var t = this.input.charCodeAt(this.pos);
  if (t <= 55295 || t >= 56320)
    return t;
  var e = this.input.charCodeAt(this.pos + 1);
  return e <= 56319 || e >= 57344 ? t : (t << 10) + e - 56613888;
};
lt.skipBlockComment = function() {
  var t = this.options.onComment && this.curPosition(), e = this.pos, n = this.input.indexOf("*/", this.pos += 2);
  if (n === -1 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = n + 2, this.options.locations)
    for (var r = void 0, s = e; (r = Tk(this.input, s, this.pos)) > -1; )
      ++this.curLine, s = this.lineStart = r;
  this.options.onComment && this.options.onComment(
    !0,
    this.input.slice(e + 2, n),
    e,
    this.pos,
    t,
    this.curPosition()
  );
};
lt.skipLineComment = function(t) {
  for (var e = this.pos, n = this.options.onComment && this.curPosition(), r = this.input.charCodeAt(this.pos += t); this.pos < this.input.length && !_a(r); )
    r = this.input.charCodeAt(++this.pos);
  this.options.onComment && this.options.onComment(
    !1,
    this.input.slice(e + t, this.pos),
    e,
    this.pos,
    n,
    this.curPosition()
  );
};
lt.skipSpace = function() {
  e: for (; this.pos < this.input.length; ) {
    var t = this.input.charCodeAt(this.pos);
    switch (t) {
      case 32:
      case 160:
        ++this.pos;
        break;
      case 13:
        this.input.charCodeAt(this.pos + 1) === 10 && ++this.pos;
      case 10:
      case 8232:
      case 8233:
        ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
        break;
      case 47:
        switch (this.input.charCodeAt(this.pos + 1)) {
          case 42:
            this.skipBlockComment();
            break;
          case 47:
            this.skipLineComment(2);
            break;
          default:
            break e;
        }
        break;
      default:
        if (t > 8 && t < 14 || t >= 5760 && Qk.test(String.fromCharCode(t)))
          ++this.pos;
        else
          break e;
    }
  }
};
lt.finishToken = function(t, e) {
  this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
  var n = this.type;
  this.type = t, this.value = e, this.updateContext(n);
};
lt.readToken_dot = function() {
  var t = this.input.charCodeAt(this.pos + 1);
  if (t >= 48 && t <= 57)
    return this.readNumber(!0);
  var e = this.input.charCodeAt(this.pos + 2);
  return this.options.ecmaVersion >= 6 && t === 46 && e === 46 ? (this.pos += 3, this.finishToken(F.ellipsis)) : (++this.pos, this.finishToken(F.dot));
};
lt.readToken_slash = function() {
  var t = this.input.charCodeAt(this.pos + 1);
  return this.exprAllowed ? (++this.pos, this.readRegexp()) : t === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.slash, 1);
};
lt.readToken_mult_modulo_exp = function(t) {
  var e = this.input.charCodeAt(this.pos + 1), n = 1, r = t === 42 ? F.star : F.modulo;
  return this.options.ecmaVersion >= 7 && t === 42 && e === 42 && (++n, r = F.starstar, e = this.input.charCodeAt(this.pos + 2)), e === 61 ? this.finishOp(F.assign, n + 1) : this.finishOp(r, n);
};
lt.readToken_pipe_amp = function(t) {
  var e = this.input.charCodeAt(this.pos + 1);
  if (e === t) {
    if (this.options.ecmaVersion >= 12) {
      var n = this.input.charCodeAt(this.pos + 2);
      if (n === 61)
        return this.finishOp(F.assign, 3);
    }
    return this.finishOp(t === 124 ? F.logicalOR : F.logicalAND, 2);
  }
  return e === 61 ? this.finishOp(F.assign, 2) : this.finishOp(t === 124 ? F.bitwiseOR : F.bitwiseAND, 1);
};
lt.readToken_caret = function() {
  var t = this.input.charCodeAt(this.pos + 1);
  return t === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.bitwiseXOR, 1);
};
lt.readToken_plus_min = function(t) {
  var e = this.input.charCodeAt(this.pos + 1);
  return e === t ? e === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || Rr.test(this.input.slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(F.incDec, 2) : e === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.plusMin, 1);
};
lt.readToken_lt_gt = function(t) {
  var e = this.input.charCodeAt(this.pos + 1), n = 1;
  return e === t ? (n = t === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.pos + n) === 61 ? this.finishOp(F.assign, n + 1) : this.finishOp(F.bitShift, n)) : e === 33 && t === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45 ? (this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (e === 61 && (n = 2), this.finishOp(F.relational, n));
};
lt.readToken_eq_excl = function(t) {
  var e = this.input.charCodeAt(this.pos + 1);
  return e === 61 ? this.finishOp(F.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) : t === 61 && e === 62 && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(F.arrow)) : this.finishOp(t === 61 ? F.eq : F.prefix, 1);
};
lt.readToken_question = function() {
  var t = this.options.ecmaVersion;
  if (t >= 11) {
    var e = this.input.charCodeAt(this.pos + 1);
    if (e === 46) {
      var n = this.input.charCodeAt(this.pos + 2);
      if (n < 48 || n > 57)
        return this.finishOp(F.questionDot, 2);
    }
    if (e === 63) {
      if (t >= 12) {
        var r = this.input.charCodeAt(this.pos + 2);
        if (r === 61)
          return this.finishOp(F.assign, 3);
      }
      return this.finishOp(F.coalesce, 2);
    }
  }
  return this.finishOp(F.question, 1);
};
lt.readToken_numberSign = function() {
  var t = this.options.ecmaVersion, e = 35;
  if (t >= 13 && (++this.pos, e = this.fullCharCodeAtPos(), Rs(e, !0) || e === 92))
    return this.finishToken(F.privateId, this.readWord1());
  this.raise(this.pos, "Unexpected character '" + Zs(e) + "'");
};
lt.getTokenFromCode = function(t) {
  switch (t) {
    // The interpretation of a dot depends on whether it is followed
    // by a digit or another two dots.
    case 46:
      return this.readToken_dot();
    // Punctuation tokens.
    case 40:
      return ++this.pos, this.finishToken(F.parenL);
    case 41:
      return ++this.pos, this.finishToken(F.parenR);
    case 59:
      return ++this.pos, this.finishToken(F.semi);
    case 44:
      return ++this.pos, this.finishToken(F.comma);
    case 91:
      return ++this.pos, this.finishToken(F.bracketL);
    case 93:
      return ++this.pos, this.finishToken(F.bracketR);
    case 123:
      return ++this.pos, this.finishToken(F.braceL);
    case 125:
      return ++this.pos, this.finishToken(F.braceR);
    case 58:
      return ++this.pos, this.finishToken(F.colon);
    case 96:
      if (this.options.ecmaVersion < 6)
        break;
      return ++this.pos, this.finishToken(F.backQuote);
    case 48:
      var e = this.input.charCodeAt(this.pos + 1);
      if (e === 120 || e === 88)
        return this.readRadixNumber(16);
      if (this.options.ecmaVersion >= 6) {
        if (e === 111 || e === 79)
          return this.readRadixNumber(8);
        if (e === 98 || e === 66)
          return this.readRadixNumber(2);
      }
    // Anything else beginning with a digit is an integer, octal
    // number, or float.
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      return this.readNumber(!1);
    // Quotes produce strings.
    case 34:
    case 39:
      return this.readString(t);
    // Operators are parsed inline in tiny state machines. '=' (61) is
    // often referred to. `finishOp` simply skips the amount of
    // characters it is given as second argument, and returns a token
    // of the type given by its first argument.
    case 47:
      return this.readToken_slash();
    case 37:
    case 42:
      return this.readToken_mult_modulo_exp(t);
    case 124:
    case 38:
      return this.readToken_pipe_amp(t);
    case 94:
      return this.readToken_caret();
    case 43:
    case 45:
      return this.readToken_plus_min(t);
    case 60:
    case 62:
      return this.readToken_lt_gt(t);
    case 61:
    case 33:
      return this.readToken_eq_excl(t);
    case 63:
      return this.readToken_question();
    case 126:
      return this.finishOp(F.prefix, 1);
    case 35:
      return this.readToken_numberSign();
  }
  this.raise(this.pos, "Unexpected character '" + Zs(t) + "'");
};
lt.finishOp = function(t, e) {
  var n = this.input.slice(this.pos, this.pos + e);
  return this.pos += e, this.finishToken(t, n);
};
lt.readRegexp = function() {
  for (var t, e, n = this.pos; ; ) {
    this.pos >= this.input.length && this.raise(n, "Unterminated regular expression");
    var r = this.input.charAt(this.pos);
    if (Rr.test(r) && this.raise(n, "Unterminated regular expression"), t)
      t = !1;
    else {
      if (r === "[")
        e = !0;
      else if (r === "]" && e)
        e = !1;
      else if (r === "/" && !e)
        break;
      t = r === "\\";
    }
    ++this.pos;
  }
  var s = this.input.slice(n, this.pos);
  ++this.pos;
  var i = this.pos, a = this.readWord1();
  this.containsEsc && this.unexpected(i);
  var o = this.regexpState || (this.regexpState = new Cs(this));
  o.reset(n, s, a), this.validateRegExpFlags(o), this.validateRegExpPattern(o);
  var l = null;
  try {
    l = new RegExp(s, a);
  } catch {
  }
  return this.finishToken(F.regexp, { pattern: s, flags: a, value: l });
};
lt.readInt = function(t, e, n) {
  for (var r = this.options.ecmaVersion >= 12 && e === void 0, s = n && this.input.charCodeAt(this.pos) === 48, i = this.pos, a = 0, o = 0, l = 0, u = e ?? 1 / 0; l < u; ++l, ++this.pos) {
    var h = this.input.charCodeAt(this.pos), f = void 0;
    if (r && h === 95) {
      s && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), o === 95 && this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"), l === 0 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"), o = h;
      continue;
    }
    if (h >= 97 ? f = h - 97 + 10 : h >= 65 ? f = h - 65 + 10 : h >= 48 && h <= 57 ? f = h - 48 : f = 1 / 0, f >= t)
      break;
    o = h, a = a * t + f;
  }
  return r && o === 95 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === i || e != null && this.pos - i !== e ? null : a;
};
function VB(t, e) {
  return e ? parseInt(t, 8) : parseFloat(t.replace(/_/g, ""));
}
function h2(t) {
  return typeof BigInt != "function" ? null : BigInt(t.replace(/_/g, ""));
}
lt.readRadixNumber = function(t) {
  var e = this.pos;
  this.pos += 2;
  var n = this.readInt(t);
  return n == null && this.raise(this.start + 2, "Expected number in radix " + t), this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110 ? (n = h2(this.input.slice(e, this.pos)), ++this.pos) : Rs(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(F.num, n);
};
lt.readNumber = function(t) {
  var e = this.pos;
  !t && this.readInt(10, void 0, !0) === null && this.raise(e, "Invalid number");
  var n = this.pos - e >= 2 && this.input.charCodeAt(e) === 48;
  n && this.strict && this.raise(e, "Invalid number");
  var r = this.input.charCodeAt(this.pos);
  if (!n && !t && this.options.ecmaVersion >= 11 && r === 110) {
    var s = h2(this.input.slice(e, this.pos));
    return ++this.pos, Rs(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(F.num, s);
  }
  n && /[89]/.test(this.input.slice(e, this.pos)) && (n = !1), r === 46 && !n && (++this.pos, this.readInt(10), r = this.input.charCodeAt(this.pos)), (r === 69 || r === 101) && !n && (r = this.input.charCodeAt(++this.pos), (r === 43 || r === 45) && ++this.pos, this.readInt(10) === null && this.raise(e, "Invalid number")), Rs(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
  var i = VB(this.input.slice(e, this.pos), n);
  return this.finishToken(F.num, i);
};
lt.readCodePoint = function() {
  var t = this.input.charCodeAt(this.pos), e;
  if (t === 123) {
    this.options.ecmaVersion < 6 && this.unexpected();
    var n = ++this.pos;
    e = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, e > 1114111 && this.invalidStringToken(n, "Code point out of bounds");
  } else
    e = this.readHexChar(4);
  return e;
};
lt.readString = function(t) {
  for (var e = "", n = ++this.pos; ; ) {
    this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
    var r = this.input.charCodeAt(this.pos);
    if (r === t)
      break;
    r === 92 ? (e += this.input.slice(n, this.pos), e += this.readEscapedChar(!1), n = this.pos) : r === 8232 || r === 8233 ? (this.options.ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.lineStart = this.pos)) : (_a(r) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
  }
  return e += this.input.slice(n, this.pos++), this.finishToken(F.string, e);
};
var p2 = {};
lt.tryReadTemplateToken = function() {
  this.inTemplateElement = !0;
  try {
    this.readTmplToken();
  } catch (t) {
    if (t === p2)
      this.readInvalidTemplateToken();
    else
      throw t;
  }
  this.inTemplateElement = !1;
};
lt.invalidStringToken = function(t, e) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9)
    throw p2;
  this.raise(t, e);
};
lt.readTmplToken = function() {
  for (var t = "", e = this.pos; ; ) {
    this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
    var n = this.input.charCodeAt(this.pos);
    if (n === 96 || n === 36 && this.input.charCodeAt(this.pos + 1) === 123)
      return this.pos === this.start && (this.type === F.template || this.type === F.invalidTemplate) ? n === 36 ? (this.pos += 2, this.finishToken(F.dollarBraceL)) : (++this.pos, this.finishToken(F.backQuote)) : (t += this.input.slice(e, this.pos), this.finishToken(F.template, t));
    if (n === 92)
      t += this.input.slice(e, this.pos), t += this.readEscapedChar(!0), e = this.pos;
    else if (_a(n)) {
      switch (t += this.input.slice(e, this.pos), ++this.pos, n) {
        case 13:
          this.input.charCodeAt(this.pos) === 10 && ++this.pos;
        case 10:
          t += `
`;
          break;
        default:
          t += String.fromCharCode(n);
          break;
      }
      this.options.locations && (++this.curLine, this.lineStart = this.pos), e = this.pos;
    } else
      ++this.pos;
  }
};
lt.readInvalidTemplateToken = function() {
  for (; this.pos < this.input.length; this.pos++)
    switch (this.input[this.pos]) {
      case "\\":
        ++this.pos;
        break;
      case "$":
        if (this.input[this.pos + 1] !== "{")
          break;
      // fall through
      case "`":
        return this.finishToken(F.invalidTemplate, this.input.slice(this.start, this.pos));
      case "\r":
        this.input[this.pos + 1] === `
` && ++this.pos;
      // fall through
      case `
`:
      case "\u2028":
      case "\u2029":
        ++this.curLine, this.lineStart = this.pos + 1;
        break;
    }
  this.raise(this.start, "Unterminated template");
};
lt.readEscapedChar = function(t) {
  var e = this.input.charCodeAt(++this.pos);
  switch (++this.pos, e) {
    case 110:
      return `
`;
    // 'n' -> '\n'
    case 114:
      return "\r";
    // 'r' -> '\r'
    case 120:
      return String.fromCharCode(this.readHexChar(2));
    // 'x'
    case 117:
      return Zs(this.readCodePoint());
    // 'u'
    case 116:
      return "	";
    // 't' -> '\t'
    case 98:
      return "\b";
    // 'b' -> '\b'
    case 118:
      return "\v";
    // 'v' -> '\u000b'
    case 102:
      return "\f";
    // 'f' -> '\f'
    case 13:
      this.input.charCodeAt(this.pos) === 10 && ++this.pos;
    // '\r\n'
    case 10:
      return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
    case 56:
    case 57:
      if (this.strict && this.invalidStringToken(
        this.pos - 1,
        "Invalid escape sequence"
      ), t) {
        var n = this.pos - 1;
        this.invalidStringToken(
          n,
          "Invalid escape sequence in template string"
        );
      }
    default:
      if (e >= 48 && e <= 55) {
        var r = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], s = parseInt(r, 8);
        return s > 255 && (r = r.slice(0, -1), s = parseInt(r, 8)), this.pos += r.length - 1, e = this.input.charCodeAt(this.pos), (r !== "0" || e === 56 || e === 57) && (this.strict || t) && this.invalidStringToken(
          this.pos - 1 - r.length,
          t ? "Octal literal in template string" : "Octal literal in strict mode"
        ), String.fromCharCode(s);
      }
      return _a(e) ? (this.options.locations && (this.lineStart = this.pos, ++this.curLine), "") : String.fromCharCode(e);
  }
};
lt.readHexChar = function(t) {
  var e = this.pos, n = this.readInt(16, t);
  return n === null && this.invalidStringToken(e, "Bad character escape sequence"), n;
};
lt.readWord1 = function() {
  this.containsEsc = !1;
  for (var t = "", e = !0, n = this.pos, r = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) {
    var s = this.fullCharCodeAtPos();
    if (wa(s, r))
      this.pos += s <= 65535 ? 1 : 2;
    else if (s === 92) {
      this.containsEsc = !0, t += this.input.slice(n, this.pos);
      var i = this.pos;
      this.input.charCodeAt(++this.pos) !== 117 && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.pos;
      var a = this.readCodePoint();
      (e ? Rs : wa)(a, r) || this.invalidStringToken(i, "Invalid Unicode escape"), t += Zs(a), n = this.pos;
    } else
      break;
    e = !1;
  }
  return t + this.input.slice(n, this.pos);
};
lt.readWord = function() {
  var t = this.readWord1(), e = F.name;
  return this.keywords.test(t) && (e = Md[t]), this.finishToken(e, t);
};
var XB = "8.14.0";
mn.acorn = {
  Parser: mn,
  version: XB,
  defaultOptions: Tp,
  Position: Fo,
  SourceLocation: _u,
  getLineInfo: _k,
  Node: Zu,
  TokenType: pt,
  tokTypes: F,
  keywordTypes: Md,
  TokContext: Gr,
  tokContexts: Nt,
  isIdentifierChar: wa,
  isIdentifierStart: Rs,
  Token: $d,
  isNewLine: _a,
  lineBreak: Rr,
  lineBreakG: pB,
  nonASCIIwhitespace: Qk
};
function WB(t, e) {
  return mn.parse(t, e);
}
var UB = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function qB(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
function aL(t) {
  if (t.__esModule) return t;
  var e = t.default;
  if (typeof e == "function") {
    var n = function r() {
      return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    n.prototype = e.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(t).forEach(function(r) {
    var s = Object.getOwnPropertyDescriptor(t, r);
    Object.defineProperty(n, r, s.get ? s : {
      enumerable: !0,
      get: function() {
        return t[r];
      }
    });
  }), n;
}
var Dh = {}, Eh = {}, ug;
function GB() {
  return ug || (ug = 1, function(t) {
    (function e(n) {
      var r, s, i, a, o, l;
      function u(M) {
        var Z = {}, N, q;
        for (N in M)
          M.hasOwnProperty(N) && (q = M[N], typeof q == "object" && q !== null ? Z[N] = u(q) : Z[N] = q);
        return Z;
      }
      function h(M, Z) {
        var N, q, ae, J;
        for (q = M.length, ae = 0; q; )
          N = q >>> 1, J = ae + N, Z(M[J]) ? q = N : (ae = J + 1, q -= N + 1);
        return ae;
      }
      r = {
        AssignmentExpression: "AssignmentExpression",
        AssignmentPattern: "AssignmentPattern",
        ArrayExpression: "ArrayExpression",
        ArrayPattern: "ArrayPattern",
        ArrowFunctionExpression: "ArrowFunctionExpression",
        AwaitExpression: "AwaitExpression",
        // CAUTION: It's deferred to ES7.
        BlockStatement: "BlockStatement",
        BinaryExpression: "BinaryExpression",
        BreakStatement: "BreakStatement",
        CallExpression: "CallExpression",
        CatchClause: "CatchClause",
        ChainExpression: "ChainExpression",
        ClassBody: "ClassBody",
        ClassDeclaration: "ClassDeclaration",
        ClassExpression: "ClassExpression",
        ComprehensionBlock: "ComprehensionBlock",
        // CAUTION: It's deferred to ES7.
        ComprehensionExpression: "ComprehensionExpression",
        // CAUTION: It's deferred to ES7.
        ConditionalExpression: "ConditionalExpression",
        ContinueStatement: "ContinueStatement",
        DebuggerStatement: "DebuggerStatement",
        DirectiveStatement: "DirectiveStatement",
        DoWhileStatement: "DoWhileStatement",
        EmptyStatement: "EmptyStatement",
        ExportAllDeclaration: "ExportAllDeclaration",
        ExportDefaultDeclaration: "ExportDefaultDeclaration",
        ExportNamedDeclaration: "ExportNamedDeclaration",
        ExportSpecifier: "ExportSpecifier",
        ExpressionStatement: "ExpressionStatement",
        ForStatement: "ForStatement",
        ForInStatement: "ForInStatement",
        ForOfStatement: "ForOfStatement",
        FunctionDeclaration: "FunctionDeclaration",
        FunctionExpression: "FunctionExpression",
        GeneratorExpression: "GeneratorExpression",
        // CAUTION: It's deferred to ES7.
        Identifier: "Identifier",
        IfStatement: "IfStatement",
        ImportExpression: "ImportExpression",
        ImportDeclaration: "ImportDeclaration",
        ImportDefaultSpecifier: "ImportDefaultSpecifier",
        ImportNamespaceSpecifier: "ImportNamespaceSpecifier",
        ImportSpecifier: "ImportSpecifier",
        Literal: "Literal",
        LabeledStatement: "LabeledStatement",
        LogicalExpression: "LogicalExpression",
        MemberExpression: "MemberExpression",
        MetaProperty: "MetaProperty",
        MethodDefinition: "MethodDefinition",
        ModuleSpecifier: "ModuleSpecifier",
        NewExpression: "NewExpression",
        ObjectExpression: "ObjectExpression",
        ObjectPattern: "ObjectPattern",
        PrivateIdentifier: "PrivateIdentifier",
        Program: "Program",
        Property: "Property",
        PropertyDefinition: "PropertyDefinition",
        RestElement: "RestElement",
        ReturnStatement: "ReturnStatement",
        SequenceExpression: "SequenceExpression",
        SpreadElement: "SpreadElement",
        Super: "Super",
        SwitchStatement: "SwitchStatement",
        SwitchCase: "SwitchCase",
        TaggedTemplateExpression: "TaggedTemplateExpression",
        TemplateElement: "TemplateElement",
        TemplateLiteral: "TemplateLiteral",
        ThisExpression: "ThisExpression",
        ThrowStatement: "ThrowStatement",
        TryStatement: "TryStatement",
        UnaryExpression: "UnaryExpression",
        UpdateExpression: "UpdateExpression",
        VariableDeclaration: "VariableDeclaration",
        VariableDeclarator: "VariableDeclarator",
        WhileStatement: "WhileStatement",
        WithStatement: "WithStatement",
        YieldExpression: "YieldExpression"
      }, i = {
        AssignmentExpression: ["left", "right"],
        AssignmentPattern: ["left", "right"],
        ArrayExpression: ["elements"],
        ArrayPattern: ["elements"],
        ArrowFunctionExpression: ["params", "body"],
        AwaitExpression: ["argument"],
        // CAUTION: It's deferred to ES7.
        BlockStatement: ["body"],
        BinaryExpression: ["left", "right"],
        BreakStatement: ["label"],
        CallExpression: ["callee", "arguments"],
        CatchClause: ["param", "body"],
        ChainExpression: ["expression"],
        ClassBody: ["body"],
        ClassDeclaration: ["id", "superClass", "body"],
        ClassExpression: ["id", "superClass", "body"],
        ComprehensionBlock: ["left", "right"],
        // CAUTION: It's deferred to ES7.
        ComprehensionExpression: ["blocks", "filter", "body"],
        // CAUTION: It's deferred to ES7.
        ConditionalExpression: ["test", "consequent", "alternate"],
        ContinueStatement: ["label"],
        DebuggerStatement: [],
        DirectiveStatement: [],
        DoWhileStatement: ["body", "test"],
        EmptyStatement: [],
        ExportAllDeclaration: ["source"],
        ExportDefaultDeclaration: ["declaration"],
        ExportNamedDeclaration: ["declaration", "specifiers", "source"],
        ExportSpecifier: ["exported", "local"],
        ExpressionStatement: ["expression"],
        ForStatement: ["init", "test", "update", "body"],
        ForInStatement: ["left", "right", "body"],
        ForOfStatement: ["left", "right", "body"],
        FunctionDeclaration: ["id", "params", "body"],
        FunctionExpression: ["id", "params", "body"],
        GeneratorExpression: ["blocks", "filter", "body"],
        // CAUTION: It's deferred to ES7.
        Identifier: [],
        IfStatement: ["test", "consequent", "alternate"],
        ImportExpression: ["source"],
        ImportDeclaration: ["specifiers", "source"],
        ImportDefaultSpecifier: ["local"],
        ImportNamespaceSpecifier: ["local"],
        ImportSpecifier: ["imported", "local"],
        Literal: [],
        LabeledStatement: ["label", "body"],
        LogicalExpression: ["left", "right"],
        MemberExpression: ["object", "property"],
        MetaProperty: ["meta", "property"],
        MethodDefinition: ["key", "value"],
        ModuleSpecifier: [],
        NewExpression: ["callee", "arguments"],
        ObjectExpression: ["properties"],
        ObjectPattern: ["properties"],
        PrivateIdentifier: [],
        Program: ["body"],
        Property: ["key", "value"],
        PropertyDefinition: ["key", "value"],
        RestElement: ["argument"],
        ReturnStatement: ["argument"],
        SequenceExpression: ["expressions"],
        SpreadElement: ["argument"],
        Super: [],
        SwitchStatement: ["discriminant", "cases"],
        SwitchCase: ["test", "consequent"],
        TaggedTemplateExpression: ["tag", "quasi"],
        TemplateElement: [],
        TemplateLiteral: ["quasis", "expressions"],
        ThisExpression: [],
        ThrowStatement: ["argument"],
        TryStatement: ["block", "handler", "finalizer"],
        UnaryExpression: ["argument"],
        UpdateExpression: ["argument"],
        VariableDeclaration: ["declarations"],
        VariableDeclarator: ["id", "init"],
        WhileStatement: ["test", "body"],
        WithStatement: ["object", "body"],
        YieldExpression: ["argument"]
      }, a = {}, o = {}, l = {}, s = {
        Break: a,
        Skip: o,
        Remove: l
      };
      function f(M, Z) {
        this.parent = M, this.key = Z;
      }
      f.prototype.replace = function(Z) {
        this.parent[this.key] = Z;
      }, f.prototype.remove = function() {
        return Array.isArray(this.parent) ? (this.parent.splice(this.key, 1), !0) : (this.replace(null), !1);
      };
      function m(M, Z, N, q) {
        this.node = M, this.path = Z, this.wrap = N, this.ref = q;
      }
      function b() {
      }
      b.prototype.path = function() {
        var Z, N, q, ae, J, pe;
        function H(oe, fe) {
          if (Array.isArray(fe))
            for (q = 0, ae = fe.length; q < ae; ++q)
              oe.push(fe[q]);
          else
            oe.push(fe);
        }
        if (!this.__current.path)
          return null;
        for (J = [], Z = 2, N = this.__leavelist.length; Z < N; ++Z)
          pe = this.__leavelist[Z], H(J, pe.path);
        return H(J, this.__current.path), J;
      }, b.prototype.type = function() {
        var M = this.current();
        return M.type || this.__current.wrap;
      }, b.prototype.parents = function() {
        var Z, N, q;
        for (q = [], Z = 1, N = this.__leavelist.length; Z < N; ++Z)
          q.push(this.__leavelist[Z].node);
        return q;
      }, b.prototype.current = function() {
        return this.__current.node;
      }, b.prototype.__execute = function(Z, N) {
        var q, ae;
        return ae = void 0, q = this.__current, this.__current = N, this.__state = null, Z && (ae = Z.call(this, N.node, this.__leavelist[this.__leavelist.length - 1].node)), this.__current = q, ae;
      }, b.prototype.notify = function(Z) {
        this.__state = Z;
      }, b.prototype.skip = function() {
        this.notify(o);
      }, b.prototype.break = function() {
        this.notify(a);
      }, b.prototype.remove = function() {
        this.notify(l);
      }, b.prototype.__initialize = function(M, Z) {
        this.visitor = Z, this.root = M, this.__worklist = [], this.__leavelist = [], this.__current = null, this.__state = null, this.__fallback = null, Z.fallback === "iteration" ? this.__fallback = Object.keys : typeof Z.fallback == "function" && (this.__fallback = Z.fallback), this.__keys = i, Z.keys && (this.__keys = Object.assign(Object.create(this.__keys), Z.keys));
      };
      function v(M) {
        return M == null ? !1 : typeof M == "object" && typeof M.type == "string";
      }
      function C(M, Z) {
        return (M === r.ObjectExpression || M === r.ObjectPattern) && Z === "properties";
      }
      function S(M, Z) {
        for (var N = M.length - 1; N >= 0; --N)
          if (M[N].node === Z)
            return !0;
        return !1;
      }
      b.prototype.traverse = function(Z, N) {
        var q, ae, J, pe, H, oe, fe, ke, Pe, ie, Ce, Le;
        for (this.__initialize(Z, N), Le = {}, q = this.__worklist, ae = this.__leavelist, q.push(new m(Z, null, null, null)), ae.push(new m(null, null, null, null)); q.length; ) {
          if (J = q.pop(), J === Le) {
            if (J = ae.pop(), oe = this.__execute(N.leave, J), this.__state === a || oe === a)
              return;
            continue;
          }
          if (J.node) {
            if (oe = this.__execute(N.enter, J), this.__state === a || oe === a)
              return;
            if (q.push(Le), ae.push(J), this.__state === o || oe === o)
              continue;
            if (pe = J.node, H = pe.type || J.wrap, ie = this.__keys[H], !ie)
              if (this.__fallback)
                ie = this.__fallback(pe);
              else
                throw new Error("Unknown node type " + H + ".");
            for (ke = ie.length; (ke -= 1) >= 0; )
              if (fe = ie[ke], Ce = pe[fe], !!Ce) {
                if (Array.isArray(Ce)) {
                  for (Pe = Ce.length; (Pe -= 1) >= 0; )
                    if (Ce[Pe] && !S(ae, Ce[Pe])) {
                      if (C(H, ie[ke]))
                        J = new m(Ce[Pe], [fe, Pe], "Property", null);
                      else if (v(Ce[Pe]))
                        J = new m(Ce[Pe], [fe, Pe], null, null);
                      else
                        continue;
                      q.push(J);
                    }
                } else if (v(Ce)) {
                  if (S(ae, Ce))
                    continue;
                  q.push(new m(Ce, fe, null, null));
                }
              }
          }
        }
      }, b.prototype.replace = function(Z, N) {
        var q, ae, J, pe, H, oe, fe, ke, Pe, ie, Ce, Le, Ue;
        function De(ue) {
          var _e, He, dt, $e;
          if (ue.ref.remove()) {
            for (He = ue.ref.key, $e = ue.ref.parent, _e = q.length; _e--; )
              if (dt = q[_e], dt.ref && dt.ref.parent === $e) {
                if (dt.ref.key < He)
                  break;
                --dt.ref.key;
              }
          }
        }
        for (this.__initialize(Z, N), Ce = {}, q = this.__worklist, ae = this.__leavelist, Le = {
          root: Z
        }, oe = new m(Z, null, null, new f(Le, "root")), q.push(oe), ae.push(oe); q.length; ) {
          if (oe = q.pop(), oe === Ce) {
            if (oe = ae.pop(), H = this.__execute(N.leave, oe), H !== void 0 && H !== a && H !== o && H !== l && oe.ref.replace(H), (this.__state === l || H === l) && De(oe), this.__state === a || H === a)
              return Le.root;
            continue;
          }
          if (H = this.__execute(N.enter, oe), H !== void 0 && H !== a && H !== o && H !== l && (oe.ref.replace(H), oe.node = H), (this.__state === l || H === l) && (De(oe), oe.node = null), this.__state === a || H === a)
            return Le.root;
          if (J = oe.node, !!J && (q.push(Ce), ae.push(oe), !(this.__state === o || H === o))) {
            if (pe = J.type || oe.wrap, Pe = this.__keys[pe], !Pe)
              if (this.__fallback)
                Pe = this.__fallback(J);
              else
                throw new Error("Unknown node type " + pe + ".");
            for (fe = Pe.length; (fe -= 1) >= 0; )
              if (Ue = Pe[fe], ie = J[Ue], !!ie)
                if (Array.isArray(ie)) {
                  for (ke = ie.length; (ke -= 1) >= 0; )
                    if (ie[ke]) {
                      if (C(pe, Pe[fe]))
                        oe = new m(ie[ke], [Ue, ke], "Property", new f(ie, ke));
                      else if (v(ie[ke]))
                        oe = new m(ie[ke], [Ue, ke], null, new f(ie, ke));
                      else
                        continue;
                      q.push(oe);
                    }
                } else v(ie) && q.push(new m(ie, Ue, null, new f(J, Ue)));
          }
        }
        return Le.root;
      };
      function B(M, Z) {
        var N = new b();
        return N.traverse(M, Z);
      }
      function $(M, Z) {
        var N = new b();
        return N.replace(M, Z);
      }
      function W(M, Z) {
        var N;
        return N = h(Z, function(ae) {
          return ae.range[0] > M.range[0];
        }), M.extendedRange = [M.range[0], M.range[1]], N !== Z.length && (M.extendedRange[1] = Z[N].range[0]), N -= 1, N >= 0 && (M.extendedRange[0] = Z[N].range[1]), M;
      }
      function _(M, Z, N) {
        var q = [], ae, J, pe, H;
        if (!M.range)
          throw new Error("attachComments needs range information");
        if (!N.length) {
          if (Z.length) {
            for (pe = 0, J = Z.length; pe < J; pe += 1)
              ae = u(Z[pe]), ae.extendedRange = [0, M.range[0]], q.push(ae);
            M.leadingComments = q;
          }
          return M;
        }
        for (pe = 0, J = Z.length; pe < J; pe += 1)
          q.push(W(u(Z[pe]), N));
        return H = 0, B(M, {
          enter: function(oe) {
            for (var fe; H < q.length && (fe = q[H], !(fe.extendedRange[1] > oe.range[0])); )
              fe.extendedRange[1] === oe.range[0] ? (oe.leadingComments || (oe.leadingComments = []), oe.leadingComments.push(fe), q.splice(H, 1)) : H += 1;
            if (H === q.length)
              return s.Break;
            if (q[H].extendedRange[0] > oe.range[1])
              return s.Skip;
          }
        }), H = 0, B(M, {
          leave: function(oe) {
            for (var fe; H < q.length && (fe = q[H], !(oe.range[1] < fe.extendedRange[0])); )
              oe.range[1] === fe.extendedRange[0] ? (oe.trailingComments || (oe.trailingComments = []), oe.trailingComments.push(fe), q.splice(H, 1)) : H += 1;
            if (H === q.length)
              return s.Break;
            if (q[H].extendedRange[0] > oe.range[1])
              return s.Skip;
          }
        }), M;
      }
      return n.Syntax = r, n.traverse = B, n.replace = $, n.attachComments = _, n.VisitorKeys = i, n.VisitorOption = s, n.Controller = b, n.cloneEnvironment = function() {
        return e({});
      }, n;
    })(t);
  }(Eh)), Eh;
}
var eo = {}, Fh = { exports: {} }, hg;
function zB() {
  return hg || (hg = 1, function() {
    function t(a) {
      if (a == null)
        return !1;
      switch (a.type) {
        case "ArrayExpression":
        case "AssignmentExpression":
        case "BinaryExpression":
        case "CallExpression":
        case "ConditionalExpression":
        case "FunctionExpression":
        case "Identifier":
        case "Literal":
        case "LogicalExpression":
        case "MemberExpression":
        case "NewExpression":
        case "ObjectExpression":
        case "SequenceExpression":
        case "ThisExpression":
        case "UnaryExpression":
        case "UpdateExpression":
          return !0;
      }
      return !1;
    }
    function e(a) {
      if (a == null)
        return !1;
      switch (a.type) {
        case "DoWhileStatement":
        case "ForInStatement":
        case "ForStatement":
        case "WhileStatement":
          return !0;
      }
      return !1;
    }
    function n(a) {
      if (a == null)
        return !1;
      switch (a.type) {
        case "BlockStatement":
        case "BreakStatement":
        case "ContinueStatement":
        case "DebuggerStatement":
        case "DoWhileStatement":
        case "EmptyStatement":
        case "ExpressionStatement":
        case "ForInStatement":
        case "ForStatement":
        case "IfStatement":
        case "LabeledStatement":
        case "ReturnStatement":
        case "SwitchStatement":
        case "ThrowStatement":
        case "TryStatement":
        case "VariableDeclaration":
        case "WhileStatement":
        case "WithStatement":
          return !0;
      }
      return !1;
    }
    function r(a) {
      return n(a) || a != null && a.type === "FunctionDeclaration";
    }
    function s(a) {
      switch (a.type) {
        case "IfStatement":
          return a.alternate != null ? a.alternate : a.consequent;
        case "LabeledStatement":
        case "ForStatement":
        case "ForInStatement":
        case "WhileStatement":
        case "WithStatement":
          return a.body;
      }
      return null;
    }
    function i(a) {
      var o;
      if (a.type !== "IfStatement" || a.alternate == null)
        return !1;
      o = a.consequent;
      do {
        if (o.type === "IfStatement" && o.alternate == null)
          return !0;
        o = s(o);
      } while (o);
      return !1;
    }
    Fh.exports = {
      isExpression: t,
      isStatement: n,
      isIterationStatement: e,
      isSourceElement: r,
      isProblematicIfStatement: i,
      trailingStatement: s
    };
  }()), Fh.exports;
}
var Bh = { exports: {} }, pg;
function f2() {
  return pg || (pg = 1, function() {
    var t, e, n, r, s, i;
    e = {
      // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:
      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
      // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:
      NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
    }, t = {
      // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:
      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
      // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:
      NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
    };
    function a(S) {
      return 48 <= S && S <= 57;
    }
    function o(S) {
      return 48 <= S && S <= 57 || // 0..9
      97 <= S && S <= 102 || // a..f
      65 <= S && S <= 70;
    }
    function l(S) {
      return S >= 48 && S <= 55;
    }
    n = [
      5760,
      8192,
      8193,
      8194,
      8195,
      8196,
      8197,
      8198,
      8199,
      8200,
      8201,
      8202,
      8239,
      8287,
      12288,
      65279
    ];
    function u(S) {
      return S === 32 || S === 9 || S === 11 || S === 12 || S === 160 || S >= 5760 && n.indexOf(S) >= 0;
    }
    function h(S) {
      return S === 10 || S === 13 || S === 8232 || S === 8233;
    }
    function f(S) {
      if (S <= 65535)
        return String.fromCharCode(S);
      var B = String.fromCharCode(Math.floor((S - 65536) / 1024) + 55296), $ = String.fromCharCode((S - 65536) % 1024 + 56320);
      return B + $;
    }
    for (r = new Array(128), i = 0; i < 128; ++i)
      r[i] = i >= 97 && i <= 122 || // a..z
      i >= 65 && i <= 90 || // A..Z
      i === 36 || i === 95;
    for (s = new Array(128), i = 0; i < 128; ++i)
      s[i] = i >= 97 && i <= 122 || // a..z
      i >= 65 && i <= 90 || // A..Z
      i >= 48 && i <= 57 || // 0..9
      i === 36 || i === 95;
    function m(S) {
      return S < 128 ? r[S] : e.NonAsciiIdentifierStart.test(f(S));
    }
    function b(S) {
      return S < 128 ? s[S] : e.NonAsciiIdentifierPart.test(f(S));
    }
    function v(S) {
      return S < 128 ? r[S] : t.NonAsciiIdentifierStart.test(f(S));
    }
    function C(S) {
      return S < 128 ? s[S] : t.NonAsciiIdentifierPart.test(f(S));
    }
    Bh.exports = {
      isDecimalDigit: a,
      isHexDigit: o,
      isOctalDigit: l,
      isWhiteSpace: u,
      isLineTerminator: h,
      isIdentifierStartES5: m,
      isIdentifierPartES5: b,
      isIdentifierStartES6: v,
      isIdentifierPartES6: C
    };
  }()), Bh.exports;
}
var Mh = { exports: {} }, fg;
function YB() {
  return fg || (fg = 1, function() {
    var t = f2();
    function e(m) {
      switch (m) {
        case "implements":
        case "interface":
        case "package":
        case "private":
        case "protected":
        case "public":
        case "static":
        case "let":
          return !0;
        default:
          return !1;
      }
    }
    function n(m, b) {
      return !b && m === "yield" ? !1 : r(m, b);
    }
    function r(m, b) {
      if (b && e(m))
        return !0;
      switch (m.length) {
        case 2:
          return m === "if" || m === "in" || m === "do";
        case 3:
          return m === "var" || m === "for" || m === "new" || m === "try";
        case 4:
          return m === "this" || m === "else" || m === "case" || m === "void" || m === "with" || m === "enum";
        case 5:
          return m === "while" || m === "break" || m === "catch" || m === "throw" || m === "const" || m === "yield" || m === "class" || m === "super";
        case 6:
          return m === "return" || m === "typeof" || m === "delete" || m === "switch" || m === "export" || m === "import";
        case 7:
          return m === "default" || m === "finally" || m === "extends";
        case 8:
          return m === "function" || m === "continue" || m === "debugger";
        case 10:
          return m === "instanceof";
        default:
          return !1;
      }
    }
    function s(m, b) {
      return m === "null" || m === "true" || m === "false" || n(m, b);
    }
    function i(m, b) {
      return m === "null" || m === "true" || m === "false" || r(m, b);
    }
    function a(m) {
      return m === "eval" || m === "arguments";
    }
    function o(m) {
      var b, v, C;
      if (m.length === 0 || (C = m.charCodeAt(0), !t.isIdentifierStartES5(C)))
        return !1;
      for (b = 1, v = m.length; b < v; ++b)
        if (C = m.charCodeAt(b), !t.isIdentifierPartES5(C))
          return !1;
      return !0;
    }
    function l(m, b) {
      return (m - 55296) * 1024 + (b - 56320) + 65536;
    }
    function u(m) {
      var b, v, C, S, B;
      if (m.length === 0)
        return !1;
      for (B = t.isIdentifierStartES6, b = 0, v = m.length; b < v; ++b) {
        if (C = m.charCodeAt(b), 55296 <= C && C <= 56319) {
          if (++b, b >= v || (S = m.charCodeAt(b), !(56320 <= S && S <= 57343)))
            return !1;
          C = l(C, S);
        }
        if (!B(C))
          return !1;
        B = t.isIdentifierPartES6;
      }
      return !0;
    }
    function h(m, b) {
      return o(m) && !s(m, b);
    }
    function f(m, b) {
      return u(m) && !i(m, b);
    }
    Mh.exports = {
      isKeywordES5: n,
      isKeywordES6: r,
      isReservedWordES5: s,
      isReservedWordES6: i,
      isRestrictedWord: a,
      isIdentifierNameES5: o,
      isIdentifierNameES6: u,
      isIdentifierES5: h,
      isIdentifierES6: f
    };
  }()), Mh.exports;
}
var dg;
function HB() {
  return dg || (dg = 1, function() {
    eo.ast = zB(), eo.code = f2(), eo.keyword = YB();
  }()), eo;
}
var to = {}, Th = {}, _l = {}, Rl = {}, mg;
function KB() {
  if (mg) return Rl;
  mg = 1;
  var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
  return Rl.encode = function(e) {
    if (0 <= e && e < t.length)
      return t[e];
    throw new TypeError("Must be between 0 and 63: " + e);
  }, Rl.decode = function(e) {
    var n = 65, r = 90, s = 97, i = 122, a = 48, o = 57, l = 43, u = 47, h = 26, f = 52;
    return n <= e && e <= r ? e - n : s <= e && e <= i ? e - s + h : a <= e && e <= o ? e - a + f : e == l ? 62 : e == u ? 63 : -1;
  }, Rl;
}
var gg;
function d2() {
  if (gg) return _l;
  gg = 1;
  var t = KB(), e = 5, n = 1 << e, r = n - 1, s = n;
  function i(o) {
    return o < 0 ? (-o << 1) + 1 : (o << 1) + 0;
  }
  function a(o) {
    var l = (o & 1) === 1, u = o >> 1;
    return l ? -u : u;
  }
  return _l.encode = function(l) {
    var u = "", h, f = i(l);
    do
      h = f & r, f >>>= e, f > 0 && (h |= s), u += t.encode(h);
    while (f > 0);
    return u;
  }, _l.decode = function(l, u, h) {
    var f = l.length, m = 0, b = 0, v, C;
    do {
      if (u >= f)
        throw new Error("Expected more digits in base 64 VLQ value.");
      if (C = t.decode(l.charCodeAt(u++)), C === -1)
        throw new Error("Invalid base64 digit: " + l.charAt(u - 1));
      v = !!(C & s), C &= r, m = m + (C << b), b += e;
    } while (v);
    h.value = a(m), h.rest = u;
  }, _l;
}
var Qh = {}, bg;
function sl() {
  return bg || (bg = 1, function(t) {
    function e(_, M, Z) {
      if (M in _)
        return _[M];
      if (arguments.length === 3)
        return Z;
      throw new Error('"' + M + '" is a required argument.');
    }
    t.getArg = e;
    var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/, r = /^data:.+\,.+$/;
    function s(_) {
      var M = _.match(n);
      return M ? {
        scheme: M[1],
        auth: M[2],
        host: M[3],
        port: M[4],
        path: M[5]
      } : null;
    }
    t.urlParse = s;
    function i(_) {
      var M = "";
      return _.scheme && (M += _.scheme + ":"), M += "//", _.auth && (M += _.auth + "@"), _.host && (M += _.host), _.port && (M += ":" + _.port), _.path && (M += _.path), M;
    }
    t.urlGenerate = i;
    function a(_) {
      var M = _, Z = s(_);
      if (Z) {
        if (!Z.path)
          return _;
        M = Z.path;
      }
      for (var N = t.isAbsolute(M), q = M.split(/\/+/), ae, J = 0, pe = q.length - 1; pe >= 0; pe--)
        ae = q[pe], ae === "." ? q.splice(pe, 1) : ae === ".." ? J++ : J > 0 && (ae === "" ? (q.splice(pe + 1, J), J = 0) : (q.splice(pe, 2), J--));
      return M = q.join("/"), M === "" && (M = N ? "/" : "."), Z ? (Z.path = M, i(Z)) : M;
    }
    t.normalize = a;
    function o(_, M) {
      _ === "" && (_ = "."), M === "" && (M = ".");
      var Z = s(M), N = s(_);
      if (N && (_ = N.path || "/"), Z && !Z.scheme)
        return N && (Z.scheme = N.scheme), i(Z);
      if (Z || M.match(r))
        return M;
      if (N && !N.host && !N.path)
        return N.host = M, i(N);
      var q = M.charAt(0) === "/" ? M : a(_.replace(/\/+$/, "") + "/" + M);
      return N ? (N.path = q, i(N)) : q;
    }
    t.join = o, t.isAbsolute = function(_) {
      return _.charAt(0) === "/" || n.test(_);
    };
    function l(_, M) {
      _ === "" && (_ = "."), _ = _.replace(/\/$/, "");
      for (var Z = 0; M.indexOf(_ + "/") !== 0; ) {
        var N = _.lastIndexOf("/");
        if (N < 0 || (_ = _.slice(0, N), _.match(/^([^\/]+:\/)?\/*$/)))
          return M;
        ++Z;
      }
      return Array(Z + 1).join("../") + M.substr(_.length + 1);
    }
    t.relative = l;
    var u = function() {
      var _ = /* @__PURE__ */ Object.create(null);
      return !("__proto__" in _);
    }();
    function h(_) {
      return _;
    }
    function f(_) {
      return b(_) ? "$" + _ : _;
    }
    t.toSetString = u ? h : f;
    function m(_) {
      return b(_) ? _.slice(1) : _;
    }
    t.fromSetString = u ? h : m;
    function b(_) {
      if (!_)
        return !1;
      var M = _.length;
      if (M < 9 || _.charCodeAt(M - 1) !== 95 || _.charCodeAt(M - 2) !== 95 || _.charCodeAt(M - 3) !== 111 || _.charCodeAt(M - 4) !== 116 || _.charCodeAt(M - 5) !== 111 || _.charCodeAt(M - 6) !== 114 || _.charCodeAt(M - 7) !== 112 || _.charCodeAt(M - 8) !== 95 || _.charCodeAt(M - 9) !== 95)
        return !1;
      for (var Z = M - 10; Z >= 0; Z--)
        if (_.charCodeAt(Z) !== 36)
          return !1;
      return !0;
    }
    function v(_, M, Z) {
      var N = S(_.source, M.source);
      return N !== 0 || (N = _.originalLine - M.originalLine, N !== 0) || (N = _.originalColumn - M.originalColumn, N !== 0 || Z) || (N = _.generatedColumn - M.generatedColumn, N !== 0) || (N = _.generatedLine - M.generatedLine, N !== 0) ? N : S(_.name, M.name);
    }
    t.compareByOriginalPositions = v;
    function C(_, M, Z) {
      var N = _.generatedLine - M.generatedLine;
      return N !== 0 || (N = _.generatedColumn - M.generatedColumn, N !== 0 || Z) || (N = S(_.source, M.source), N !== 0) || (N = _.originalLine - M.originalLine, N !== 0) || (N = _.originalColumn - M.originalColumn, N !== 0) ? N : S(_.name, M.name);
    }
    t.compareByGeneratedPositionsDeflated = C;
    function S(_, M) {
      return _ === M ? 0 : _ === null ? 1 : M === null ? -1 : _ > M ? 1 : -1;
    }
    function B(_, M) {
      var Z = _.generatedLine - M.generatedLine;
      return Z !== 0 || (Z = _.generatedColumn - M.generatedColumn, Z !== 0) || (Z = S(_.source, M.source), Z !== 0) || (Z = _.originalLine - M.originalLine, Z !== 0) || (Z = _.originalColumn - M.originalColumn, Z !== 0) ? Z : S(_.name, M.name);
    }
    t.compareByGeneratedPositionsInflated = B;
    function $(_) {
      return JSON.parse(_.replace(/^\)]}'[^\n]*\n/, ""));
    }
    t.parseSourceMapInput = $;
    function W(_, M, Z) {
      if (M = M || "", _ && (_[_.length - 1] !== "/" && M[0] !== "/" && (_ += "/"), M = _ + M), Z) {
        var N = s(Z);
        if (!N)
          throw new Error("sourceMapURL could not be parsed");
        if (N.path) {
          var q = N.path.lastIndexOf("/");
          q >= 0 && (N.path = N.path.substring(0, q + 1));
        }
        M = o(i(N), M);
      }
      return a(M);
    }
    t.computeSourceURL = W;
  }(Qh)), Qh;
}
var jh = {}, yg;
function m2() {
  if (yg) return jh;
  yg = 1;
  var t = sl(), e = Object.prototype.hasOwnProperty, n = typeof Map < "u";
  function r() {
    this._array = [], this._set = n ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);
  }
  return r.fromArray = function(i, a) {
    for (var o = new r(), l = 0, u = i.length; l < u; l++)
      o.add(i[l], a);
    return o;
  }, r.prototype.size = function() {
    return n ? this._set.size : Object.getOwnPropertyNames(this._set).length;
  }, r.prototype.add = function(i, a) {
    var o = n ? i : t.toSetString(i), l = n ? this.has(i) : e.call(this._set, o), u = this._array.length;
    (!l || a) && this._array.push(i), l || (n ? this._set.set(i, u) : this._set[o] = u);
  }, r.prototype.has = function(i) {
    if (n)
      return this._set.has(i);
    var a = t.toSetString(i);
    return e.call(this._set, a);
  }, r.prototype.indexOf = function(i) {
    if (n) {
      var a = this._set.get(i);
      if (a >= 0)
        return a;
    } else {
      var o = t.toSetString(i);
      if (e.call(this._set, o))
        return this._set[o];
    }
    throw new Error('"' + i + '" is not in the set.');
  }, r.prototype.at = function(i) {
    if (i >= 0 && i < this._array.length)
      return this._array[i];
    throw new Error("No element indexed by " + i);
  }, r.prototype.toArray = function() {
    return this._array.slice();
  }, jh.ArraySet = r, jh;
}
var _h = {}, Og;
function JB() {
  if (Og) return _h;
  Og = 1;
  var t = sl();
  function e(r, s) {
    var i = r.generatedLine, a = s.generatedLine, o = r.generatedColumn, l = s.generatedColumn;
    return a > i || a == i && l >= o || t.compareByGeneratedPositionsInflated(r, s) <= 0;
  }
  function n() {
    this._array = [], this._sorted = !0, this._last = { generatedLine: -1, generatedColumn: 0 };
  }
  return n.prototype.unsortedForEach = function(s, i) {
    this._array.forEach(s, i);
  }, n.prototype.add = function(s) {
    e(this._last, s) ? (this._last = s, this._array.push(s)) : (this._sorted = !1, this._array.push(s));
  }, n.prototype.toArray = function() {
    return this._sorted || (this._array.sort(t.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
  }, _h.MappingList = n, _h;
}
var vg;
function g2() {
  if (vg) return Th;
  vg = 1;
  var t = d2(), e = sl(), n = m2().ArraySet, r = JB().MappingList;
  function s(i) {
    i || (i = {}), this._file = e.getArg(i, "file", null), this._sourceRoot = e.getArg(i, "sourceRoot", null), this._skipValidation = e.getArg(i, "skipValidation", !1), this._sources = new n(), this._names = new n(), this._mappings = new r(), this._sourcesContents = null;
  }
  return s.prototype._version = 3, s.fromSourceMap = function(a) {
    var o = a.sourceRoot, l = new s({
      file: a.file,
      sourceRoot: o
    });
    return a.eachMapping(function(u) {
      var h = {
        generated: {
          line: u.generatedLine,
          column: u.generatedColumn
        }
      };
      u.source != null && (h.source = u.source, o != null && (h.source = e.relative(o, h.source)), h.original = {
        line: u.originalLine,
        column: u.originalColumn
      }, u.name != null && (h.name = u.name)), l.addMapping(h);
    }), a.sources.forEach(function(u) {
      var h = u;
      o !== null && (h = e.relative(o, u)), l._sources.has(h) || l._sources.add(h);
      var f = a.sourceContentFor(u);
      f != null && l.setSourceContent(u, f);
    }), l;
  }, s.prototype.addMapping = function(a) {
    var o = e.getArg(a, "generated"), l = e.getArg(a, "original", null), u = e.getArg(a, "source", null), h = e.getArg(a, "name", null);
    this._skipValidation || this._validateMapping(o, l, u, h), u != null && (u = String(u), this._sources.has(u) || this._sources.add(u)), h != null && (h = String(h), this._names.has(h) || this._names.add(h)), this._mappings.add({
      generatedLine: o.line,
      generatedColumn: o.column,
      originalLine: l != null && l.line,
      originalColumn: l != null && l.column,
      source: u,
      name: h
    });
  }, s.prototype.setSourceContent = function(a, o) {
    var l = a;
    this._sourceRoot != null && (l = e.relative(this._sourceRoot, l)), o != null ? (this._sourcesContents || (this._sourcesContents = /* @__PURE__ */ Object.create(null)), this._sourcesContents[e.toSetString(l)] = o) : this._sourcesContents && (delete this._sourcesContents[e.toSetString(l)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));
  }, s.prototype.applySourceMap = function(a, o, l) {
    var u = o;
    if (o == null) {
      if (a.file == null)
        throw new Error(
          `SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`
        );
      u = a.file;
    }
    var h = this._sourceRoot;
    h != null && (u = e.relative(h, u));
    var f = new n(), m = new n();
    this._mappings.unsortedForEach(function(b) {
      if (b.source === u && b.originalLine != null) {
        var v = a.originalPositionFor({
          line: b.originalLine,
          column: b.originalColumn
        });
        v.source != null && (b.source = v.source, l != null && (b.source = e.join(l, b.source)), h != null && (b.source = e.relative(h, b.source)), b.originalLine = v.line, b.originalColumn = v.column, v.name != null && (b.name = v.name));
      }
      var C = b.source;
      C != null && !f.has(C) && f.add(C);
      var S = b.name;
      S != null && !m.has(S) && m.add(S);
    }, this), this._sources = f, this._names = m, a.sources.forEach(function(b) {
      var v = a.sourceContentFor(b);
      v != null && (l != null && (b = e.join(l, b)), h != null && (b = e.relative(h, b)), this.setSourceContent(b, v));
    }, this);
  }, s.prototype._validateMapping = function(a, o, l, u) {
    if (o && typeof o.line != "number" && typeof o.column != "number")
      throw new Error(
        "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
      );
    if (!(a && "line" in a && "column" in a && a.line > 0 && a.column >= 0 && !o && !l && !u)) {
      if (a && "line" in a && "column" in a && o && "line" in o && "column" in o && a.line > 0 && a.column >= 0 && o.line > 0 && o.column >= 0 && l)
        return;
      throw new Error("Invalid mapping: " + JSON.stringify({
        generated: a,
        source: l,
        original: o,
        name: u
      }));
    }
  }, s.prototype._serializeMappings = function() {
    for (var a = 0, o = 1, l = 0, u = 0, h = 0, f = 0, m = "", b, v, C, S, B = this._mappings.toArray(), $ = 0, W = B.length; $ < W; $++) {
      if (v = B[$], b = "", v.generatedLine !== o)
        for (a = 0; v.generatedLine !== o; )
          b += ";", o++;
      else if ($ > 0) {
        if (!e.compareByGeneratedPositionsInflated(v, B[$ - 1]))
          continue;
        b += ",";
      }
      b += t.encode(v.generatedColumn - a), a = v.generatedColumn, v.source != null && (S = this._sources.indexOf(v.source), b += t.encode(S - f), f = S, b += t.encode(v.originalLine - 1 - u), u = v.originalLine - 1, b += t.encode(v.originalColumn - l), l = v.originalColumn, v.name != null && (C = this._names.indexOf(v.name), b += t.encode(C - h), h = C)), m += b;
    }
    return m;
  }, s.prototype._generateSourcesContent = function(a, o) {
    return a.map(function(l) {
      if (!this._sourcesContents)
        return null;
      o != null && (l = e.relative(o, l));
      var u = e.toSetString(l);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, u) ? this._sourcesContents[u] : null;
    }, this);
  }, s.prototype.toJSON = function() {
    var a = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    return this._file != null && (a.file = this._file), this._sourceRoot != null && (a.sourceRoot = this._sourceRoot), this._sourcesContents && (a.sourcesContent = this._generateSourcesContent(a.sources, a.sourceRoot)), a;
  }, s.prototype.toString = function() {
    return JSON.stringify(this.toJSON());
  }, Th.SourceMapGenerator = s, Th;
}
var no = {}, Rh = {}, xg;
function e4() {
  return xg || (xg = 1, function(t) {
    t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2;
    function e(n, r, s, i, a, o) {
      var l = Math.floor((r - n) / 2) + n, u = a(s, i[l], !0);
      return u === 0 ? l : u > 0 ? r - l > 1 ? e(l, r, s, i, a, o) : o == t.LEAST_UPPER_BOUND ? r < i.length ? r : -1 : l : l - n > 1 ? e(n, l, s, i, a, o) : o == t.LEAST_UPPER_BOUND ? l : n < 0 ? -1 : n;
    }
    t.search = function(r, s, i, a) {
      if (s.length === 0)
        return -1;
      var o = e(
        -1,
        s.length,
        r,
        s,
        i,
        a || t.GREATEST_LOWER_BOUND
      );
      if (o < 0)
        return -1;
      for (; o - 1 >= 0 && i(s[o], s[o - 1], !0) === 0; )
        --o;
      return o;
    };
  }(Rh)), Rh;
}
var Zh = {}, wg;
function t4() {
  if (wg) return Zh;
  wg = 1;
  function t(r, s, i) {
    var a = r[s];
    r[s] = r[i], r[i] = a;
  }
  function e(r, s) {
    return Math.round(r + Math.random() * (s - r));
  }
  function n(r, s, i, a) {
    if (i < a) {
      var o = e(i, a), l = i - 1;
      t(r, o, a);
      for (var u = r[a], h = i; h < a; h++)
        s(r[h], u) <= 0 && (l += 1, t(r, l, h));
      t(r, l + 1, h);
      var f = l + 1;
      n(r, s, i, f - 1), n(r, s, f + 1, a);
    }
  }
  return Zh.quickSort = function(r, s) {
    n(r, s, 0, r.length - 1);
  }, Zh;
}
var kg;
function n4() {
  if (kg) return no;
  kg = 1;
  var t = sl(), e = e4(), n = m2().ArraySet, r = d2(), s = t4().quickSort;
  function i(u, h) {
    var f = u;
    return typeof u == "string" && (f = t.parseSourceMapInput(u)), f.sections != null ? new l(f, h) : new a(f, h);
  }
  i.fromSourceMap = function(u, h) {
    return a.fromSourceMap(u, h);
  }, i.prototype._version = 3, i.prototype.__generatedMappings = null, Object.defineProperty(i.prototype, "_generatedMappings", {
    configurable: !0,
    enumerable: !0,
    get: function() {
      return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
    }
  }), i.prototype.__originalMappings = null, Object.defineProperty(i.prototype, "_originalMappings", {
    configurable: !0,
    enumerable: !0,
    get: function() {
      return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
    }
  }), i.prototype._charIsMappingSeparator = function(h, f) {
    var m = h.charAt(f);
    return m === ";" || m === ",";
  }, i.prototype._parseMappings = function(h, f) {
    throw new Error("Subclasses must implement _parseMappings");
  }, i.GENERATED_ORDER = 1, i.ORIGINAL_ORDER = 2, i.GREATEST_LOWER_BOUND = 1, i.LEAST_UPPER_BOUND = 2, i.prototype.eachMapping = function(h, f, m) {
    var b = f || null, v = m || i.GENERATED_ORDER, C;
    switch (v) {
      case i.GENERATED_ORDER:
        C = this._generatedMappings;
        break;
      case i.ORIGINAL_ORDER:
        C = this._originalMappings;
        break;
      default:
        throw new Error("Unknown order of iteration.");
    }
    var S = this.sourceRoot;
    C.map(function(B) {
      var $ = B.source === null ? null : this._sources.at(B.source);
      return $ = t.computeSourceURL(S, $, this._sourceMapURL), {
        source: $,
        generatedLine: B.generatedLine,
        generatedColumn: B.generatedColumn,
        originalLine: B.originalLine,
        originalColumn: B.originalColumn,
        name: B.name === null ? null : this._names.at(B.name)
      };
    }, this).forEach(h, b);
  }, i.prototype.allGeneratedPositionsFor = function(h) {
    var f = t.getArg(h, "line"), m = {
      source: t.getArg(h, "source"),
      originalLine: f,
      originalColumn: t.getArg(h, "column", 0)
    };
    if (m.source = this._findSourceIndex(m.source), m.source < 0)
      return [];
    var b = [], v = this._findMapping(
      m,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      t.compareByOriginalPositions,
      e.LEAST_UPPER_BOUND
    );
    if (v >= 0) {
      var C = this._originalMappings[v];
      if (h.column === void 0)
        for (var S = C.originalLine; C && C.originalLine === S; )
          b.push({
            line: t.getArg(C, "generatedLine", null),
            column: t.getArg(C, "generatedColumn", null),
            lastColumn: t.getArg(C, "lastGeneratedColumn", null)
          }), C = this._originalMappings[++v];
      else
        for (var B = C.originalColumn; C && C.originalLine === f && C.originalColumn == B; )
          b.push({
            line: t.getArg(C, "generatedLine", null),
            column: t.getArg(C, "generatedColumn", null),
            lastColumn: t.getArg(C, "lastGeneratedColumn", null)
          }), C = this._originalMappings[++v];
    }
    return b;
  }, no.SourceMapConsumer = i;
  function a(u, h) {
    var f = u;
    typeof u == "string" && (f = t.parseSourceMapInput(u));
    var m = t.getArg(f, "version"), b = t.getArg(f, "sources"), v = t.getArg(f, "names", []), C = t.getArg(f, "sourceRoot", null), S = t.getArg(f, "sourcesContent", null), B = t.getArg(f, "mappings"), $ = t.getArg(f, "file", null);
    if (m != this._version)
      throw new Error("Unsupported version: " + m);
    C && (C = t.normalize(C)), b = b.map(String).map(t.normalize).map(function(W) {
      return C && t.isAbsolute(C) && t.isAbsolute(W) ? t.relative(C, W) : W;
    }), this._names = n.fromArray(v.map(String), !0), this._sources = n.fromArray(b, !0), this._absoluteSources = this._sources.toArray().map(function(W) {
      return t.computeSourceURL(C, W, h);
    }), this.sourceRoot = C, this.sourcesContent = S, this._mappings = B, this._sourceMapURL = h, this.file = $;
  }
  a.prototype = Object.create(i.prototype), a.prototype.consumer = i, a.prototype._findSourceIndex = function(u) {
    var h = u;
    if (this.sourceRoot != null && (h = t.relative(this.sourceRoot, h)), this._sources.has(h))
      return this._sources.indexOf(h);
    var f;
    for (f = 0; f < this._absoluteSources.length; ++f)
      if (this._absoluteSources[f] == u)
        return f;
    return -1;
  }, a.fromSourceMap = function(h, f) {
    var m = Object.create(a.prototype), b = m._names = n.fromArray(h._names.toArray(), !0), v = m._sources = n.fromArray(h._sources.toArray(), !0);
    m.sourceRoot = h._sourceRoot, m.sourcesContent = h._generateSourcesContent(
      m._sources.toArray(),
      m.sourceRoot
    ), m.file = h._file, m._sourceMapURL = f, m._absoluteSources = m._sources.toArray().map(function(Z) {
      return t.computeSourceURL(m.sourceRoot, Z, f);
    });
    for (var C = h._mappings.toArray().slice(), S = m.__generatedMappings = [], B = m.__originalMappings = [], $ = 0, W = C.length; $ < W; $++) {
      var _ = C[$], M = new o();
      M.generatedLine = _.generatedLine, M.generatedColumn = _.generatedColumn, _.source && (M.source = v.indexOf(_.source), M.originalLine = _.originalLine, M.originalColumn = _.originalColumn, _.name && (M.name = b.indexOf(_.name)), B.push(M)), S.push(M);
    }
    return s(m.__originalMappings, t.compareByOriginalPositions), m;
  }, a.prototype._version = 3, Object.defineProperty(a.prototype, "sources", {
    get: function() {
      return this._absoluteSources.slice();
    }
  });
  function o() {
    this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
  }
  a.prototype._parseMappings = function(h, f) {
    for (var m = 1, b = 0, v = 0, C = 0, S = 0, B = 0, $ = h.length, W = 0, _ = {}, M = {}, Z = [], N = [], q, ae, J, pe, H; W < $; )
      if (h.charAt(W) === ";")
        m++, W++, b = 0;
      else if (h.charAt(W) === ",")
        W++;
      else {
        for (q = new o(), q.generatedLine = m, pe = W; pe < $ && !this._charIsMappingSeparator(h, pe); pe++)
          ;
        if (ae = h.slice(W, pe), J = _[ae], J)
          W += ae.length;
        else {
          for (J = []; W < pe; )
            r.decode(h, W, M), H = M.value, W = M.rest, J.push(H);
          if (J.length === 2)
            throw new Error("Found a source, but no line and column");
          if (J.length === 3)
            throw new Error("Found a source and line, but no column");
          _[ae] = J;
        }
        q.generatedColumn = b + J[0], b = q.generatedColumn, J.length > 1 && (q.source = S + J[1], S += J[1], q.originalLine = v + J[2], v = q.originalLine, q.originalLine += 1, q.originalColumn = C + J[3], C = q.originalColumn, J.length > 4 && (q.name = B + J[4], B += J[4])), N.push(q), typeof q.originalLine == "number" && Z.push(q);
      }
    s(N, t.compareByGeneratedPositionsDeflated), this.__generatedMappings = N, s(Z, t.compareByOriginalPositions), this.__originalMappings = Z;
  }, a.prototype._findMapping = function(h, f, m, b, v, C) {
    if (h[m] <= 0)
      throw new TypeError("Line must be greater than or equal to 1, got " + h[m]);
    if (h[b] < 0)
      throw new TypeError("Column must be greater than or equal to 0, got " + h[b]);
    return e.search(h, f, v, C);
  }, a.prototype.computeColumnSpans = function() {
    for (var h = 0; h < this._generatedMappings.length; ++h) {
      var f = this._generatedMappings[h];
      if (h + 1 < this._generatedMappings.length) {
        var m = this._generatedMappings[h + 1];
        if (f.generatedLine === m.generatedLine) {
          f.lastGeneratedColumn = m.generatedColumn - 1;
          continue;
        }
      }
      f.lastGeneratedColumn = 1 / 0;
    }
  }, a.prototype.originalPositionFor = function(h) {
    var f = {
      generatedLine: t.getArg(h, "line"),
      generatedColumn: t.getArg(h, "column")
    }, m = this._findMapping(
      f,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      t.compareByGeneratedPositionsDeflated,
      t.getArg(h, "bias", i.GREATEST_LOWER_BOUND)
    );
    if (m >= 0) {
      var b = this._generatedMappings[m];
      if (b.generatedLine === f.generatedLine) {
        var v = t.getArg(b, "source", null);
        v !== null && (v = this._sources.at(v), v = t.computeSourceURL(this.sourceRoot, v, this._sourceMapURL));
        var C = t.getArg(b, "name", null);
        return C !== null && (C = this._names.at(C)), {
          source: v,
          line: t.getArg(b, "originalLine", null),
          column: t.getArg(b, "originalColumn", null),
          name: C
        };
      }
    }
    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  }, a.prototype.hasContentsOfAllSources = function() {
    return this.sourcesContent ? this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(h) {
      return h == null;
    }) : !1;
  }, a.prototype.sourceContentFor = function(h, f) {
    if (!this.sourcesContent)
      return null;
    var m = this._findSourceIndex(h);
    if (m >= 0)
      return this.sourcesContent[m];
    var b = h;
    this.sourceRoot != null && (b = t.relative(this.sourceRoot, b));
    var v;
    if (this.sourceRoot != null && (v = t.urlParse(this.sourceRoot))) {
      var C = b.replace(/^file:\/\//, "");
      if (v.scheme == "file" && this._sources.has(C))
        return this.sourcesContent[this._sources.indexOf(C)];
      if ((!v.path || v.path == "/") && this._sources.has("/" + b))
        return this.sourcesContent[this._sources.indexOf("/" + b)];
    }
    if (f)
      return null;
    throw new Error('"' + b + '" is not in the SourceMap.');
  }, a.prototype.generatedPositionFor = function(h) {
    var f = t.getArg(h, "source");
    if (f = this._findSourceIndex(f), f < 0)
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    var m = {
      source: f,
      originalLine: t.getArg(h, "line"),
      originalColumn: t.getArg(h, "column")
    }, b = this._findMapping(
      m,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      t.compareByOriginalPositions,
      t.getArg(h, "bias", i.GREATEST_LOWER_BOUND)
    );
    if (b >= 0) {
      var v = this._originalMappings[b];
      if (v.source === m.source)
        return {
          line: t.getArg(v, "generatedLine", null),
          column: t.getArg(v, "generatedColumn", null),
          lastColumn: t.getArg(v, "lastGeneratedColumn", null)
        };
    }
    return {
      line: null,
      column: null,
      lastColumn: null
    };
  }, no.BasicSourceMapConsumer = a;
  function l(u, h) {
    var f = u;
    typeof u == "string" && (f = t.parseSourceMapInput(u));
    var m = t.getArg(f, "version"), b = t.getArg(f, "sections");
    if (m != this._version)
      throw new Error("Unsupported version: " + m);
    this._sources = new n(), this._names = new n();
    var v = {
      line: -1,
      column: 0
    };
    this._sections = b.map(function(C) {
      if (C.url)
        throw new Error("Support for url field in sections not implemented.");
      var S = t.getArg(C, "offset"), B = t.getArg(S, "line"), $ = t.getArg(S, "column");
      if (B < v.line || B === v.line && $ < v.column)
        throw new Error("Section offsets must be ordered and non-overlapping.");
      return v = S, {
        generatedOffset: {
          // The offset fields are 0-based, but we use 1-based indices when
          // encoding/decoding from VLQ.
          generatedLine: B + 1,
          generatedColumn: $ + 1
        },
        consumer: new i(t.getArg(C, "map"), h)
      };
    });
  }
  return l.prototype = Object.create(i.prototype), l.prototype.constructor = i, l.prototype._version = 3, Object.defineProperty(l.prototype, "sources", {
    get: function() {
      for (var u = [], h = 0; h < this._sections.length; h++)
        for (var f = 0; f < this._sections[h].consumer.sources.length; f++)
          u.push(this._sections[h].consumer.sources[f]);
      return u;
    }
  }), l.prototype.originalPositionFor = function(h) {
    var f = {
      generatedLine: t.getArg(h, "line"),
      generatedColumn: t.getArg(h, "column")
    }, m = e.search(
      f,
      this._sections,
      function(v, C) {
        var S = v.generatedLine - C.generatedOffset.generatedLine;
        return S || v.generatedColumn - C.generatedOffset.generatedColumn;
      }
    ), b = this._sections[m];
    return b ? b.consumer.originalPositionFor({
      line: f.generatedLine - (b.generatedOffset.generatedLine - 1),
      column: f.generatedColumn - (b.generatedOffset.generatedLine === f.generatedLine ? b.generatedOffset.generatedColumn - 1 : 0),
      bias: h.bias
    }) : {
      source: null,
      line: null,
      column: null,
      name: null
    };
  }, l.prototype.hasContentsOfAllSources = function() {
    return this._sections.every(function(h) {
      return h.consumer.hasContentsOfAllSources();
    });
  }, l.prototype.sourceContentFor = function(h, f) {
    for (var m = 0; m < this._sections.length; m++) {
      var b = this._sections[m], v = b.consumer.sourceContentFor(h, !0);
      if (v)
        return v;
    }
    if (f)
      return null;
    throw new Error('"' + h + '" is not in the SourceMap.');
  }, l.prototype.generatedPositionFor = function(h) {
    for (var f = 0; f < this._sections.length; f++) {
      var m = this._sections[f];
      if (m.consumer._findSourceIndex(t.getArg(h, "source")) !== -1) {
        var b = m.consumer.generatedPositionFor(h);
        if (b) {
          var v = {
            line: b.line + (m.generatedOffset.generatedLine - 1),
            column: b.column + (m.generatedOffset.generatedLine === b.line ? m.generatedOffset.generatedColumn - 1 : 0)
          };
          return v;
        }
      }
    }
    return {
      line: null,
      column: null
    };
  }, l.prototype._parseMappings = function(h, f) {
    this.__generatedMappings = [], this.__originalMappings = [];
    for (var m = 0; m < this._sections.length; m++)
      for (var b = this._sections[m], v = b.consumer._generatedMappings, C = 0; C < v.length; C++) {
        var S = v[C], B = b.consumer._sources.at(S.source);
        B = t.computeSourceURL(b.consumer.sourceRoot, B, this._sourceMapURL), this._sources.add(B), B = this._sources.indexOf(B);
        var $ = null;
        S.name && ($ = b.consumer._names.at(S.name), this._names.add($), $ = this._names.indexOf($));
        var W = {
          source: B,
          generatedLine: S.generatedLine + (b.generatedOffset.generatedLine - 1),
          generatedColumn: S.generatedColumn + (b.generatedOffset.generatedLine === S.generatedLine ? b.generatedOffset.generatedColumn - 1 : 0),
          originalLine: S.originalLine,
          originalColumn: S.originalColumn,
          name: $
        };
        this.__generatedMappings.push(W), typeof W.originalLine == "number" && this.__originalMappings.push(W);
      }
    s(this.__generatedMappings, t.compareByGeneratedPositionsDeflated), s(this.__originalMappings, t.compareByOriginalPositions);
  }, no.IndexedSourceMapConsumer = l, no;
}
var $h = {}, Cg;
function r4() {
  if (Cg) return $h;
  Cg = 1;
  var t = g2().SourceMapGenerator, e = sl(), n = /(\r?\n)/, r = 10, s = "$$$isSourceNode$$$";
  function i(a, o, l, u, h) {
    this.children = [], this.sourceContents = {}, this.line = a ?? null, this.column = o ?? null, this.source = l ?? null, this.name = h ?? null, this[s] = !0, u != null && this.add(u);
  }
  return i.fromStringWithSourceMap = function(o, l, u) {
    var h = new i(), f = o.split(n), m = 0, b = function() {
      var $ = _(), W = _() || "";
      return $ + W;
      function _() {
        return m < f.length ? f[m++] : void 0;
      }
    }, v = 1, C = 0, S = null;
    return l.eachMapping(function($) {
      if (S !== null)
        if (v < $.generatedLine)
          B(S, b()), v++, C = 0;
        else {
          var W = f[m] || "", _ = W.substr(0, $.generatedColumn - C);
          f[m] = W.substr($.generatedColumn - C), C = $.generatedColumn, B(S, _), S = $;
          return;
        }
      for (; v < $.generatedLine; )
        h.add(b()), v++;
      if (C < $.generatedColumn) {
        var W = f[m] || "";
        h.add(W.substr(0, $.generatedColumn)), f[m] = W.substr($.generatedColumn), C = $.generatedColumn;
      }
      S = $;
    }, this), m < f.length && (S && B(S, b()), h.add(f.splice(m).join(""))), l.sources.forEach(function($) {
      var W = l.sourceContentFor($);
      W != null && (u != null && ($ = e.join(u, $)), h.setSourceContent($, W));
    }), h;
    function B($, W) {
      if ($ === null || $.source === void 0)
        h.add(W);
      else {
        var _ = u ? e.join(u, $.source) : $.source;
        h.add(new i(
          $.originalLine,
          $.originalColumn,
          _,
          W,
          $.name
        ));
      }
    }
  }, i.prototype.add = function(o) {
    if (Array.isArray(o))
      o.forEach(function(l) {
        this.add(l);
      }, this);
    else if (o[s] || typeof o == "string")
      o && this.children.push(o);
    else
      throw new TypeError(
        "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + o
      );
    return this;
  }, i.prototype.prepend = function(o) {
    if (Array.isArray(o))
      for (var l = o.length - 1; l >= 0; l--)
        this.prepend(o[l]);
    else if (o[s] || typeof o == "string")
      this.children.unshift(o);
    else
      throw new TypeError(
        "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + o
      );
    return this;
  }, i.prototype.walk = function(o) {
    for (var l, u = 0, h = this.children.length; u < h; u++)
      l = this.children[u], l[s] ? l.walk(o) : l !== "" && o(l, {
        source: this.source,
        line: this.line,
        column: this.column,
        name: this.name
      });
  }, i.prototype.join = function(o) {
    var l, u, h = this.children.length;
    if (h > 0) {
      for (l = [], u = 0; u < h - 1; u++)
        l.push(this.children[u]), l.push(o);
      l.push(this.children[u]), this.children = l;
    }
    return this;
  }, i.prototype.replaceRight = function(o, l) {
    var u = this.children[this.children.length - 1];
    return u[s] ? u.replaceRight(o, l) : typeof u == "string" ? this.children[this.children.length - 1] = u.replace(o, l) : this.children.push("".replace(o, l)), this;
  }, i.prototype.setSourceContent = function(o, l) {
    this.sourceContents[e.toSetString(o)] = l;
  }, i.prototype.walkSourceContents = function(o) {
    for (var l = 0, u = this.children.length; l < u; l++)
      this.children[l][s] && this.children[l].walkSourceContents(o);
    for (var h = Object.keys(this.sourceContents), l = 0, u = h.length; l < u; l++)
      o(e.fromSetString(h[l]), this.sourceContents[h[l]]);
  }, i.prototype.toString = function() {
    var o = "";
    return this.walk(function(l) {
      o += l;
    }), o;
  }, i.prototype.toStringWithSourceMap = function(o) {
    var l = {
      code: "",
      line: 1,
      column: 0
    }, u = new t(o), h = !1, f = null, m = null, b = null, v = null;
    return this.walk(function(C, S) {
      l.code += C, S.source !== null && S.line !== null && S.column !== null ? ((f !== S.source || m !== S.line || b !== S.column || v !== S.name) && u.addMapping({
        source: S.source,
        original: {
          line: S.line,
          column: S.column
        },
        generated: {
          line: l.line,
          column: l.column
        },
        name: S.name
      }), f = S.source, m = S.line, b = S.column, v = S.name, h = !0) : h && (u.addMapping({
        generated: {
          line: l.line,
          column: l.column
        }
      }), f = null, h = !1);
      for (var B = 0, $ = C.length; B < $; B++)
        C.charCodeAt(B) === r ? (l.line++, l.column = 0, B + 1 === $ ? (f = null, h = !1) : h && u.addMapping({
          source: S.source,
          original: {
            line: S.line,
            column: S.column
          },
          generated: {
            line: l.line,
            column: l.column
          },
          name: S.name
        })) : l.column++;
    }), this.walkSourceContents(function(C, S) {
      u.setSourceContent(C, S);
    }), { code: l.code, map: u };
  }, $h.SourceNode = i, $h;
}
var Sg;
function s4() {
  return Sg || (Sg = 1, to.SourceMapGenerator = g2().SourceMapGenerator, to.SourceMapConsumer = n4().SourceMapConsumer, to.SourceNode = r4().SourceNode), to;
}
const i4 = "escodegen", a4 = "ECMAScript code generator", o4 = "http://github.com/estools/escodegen", l4 = "escodegen.js", c4 = { esgenerate: "./bin/esgenerate.js", escodegen: "./bin/escodegen.js" }, u4 = ["LICENSE.BSD", "README.md", "bin", "escodegen.js", "package.json"], h4 = "2.1.0", p4 = { node: ">=6.0" }, f4 = [{ name: "Yusuke Suzuki", email: "utatane.tea@gmail.com", web: "http://github.com/Constellation" }], d4 = { type: "git", url: "http://github.com/estools/escodegen.git" }, m4 = { estraverse: "^5.2.0", esutils: "^2.0.2", esprima: "^4.0.1" }, g4 = { "source-map": "~0.6.1" }, b4 = { acorn: "^8.0.4", bluebird: "^3.4.7", "bower-registry-client": "^1.0.0", chai: "^4.2.0", "chai-exclude": "^2.0.2", "commonjs-everywhere": "^0.9.7", gulp: "^4.0.2", "gulp-eslint": "^6.0.0", "gulp-mocha": "^7.0.2", minimist: "^1.2.5", optionator: "^0.9.1", semver: "^7.3.4" }, y4 = "BSD-2-Clause", O4 = { test: "gulp travis", "unit-test": "gulp test", lint: "gulp lint", release: "node tools/release.js", "build-min": "./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js", build: "./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js" }, v4 = {
  name: i4,
  description: a4,
  homepage: o4,
  main: l4,
  bin: c4,
  files: u4,
  version: h4,
  engines: p4,
  maintainers: f4,
  repository: d4,
  dependencies: m4,
  optionalDependencies: g4,
  devDependencies: b4,
  license: y4,
  scripts: O4
};
var Ag;
function x4() {
  return Ag || (Ag = 1, function(t) {
    (function() {
      var e, n, r, s, i, a, o, l, u, h, f, m, b, v, C, S, B, $, W, _, M, Z, N, q, ae, J;
      i = GB(), a = HB(), e = i.Syntax;
      function pe(O) {
        return ut.Expression.hasOwnProperty(O.type);
      }
      function H(O) {
        return ut.Statement.hasOwnProperty(O.type);
      }
      n = {
        Sequence: 0,
        Yield: 1,
        Assignment: 1,
        Conditional: 2,
        ArrowFunction: 2,
        Coalesce: 3,
        LogicalOR: 4,
        LogicalAND: 5,
        BitwiseOR: 6,
        BitwiseXOR: 7,
        BitwiseAND: 8,
        Equality: 9,
        Relational: 10,
        BitwiseSHIFT: 11,
        Additive: 12,
        Multiplicative: 13,
        Exponentiation: 14,
        Await: 15,
        Unary: 15,
        Postfix: 16,
        OptionalChaining: 17,
        Call: 18,
        New: 19,
        TaggedTemplate: 20,
        Member: 21,
        Primary: 22
      }, r = {
        "??": n.Coalesce,
        "||": n.LogicalOR,
        "&&": n.LogicalAND,
        "|": n.BitwiseOR,
        "^": n.BitwiseXOR,
        "&": n.BitwiseAND,
        "==": n.Equality,
        "!=": n.Equality,
        "===": n.Equality,
        "!==": n.Equality,
        is: n.Equality,
        isnt: n.Equality,
        "<": n.Relational,
        ">": n.Relational,
        "<=": n.Relational,
        ">=": n.Relational,
        in: n.Relational,
        instanceof: n.Relational,
        "<<": n.BitwiseSHIFT,
        ">>": n.BitwiseSHIFT,
        ">>>": n.BitwiseSHIFT,
        "+": n.Additive,
        "-": n.Additive,
        "*": n.Multiplicative,
        "%": n.Multiplicative,
        "/": n.Multiplicative,
        "**": n.Exponentiation
      };
      var oe = 1, fe = 2, ke = 4, Pe = 8, ie = 16, Ce = 32, Le = 64, Ue = fe | ke, De = oe | fe, ue = oe | fe | ke, _e = oe, He = ke, dt = oe | ke, $e = oe, Ft = oe | Ce, tt = 0, Bt = oe | ie, Tn = oe | Pe;
      function Sn() {
        return {
          indent: null,
          base: null,
          parse: null,
          comment: !1,
          format: {
            indent: {
              style: "    ",
              base: 0,
              adjustMultilineComment: !1
            },
            newline: `
`,
            space: " ",
            json: !1,
            renumber: !1,
            hexadecimal: !1,
            quotes: "single",
            escapeless: !1,
            compact: !1,
            parentheses: !0,
            semicolons: !0,
            safeConcatenation: !1,
            preserveBlankLines: !1
          },
          moz: {
            comprehensionExpressionStartsWithAssignment: !1,
            starlessGenerator: !1
          },
          sourceMap: null,
          sourceMapRoot: null,
          sourceMapWithCode: !1,
          directive: !1,
          raw: !0,
          verbatim: null,
          sourceCode: null
        };
      }
      function vt(O, D) {
        var A = "";
        for (D |= 0; D > 0; D >>>= 1, O += O)
          D & 1 && (A += O);
        return A;
      }
      function Mt(O) {
        return /[\r\n]/g.test(O);
      }
      function Tt(O) {
        var D = O.length;
        return D && a.code.isLineTerminator(O.charCodeAt(D - 1));
      }
      function Gt(O, D) {
        var A;
        for (A in D)
          D.hasOwnProperty(A) && (O[A] = D[A]);
        return O;
      }
      function An(O, D) {
        var A, P;
        function R(Y) {
          return typeof Y == "object" && Y instanceof Object && !(Y instanceof RegExp);
        }
        for (A in D)
          D.hasOwnProperty(A) && (P = D[A], R(P) ? R(O[A]) ? An(O[A], P) : O[A] = An({}, P) : O[A] = P);
        return O;
      }
      function Wn(O) {
        var D, A, P, R, Y;
        if (O !== O)
          throw new Error("Numeric literal whose value is NaN");
        if (O < 0 || O === 0 && 1 / O < 0)
          throw new Error("Numeric literal whose value is negative");
        if (O === 1 / 0)
          return u ? "null" : h ? "1e400" : "1e+400";
        if (D = "" + O, !h || D.length < 3)
          return D;
        for (A = D.indexOf("."), !u && D.charCodeAt(0) === 48 && A === 1 && (A = 0, D = D.slice(1)), P = D, D = D.replace("e+", "e"), R = 0, (Y = P.indexOf("e")) > 0 && (R = +P.slice(Y + 1), P = P.slice(0, Y)), A >= 0 && (R -= P.length - A - 1, P = +(P.slice(0, A) + P.slice(A + 1)) + ""), Y = 0; P.charCodeAt(P.length + Y - 1) === 48; )
          --Y;
        return Y !== 0 && (R -= Y, P = P.slice(0, Y)), R !== 0 && (P += "e" + R), (P.length < D.length || f && O > 1e12 && Math.floor(O) === O && (P = "0x" + O.toString(16)).length < D.length) && +P === O && (D = P), D;
      }
      function Un(O, D) {
        return (O & -2) === 8232 ? (D ? "u" : "\\u") + (O === 8232 ? "2028" : "2029") : O === 10 || O === 13 ? (D ? "" : "\\") + (O === 10 ? "n" : "r") : String.fromCharCode(O);
      }
      function Pn(O) {
        var D, A, P, R, Y, se, le, ge;
        if (A = O.toString(), O.source) {
          if (D = A.match(/\/([^/]*)$/), !D)
            return A;
          for (P = D[1], A = "", le = !1, ge = !1, R = 0, Y = O.source.length; R < Y; ++R)
            se = O.source.charCodeAt(R), ge ? (A += Un(se, ge), ge = !1) : (le ? se === 93 && (le = !1) : se === 47 ? A += "\\" : se === 91 && (le = !0), A += Un(se, ge), ge = se === 92);
          return "/" + A + "/" + P;
        }
        return A;
      }
      function Jt(O, D) {
        var A;
        return O === 8 ? "\\b" : O === 12 ? "\\f" : O === 9 ? "\\t" : (A = O.toString(16).toUpperCase(), u || O > 255 ? "\\u" + "0000".slice(A.length) + A : O === 0 && !a.code.isDecimalDigit(D) ? "\\0" : O === 11 ? "\\x0B" : "\\x" + "00".slice(A.length) + A);
      }
      function Lr(O) {
        if (O === 92)
          return "\\\\";
        if (O === 10)
          return "\\n";
        if (O === 13)
          return "\\r";
        if (O === 8232)
          return "\\u2028";
        if (O === 8233)
          return "\\u2029";
        throw new Error("Incorrectly classified character");
      }
      function vr(O) {
        var D, A, P, R;
        for (R = m === "double" ? '"' : "'", D = 0, A = O.length; D < A; ++D)
          if (P = O.charCodeAt(D), P === 39) {
            R = '"';
            break;
          } else if (P === 34) {
            R = "'";
            break;
          } else P === 92 && ++D;
        return R + O + R;
      }
      function un(O) {
        var D = "", A, P, R, Y = 0, se = 0, le, ge;
        for (A = 0, P = O.length; A < P; ++A) {
          if (R = O.charCodeAt(A), R === 39)
            ++Y;
          else if (R === 34)
            ++se;
          else if (R === 47 && u)
            D += "\\";
          else if (a.code.isLineTerminator(R) || R === 92) {
            D += Lr(R);
            continue;
          } else if (!a.code.isIdentifierPartES5(R) && (u && R < 32 || !u && !b && (R < 32 || R > 126))) {
            D += Jt(R, O.charCodeAt(A + 1));
            continue;
          }
          D += String.fromCharCode(R);
        }
        if (le = !(m === "double" || m === "auto" && se < Y), ge = le ? "'" : '"', !(le ? Y : se))
          return ge + D + ge;
        for (O = D, D = ge, A = 0, P = O.length; A < P; ++A)
          R = O.charCodeAt(A), (R === 39 && le || R === 34 && !le) && (D += "\\"), D += String.fromCharCode(R);
        return D + ge;
      }
      function Ir(O) {
        var D, A, P, R = "";
        for (D = 0, A = O.length; D < A; ++D)
          P = O[D], R += Array.isArray(P) ? Ir(P) : P;
        return R;
      }
      function qe(O, D) {
        if (!Z)
          return Array.isArray(O) ? Ir(O) : O;
        if (D == null) {
          if (O instanceof s)
            return O;
          D = {};
        }
        return D.loc == null ? new s(null, null, Z, O, D.name || null) : new s(D.loc.start.line, D.loc.start.column, Z === !0 ? D.loc.source || null : Z, O, D.name || null);
      }
      function xt() {
        return C || " ";
      }
      function xe(O, D) {
        var A, P, R, Y;
        return A = qe(O).toString(), A.length === 0 ? [D] : (P = qe(D).toString(), P.length === 0 ? [O] : (R = A.charCodeAt(A.length - 1), Y = P.charCodeAt(0), (R === 43 || R === 45) && R === Y || a.code.isIdentifierPartES5(R) && a.code.isIdentifierPartES5(Y) || R === 47 && Y === 105 ? [O, xt(), D] : a.code.isWhiteSpace(R) || a.code.isLineTerminator(R) || a.code.isWhiteSpace(Y) || a.code.isLineTerminator(Y) ? [O, D] : [O, C, D]));
      }
      function wt(O) {
        return [o, O];
      }
      function Ve(O) {
        var D;
        D = o, o += l, O(o), o = D;
      }
      function Us(O) {
        var D;
        for (D = O.length - 1; D >= 0 && !a.code.isLineTerminator(O.charCodeAt(D)); --D)
          ;
        return O.length - 1 - D;
      }
      function yi(O, D) {
        var A, P, R, Y, se, le, ge, We;
        for (A = O.split(/\r\n|[\r\n]/), le = Number.MAX_VALUE, P = 1, R = A.length; P < R; ++P) {
          for (Y = A[P], se = 0; se < Y.length && a.code.isWhiteSpace(Y.charCodeAt(se)); )
            ++se;
          le > se && (le = se);
        }
        for (typeof D < "u" ? (ge = o, A[1][le] === "*" && (D += " "), o = D) : (le & 1 && --le, ge = o), P = 1, R = A.length; P < R; ++P)
          We = qe(wt(A[P].slice(le))), A[P] = Z ? We.join("") : We;
        return o = ge, A.join(`
`);
      }
      function Qn(O, D) {
        if (O.type === "Line") {
          if (Tt(O.value))
            return "//" + O.value;
          var A = "//" + O.value;
          return q || (A += `
`), A;
        }
        return _.format.indent.adjustMultilineComment && /[\n\r]/.test(O.value) ? yi("/*" + O.value + "*/", D) : "/*" + O.value + "*/";
      }
      function Nr(O, D) {
        var A, P, R, Y, se, le, ge, We, St, Xt, jn, Ge, gn, Ct;
        if (O.leadingComments && O.leadingComments.length > 0) {
          if (Y = D, q) {
            for (R = O.leadingComments[0], D = [], We = R.extendedRange, St = R.range, jn = N.substring(We[0], St[0]), Ct = (jn.match(/\n/g) || []).length, Ct > 0 ? (D.push(vt(`
`, Ct)), D.push(wt(Qn(R)))) : (D.push(jn), D.push(Qn(R))), Xt = St, A = 1, P = O.leadingComments.length; A < P; A++)
              R = O.leadingComments[A], St = R.range, Ge = N.substring(Xt[1], St[0]), Ct = (Ge.match(/\n/g) || []).length, D.push(vt(`
`, Ct)), D.push(wt(Qn(R))), Xt = St;
            gn = N.substring(St[1], We[1]), Ct = (gn.match(/\n/g) || []).length, D.push(vt(`
`, Ct));
          } else
            for (R = O.leadingComments[0], D = [], $ && O.type === e.Program && O.body.length === 0 && D.push(`
`), D.push(Qn(R)), Tt(qe(D).toString()) || D.push(`
`), A = 1, P = O.leadingComments.length; A < P; ++A)
              R = O.leadingComments[A], ge = [Qn(R)], Tt(qe(ge).toString()) || ge.push(`
`), D.push(wt(ge));
          D.push(wt(Y));
        }
        if (O.trailingComments)
          if (q)
            R = O.trailingComments[0], We = R.extendedRange, St = R.range, jn = N.substring(We[0], St[0]), Ct = (jn.match(/\n/g) || []).length, Ct > 0 ? (D.push(vt(`
`, Ct)), D.push(wt(Qn(R)))) : (D.push(jn), D.push(Qn(R)));
          else
            for (se = !Tt(qe(D).toString()), le = vt(" ", Us(qe([o, D, l]).toString())), A = 0, P = O.trailingComments.length; A < P; ++A)
              R = O.trailingComments[A], se ? (A === 0 ? D = [D, l] : D = [D, le], D.push(Qn(R, le))) : D = [D, wt(Qn(R))], A !== P - 1 && !Tt(qe(D).toString()) && (D = [D, `
`]);
        return D;
      }
      function rt(O, D, A) {
        var P, R = 0;
        for (P = O; P < D; P++)
          N[P] === `
` && R++;
        for (P = 1; P < R; P++)
          A.push(v);
      }
      function it(O, D, A) {
        return D < A ? ["(", O, ")"] : O;
      }
      function gt(O) {
        var D, A, P;
        for (P = O.split(/\r\n|\n/), D = 1, A = P.length; D < A; D++)
          P[D] = v + o + P[D];
        return P;
      }
      function zt(O, D) {
        var A, P, R;
        return A = O[_.verbatim], typeof A == "string" ? P = it(gt(A), n.Sequence, D) : (P = gt(A.content), R = A.precedence != null ? A.precedence : n.Sequence, P = it(P, R, D)), qe(P, O);
      }
      function ut() {
      }
      ut.prototype.maybeBlock = function(O, D) {
        var A, P, R = this;
        return P = !_.comment || !O.leadingComments, O.type === e.BlockStatement && P ? [C, this.generateStatement(O, D)] : O.type === e.EmptyStatement && P ? ";" : (Ve(function() {
          A = [
            v,
            wt(R.generateStatement(O, D))
          ];
        }), A);
      }, ut.prototype.maybeBlockSuffix = function(O, D) {
        var A = Tt(qe(D).toString());
        return O.type === e.BlockStatement && (!_.comment || !O.leadingComments) && !A ? [D, C] : A ? [D, o] : [D, v, o];
      };
      function en(O) {
        return qe(O.name, O);
      }
      function kt(O, D) {
        return O.async ? "async" + (D ? xt() : C) : "";
      }
      function xr(O) {
        var D = O.generator && !_.moz.starlessGenerator;
        return D ? "*" + C : "";
      }
      function qs(O) {
        var D = O.value, A = "";
        return D.async && (A += kt(D, !O.computed)), D.generator && (A += xr(D) ? "*" : ""), A;
      }
      ut.prototype.generatePattern = function(O, D, A) {
        return O.type === e.Identifier ? en(O) : this.generateExpression(O, D, A);
      }, ut.prototype.generateFunctionParams = function(O) {
        var D, A, P, R;
        if (R = !1, O.type === e.ArrowFunctionExpression && !O.rest && (!O.defaults || O.defaults.length === 0) && O.params.length === 1 && O.params[0].type === e.Identifier)
          P = [kt(O, !0), en(O.params[0])];
        else {
          for (P = O.type === e.ArrowFunctionExpression ? [kt(O, !1)] : [], P.push("("), O.defaults && (R = !0), D = 0, A = O.params.length; D < A; ++D)
            R && O.defaults[D] ? P.push(this.generateAssignment(O.params[D], O.defaults[D], "=", n.Assignment, ue)) : P.push(this.generatePattern(O.params[D], n.Assignment, ue)), D + 1 < A && P.push("," + C);
          O.rest && (O.params.length && P.push("," + C), P.push("..."), P.push(en(O.rest))), P.push(")");
        }
        return P;
      }, ut.prototype.generateFunctionBody = function(O) {
        var D, A;
        return D = this.generateFunctionParams(O), O.type === e.ArrowFunctionExpression && (D.push(C), D.push("=>")), O.expression ? (D.push(C), A = this.generateExpression(O.body, n.Assignment, ue), A.toString().charAt(0) === "{" && (A = ["(", A, ")"]), D.push(A)) : D.push(this.maybeBlock(O.body, Tn)), D;
      }, ut.prototype.generateIterationForStatement = function(O, D, A) {
        var P = ["for" + (D.await ? xt() + "await" : "") + C + "("], R = this;
        return Ve(function() {
          D.left.type === e.VariableDeclaration ? Ve(function() {
            P.push(D.left.kind + xt()), P.push(R.generateStatement(D.left.declarations[0], tt));
          }) : P.push(R.generateExpression(D.left, n.Call, ue)), P = xe(P, O), P = [xe(
            P,
            R.generateExpression(D.right, n.Assignment, ue)
          ), ")"];
        }), P.push(this.maybeBlock(D.body, A)), P;
      }, ut.prototype.generatePropertyKey = function(O, D) {
        var A = [];
        return D && A.push("["), A.push(this.generateExpression(O, n.Assignment, ue)), D && A.push("]"), A;
      }, ut.prototype.generateAssignment = function(O, D, A, P, R) {
        return n.Assignment < P && (R |= oe), it(
          [
            this.generateExpression(O, n.Call, R),
            C + A + C,
            this.generateExpression(D, n.Assignment, R)
          ],
          n.Assignment,
          P
        );
      }, ut.prototype.semicolon = function(O) {
        return !B && O & Ce ? "" : ";";
      }, ut.Statement = {
        BlockStatement: function(O, D) {
          var A, P, R = ["{", v], Y = this;
          return Ve(function() {
            O.body.length === 0 && q && (A = O.range, A[1] - A[0] > 2 && (P = N.substring(A[0] + 1, A[1] - 1), P[0] === `
` && (R = ["{"]), R.push(P)));
            var se, le, ge, We;
            for (We = $e, D & Pe && (We |= ie), se = 0, le = O.body.length; se < le; ++se)
              q && (se === 0 && (O.body[0].leadingComments && (A = O.body[0].leadingComments[0].extendedRange, P = N.substring(A[0], A[1]), P[0] === `
` && (R = ["{"])), O.body[0].leadingComments || rt(O.range[0], O.body[0].range[0], R)), se > 0 && !O.body[se - 1].trailingComments && !O.body[se].leadingComments && rt(O.body[se - 1].range[1], O.body[se].range[0], R)), se === le - 1 && (We |= Ce), O.body[se].leadingComments && q ? ge = Y.generateStatement(O.body[se], We) : ge = wt(Y.generateStatement(O.body[se], We)), R.push(ge), Tt(qe(ge).toString()) || q && se < le - 1 && O.body[se + 1].leadingComments || R.push(v), q && se === le - 1 && (O.body[se].trailingComments || rt(O.body[se].range[1], O.range[1], R));
          }), R.push(wt("}")), R;
        },
        BreakStatement: function(O, D) {
          return O.label ? "break " + O.label.name + this.semicolon(D) : "break" + this.semicolon(D);
        },
        ContinueStatement: function(O, D) {
          return O.label ? "continue " + O.label.name + this.semicolon(D) : "continue" + this.semicolon(D);
        },
        ClassBody: function(O, D) {
          var A = ["{", v], P = this;
          return Ve(function(R) {
            var Y, se;
            for (Y = 0, se = O.body.length; Y < se; ++Y)
              A.push(R), A.push(P.generateExpression(O.body[Y], n.Sequence, ue)), Y + 1 < se && A.push(v);
          }), Tt(qe(A).toString()) || A.push(v), A.push(o), A.push("}"), A;
        },
        ClassDeclaration: function(O, D) {
          var A, P;
          return A = ["class"], O.id && (A = xe(A, this.generateExpression(O.id, n.Sequence, ue))), O.superClass && (P = xe("extends", this.generateExpression(O.superClass, n.Unary, ue)), A = xe(A, P)), A.push(C), A.push(this.generateStatement(O.body, Ft)), A;
        },
        DirectiveStatement: function(O, D) {
          return _.raw && O.raw ? O.raw + this.semicolon(D) : vr(O.directive) + this.semicolon(D);
        },
        DoWhileStatement: function(O, D) {
          var A = xe("do", this.maybeBlock(O.body, $e));
          return A = this.maybeBlockSuffix(O.body, A), xe(A, [
            "while" + C + "(",
            this.generateExpression(O.test, n.Sequence, ue),
            ")" + this.semicolon(D)
          ]);
        },
        CatchClause: function(O, D) {
          var A, P = this;
          return Ve(function() {
            var R;
            O.param ? (A = [
              "catch" + C + "(",
              P.generateExpression(O.param, n.Sequence, ue),
              ")"
            ], O.guard && (R = P.generateExpression(O.guard, n.Sequence, ue), A.splice(2, 0, " if ", R))) : A = ["catch"];
          }), A.push(this.maybeBlock(O.body, $e)), A;
        },
        DebuggerStatement: function(O, D) {
          return "debugger" + this.semicolon(D);
        },
        EmptyStatement: function(O, D) {
          return ";";
        },
        ExportDefaultDeclaration: function(O, D) {
          var A = ["export"], P;
          return P = D & Ce ? Ft : $e, A = xe(A, "default"), H(O.declaration) ? A = xe(A, this.generateStatement(O.declaration, P)) : A = xe(A, this.generateExpression(O.declaration, n.Assignment, ue) + this.semicolon(D)), A;
        },
        ExportNamedDeclaration: function(O, D) {
          var A = ["export"], P, R = this;
          return P = D & Ce ? Ft : $e, O.declaration ? xe(A, this.generateStatement(O.declaration, P)) : (O.specifiers && (O.specifiers.length === 0 ? A = xe(A, "{" + C + "}") : O.specifiers[0].type === e.ExportBatchSpecifier ? A = xe(A, this.generateExpression(O.specifiers[0], n.Sequence, ue)) : (A = xe(A, "{"), Ve(function(Y) {
            var se, le;
            for (A.push(v), se = 0, le = O.specifiers.length; se < le; ++se)
              A.push(Y), A.push(R.generateExpression(O.specifiers[se], n.Sequence, ue)), se + 1 < le && A.push("," + v);
          }), Tt(qe(A).toString()) || A.push(v), A.push(o + "}")), O.source ? A = xe(A, [
            "from" + C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, ue),
            this.semicolon(D)
          ]) : A.push(this.semicolon(D))), A);
        },
        ExportAllDeclaration: function(O, D) {
          return [
            "export" + C,
            "*" + C,
            "from" + C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, ue),
            this.semicolon(D)
          ];
        },
        ExpressionStatement: function(O, D) {
          var A, P;
          function R(le) {
            var ge;
            return le.slice(0, 5) !== "class" ? !1 : (ge = le.charCodeAt(5), ge === 123 || a.code.isWhiteSpace(ge) || a.code.isLineTerminator(ge));
          }
          function Y(le) {
            var ge;
            return le.slice(0, 8) !== "function" ? !1 : (ge = le.charCodeAt(8), ge === 40 || a.code.isWhiteSpace(ge) || ge === 42 || a.code.isLineTerminator(ge));
          }
          function se(le) {
            var ge, We, St;
            if (le.slice(0, 5) !== "async" || !a.code.isWhiteSpace(le.charCodeAt(5)))
              return !1;
            for (We = 6, St = le.length; We < St && a.code.isWhiteSpace(le.charCodeAt(We)); ++We)
              ;
            return We === St || le.slice(We, We + 8) !== "function" ? !1 : (ge = le.charCodeAt(We + 8), ge === 40 || a.code.isWhiteSpace(ge) || ge === 42 || a.code.isLineTerminator(ge));
          }
          return A = [this.generateExpression(O.expression, n.Sequence, ue)], P = qe(A).toString(), P.charCodeAt(0) === 123 || // ObjectExpression
          R(P) || Y(P) || se(P) || W && D & ie && O.expression.type === e.Literal && typeof O.expression.value == "string" ? A = ["(", A, ")" + this.semicolon(D)] : A.push(this.semicolon(D)), A;
        },
        ImportDeclaration: function(O, D) {
          var A, P, R = this;
          return O.specifiers.length === 0 ? [
            "import",
            C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, ue),
            this.semicolon(D)
          ] : (A = [
            "import"
          ], P = 0, O.specifiers[P].type === e.ImportDefaultSpecifier && (A = xe(A, [
            this.generateExpression(O.specifiers[P], n.Sequence, ue)
          ]), ++P), O.specifiers[P] && (P !== 0 && A.push(","), O.specifiers[P].type === e.ImportNamespaceSpecifier ? A = xe(A, [
            C,
            this.generateExpression(O.specifiers[P], n.Sequence, ue)
          ]) : (A.push(C + "{"), O.specifiers.length - P === 1 ? (A.push(C), A.push(this.generateExpression(O.specifiers[P], n.Sequence, ue)), A.push(C + "}" + C)) : (Ve(function(Y) {
            var se, le;
            for (A.push(v), se = P, le = O.specifiers.length; se < le; ++se)
              A.push(Y), A.push(R.generateExpression(O.specifiers[se], n.Sequence, ue)), se + 1 < le && A.push("," + v);
          }), Tt(qe(A).toString()) || A.push(v), A.push(o + "}" + C)))), A = xe(A, [
            "from" + C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, ue),
            this.semicolon(D)
          ]), A);
        },
        VariableDeclarator: function(O, D) {
          var A = D & oe ? ue : Ue;
          return O.init ? [
            this.generateExpression(O.id, n.Assignment, A),
            C,
            "=",
            C,
            this.generateExpression(O.init, n.Assignment, A)
          ] : this.generatePattern(O.id, n.Assignment, A);
        },
        VariableDeclaration: function(O, D) {
          var A, P, R, Y, se, le = this;
          A = [O.kind], se = D & oe ? $e : tt;
          function ge() {
            for (Y = O.declarations[0], _.comment && Y.leadingComments ? (A.push(`
`), A.push(wt(le.generateStatement(Y, se)))) : (A.push(xt()), A.push(le.generateStatement(Y, se))), P = 1, R = O.declarations.length; P < R; ++P)
              Y = O.declarations[P], _.comment && Y.leadingComments ? (A.push("," + v), A.push(wt(le.generateStatement(Y, se)))) : (A.push("," + C), A.push(le.generateStatement(Y, se)));
          }
          return O.declarations.length > 1 ? Ve(ge) : ge(), A.push(this.semicolon(D)), A;
        },
        ThrowStatement: function(O, D) {
          return [xe(
            "throw",
            this.generateExpression(O.argument, n.Sequence, ue)
          ), this.semicolon(D)];
        },
        TryStatement: function(O, D) {
          var A, P, R, Y;
          if (A = ["try", this.maybeBlock(O.block, $e)], A = this.maybeBlockSuffix(O.block, A), O.handlers)
            for (P = 0, R = O.handlers.length; P < R; ++P)
              A = xe(A, this.generateStatement(O.handlers[P], $e)), (O.finalizer || P + 1 !== R) && (A = this.maybeBlockSuffix(O.handlers[P].body, A));
          else {
            for (Y = O.guardedHandlers || [], P = 0, R = Y.length; P < R; ++P)
              A = xe(A, this.generateStatement(Y[P], $e)), (O.finalizer || P + 1 !== R) && (A = this.maybeBlockSuffix(Y[P].body, A));
            if (O.handler)
              if (Array.isArray(O.handler))
                for (P = 0, R = O.handler.length; P < R; ++P)
                  A = xe(A, this.generateStatement(O.handler[P], $e)), (O.finalizer || P + 1 !== R) && (A = this.maybeBlockSuffix(O.handler[P].body, A));
              else
                A = xe(A, this.generateStatement(O.handler, $e)), O.finalizer && (A = this.maybeBlockSuffix(O.handler.body, A));
          }
          return O.finalizer && (A = xe(A, ["finally", this.maybeBlock(O.finalizer, $e)])), A;
        },
        SwitchStatement: function(O, D) {
          var A, P, R, Y, se, le = this;
          if (Ve(function() {
            A = [
              "switch" + C + "(",
              le.generateExpression(O.discriminant, n.Sequence, ue),
              ")" + C + "{" + v
            ];
          }), O.cases)
            for (se = $e, R = 0, Y = O.cases.length; R < Y; ++R)
              R === Y - 1 && (se |= Ce), P = wt(this.generateStatement(O.cases[R], se)), A.push(P), Tt(qe(P).toString()) || A.push(v);
          return A.push(wt("}")), A;
        },
        SwitchCase: function(O, D) {
          var A, P, R, Y, se, le = this;
          return Ve(function() {
            for (O.test ? A = [
              xe("case", le.generateExpression(O.test, n.Sequence, ue)),
              ":"
            ] : A = ["default:"], R = 0, Y = O.consequent.length, Y && O.consequent[0].type === e.BlockStatement && (P = le.maybeBlock(O.consequent[0], $e), A.push(P), R = 1), R !== Y && !Tt(qe(A).toString()) && A.push(v), se = $e; R < Y; ++R)
              R === Y - 1 && D & Ce && (se |= Ce), P = wt(le.generateStatement(O.consequent[R], se)), A.push(P), R + 1 !== Y && !Tt(qe(P).toString()) && A.push(v);
          }), A;
        },
        IfStatement: function(O, D) {
          var A, P, R, Y = this;
          return Ve(function() {
            A = [
              "if" + C + "(",
              Y.generateExpression(O.test, n.Sequence, ue),
              ")"
            ];
          }), R = D & Ce, P = $e, R && (P |= Ce), O.alternate ? (A.push(this.maybeBlock(O.consequent, $e)), A = this.maybeBlockSuffix(O.consequent, A), O.alternate.type === e.IfStatement ? A = xe(A, ["else ", this.generateStatement(O.alternate, P)]) : A = xe(A, xe("else", this.maybeBlock(O.alternate, P)))) : A.push(this.maybeBlock(O.consequent, P)), A;
        },
        ForStatement: function(O, D) {
          var A, P = this;
          return Ve(function() {
            A = ["for" + C + "("], O.init ? O.init.type === e.VariableDeclaration ? A.push(P.generateStatement(O.init, tt)) : (A.push(P.generateExpression(O.init, n.Sequence, Ue)), A.push(";")) : A.push(";"), O.test && (A.push(C), A.push(P.generateExpression(O.test, n.Sequence, ue))), A.push(";"), O.update && (A.push(C), A.push(P.generateExpression(O.update, n.Sequence, ue))), A.push(")");
          }), A.push(this.maybeBlock(O.body, D & Ce ? Ft : $e)), A;
        },
        ForInStatement: function(O, D) {
          return this.generateIterationForStatement("in", O, D & Ce ? Ft : $e);
        },
        ForOfStatement: function(O, D) {
          return this.generateIterationForStatement("of", O, D & Ce ? Ft : $e);
        },
        LabeledStatement: function(O, D) {
          return [O.label.name + ":", this.maybeBlock(O.body, D & Ce ? Ft : $e)];
        },
        Program: function(O, D) {
          var A, P, R, Y, se;
          for (Y = O.body.length, A = [$ && Y > 0 ? `
` : ""], se = Bt, R = 0; R < Y; ++R)
            !$ && R === Y - 1 && (se |= Ce), q && (R === 0 && (O.body[0].leadingComments || rt(O.range[0], O.body[R].range[0], A)), R > 0 && !O.body[R - 1].trailingComments && !O.body[R].leadingComments && rt(O.body[R - 1].range[1], O.body[R].range[0], A)), P = wt(this.generateStatement(O.body[R], se)), A.push(P), R + 1 < Y && !Tt(qe(P).toString()) && (q && O.body[R + 1].leadingComments || A.push(v)), q && R === Y - 1 && (O.body[R].trailingComments || rt(O.body[R].range[1], O.range[1], A));
          return A;
        },
        FunctionDeclaration: function(O, D) {
          return [
            kt(O, !0),
            "function",
            xr(O) || xt(),
            O.id ? en(O.id) : "",
            this.generateFunctionBody(O)
          ];
        },
        ReturnStatement: function(O, D) {
          return O.argument ? [xe(
            "return",
            this.generateExpression(O.argument, n.Sequence, ue)
          ), this.semicolon(D)] : ["return" + this.semicolon(D)];
        },
        WhileStatement: function(O, D) {
          var A, P = this;
          return Ve(function() {
            A = [
              "while" + C + "(",
              P.generateExpression(O.test, n.Sequence, ue),
              ")"
            ];
          }), A.push(this.maybeBlock(O.body, D & Ce ? Ft : $e)), A;
        },
        WithStatement: function(O, D) {
          var A, P = this;
          return Ve(function() {
            A = [
              "with" + C + "(",
              P.generateExpression(O.object, n.Sequence, ue),
              ")"
            ];
          }), A.push(this.maybeBlock(O.body, D & Ce ? Ft : $e)), A;
        }
      }, Gt(ut.prototype, ut.Statement), ut.Expression = {
        SequenceExpression: function(O, D, A) {
          var P, R, Y;
          for (n.Sequence < D && (A |= oe), P = [], R = 0, Y = O.expressions.length; R < Y; ++R)
            P.push(this.generateExpression(O.expressions[R], n.Assignment, A)), R + 1 < Y && P.push("," + C);
          return it(P, n.Sequence, D);
        },
        AssignmentExpression: function(O, D, A) {
          return this.generateAssignment(O.left, O.right, O.operator, D, A);
        },
        ArrowFunctionExpression: function(O, D, A) {
          return it(this.generateFunctionBody(O), n.ArrowFunction, D);
        },
        ConditionalExpression: function(O, D, A) {
          return n.Conditional < D && (A |= oe), it(
            [
              this.generateExpression(O.test, n.Coalesce, A),
              C + "?" + C,
              this.generateExpression(O.consequent, n.Assignment, A),
              C + ":" + C,
              this.generateExpression(O.alternate, n.Assignment, A)
            ],
            n.Conditional,
            D
          );
        },
        LogicalExpression: function(O, D, A) {
          return O.operator === "??" && (A |= Le), this.BinaryExpression(O, D, A);
        },
        BinaryExpression: function(O, D, A) {
          var P, R, Y, se, le, ge;
          return se = r[O.operator], R = O.operator === "**" ? n.Postfix : se, Y = O.operator === "**" ? se : se + 1, se < D && (A |= oe), le = this.generateExpression(O.left, R, A), ge = le.toString(), ge.charCodeAt(ge.length - 1) === 47 && a.code.isIdentifierPartES5(O.operator.charCodeAt(0)) ? P = [le, xt(), O.operator] : P = xe(le, O.operator), le = this.generateExpression(O.right, Y, A), O.operator === "/" && le.toString().charAt(0) === "/" || O.operator.slice(-1) === "<" && le.toString().slice(0, 3) === "!--" ? (P.push(xt()), P.push(le)) : P = xe(P, le), O.operator === "in" && !(A & oe) ? ["(", P, ")"] : (O.operator === "||" || O.operator === "&&") && A & Le ? ["(", P, ")"] : it(P, se, D);
        },
        CallExpression: function(O, D, A) {
          var P, R, Y;
          for (P = [this.generateExpression(O.callee, n.Call, De)], O.optional && P.push("?."), P.push("("), R = 0, Y = O.arguments.length; R < Y; ++R)
            P.push(this.generateExpression(O.arguments[R], n.Assignment, ue)), R + 1 < Y && P.push("," + C);
          return P.push(")"), A & fe ? it(P, n.Call, D) : ["(", P, ")"];
        },
        ChainExpression: function(O, D, A) {
          n.OptionalChaining < D && (A |= fe);
          var P = this.generateExpression(O.expression, n.OptionalChaining, A);
          return it(P, n.OptionalChaining, D);
        },
        NewExpression: function(O, D, A) {
          var P, R, Y, se, le;
          if (R = O.arguments.length, le = A & ke && !S && R === 0 ? dt : _e, P = xe(
            "new",
            this.generateExpression(O.callee, n.New, le)
          ), !(A & ke) || S || R > 0) {
            for (P.push("("), Y = 0, se = R; Y < se; ++Y)
              P.push(this.generateExpression(O.arguments[Y], n.Assignment, ue)), Y + 1 < se && P.push("," + C);
            P.push(")");
          }
          return it(P, n.New, D);
        },
        MemberExpression: function(O, D, A) {
          var P, R;
          return P = [this.generateExpression(O.object, n.Call, A & fe ? De : _e)], O.computed ? (O.optional && P.push("?."), P.push("["), P.push(this.generateExpression(O.property, n.Sequence, A & fe ? ue : dt)), P.push("]")) : (!O.optional && O.object.type === e.Literal && typeof O.object.value == "number" && (R = qe(P).toString(), R.indexOf(".") < 0 && !/[eExX]/.test(R) && a.code.isDecimalDigit(R.charCodeAt(R.length - 1)) && !(R.length >= 2 && R.charCodeAt(0) === 48) && P.push(" ")), P.push(O.optional ? "?." : "."), P.push(en(O.property))), it(P, n.Member, D);
        },
        MetaProperty: function(O, D, A) {
          var P;
          return P = [], P.push(typeof O.meta == "string" ? O.meta : en(O.meta)), P.push("."), P.push(typeof O.property == "string" ? O.property : en(O.property)), it(P, n.Member, D);
        },
        UnaryExpression: function(O, D, A) {
          var P, R, Y, se, le;
          return R = this.generateExpression(O.argument, n.Unary, ue), C === "" ? P = xe(O.operator, R) : (P = [O.operator], O.operator.length > 2 ? P = xe(P, R) : (se = qe(P).toString(), le = se.charCodeAt(se.length - 1), Y = R.toString().charCodeAt(0), ((le === 43 || le === 45) && le === Y || a.code.isIdentifierPartES5(le) && a.code.isIdentifierPartES5(Y)) && P.push(xt()), P.push(R))), it(P, n.Unary, D);
        },
        YieldExpression: function(O, D, A) {
          var P;
          return O.delegate ? P = "yield*" : P = "yield", O.argument && (P = xe(
            P,
            this.generateExpression(O.argument, n.Yield, ue)
          )), it(P, n.Yield, D);
        },
        AwaitExpression: function(O, D, A) {
          var P = xe(
            O.all ? "await*" : "await",
            this.generateExpression(O.argument, n.Await, ue)
          );
          return it(P, n.Await, D);
        },
        UpdateExpression: function(O, D, A) {
          return O.prefix ? it(
            [
              O.operator,
              this.generateExpression(O.argument, n.Unary, ue)
            ],
            n.Unary,
            D
          ) : it(
            [
              this.generateExpression(O.argument, n.Postfix, ue),
              O.operator
            ],
            n.Postfix,
            D
          );
        },
        FunctionExpression: function(O, D, A) {
          var P = [
            kt(O, !0),
            "function"
          ];
          return O.id ? (P.push(xr(O) || xt()), P.push(en(O.id))) : P.push(xr(O) || C), P.push(this.generateFunctionBody(O)), P;
        },
        ArrayPattern: function(O, D, A) {
          return this.ArrayExpression(O, D, A, !0);
        },
        ArrayExpression: function(O, D, A, P) {
          var R, Y, se = this;
          return O.elements.length ? (Y = P ? !1 : O.elements.length > 1, R = ["[", Y ? v : ""], Ve(function(le) {
            var ge, We;
            for (ge = 0, We = O.elements.length; ge < We; ++ge)
              O.elements[ge] ? (R.push(Y ? le : ""), R.push(se.generateExpression(O.elements[ge], n.Assignment, ue))) : (Y && R.push(le), ge + 1 === We && R.push(",")), ge + 1 < We && R.push("," + (Y ? v : C));
          }), Y && !Tt(qe(R).toString()) && R.push(v), R.push(Y ? o : ""), R.push("]"), R) : "[]";
        },
        RestElement: function(O, D, A) {
          return "..." + this.generatePattern(O.argument);
        },
        ClassExpression: function(O, D, A) {
          var P, R;
          return P = ["class"], O.id && (P = xe(P, this.generateExpression(O.id, n.Sequence, ue))), O.superClass && (R = xe("extends", this.generateExpression(O.superClass, n.Unary, ue)), P = xe(P, R)), P.push(C), P.push(this.generateStatement(O.body, Ft)), P;
        },
        MethodDefinition: function(O, D, A) {
          var P, R;
          return O.static ? P = ["static" + C] : P = [], O.kind === "get" || O.kind === "set" ? R = [
            xe(O.kind, this.generatePropertyKey(O.key, O.computed)),
            this.generateFunctionBody(O.value)
          ] : R = [
            qs(O),
            this.generatePropertyKey(O.key, O.computed),
            this.generateFunctionBody(O.value)
          ], xe(P, R);
        },
        Property: function(O, D, A) {
          return O.kind === "get" || O.kind === "set" ? [
            O.kind,
            xt(),
            this.generatePropertyKey(O.key, O.computed),
            this.generateFunctionBody(O.value)
          ] : O.shorthand ? O.value.type === "AssignmentPattern" ? this.AssignmentPattern(O.value, n.Sequence, ue) : this.generatePropertyKey(O.key, O.computed) : O.method ? [
            qs(O),
            this.generatePropertyKey(O.key, O.computed),
            this.generateFunctionBody(O.value)
          ] : [
            this.generatePropertyKey(O.key, O.computed),
            ":" + C,
            this.generateExpression(O.value, n.Assignment, ue)
          ];
        },
        ObjectExpression: function(O, D, A) {
          var P, R, Y, se = this;
          return O.properties.length ? (P = O.properties.length > 1, Ve(function() {
            Y = se.generateExpression(O.properties[0], n.Sequence, ue);
          }), !P && !Mt(qe(Y).toString()) ? ["{", C, Y, C, "}"] : (Ve(function(le) {
            var ge, We;
            if (R = ["{", v, le, Y], P)
              for (R.push("," + v), ge = 1, We = O.properties.length; ge < We; ++ge)
                R.push(le), R.push(se.generateExpression(O.properties[ge], n.Sequence, ue)), ge + 1 < We && R.push("," + v);
          }), Tt(qe(R).toString()) || R.push(v), R.push(o), R.push("}"), R)) : "{}";
        },
        AssignmentPattern: function(O, D, A) {
          return this.generateAssignment(O.left, O.right, "=", D, A);
        },
        ObjectPattern: function(O, D, A) {
          var P, R, Y, se, le, ge = this;
          if (!O.properties.length)
            return "{}";
          if (se = !1, O.properties.length === 1)
            le = O.properties[0], le.type === e.Property && le.value.type !== e.Identifier && (se = !0);
          else
            for (R = 0, Y = O.properties.length; R < Y; ++R)
              if (le = O.properties[R], le.type === e.Property && !le.shorthand) {
                se = !0;
                break;
              }
          return P = ["{", se ? v : ""], Ve(function(We) {
            var St, Xt;
            for (St = 0, Xt = O.properties.length; St < Xt; ++St)
              P.push(se ? We : ""), P.push(ge.generateExpression(O.properties[St], n.Sequence, ue)), St + 1 < Xt && P.push("," + (se ? v : C));
          }), se && !Tt(qe(P).toString()) && P.push(v), P.push(se ? o : ""), P.push("}"), P;
        },
        ThisExpression: function(O, D, A) {
          return "this";
        },
        Super: function(O, D, A) {
          return "super";
        },
        Identifier: function(O, D, A) {
          return en(O);
        },
        ImportDefaultSpecifier: function(O, D, A) {
          return en(O.id || O.local);
        },
        ImportNamespaceSpecifier: function(O, D, A) {
          var P = ["*"], R = O.id || O.local;
          return R && P.push(C + "as" + xt() + en(R)), P;
        },
        ImportSpecifier: function(O, D, A) {
          var P = O.imported, R = [P.name], Y = O.local;
          return Y && Y.name !== P.name && R.push(xt() + "as" + xt() + en(Y)), R;
        },
        ExportSpecifier: function(O, D, A) {
          var P = O.local, R = [P.name], Y = O.exported;
          return Y && Y.name !== P.name && R.push(xt() + "as" + xt() + en(Y)), R;
        },
        Literal: function(O, D, A) {
          var P;
          if (O.hasOwnProperty("raw") && M && _.raw)
            try {
              if (P = M(O.raw).body[0].expression, P.type === e.Literal && P.value === O.value)
                return O.raw;
            } catch {
            }
          return O.regex ? "/" + O.regex.pattern + "/" + O.regex.flags : typeof O.value == "bigint" ? O.value.toString() + "n" : O.bigint ? O.bigint + "n" : O.value === null ? "null" : typeof O.value == "string" ? un(O.value) : typeof O.value == "number" ? Wn(O.value) : typeof O.value == "boolean" ? O.value ? "true" : "false" : Pn(O.value);
        },
        GeneratorExpression: function(O, D, A) {
          return this.ComprehensionExpression(O, D, A);
        },
        ComprehensionExpression: function(O, D, A) {
          var P, R, Y, se, le = this;
          return P = O.type === e.GeneratorExpression ? ["("] : ["["], _.moz.comprehensionExpressionStartsWithAssignment && (se = this.generateExpression(O.body, n.Assignment, ue), P.push(se)), O.blocks && Ve(function() {
            for (R = 0, Y = O.blocks.length; R < Y; ++R)
              se = le.generateExpression(O.blocks[R], n.Sequence, ue), R > 0 || _.moz.comprehensionExpressionStartsWithAssignment ? P = xe(P, se) : P.push(se);
          }), O.filter && (P = xe(P, "if" + C), se = this.generateExpression(O.filter, n.Sequence, ue), P = xe(P, ["(", se, ")"])), _.moz.comprehensionExpressionStartsWithAssignment || (se = this.generateExpression(O.body, n.Assignment, ue), P = xe(P, se)), P.push(O.type === e.GeneratorExpression ? ")" : "]"), P;
        },
        ComprehensionBlock: function(O, D, A) {
          var P;
          return O.left.type === e.VariableDeclaration ? P = [
            O.left.kind,
            xt(),
            this.generateStatement(O.left.declarations[0], tt)
          ] : P = this.generateExpression(O.left, n.Call, ue), P = xe(P, O.of ? "of" : "in"), P = xe(P, this.generateExpression(O.right, n.Sequence, ue)), ["for" + C + "(", P, ")"];
        },
        SpreadElement: function(O, D, A) {
          return [
            "...",
            this.generateExpression(O.argument, n.Assignment, ue)
          ];
        },
        TaggedTemplateExpression: function(O, D, A) {
          var P = De;
          A & fe || (P = _e);
          var R = [
            this.generateExpression(O.tag, n.Call, P),
            this.generateExpression(O.quasi, n.Primary, He)
          ];
          return it(R, n.TaggedTemplate, D);
        },
        TemplateElement: function(O, D, A) {
          return O.value.raw;
        },
        TemplateLiteral: function(O, D, A) {
          var P, R, Y;
          for (P = ["`"], R = 0, Y = O.quasis.length; R < Y; ++R)
            P.push(this.generateExpression(O.quasis[R], n.Primary, ue)), R + 1 < Y && (P.push("${" + C), P.push(this.generateExpression(O.expressions[R], n.Sequence, ue)), P.push(C + "}"));
          return P.push("`"), P;
        },
        ModuleSpecifier: function(O, D, A) {
          return this.Literal(O, D, A);
        },
        ImportExpression: function(O, D, A) {
          return it([
            "import(",
            this.generateExpression(O.source, n.Assignment, ue),
            ")"
          ], n.Call, D);
        }
      }, Gt(ut.prototype, ut.Expression), ut.prototype.generateExpression = function(O, D, A) {
        var P, R;
        return R = O.type || e.Property, _.verbatim && O.hasOwnProperty(_.verbatim) ? zt(O, D) : (P = this[R](O, D, A), _.comment && (P = Nr(O, P)), qe(P, O));
      }, ut.prototype.generateStatement = function(O, D) {
        var A, P;
        return A = this[O.type](O, D), _.comment && (A = Nr(O, A)), P = qe(A).toString(), O.type === e.Program && !$ && v === "" && P.charAt(P.length - 1) === `
` && (A = Z ? qe(A).replaceRight(/\s+$/, "") : P.replace(/\s+$/, "")), qe(A, O);
      };
      function Oi(O) {
        var D;
        if (D = new ut(), H(O))
          return D.generateStatement(O, $e);
        if (pe(O))
          return D.generateExpression(O, n.Sequence, ue);
        throw new Error("Unknown node type: " + O.type);
      }
      function Gs(O, D) {
        var A = Sn(), P, R;
        return D != null ? (typeof D.indent == "string" && (A.format.indent.style = D.indent), typeof D.base == "number" && (A.format.indent.base = D.base), D = An(A, D), l = D.format.indent.style, typeof D.base == "string" ? o = D.base : o = vt(l, D.format.indent.base)) : (D = A, l = D.format.indent.style, o = vt(l, D.format.indent.base)), u = D.format.json, h = D.format.renumber, f = u ? !1 : D.format.hexadecimal, m = u ? "double" : D.format.quotes, b = D.format.escapeless, v = D.format.newline, C = D.format.space, D.format.compact && (v = C = l = o = ""), S = D.format.parentheses, B = D.format.semicolons, $ = D.format.safeConcatenation, W = D.directive, M = u ? null : D.parse, Z = D.sourceMap, N = D.sourceCode, q = D.format.preserveBlankLines && N !== null, _ = D, Z && (t.browser ? s = UB.sourceMap.SourceNode : s = s4().SourceNode), P = Oi(O), Z ? (R = P.toStringWithSourceMap({
          file: D.file,
          sourceRoot: D.sourceMapRoot
        }), D.sourceContent && R.map.setSourceContent(
          D.sourceMap,
          D.sourceContent
        ), D.sourceMapWithCode ? R : R.map.toString()) : (R = { code: P.toString(), map: null }, D.sourceMapWithCode ? R : R.code);
      }
      ae = {
        indent: {
          style: "",
          base: 0
        },
        renumber: !0,
        hexadecimal: !0,
        quotes: "auto",
        escapeless: !0,
        compact: !0,
        parentheses: !1,
        semicolons: !1
      }, J = Sn().format, t.version = v4.version, t.generate = Gs, t.attachComments = i.attachComments, t.Precedence = An({}, n), t.browser = !1, t.FORMAT_MINIFY = ae, t.FORMAT_DEFAULTS = J;
    })();
  }(Dh)), Dh;
}
var w4 = x4();
const k4 = /* @__PURE__ */ qB(w4);
class C4 {
  constructor() {
    this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
      skip: () => this.should_skip = !0,
      remove: () => this.should_remove = !0,
      replace: (e) => this.replacement = e
    };
  }
  /**
   * @template {Node} Parent
   * @param {Parent | null | undefined} parent
   * @param {keyof Parent | null | undefined} prop
   * @param {number | null | undefined} index
   * @param {Node} node
   */
  replace(e, n, r, s) {
    e && n && (r != null ? e[n][r] = s : e[n] = s);
  }
  /**
   * @template {Node} Parent
   * @param {Parent | null | undefined} parent
   * @param {keyof Parent | null | undefined} prop
   * @param {number | null | undefined} index
   */
  remove(e, n, r) {
    e && n && (r != null ? e[n].splice(r, 1) : delete e[n]);
  }
}
class S4 extends C4 {
  /**
   *
   * @param {SyncHandler} [enter]
   * @param {SyncHandler} [leave]
   */
  constructor(e, n) {
    super(), this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
      skip: () => this.should_skip = !0,
      remove: () => this.should_remove = !0,
      replace: (r) => this.replacement = r
    }, this.enter = e, this.leave = n;
  }
  /**
   * @template {Node} Parent
   * @param {Node} node
   * @param {Parent | null} parent
   * @param {keyof Parent} [prop]
   * @param {number | null} [index]
   * @returns {Node | null}
   */
  visit(e, n, r, s) {
    if (e) {
      if (this.enter) {
        const a = this.should_skip, o = this.should_remove, l = this.replacement;
        this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.enter.call(this.context, e, n, r, s), this.replacement && (e = this.replacement, this.replace(n, r, s, e)), this.should_remove && this.remove(n, r, s);
        const u = this.should_skip, h = this.should_remove;
        if (this.should_skip = a, this.should_remove = o, this.replacement = l, u) return e;
        if (h) return null;
      }
      let i;
      for (i in e) {
        const a = e[i];
        if (a && typeof a == "object")
          if (Array.isArray(a)) {
            const o = (
              /** @type {Array<unknown>} */
              a
            );
            for (let l = 0; l < o.length; l += 1) {
              const u = o[l];
              Pg(u) && (this.visit(u, e, i, l) || l--);
            }
          } else Pg(a) && this.visit(a, e, i, null);
      }
      if (this.leave) {
        const a = this.replacement, o = this.should_remove;
        this.replacement = null, this.should_remove = !1, this.leave.call(this.context, e, n, r, s), this.replacement && (e = this.replacement, this.replace(n, r, s, e)), this.should_remove && this.remove(n, r, s);
        const l = this.should_remove;
        if (this.replacement = a, this.should_remove = o, l) return null;
      }
    }
    return e;
  }
}
function Pg(t) {
  return t !== null && typeof t == "object" && "type" in t && typeof t.type == "string";
}
function A4(t, { enter: e, leave: n }) {
  return new S4(e, n).visit(t, null);
}
let b2 = [];
function P4(t) {
  b2.push(t);
}
let Bc = /* @__PURE__ */ new Map();
function D4(t, e = {}) {
  const { wrapAsync: n = !1, addReturn: r = !0, emitMiniLocations: s = !0, emitWidgets: i = !0 } = e;
  let a = WB(t, {
    ecmaVersion: 2022,
    allowAwaitOutsideFunction: !0,
    locations: !0
  }), o = [];
  const l = (m, b) => {
    const v = Bc.get("minilang");
    if (v) {
      const C = `[${m}]`, S = v.getLocations(C, b.start);
      o = o.concat(S);
    } else {
      const C = Fd(`"${m}"`, b.start, t);
      o = o.concat(C);
    }
  };
  let u = [];
  A4(a, {
    enter(m, b) {
      if ($4(m)) {
        const { name: v } = m.tag, C = Bc.get(v), S = m.quasi.quasis[0].value.raw, B = m.quasi.start + 1;
        if (s) {
          const $ = C.getLocations(S, B);
          o = o.concat($);
        }
        return this.skip(), this.replace(V4(v, S, B));
      }
      if (L4(m, "tidal")) {
        const v = m.quasi.quasis[0].value.raw, C = m.quasi.start + 1;
        if (s) {
          const S = I4(v, C);
          o = o.concat(S);
        }
        return this.skip(), this.replace(N4(v, C));
      }
      if (F4(m, b)) {
        const { quasis: v } = m, { raw: C } = v[0].value;
        return this.skip(), s && l(C, m), this.replace(Dg(C, m));
      }
      if (E4(m)) {
        const { value: v } = m;
        return this.skip(), s && l(v, m), this.replace(Dg(v, m));
      }
      if (B4(m))
        return i && u.push({
          from: m.arguments[0].start,
          to: m.arguments[0].end,
          value: m.arguments[0].raw,
          // don't use value!
          min: m.arguments[1]?.value ?? 0,
          max: m.arguments[2]?.value ?? 1,
          step: m.arguments[3]?.value,
          type: "slider"
        }), this.replace(T4(m));
      if (M4(m)) {
        const v = m.callee.property.name, C = u.filter((B) => B.type === v).length, S = {
          to: m.end,
          index: C,
          type: v,
          id: e.id
        };
        return i && u.push(S), this.replace(Q4(m, S));
      }
      if (j4(m, b))
        return this.replace(_4(m));
      if (R4(m))
        return this.replace(Z4(m));
    },
    leave(m, b, v, C) {
    }
  });
  let { body: h } = a;
  if (!h.length)
    console.warn("empty body -> fallback to silence"), h.push({
      type: "ExpressionStatement",
      expression: {
        type: "Identifier",
        name: "silence"
      }
    });
  else if (!h?.[h.length - 1]?.expression)
    throw new Error("unexpected ast format without body expression");
  if (r) {
    const { expression: m } = h[h.length - 1];
    h[h.length - 1] = {
      type: "ReturnStatement",
      argument: m
    };
  }
  let f = k4.generate(a);
  return n && (f = `(async ()=>{${f}})()`), s ? { output: f, miniLocations: o, widgets: u } : { output: f };
}
function E4(t, e, n) {
  return t.type !== "Literal" ? !1 : t.raw[0] === '"';
}
function F4(t, e) {
  return t.type === "TemplateLiteral" && e.type !== "TaggedTemplateExpression";
}
function Dg(t, e) {
  const { start: n } = e, r = Bc.get("minilang");
  let s = "m";
  return r && r.name && (s = r.name), {
    type: "CallExpression",
    callee: {
      type: "Identifier",
      name: s
    },
    arguments: [
      { type: "Literal", value: t },
      { type: "Literal", value: n }
    ],
    optional: !1
  };
}
function B4(t) {
  return t.type === "CallExpression" && t.callee.name === "slider";
}
function M4(t) {
  return t.type === "CallExpression" && b2.includes(t.callee.property?.name);
}
function T4(t) {
  const e = "slider_" + t.arguments[0].start;
  return t.arguments.unshift({
    type: "Literal",
    value: e,
    raw: e
  }), t.callee.name = "sliderWithID", t;
}
function y2(t) {
  return `${t.id || ""}_widget_${t.type}_${t.index}`;
}
function Q4(t, e) {
  const n = y2(e);
  return t.arguments.unshift({
    type: "Literal",
    value: n,
    raw: n
  }), t;
}
function j4(t, e) {
  return t.type === "CallExpression" && t.callee.name === "samples" && e.type !== "AwaitExpression";
}
function _4(t) {
  return {
    type: "AwaitExpression",
    argument: t
  };
}
function R4(t) {
  return t.type === "LabeledStatement";
}
function Z4(t) {
  return {
    type: "ExpressionStatement",
    expression: {
      type: "CallExpression",
      callee: {
        type: "MemberExpression",
        object: t.body.expression,
        property: {
          type: "Identifier",
          name: "p"
        }
      },
      arguments: [
        {
          type: "Literal",
          value: t.label.name,
          raw: `'${t.label.name}'`
        }
      ]
    }
  };
}
function $4(t) {
  return t.type === "TaggedTemplateExpression" && Bc.has(t.tag.name);
}
function L4(t, e) {
  return t.type === "TaggedTemplateExpression" && t.tag.name === e;
}
function I4(t, e) {
  return t.split("").reduce((n, r, s) => (r !== '"' || (!n.length || n[n.length - 1].length > 1 ? n.push([s + 1]) : n[n.length - 1].push(s)), n), []).map(([n, r]) => {
    const s = t.slice(n, r);
    return Fd(`"${s}"`, e + n - 1);
  }).flat();
}
function N4(t, e) {
  return {
    type: "CallExpression",
    callee: {
      type: "Identifier",
      name: "tidal"
    },
    arguments: [
      { type: "Literal", value: t },
      { type: "Literal", value: e }
    ],
    optional: !1
  };
}
function V4(t, e, n) {
  return {
    type: "CallExpression",
    callee: {
      type: "Identifier",
      name: t
    },
    arguments: [
      { type: "Literal", value: e },
      { type: "Literal", value: n }
    ],
    optional: !1
  };
}
if (typeof DelayNode < "u") {
  class t extends DelayNode {
    constructor(n, r, s, i) {
      super(n), r = Math.abs(r), this.delayTime.value = s;
      const a = n.createGain();
      a.gain.value = Math.min(Math.abs(i), 0.995), this.feedback = a.gain;
      const o = n.createGain();
      return o.gain.value = r, this.delayGain = o, this.connect(a), this.connect(o), a.connect(this), this.connect = (l) => o.connect(l), this;
    }
    start(n) {
      this.delayGain.gain.setValueAtTime(this.delayGain.gain.value, n + this.delayTime.value);
    }
  }
  AudioContext.prototype.createFeedbackDelay = function(e, n, r) {
    return new t(this, e, n, r);
  };
}
var Ld = {};
Ld.generateReverb = function(t, e) {
  for (var n = t.audioContext || new AudioContext(), r = n.sampleRate, s = t.numChannels || 2, i = t.decayTime * 1.5, a = Math.round(t.decayTime * r), o = Math.round(i * r), l = Math.round((t.fadeInTime || 0) * r), u = Math.pow(1 / 1e3, 1 / a), h = n.createBuffer(s, o, r), f = 0; f < s; f++) {
    for (var m = h.getChannelData(f), b = 0; b < o; b++)
      m[b] = U4() * Math.pow(u, b);
    for (var b = 0; b < l; b++)
      m[b] *= b / l;
  }
  X4(h, t.lpFreqStart || 0, t.lpFreqEnd || 0, t.decayTime, e);
};
Ld.generateGraph = function(t, e, n, r, s) {
  var i = document.createElement("canvas");
  i.width = e, i.height = n;
  var a = i.getContext("2d");
  a.fillStyle = "#000", a.fillRect(0, 0, i.width, i.height), a.fillStyle = "#fff";
  for (var o = e / t.length, l = n / (s - r), u = 0; u < t.length; u++)
    a.fillRect(u * o, n - (t[u] - r) * l, 1, 1);
  return i;
};
var X4 = function(t, e, n, r, s) {
  if (e == 0) {
    s(t);
    return;
  }
  var i = W4(t), a = new OfflineAudioContext(t.numberOfChannels, i[0].length, t.sampleRate), o = a.createBufferSource();
  o.buffer = t;
  var l = a.createBiquadFilter();
  e = Math.min(e, t.sampleRate / 2), n = Math.min(n, t.sampleRate / 2), l.type = "lowpass", l.Q.value = 1e-4, l.frequency.setValueAtTime(e, 0), l.frequency.linearRampToValueAtTime(n, r), o.connect(l), l.connect(a.destination), o.start(), a.oncomplete = function(u) {
    s(u.renderedBuffer);
  }, a.startRendering(), window.filterNode = l;
}, W4 = function(t) {
  for (var e = [], n = 0; n < t.numberOfChannels; n++)
    e[n] = t.getChannelData(n);
  return e;
}, U4 = function() {
  return Math.random() * 2 - 1;
};
let O2 = (t) => console.log(t);
function Id(t, e = "cyclist") {
  br(`[${e}] error: ${t.message}`);
}
const br = (...t) => O2(...t), v2 = (t) => {
  O2 = t;
}, q4 = (t) => {
  if (typeof t != "string")
    return [];
  const [e, n = "", r] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];
  return e ? [e, n, r ? Number(r) : void 0] : [];
}, G4 = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, z4 = { "#": 1, b: -1, s: 1, f: -1 }, Lu = (t, e = 3) => {
  const [n, r, s = e] = q4(t);
  if (!n)
    throw new Error('not a note: "' + t + '"');
  const i = G4[n.toLowerCase()], a = r?.split("").reduce((o, l) => o + z4[l], 0) || 0;
  return (Number(s) + 1) * 12 + i + a;
}, x2 = (t) => Math.pow(2, (t - 69) / 12) * 440, $i = (t, e, n) => Math.min(Math.max(t, e), n), Y4 = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, H4 = (t, e) => {
  if (typeof t != "object")
    throw new Error("valueToMidi: expected object value");
  let { freq: n, note: r } = t;
  return typeof n == "number" ? Y4(n) : typeof r == "string" ? Lu(r) : typeof r == "number" ? r : e;
};
function Qs(t, e = 0, n) {
  return isNaN(Number(t)) ? (!n && br(`"${t}" is not a number, falling back to ${e}`, "warning"), e) : t;
}
const w2 = (t, e) => (t % e + e) % e, Eg = (t, e) => w2(Math.round(Qs(t, 0)), e);
function K4(t, e) {
  return t / e;
}
typeof AudioContext < "u" && (AudioContext.prototype.adjustLength = function(t, e, n = 1, r = 0) {
  const s = Math.floor($i(r, 0, 1) * e.length), i = e.sampleRate * t, a = this.createBuffer(e.numberOfChannels, e.length, e.sampleRate);
  for (let o = 0; o < e.numberOfChannels; o++) {
    let l = e.getChannelData(o), u = a.getChannelData(o);
    for (let h = 0; h < i; h++) {
      let f = (s + h * Math.abs(n)) % l.length;
      n < 1 && (f = f * -1), u[h] = l.at(f) || 0;
    }
  }
  return a;
}, AudioContext.prototype.createReverb = function(t, e, n, r, s, i, a) {
  const o = this.createConvolver();
  return o.generate = (l = 2, u = 0.1, h = 15e3, f = 1e3, m, b, v) => {
    o.duration = l, o.fade = u, o.lp = h, o.dim = f, o.ir = m, o.irspeed = b, o.irbegin = v, m ? o.buffer = this.adjustLength(l, m, b, v) : Ld.generateReverb(
      {
        audioContext: this,
        numChannels: 2,
        decayTime: l,
        fadeInTime: u,
        lpFreqStart: h,
        lpFreqEnd: f
      },
      (C) => {
        o.buffer = C;
      }
    );
  }, o.generate(t, e, n, r, s, i, a), o;
});
var Fg = {
  a: { freqs: [660, 1120, 2750, 3e3, 3350], gains: [1, 0.5012, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },
  e: { freqs: [440, 1800, 2700, 3e3, 3300], gains: [1, 0.1995, 0.1259, 0.1, 0.1], qs: [70, 80, 100, 120, 120] },
  i: { freqs: [270, 1850, 2900, 3350, 3590], gains: [1, 0.0631, 0.0631, 0.0158, 0.0158], qs: [40, 90, 100, 120, 120] },
  o: { freqs: [430, 820, 2700, 3e3, 3300], gains: [1, 0.3162, 0.0501, 0.0794, 0.01995], qs: [40, 80, 100, 120, 120] },
  u: { freqs: [370, 630, 2750, 3e3, 3400], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },
  ae: { freqs: [650, 1515, 2400, 3e3, 3350], gains: [1, 0.5, 0.1008, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },
  aa: { freqs: [560, 900, 2570, 3e3, 3300], gains: [1, 0.5, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },
  oe: { freqs: [500, 1430, 2300, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },
  ue: { freqs: [250, 1750, 2150, 3200, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },
  y: { freqs: [400, 1460, 2400, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  uh: { freqs: [600, 1250, 2100, 3100, 3500], gains: [1, 0.3, 0.0608, 0.0316, 0.01995], qs: [40, 70, 100, 120, 130] },
  un: { freqs: [500, 1240, 2280, 3e3, 3500], gains: [1, 0.1, 0.1708, 0.0216, 0.02995], qs: [40, 60, 100, 120, 120] },
  en: { freqs: [600, 1480, 2450, 3200, 3300], gains: [1, 0.15, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  an: { freqs: [700, 1050, 2500, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  on: { freqs: [500, 1080, 2350, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  get æ() {
    return this.ae;
  },
  get ø() {
    return this.oe;
  },
  get ɑ() {
    return this.aa;
  },
  get å() {
    return this.aa;
  },
  get ö() {
    return this.oe;
  },
  get ü() {
    return this.ue;
  },
  get ı() {
    return this.y;
  }
};
if (typeof GainNode < "u") {
  class t extends GainNode {
    constructor(n, r) {
      if (super(n), !Fg[r])
        throw new Error("vowel: unknown vowel " + r);
      const { gains: s, qs: i, freqs: a } = Fg[r], o = n.createGain();
      for (let l = 0; l < 5; l++) {
        const u = n.createGain();
        u.gain.value = s[l];
        const h = n.createBiquadFilter();
        h.type = "bandpass", h.Q.value = i[l], h.frequency.value = a[l], this.connect(h), h.connect(u), u.connect(o);
      }
      return o.gain.value = 8, this.connect = (l) => o.connect(l), this;
    }
  }
  AudioContext.prototype.createVowelFilter = function(e) {
    return new t(this, e);
  };
}
const J4 = "data:text/javascript;base64,";
let Lh = {};
function k2(t, e) {
  const n = ot();
  if (Lh[t])
    return Lh[t];
  const r = 2 * n.sampleRate, s = n.createBuffer(1, r, n.sampleRate), i = s.getChannelData(0);
  let a = 0, o, l, u, h, f, m, b;
  o = l = u = h = f = m = b = 0;
  for (let v = 0; v < r; v++)
    if (t === "white")
      i[v] = Math.random() * 2 - 1;
    else if (t === "brown") {
      let C = Math.random() * 2 - 1;
      i[v] = (a + 0.02 * C) / 1.02, a = i[v];
    } else if (t === "pink") {
      let C = Math.random() * 2 - 1;
      o = 0.99886 * o + C * 0.0555179, l = 0.99332 * l + C * 0.0750759, u = 0.969 * u + C * 0.153852, h = 0.8665 * h + C * 0.3104856, f = 0.55 * f + C * 0.5329522, m = -0.7616 * m - C * 0.016898, i[v] = o + l + u + h + f + m + b + C * 0.5362, i[v] *= 0.11, b = C * 0.115926;
    } else if (t === "crackle") {
      const C = e * 0.01;
      Math.random() < C ? i[v] = Math.random() * 2 - 1 : i[v] = 0;
    }
  return t !== "crackle" && (Lh[t] = s), s;
}
function _p(t = "white", e, n = 0.02) {
  const s = ot().createBufferSource();
  return s.buffer = k2(t, n), s.loop = !0, s.start(e), {
    node: s,
    stop: (i) => s.stop(i)
  };
}
function e8(t, e, n) {
  const r = _p("pink", n);
  return {
    node: S2(t, r.node, e),
    stop: (i) => r?.stop(i)
  };
}
const Nd = ["pink", "white", "brown", "crackle"];
function zn(t) {
  const e = ot().createGain();
  return e.gain.value = t, e;
}
const Bg = (t, e, n, r) => r - n === 0 ? 0 : (e - t) / (r - n);
function Yr(t, e, n, r) {
  const s = new AudioWorkletNode(t, e, r);
  return Object.entries(n).forEach(([i, a]) => {
    s.parameters.get(i).value = a;
  }), s;
}
const hs = (t, e, n, r, s, i, a, o, l, u = "exponential") => {
  e = Qs(e), n = Qs(n), r = Qs(r), s = Qs(s);
  const h = u === "exponential" ? "exponentialRampToValueAtTime" : "linearRampToValueAtTime";
  u === "exponential" && (i = i === 0 ? 1e-3 : i, a = a === 0 ? 1e-3 : a);
  const f = a - i, m = a, b = i + r * f, v = l - o, C = (S) => {
    let B;
    if (e > S) {
      let $ = Bg(i, m, 0, e);
      B = S * $ + (i > m ? i : 0);
    } else
      B = (S - e) * Bg(m, b, 0, n) + m;
    return u === "exponential" && (B = B || 1e-3), B;
  };
  t.setValueAtTime(i, o), e > v ? t[h](C(v), l) : e + n > v ? (t[h](C(e), o + e), t[h](C(v), l)) : (t[h](C(e), o + e), t[h](C(e + n), o + e + n), t.setValueAtTime(b, l)), t[h](i, l + s);
};
function C2(t, e, n, r, s, i) {
  const a = {
    threshold: e ?? -3,
    ratio: n ?? 10,
    knee: r ?? 10,
    attack: s ?? 5e-3,
    release: i ?? 0.05
  };
  return new DynamicsCompressorNode(t, a);
}
const ps = (t, e = "linear", n) => {
  const [a, o, l, u] = t;
  if (a == null && o == null && l == null && u == null)
    return n ?? [1e-3, 1e-3, 1, 0.01];
  const h = l ?? (a != null && o == null || a == null && o == null ? 1 : 1e-3);
  return [Math.max(a ?? 0, 1e-3), Math.max(o ?? 0, 1e-3), Math.min(h, 1), Math.max(u ?? 0, 0.01)];
};
function uc(t, e, n, r, s, i, a, o, l, u, h, f, m, b) {
  const v = "exponential", [C, S, B, $] = ps([s, i, a, o], v, [5e-3, 0.14, 0, 0.1]);
  let W, _;
  if (m === "ladder" ? (W = Yr(t, "ladder-processor", { frequency: n, q: r, drive: b }), _ = W.parameters.get("frequency")) : (W = t.createBiquadFilter(), W.type = e, W.Q.value = r, W.frequency.value = n, _ = W.frequency), (s ?? i ?? a ?? o ?? l) !== void 0) {
    l = Qs(l, 1, !0), f = Qs(f, 0, !0);
    const Z = Math.abs(l), N = Z * f;
    let q = $i(2 ** -N * n, 0, 2e4), ae = $i(2 ** (Z - N) * n, 0, 2e4);
    return l < 0 && ([q, ae] = [ae, q]), hs(_, C, S, B, $, q, ae, u, h, v), W;
  }
  return W;
}
let Mg = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5;
function S2(t, e, n = 0) {
  const r = ot();
  if (!n)
    return t;
  let s = r.createGain(), i = r.createGain();
  t.connect(s), e.connect(i), s.gain.value = Mg(n), i.gain.value = Mg(1 - n);
  let a = r.createGain();
  return s.connect(a), i.connect(a), a;
}
let t8 = ["linear", "exponential"];
function Mo(t, e, n, r) {
  if (!(e.pattack ?? e.pdecay ?? e.psustain ?? e.prelease ?? e.penv))
    return;
  const i = Qs(e.penv, 1, !0), a = t8[e.pcurve ?? 0];
  let [o, l, u, h] = ps(
    [e.pattack, e.pdecay, e.psustain, e.prelease],
    a,
    [0.2, 1e-3, 1, 1e-3]
  ), f = e.panchor ?? u;
  const m = i * 100, b = 0 - m * f, v = m - m * f;
  hs(t, o, l, u, h, b, v, n, r, a);
}
function To(t, e, n) {
  const { vibmod: r = 0.5, vib: s } = e;
  let i;
  if (s > 0) {
    i = ot().createOscillator(), i.frequency.value = s;
    const a = ot().createGain();
    return a.gain.value = r * 100, i.connect(a), a.connect(t), i.start(n), i;
  }
}
function xo(t, e, n, r) {
  const s = new ConstantSourceNode(t), i = zn(0);
  return i.connect(t.destination), s.connect(i), s.onended = () => {
    try {
      i.disconnect();
    } catch {
    }
    try {
      s.disconnect();
    } catch {
    }
    e();
  }, s.start(n), s.stop(r), s;
}
const n8 = (t, e = 1, n = "sine") => {
  const r = ot();
  let s;
  Nd.includes(n) ? (s = r.createBufferSource(), s.buffer = k2(n, 2), s.loop = !0) : (s = r.createOscillator(), s.type = n, s.frequency.value = t), s.start();
  const i = new GainNode(r, { gain: e });
  return s.connect(i), { node: i, stop: (a) => s.stop(a) };
}, r8 = (t, e, n, r = "sine") => {
  const i = t.value * e, a = i * n;
  return n8(i, a, r);
};
function Mc(t, e, n) {
  const {
    fmh: r = 1,
    fmi: s,
    fmenv: i = "exp",
    fmattack: a,
    fmdecay: o,
    fmsustain: l,
    fmrelease: u,
    fmvelocity: h,
    fmwave: f = "sine",
    duration: m
  } = e;
  let b, v = () => {
  };
  if (s) {
    const S = ot().createGain(), B = r8(t, r, s, f);
    if (b = B.node, v = B.stop, ![a, o, l, u, h].some(($) => $ !== void 0))
      b.connect(t);
    else {
      const [$, W, _, M] = ps([a, o, l, u]), Z = n + m;
      hs(
        S.gain,
        $,
        W,
        _,
        M,
        0,
        1,
        n,
        Z,
        i === "exp" ? "exponential" : "linear"
      ), b.connect(S), S.connect(t);
    }
  }
  return { stop: v };
}
let qr = [], zs = 0;
const Zl = 4;
let A2 = (t) => {
  let e = [], n = {
    get() {
      return n.lc || n.listen(() => {
      })(), n.value;
    },
    lc: 0,
    listen(r) {
      return n.lc = e.push(r), () => {
        for (let i = zs + Zl; i < qr.length; )
          qr[i] === r ? qr.splice(i, Zl) : i += Zl;
        let s = e.indexOf(r);
        ~s && (e.splice(s, 1), --n.lc || n.off());
      };
    },
    notify(r, s) {
      let i = !qr.length;
      for (let a of e)
        qr.push(
          a,
          n.value,
          r,
          s
        );
      if (i) {
        for (zs = 0; zs < qr.length; zs += Zl)
          qr[zs](
            qr[zs + 1],
            qr[zs + 2],
            qr[zs + 3]
          );
        qr.length = 0;
      }
    },
    /* It will be called on last listener unsubscribing.
       We will redefine it in onMount and onStop. */
    off() {
    },
    set(r) {
      let s = n.value;
      s !== r && (n.value = r, n.notify(s));
    },
    subscribe(r) {
      let s = n.listen(r);
      return r(n.value), s;
    },
    value: t
  };
  return n;
};
const s8 = 5, $l = 6, Ll = 10;
let i8 = (t, e, n, r) => (t.events = t.events || {}, t.events[n + Ll] || (t.events[n + Ll] = r((s) => {
  t.events[n].reduceRight((i, a) => (a(i), i), {
    shared: {},
    ...s
  });
})), t.events[n] = t.events[n] || [], t.events[n].push(e), () => {
  let s = t.events[n], i = s.indexOf(e);
  s.splice(i, 1), s.length || (delete t.events[n], t.events[n + Ll](), delete t.events[n + Ll]);
}), a8 = 1e3, o8 = (t, e) => i8(t, (r) => {
  let s = e(r);
  s && t.events[$l].push(s);
}, s8, (r) => {
  let s = t.listen;
  t.listen = (...a) => (!t.lc && !t.active && (t.active = !0, r()), s(...a));
  let i = t.off;
  return t.events[$l] = [], t.off = () => {
    i(), setTimeout(() => {
      if (t.active && !t.lc) {
        t.active = !1;
        for (let a of t.events[$l]) a();
        t.events[$l] = [];
      }
    }, a8);
  }, () => {
    t.listen = s, t.off = i;
  };
}), l8 = (t = {}) => {
  let e = A2(t);
  return e.setKey = function(n, r) {
    let s = e.value;
    typeof r > "u" && n in e.value ? (e.value = { ...e.value }, delete e.value[n], e.notify(s, n)) : e.value[n] !== r && (e.value = {
      ...e.value,
      [n]: r
    }, e.notify(s, n));
  }, e;
};
const Vd = {}, Ih = {}, c8 = (t) => Vd[t];
function u8(t, e) {
  var n = 1024;
  if (t < n) return t + " B";
  var r = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"], s = -1;
  do
    t /= n, ++s;
  while (t >= n);
  return t.toFixed(1) + " " + r[s];
}
function P2(t, e) {
  const { s: n, n: r = 0, speed: s = 1 } = t;
  let i = H4(t, 36), a = i - 36, o, l = 0;
  if (Array.isArray(e))
    l = Eg(r, e.length), o = e[l];
  else {
    const f = (b) => Lu(b) - i, m = Object.keys(e).filter((b) => !b.startsWith("_")).reduce(
      (b, v, C) => !b || Math.abs(f(v)) < Math.abs(f(b)) ? v : b,
      null
    );
    a = -f(m), l = Eg(r, e[m].length), o = e[m][l];
  }
  const u = `${n}:${l}`;
  let h = Math.abs(s) * Math.pow(2, a / 12);
  return { transpose: a, sampleUrl: o, index: l, midi: i, label: u, playbackRate: h };
}
const D2 = async (t, e, n) => {
  let { sampleUrl: r, label: s, playbackRate: i } = P2(t, e);
  n && (r = await n(r));
  const a = ot(), o = await Xd(r, a, s);
  return t.unit === "c" && (i = i * o.duration), { buffer: o, playbackRate: i };
}, E2 = async (t, e, n) => {
  let { buffer: r, playbackRate: s } = await D2(t, e, n);
  t.speed < 0 && (r = F2(r));
  const a = ot().createBufferSource();
  a.buffer = r, a.playbackRate.value = s;
  const { s: o, loopBegin: l = 0, loopEnd: u = 1, begin: h = 0, end: f = 1 } = t, m = h * a.buffer.duration;
  (o.startsWith("wt_") ? 1 : t.loop) && (a.loop = !0, a.loopStart = l * a.buffer.duration - m, a.loopEnd = u * a.buffer.duration - m);
  const v = a.buffer.duration / a.playbackRate.value, C = (f - h) * v;
  return { bufferSource: a, offset: m, bufferDuration: v, sliceDuration: C };
}, Xd = (t, e, n, r = 0) => {
  const s = n ? `sound "${n}:${r}"` : "sample";
  if (t = t.replace("#", "%23"), !Ih[t]) {
    br(`[sampler] load ${s}..`, "load-sample", { url: t });
    const i = Date.now();
    Ih[t] = fetch(t).then((a) => a.arrayBuffer()).then(async (a) => {
      const o = Date.now() - i, l = u8(a.byteLength);
      br(`[sampler] load ${s}... done! loaded ${l} in ${o}ms`, "loaded-sample", { url: t });
      const u = await e.decodeAudioData(a);
      return Vd[t] = u, u;
    });
  }
  return Ih[t];
};
function F2(t) {
  const e = ot(), n = e.createBuffer(t.numberOfChannels, t.length, e.sampleRate);
  for (let r = 0; r < t.numberOfChannels; r++)
    n.copyToChannel(t.getChannelData(r).slice().reverse(), r, r);
  return n;
}
const h8 = (t) => Vd[t];
function B2(t) {
  if (t.startsWith("bubo:")) {
    const [e, n] = t.split(":");
    t = `github:Bubobubobubobubo/dough-${n}`;
  }
  return t;
}
function M2(t, e = "") {
  if (!t.startsWith("github:"))
    throw new Error('expected "github:" at the start of pseudoUrl');
  let [n, r] = t.split("github:");
  return r = r.endsWith("/") ? r.slice(0, -1) : r, r.split("/").length === 2 && (r += "/main"), `https://raw.githubusercontent.com/${r}/${e}`;
}
const T2 = (t, e, n = t._base || "") => Object.entries(t).forEach(([r, s]) => {
  if (typeof s == "string" && (s = [s]), typeof s != "object")
    throw new Error("wrong sample map format for " + r);
  n = s._base || n, n = B2(n), n.startsWith("github:") && (n = M2(n, ""));
  const i = (a) => n + a;
  Array.isArray(s) ? s = s.map(i) : s = Object.fromEntries(
    Object.entries(s).map(([a, o]) => [a, (typeof o == "string" ? [o] : o).map(i)])
  ), e(r, s);
});
let Q2 = {};
function p8(t, e) {
  Q2[t] = e;
}
function f8(t) {
  const e = Object.entries(Q2).find(([n]) => t.startsWith(n));
  if (e)
    return e[1];
}
const Hs = async (t, e = t._base || "", n = {}) => {
  if (typeof t == "string") {
    const i = f8(t);
    if (i)
      return i(t);
    if (t = B2(t), t.startsWith("github:") && (t = M2(t, "strudel.json")), t.startsWith("local:") && (t = "http://localhost:5432"), t.startsWith("shabda:")) {
      let [o, l] = t.split("shabda:");
      t = `https://shabda.ndre.gr/${l}.json?strudel=1`;
    }
    if (t.startsWith("shabda/speech")) {
      let [o, l] = t.split("shabda/speech");
      l = l.startsWith("/") ? l.substring(1) : l;
      let [u, h] = l.split(":"), f = "f", m = "en-GB";
      u && ([m, f] = u.split("/")), t = `https://shabda.ndre.gr/speech/${h}.json?gender=${f}&language=${m}&strudel=1'`;
    }
    if (typeof fetch != "function")
      return;
    const a = t.split("/").slice(0, -1).join("/");
    return typeof fetch > "u" ? void 0 : fetch(t).then((o) => o.json()).then((o) => Hs(o, e || o._base || a, n)).catch((o) => {
      throw console.error(o), new Error(`error loading "${t}"`);
    });
  }
  const { prebake: r, tag: s } = n;
  T2(
    t,
    (i, a) => Fs(i, (o, l, u) => j2(o, l, u, a), {
      type: "sample",
      samples: a,
      baseUrl: e,
      prebake: r,
      tag: s
    }),
    e
  );
}, Tg = [];
async function j2(t, e, n, r, s) {
  let {
    s: i,
    nudge: a = 0,
    // TODO: is this in seconds?
    cut: o,
    loop: l,
    clip: u = void 0,
    // if set, samples will be cut off when the hap ends
    n: h = 0,
    speed: f = 1,
    // sample playback speed
    duration: m
  } = e;
  if (f === 0)
    return;
  const b = ot();
  let [v, C, S, B] = ps([e.attack, e.decay, e.sustain, e.release]);
  const { bufferSource: $, sliceDuration: W, offset: _ } = await E2(e, r, s);
  if (b.currentTime > t) {
    br(`[sampler] still loading sound "${i}:${h}"`, "highlight");
    return;
  }
  if (!$) {
    br(`[sampler] could not load "${i}:${h}"`, "error");
    return;
  }
  let M = To($.detune, e, t);
  const Z = t + a;
  $.start(Z, _);
  const N = b.createGain(), q = $.connect(N);
  u == null && l == null && e.release == null && (m = W);
  let ae = t + m;
  hs(q.gain, v, C, S, B, 0, 1, t, ae, "linear"), Mo($.detune, e, t, ae);
  const J = b.createGain();
  q.connect(J), $.onended = function() {
    $.disconnect(), M?.stop(), q.disconnect(), J.disconnect(), n();
  };
  let pe = ae + B + 0.01;
  $.stop(pe);
  const oe = { node: J, bufferSource: $, stop: (fe) => {
    $.stop(fe);
  } };
  if (o !== void 0) {
    const fe = Tg[o];
    fe && (fe.node.gain.setValueAtTime(1, Z), fe.node.gain.linearRampToValueAtTime(0, Z + 0.01)), Tg[o] = oe;
  }
  return oe;
}
const Wd = 128, Rp = "System Standard";
let _2 = Wd;
function R2(t) {
  _2 = parseInt(t) ?? Wd;
}
let Z2 = !1;
function $2(t) {
  Z2 = t == !0;
}
function d8(t) {
  return typeof t == "number" ? t % 5 : { tri: 0, triangle: 0, sine: 1, ramp: 2, saw: 3, square: 4 }[t] ?? 0;
}
const ys = l8();
function Fs(t, e, n = {}) {
  t = t.toLowerCase().replace(/\s+/g, "_"), ys.setKey(t, { onTrigger: e, data: n });
}
let L2 = (t) => t;
function Es(t) {
  return L2(t);
}
function m8(t) {
  L2 = t;
}
function Zp(t) {
  for (const n in t)
    t[n.toLowerCase()] = t[n];
  const e = ys.get();
  for (const n in e) {
    const [r, s] = n.split("_");
    if (!s) continue;
    const i = t[r];
    if (i) {
      if (typeof i == "string")
        e[`${i}_${s}`.toLowerCase()] = e[n];
      else if (Array.isArray(i))
        for (const a of i)
          e[`${a}_${s}`.toLowerCase()] = e[n];
    }
  }
  ys.set({ ...e });
}
async function g8(t) {
  const n = await (await fetch(t)).json();
  Zp(n);
}
async function I2(...t) {
  switch (t.length) {
    case 1:
      return typeof t[0] == "string" ? g8(t[0]) : Zp(t[0]);
    case 2:
      return Zp({ [t[0]]: t[1] });
    default:
      throw new Error("aliasMap expects 1 or 2 arguments, received " + t.length);
  }
}
function hc(t) {
  return typeof t != "string" ? (console.warn(`getSound: expected string got "${t}". fall back to triangle`), ys.get().triangle) : ys.get()[t.toLowerCase()];
}
const N2 = async () => {
  await navigator.mediaDevices.getUserMedia({ audio: !0 });
  let t = await navigator.mediaDevices.enumerateDevices();
  t = t.filter((n) => n.kind === "audiooutput" && n.deviceId !== "default");
  const e = /* @__PURE__ */ new Map();
  return e.set(Rp, ""), t.forEach((n) => {
    e.set(n.label, n.deviceId);
  }), e;
};
let il = {
  s: "triangle",
  gain: 0.8,
  postgain: 1,
  density: ".03",
  ftype: "12db",
  fanchor: 0,
  resonance: 1,
  hresonance: 1,
  bandq: 1,
  channels: [1, 2],
  phaserdepth: 0.75,
  shapevol: 1,
  distortvol: 1,
  delay: 0,
  byteBeatExpression: "0",
  delayfeedback: 0.5,
  delaysync: 3 / 16,
  orbit: 1,
  i: 1,
  velocity: 1,
  fft: 8
};
const b8 = Object.freeze({ ...il });
function y8(t, e) {
  il[t] = e;
}
function O8() {
  il = { ...b8 };
}
let Ud = new Map(Object.entries(il));
function qd(t, e) {
  Ud.set(t, e);
}
function rn(t) {
  return Ud.get(t);
}
function v8(t) {
  Object.keys(t).forEach((e) => {
    qd(e, t[e]);
  });
}
function V2() {
  Ud = new Map(Object.entries(il));
}
function x8(t) {
  V2(), t === "1.0" && qd("fanchor", 0.5);
}
const w8 = () => ys.set({});
let Tc;
const X2 = () => (Tc = new AudioContext(), Tc), ot = () => Tc || X2();
function k8() {
  return ot().currentTime;
}
let Nh;
function C8() {
  return Nh || (Nh = ot().audioWorklet.addModule(J4)), Nh;
}
async function W2(t = {}) {
  const {
    disableWorklets: e = !1,
    maxPolyphony: n,
    audioDeviceName: r = Rp,
    multiChannelOrbits: s = !1
  } = t;
  if (R2(n), $2(s), typeof window > "u")
    return;
  const i = ot();
  if (r != null && r != Rp)
    try {
      const o = (await N2()).get(r), l = (o ?? "").length > 0;
      i.sinkId !== o && l && await i.setSinkId(o), br(
        `[superdough] Audio Device set to ${r}, it might take a few seconds before audio plays on all output channels`
      );
    } catch {
      br("[superdough] failed to set audio interface", "warning");
    }
  if (await i.resume(), e) {
    br("[superdough]: AudioWorklets disabled with disableWorklets");
    return;
  }
  try {
    await C8(), br("[superdough] AudioWorklets loaded");
  } catch (a) {
    console.warn("could not load AudioWorklet effects", a);
  }
  br("[superdough] ready");
}
let Vh;
async function S8(t) {
  return Vh || (Vh = new Promise((e) => {
    document.addEventListener("click", async function n() {
      document.removeEventListener("click", n), await W2(t), e();
    });
  })), Vh;
}
let Qc, ca;
function U2() {
  const t = ot(), e = t.destination.maxChannelCount;
  t.destination.channelCount = e, Qc = new ChannelMergerNode(t, { numberOfInputs: t.destination.channelCount }), ca = new GainNode(t), Qc.connect(ca), ca.connect(t.destination);
}
const q2 = (t, e = [0, 1]) => {
  const n = ot();
  Qc == null && U2();
  const r = new StereoPannerNode(n);
  t.connect(r);
  const s = new ChannelSplitterNode(n, {
    numberOfOutputs: r.channelCount
  });
  r.connect(s), e.forEach((i, a) => {
    s.connect(Qc, a % r.channelCount, i % n.destination.channelCount);
  });
}, A8 = () => {
  ca != null && (ca.gain.linearRampToValueAtTime(0, ot().currentTime + 0.01), ca = null);
};
function P8(t, e, n, r) {
  if (n = $i(n, 0, 0.98), !Ot[t].delayNode) {
    const i = ot().createFeedbackDelay(1, e, n);
    i.start?.(r), jc(i, t), Ot[t].delayNode = i;
  }
  return Ot[t].delayNode.delayTime.value !== e && Ot[t].delayNode.delayTime.setValueAtTime(e, r), Ot[t].delayNode.feedback.value !== n && Ot[t].delayNode.feedback.setValueAtTime(n, r), Ot[t].delayNode;
}
function Iu(t, e, n, r = {}) {
  const { shape: s = 0, ...i } = r, { dcoffset: a = -0.5, depth: o = 1 } = r, l = {
    frequency: 1,
    depth: o,
    skew: 0.5,
    phaseoffset: 0,
    time: e,
    begin: e,
    end: n,
    shape: d8(s),
    dcoffset: a,
    min: a * o,
    max: a * o + o,
    curve: 1,
    ...i
  };
  return Yr(t, "lfo-processor", l);
}
function D8(t, e, n = 1, r = 0.5, s = 1e3, i = 2e3) {
  const a = ot(), o = Iu(a, t, e, { frequency: n, depth: i * 2 }), l = 2;
  let u = 0;
  const h = [];
  for (let f = 0; f < l; f++) {
    const m = a.createBiquadFilter();
    m.type = "notch", m.gain.value = 1, m.frequency.value = s + u, m.Q.value = 2 - Math.min(Math.max(r * 2, 0), 1.9), o.connect(m.detune), u += 282, f > 0 && h[f - 1].connect(m), h.push(m);
  }
  return h[h.length - 1];
}
function E8(t) {
  t = t ?? 0;
  const e = ["12db", "ladder", "24db"];
  return typeof t == "number" ? e[Math.floor(w2(t, e.length))] : t;
}
let Ot = {};
function jc(t, e) {
  Ot[e] == null && Id(new Error("target orbit does not exist"), "superdough"), t.connect(Ot[e].gain);
}
function F8(t, e, n) {
  Ot[e] == null && (Ot[e] = {
    gain: new GainNode(t, { gain: 1, channelCount: 2, channelCountMode: "explicit" })
  }, q2(Ot[e].gain, n));
}
function B8(t, e, n, r = 0.1, s = 1) {
  [e].flat().forEach((a) => {
    if (Ot[a] == null) {
      Id(new Error(`duck target orbit ${a} does not exist`), "superdough");
      return;
    }
    xo(
      t,
      () => {
        Ot[a].gain.gain.cancelScheduledValues(n);
        const o = Ot[a].gain.gain.value;
        Ot[a].gain.gain.linearRampToValueAtTime($i(1 - Math.pow(s, 0.5), 0.01, o), n), Ot[a].gain.gain.exponentialRampToValueAtTime(1, n + Math.max(2e-3, r));
      },
      0,
      n - 0.01
    );
  });
}
let Ki = (t, e) => t !== void 0 && t !== e;
function M8(t, e, n, r, s, i, a, o) {
  if (!Ot[t].reverbNode) {
    const u = ot().createReverb(e, n, r, s, i, a, o);
    jc(u, t), Ot[t].reverbNode = u;
  }
  return (Ki(e, Ot[t].reverbNode.duration) || Ki(n, Ot[t].reverbNode.fade) || Ki(r, Ot[t].reverbNode.lp) || Ki(s, Ot[t].reverbNode.dim) || Ki(a, Ot[t].reverbNode.irspeed) || Ki(o, Ot[t].reverbNode.irbegin) || Ot[t].reverbNode.ir !== i) && Ot[t].reverbNode.generate(e, n, r, s, i, a, o), Ot[t].reverbNode;
}
let Zn = {}, Qi = {};
function G2(t, e = 1024, n = 0.5) {
  if (!Zn[t]) {
    const r = ot().createAnalyser();
    r.fftSize = e, r.smoothingTimeConstant = n, Zn[t] = r, Qi[t] = new Float32Array(Zn[t].frequencyBinCount);
  }
  return Zn[t].fftSize !== e && (Zn[t].fftSize = e, Qi[t] = new Float32Array(Zn[t].frequencyBinCount)), Zn[t];
}
function Nu(t = "time", e = 1) {
  const n = {
    time: () => Zn[e]?.getFloatTimeDomainData(Qi[e]),
    frequency: () => Zn[e]?.getFloatFrequencyData(Qi[e])
  }[t];
  if (!n)
    throw new Error(`getAnalyzerData: ${t} not supported. use one of ${Object.keys(n).join(", ")}`);
  return n(), Qi[e];
}
function Xh(t, e, n) {
  const r = zn(n);
  return t.connect(r), r.connect(e), r;
}
function T8() {
  Ot = {}, Zn = {}, Qi = {};
}
let ro = /* @__PURE__ */ new Map();
function Qg(t) {
  return (Array.isArray(t) ? t : [t]).map((e) => e - 1);
}
const Gd = async (t, e, n, r = 0.5, s = 0.5) => {
  const i = ot();
  let { stretch: a } = t;
  if (a != null && (e = e - 0.04), typeof t != "object")
    throw new Error(
      `expected hap.value to be an object, but got "${t}". Hint: append .note() or .s() to the end`,
      "error"
    );
  if (t.duration = n, e < i.currentTime) {
    console.warn(
      `[superdough]: cannot schedule sounds in the past (target: ${e.toFixed(2)}, now: ${i.currentTime.toFixed(2)})`
    );
    return;
  }
  let {
    tremolo: o,
    tremolosync: l,
    tremolodepth: u = 1,
    tremoloskew: h,
    tremolophase: f = 0,
    tremoloshape: m,
    s: b = rn("s"),
    bank: v,
    source: C,
    gain: S = rn("gain"),
    postgain: B = rn("postgain"),
    density: $ = rn("density"),
    duckorbit: W,
    duckattack: _,
    duckdepth: M,
    // filters
    fanchor: Z = rn("fanchor"),
    drive: N = 0.69,
    release: q = 0,
    // low pass
    cutoff: ae,
    lpenv: J,
    lpattack: pe,
    lpdecay: H,
    lpsustain: oe,
    lprelease: fe,
    resonance: ke = rn("resonance"),
    // high pass
    hpenv: Pe,
    hcutoff: ie,
    hpattack: Ce,
    hpdecay: Le,
    hpsustain: Ue,
    hprelease: De,
    hresonance: ue = rn("hresonance"),
    // band pass
    bpenv: _e,
    bandf: He,
    bpattack: dt,
    bpdecay: $e,
    bpsustain: Ft,
    bprelease: tt,
    bandq: Bt = rn("bandq"),
    //phaser
    phaserrate: Tn,
    phaserdepth: Sn = rn("phaserdepth"),
    phasersweep: vt,
    phasercenter: Mt,
    //
    coarse: Tt,
    crush: Gt,
    dry: An,
    shape: Wn,
    shapevol: Un = rn("shapevol"),
    distort: Pn,
    distortvol: Jt = rn("distortvol"),
    pan: Lr,
    vowel: vr,
    delay: un = rn("delay"),
    delayfeedback: Ir = rn("delayfeedback"),
    delaysync: qe = rn("delaysync"),
    delaytime: xt,
    orbit: xe = rn("orbit"),
    room: wt,
    roomfade: Ve,
    roomlp: Us,
    roomdim: yi,
    roomsize: Qn,
    ir: Nr,
    irspeed: rt,
    irbegin: it,
    i: gt = rn("i"),
    velocity: zt = rn("velocity"),
    analyze: ut,
    // analyser wet
    fft: en = rn("fft"),
    // fftSize 0 - 10
    compressor: kt,
    compressorRatio: xr,
    compressorKnee: qs,
    compressorAttack: Oi,
    compressorRelease: Gs
  } = t;
  xt = xt ?? K4(qe, r);
  const O = Qg(
    Z2 && xe > 0 ? [xe * 2 - 1, xe * 2] : rn("channels")
  ), D = t.channels != null ? Qg(t.channels) : O;
  F8(i, xe, D), W != null && B8(i, W, e, _, M), S = Es(Qs(S, 1)), B = Es(B), Un = Es(Un), Jt = Es(Jt), un = Es(un), zt = Es(zt), u = Es(u), S *= zt;
  const A = e + n, P = A + q, R = Math.round(Math.random() * 1e6);
  for (let Ge = 0; Ge <= ro.size - _2; Ge++) {
    const gn = ro.entries().next(), Ct = gn.value[1], _n = gn.value[0], vi = e + 0.25;
    Ct?.node?.gain?.linearRampToValueAtTime(0, vi), Ct?.stop?.(vi), ro.delete(_n);
  }
  let Y = [];
  if (["-", "~", "_"].includes(b))
    return;
  v && b && (b = `${v}_${b}`, t.s = b);
  let se;
  if (C)
    se = C(e, t, n, r);
  else if (hc(b)) {
    const { onTrigger: Ge } = hc(b), Ct = await Ge(e, t, () => {
      Y.forEach((_n) => _n?.disconnect()), ro.delete(R);
    });
    Ct && (se = Ct.node, ro.set(R, Ct));
  } else
    throw new Error(`sound ${b} not found! Is it loaded?`);
  if (!se)
    return;
  if (i.currentTime > e) {
    br("[webaudio] skip hap: still loading", i.currentTime - e);
    return;
  }
  const le = [];
  le.push(se), a !== void 0 && le.push(Yr(i, "phase-vocoder-processor", { pitchFactor: a })), le.push(zn(S));
  const ge = E8(t.ftype);
  if (ae !== void 0) {
    let Ge = () => uc(
      i,
      "lowpass",
      ae,
      ke,
      pe,
      H,
      oe,
      fe,
      J,
      e,
      A,
      Z,
      ge,
      N
    );
    le.push(Ge()), ge === "24db" && le.push(Ge());
  }
  if (ie !== void 0) {
    let Ge = () => uc(
      i,
      "highpass",
      ie,
      ue,
      Ce,
      Le,
      Ue,
      De,
      Pe,
      e,
      A,
      Z
    );
    le.push(Ge()), ge === "24db" && le.push(Ge());
  }
  if (He !== void 0) {
    let Ge = () => uc(i, "bandpass", He, Bt, dt, $e, Ft, tt, _e, e, A, Z);
    le.push(Ge()), ge === "24db" && le.push(Ge());
  }
  if (vr !== void 0) {
    const Ge = i.createVowelFilter(vr);
    le.push(Ge);
  }
  if (Tt !== void 0 && le.push(Yr(i, "coarse-processor", { coarse: Tt })), Gt !== void 0 && le.push(Yr(i, "crush-processor", { crush: Gt })), Wn !== void 0 && le.push(Yr(i, "shape-processor", { shape: Wn, postgain: Un })), Pn !== void 0 && le.push(Yr(i, "distort-processor", { distort: Pn, postgain: Jt })), l != null && (o = r * l), o !== void 0) {
    const Ge = Math.max(1 - u, 0), gn = new GainNode(i, { gain: Ge }), Ct = s / r;
    Iu(i, e, P, {
      skew: h ?? (m != null ? 0.5 : 1),
      frequency: o,
      depth: u,
      time: Ct,
      dcoffset: 0,
      shape: m,
      phaseoffset: f,
      min: 0,
      max: 1,
      curve: 1.5
    }).connect(gn.gain), le.push(gn);
  }
  if (kt !== void 0 && le.push(
    C2(i, kt, xr, qs, Oi, Gs)
  ), Lr !== void 0) {
    const Ge = i.createStereoPanner();
    Ge.pan.value = 2 * Lr - 1, le.push(Ge);
  }
  if (Tn !== void 0 && Sn > 0) {
    const Ge = D8(e, P, Tn, Sn, Mt, vt);
    le.push(Ge);
  }
  const We = new GainNode(i, { gain: B });
  le.push(We);
  let St;
  if (un > 0 && xt > 0 && Ir > 0) {
    const Ge = P8(xe, xt, Ir, e);
    St = Xh(We, Ge, un), Y.push(St);
  }
  let Xt;
  if (wt > 0) {
    let Ge;
    if (Nr !== void 0) {
      let Ct, _n = hc(Nr);
      Array.isArray(_n) ? Ct = _n.data.samples[gt % _n.data.samples.length] : typeof _n == "object" && (Ct = Object.values(_n.data.samples).flat()[gt % Object.values(_n.data.samples).length]), Ge = await Xd(Ct, i, Nr, 0);
    }
    const gn = M8(xe, Qn, Ve, Us, yi, Ge, rt, it);
    Xt = Xh(We, gn, wt), Y.push(Xt);
  }
  let jn;
  if (ut) {
    const Ge = G2(ut, 2 ** (en + 5));
    jn = Xh(We, Ge, 1), Y.push(jn);
  }
  if (An != null) {
    An = Es(An);
    const Ge = new GainNode(i, { gain: An });
    le.push(Ge), jc(Ge, xe);
  } else
    jc(We, xe);
  le.slice(1).reduce((Ge, gn) => Ge.connect(gn), le[0]), Y = Y.concat(le);
}, Q8 = (t, e, n, r) => {
  Gd(e, t - n, e.duration / r, r);
}, ho = (t, e = 36) => {
  let { note: n, freq: r } = t;
  return n = n || e, typeof n == "string" && (n = Lu(n)), !r && typeof n == "number" && (r = x2(n)), Number(r);
};
function Il(t) {
  t != null && (t.disconnect(), t.parameters.get("end")?.setValueAtTime(0, 0));
}
const j8 = ["triangle", "square", "sawtooth", "sine"], _8 = [
  ["tri", "triangle"],
  ["sqr", "square"],
  ["saw", "sawtooth"],
  ["sin", "sine"]
];
function R8(t, e) {
  const n = t, r = new Float32Array(e);
  for (let s = 0; s < e; s++) {
    const i = s * 2 / e - 1;
    r[s] = Math.tanh(i * n);
  }
  return r;
}
function z2() {
  [...j8].forEach((t) => {
    Fs(
      t,
      (e, n, r) => {
        const [s, i, a, o] = ps(
          [n.attack, n.decay, n.sustain, n.release],
          "linear",
          [1e-3, 0.05, 0.6, 0.01]
        );
        let l = H2(t, e, n), { node: u, stop: h, triggerRelease: f } = l;
        const m = zn(0.3), { duration: b } = n;
        u.onended = () => {
          u.disconnect(), m.disconnect(), r();
        };
        const v = zn(1);
        let C = u.connect(m).connect(v);
        const S = e + b;
        hs(C.gain, s, i, a, o, 0, 1, e, S, "linear");
        const B = S + o + 0.01;
        return f?.(B), h(B), {
          node: C,
          stop: ($) => {
            h($);
          }
        };
      },
      { type: "synth", prebake: !0 }
    );
  }), Fs(
    "sbd",
    (t, e, n) => {
      const { duration: r, decay: s = 0.5, pdecay: i = 0.5, penv: a = 36, clip: o } = e, l = ot(), u = 0.02, h = 1.2, f = 0.025, m = 1, b = l.createOscillator();
      b.type = "triangle", b.frequency.value = ho(e, 29), b.detune.setValueAtTime(a * 100, 0), b.detune.setValueAtTime(a * 100, t), b.detune.exponentialRampToValueAtTime(1e-3, t + i);
      const v = zn(1);
      v.gain.setValueAtTime(1, t + u), v.gain.exponentialRampToValueAtTime(1e-3, t + u + s), b.start(t);
      const C = _p("brown", t, 2), S = zn(1);
      S.gain.setValueAtTime(h, t), S.gain.exponentialRampToValueAtTime(1e-3, t + f);
      const B = new WaveShaperNode(l);
      B.curve = R8(2, l.sampleRate);
      const $ = zn(m);
      b.onended = () => {
        b.disconnect(), v.disconnect(), B.disconnect(), C.node.disconnect(), S.disconnect(), $.disconnect(), n();
      };
      const W = b.connect(B).connect(v).connect($);
      C.node.connect(S).connect($);
      let M = t + s + 0.01;
      return o != null && (M = Math.min(t + o * r, M)), $.gain.setValueAtTime(m, M - 0.01), $.gain.linearRampToValueAtTime(0, M), b.stop(M), C.stop(M), {
        node: W,
        stop: (Z) => {
          b.stop(Z);
        }
      };
    },
    { type: "synth", prebake: !0 }
  ), Fs(
    "supersaw",
    (t, e, n) => {
      const r = ot();
      let { duration: s, n: i, unison: a = 5, spread: o = 0.6, detune: l } = e;
      l = l ?? i ?? 0.18;
      const u = ho(e), [h, f, m, b] = ps(
        [e.attack, e.decay, e.sustain, e.release],
        "linear",
        [1e-3, 0.05, 0.6, 0.01]
      ), v = t + s, C = v + b + 0.01, S = $i(a, 1, 100);
      let B = S > 1 ? $i(o, 0, 1) : 0, $ = Yr(
        r,
        "supersaw-oscillator",
        {
          frequency: u,
          begin: t,
          end: C,
          freqspread: l,
          voices: S,
          panspread: B
        },
        {
          outputChannelCount: [2]
        }
      );
      const W = 1 / Math.sqrt(S);
      Mo($.parameters.get("detune"), e, t, v);
      const _ = To($.parameters.get("detune"), e, t), M = Mc($.parameters.get("frequency"), e, t);
      let Z = zn(1);
      Z = $.connect(Z), hs(Z.gain, h, f, m, b, 0, 0.3 * W, t, v, "linear");
      let N = xo(
        r,
        () => {
          Il($), Z.disconnect(), n(), M?.stop(), _?.stop();
        },
        t,
        C
      );
      return {
        node: Z,
        stop: (q) => {
          N.stop(q);
        }
      };
    },
    { prebake: !0, type: "synth" }
  ), Fs(
    "bytebeat",
    (t, e, n) => {
      const r = [
        "(t%255 >= t/255%255)*255",
        "(t*(t*8%60 <= 300)|(-t)*(t*4%512 < 256))+t/400",
        "t",
        "t*(t >> 10^t)",
        "t&128",
        "t&t>>8",
        "((t%255+t%128+t%64+t%32+t%16+t%127.8+t%64.8+t%32.8+t%16.8)/3)",
        "((t%64+t%63.8+t%64.15+t%64.35+t%63.5)/1.25)",
        "(t&(t>>7)-t)",
        "(sin(t*PI/128)*127+127)",
        "((t^t/2+t+64*(sin((t*PI/64)+(t*PI/32768))+64))%128*2)",
        "((t^t/2+t+64*(cos >> 0))%127.85*2)",
        "((t^t/2+t+64)%128*2)",
        "(((t * .25)^(t * .25)/100+(t * .25))%128)*2",
        "((t^t/2+t+64)%7 * 24)"
      ], { n: s = 0 } = e, i = ho(e), { byteBeatExpression: a = r[s % r.length], byteBeatStartTime: o } = e, l = ot();
      let { duration: u } = e;
      const [h, f, m, b] = ps(
        [e.attack, e.decay, e.sustain, e.release],
        "linear",
        [1e-3, 0.05, 0.6, 0.01]
      ), v = t + u, C = v + b + 0.01;
      let S = Yr(
        l,
        "byte-beat-processor",
        {
          frequency: i,
          begin: t,
          end: C
        },
        {
          outputChannelCount: [2]
        }
      );
      S.port.postMessage({ codeText: a, byteBeatStartTime: o, frequency: i });
      let B = zn(1);
      B = S.connect(B), hs(B.gain, h, f, m, b, 0, 1, t, v, "linear");
      let $ = xo(
        l,
        () => {
          Il(S), B.disconnect(), n();
        },
        t,
        C
      );
      return {
        node: B,
        stop: (W) => {
          $.stop(W);
        }
      };
    },
    { prebake: !0, type: "synth" }
  ), Fs(
    "pulse",
    (t, e, n) => {
      const r = ot();
      let { pwrate: s, pwsweep: i } = e;
      i == null && (s != null ? i = 0.3 : i = 0), s == null && i != null && (s = 1);
      let { duration: a, pw: o = 0.5 } = e;
      const l = ho(e), [u, h, f, m] = ps(
        [e.attack, e.decay, e.sustain, e.release],
        "linear",
        [1e-3, 0.05, 0.6, 0.01]
      ), b = t + a, v = b + m + 0.01;
      let C = Yr(
        r,
        "pulse-oscillator",
        {
          frequency: l,
          begin: t,
          end: v,
          pulsewidth: o
        },
        {
          outputChannelCount: [2]
        }
      );
      Mo(C.parameters.get("detune"), e, t, b);
      const S = To(C.parameters.get("detune"), e, t), B = Mc(C.parameters.get("frequency"), e, t);
      let $ = zn(1);
      $ = C.connect($), hs($.gain, u, h, f, m, 0, 1, t, b, "linear");
      let W;
      i != 0 && (W = Iu(r, t, v, { frequency: s, depth: i }), W.connect(C.parameters.get("pulsewidth")));
      let _ = xo(
        r,
        () => {
          Il(C), Il(W), $.disconnect(), n(), B?.stop(), S?.stop();
        },
        t,
        v
      );
      return {
        node: $,
        stop: (M) => {
          _.stop(M);
        }
      };
    },
    { prebake: !0, type: "synth" }
  ), [...Nd].forEach((t) => {
    Fs(
      t,
      (e, n, r) => {
        const [s, i, a, o] = ps(
          [n.attack, n.decay, n.sustain, n.release],
          "linear",
          [1e-3, 0.05, 0.6, 0.01]
        );
        let l, { density: u } = n;
        l = _p(t, e, u);
        let { node: h, stop: f, triggerRelease: m } = l;
        const b = zn(0.3), { duration: v } = n;
        h.onended = () => {
          h.disconnect(), b.disconnect(), r();
        };
        const C = zn(1);
        let S = h.connect(b).connect(C);
        const B = e + v;
        hs(S.gain, s, i, a, o, 0, 1, e, B, "linear");
        const $ = B + o + 0.01;
        return m?.($), f($), {
          node: S,
          stop: (W) => {
            f(W);
          }
        };
      },
      { type: "synth", prebake: !0 }
    );
  }), _8.forEach(([t, e]) => ys.set({ ...ys.get(), [t]: ys.get()[e] }));
}
function Y2(t, e) {
  const n = new Float32Array(t + 1), r = new Float32Array(t + 1), s = ot(), i = s.createOscillator(), a = {
    sawtooth: (u) => [0, -1 / u],
    square: (u) => [0, u % 2 === 0 ? 0 : 1 / u],
    triangle: (u) => [u % 2 === 0 ? 0 : 1 / (u * u), 0]
  };
  if (!a[e])
    throw new Error(`unknown wave type ${e}`);
  n[0] = 0, r[0] = 0;
  let o = 1;
  for (; o <= t; ) {
    const [u, h] = a[e](o);
    n[o] = u, r[o] = h, o++;
  }
  const l = s.createPeriodicWave(n, r);
  return i.setPeriodicWave(l), i;
}
function H2(t, e, n) {
  let { n: r, duration: s, noise: i = 0 } = n, a;
  !r || t === "sine" ? (a = ot().createOscillator(), a.type = t || "triangle") : a = Y2(r, t), a.frequency.value = ho(n), a.start(e);
  let o = To(a.detune, n, e);
  Mo(a.detune, n, e, e + s);
  const l = Mc(a.frequency, n, e);
  let u;
  return i && (u = e8(a, i, e)), {
    node: u?.node || a,
    stop: (h) => {
      l.stop(h), o?.stop(h), u?.stop(h), a.stop(h);
    },
    triggerRelease: (h) => {
    }
  };
}
function Z8(t = 1, e = 0.05, n = 220, r = 0, s = 0, i = 0.1, a = 0, o = 1, l = 0, u = 0, h = 0, f = 0, m = 0, b = 0, v = 0, C = 0, S = 0, B = 1, $ = 0, W = 0) {
  let _ = Math.PI * 2, M = ot().sampleRate, Z = (Le) => Le > 0 ? 1 : -1, N = l *= 500 * _ / M / M, q = n *= (1 + e * 2 * Math.random() - e) * _ / M, ae = [], J = 0, pe = 0, H = 0, oe = 1, fe = 0, ke = 0, Pe = 0, ie, Ce;
  for (r = r * M + 9, $ *= M, s *= M, i *= M, S *= M, u *= 500 * _ / M ** 3, v *= _ / M, h *= _ / M, f *= M, m = m * M | 0, Ce = r + $ + s + i + S | 0; H < Ce; ae[H++] = Pe)
    ++ke % (C * 100 | 0) || (Pe = a ? a > 1 ? a > 2 ? a > 3 ? Math.sin((J % _) ** 3) : Math.max(Math.min(Math.tan(J), 1), -1) : 1 - (2 * J / _ % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(J / _) - J / _) : Math.sin(J), Pe = (m ? 1 - W + W * Math.sin(_ * H / m) : 1) * Z(Pe) * Math.abs(Pe) ** o * // curve 0=square, 2=pointy
    t * 1 * // envelope
    (H < r ? H / r : H < r + $ ? 1 - (H - r) / $ * (1 - B) : H < r + $ + s ? B : H < Ce - S ? (Ce - H - S) / i * // release falloff
    B : 0), Pe = S ? Pe / 2 + (S > H ? 0 : (H < Ce - S ? 1 : (Ce - H) / S) * // release delay
    ae[H - S | 0] / 2) : Pe), ie = (n += l += u) * // frequency
    Math.cos(v * pe++), J += ie - ie * b * (1 - (Math.sin(H) + 1) * 1e9 % 2), oe && ++oe > f && (n += h, q += h, oe = 0), m && !(++fe % m) && (n = q, l = N, oe ||= 1);
  return ae;
}
const K2 = (t, e) => {
  let {
    s: n,
    note: r = 36,
    freq: s,
    //
    zrand: i = 0,
    attack: a = 0,
    decay: o = 0,
    sustain: l = 0.8,
    release: u = 0.1,
    curve: h = 1,
    slide: f = 0,
    deltaSlide: m = 0,
    pitchJump: b = 0,
    pitchJumpTime: v = 0,
    lfo: C = 0,
    znoise: S = 0,
    zmod: B = 0,
    zcrush: $ = 0,
    zdelay: W = 0,
    tremolo: _ = 0,
    duration: M = 0.2,
    zzfx: Z
  } = t;
  const N = Math.max(M - a - o, 0);
  typeof r == "string" && (r = Lu(r)), !s && typeof r == "number" && (s = x2(r)), n = n.replace("z_", "");
  const q = ["sine", "triangle", "sawtooth", "tan", "noise"].indexOf(n) || 0;
  h = n === "square" ? 0 : h;
  const J = (
    /* ZZFX. */
    Z8(...Z || [
      0.25,
      // volume
      i,
      s,
      a,
      N,
      u,
      q,
      h,
      f,
      m,
      b,
      v,
      C,
      S,
      B,
      $,
      W,
      l,
      // sustain volume!
      o,
      _
    ])
  ), pe = ot(), H = pe.createBuffer(1, J.length, pe.sampleRate);
  H.getChannelData(0).set(J);
  const oe = ot().createBufferSource();
  return oe.buffer = H, oe.start(e), {
    node: oe
  };
};
function J2() {
  ["zzfx", "z_sine", "z_sawtooth", "z_triangle", "z_square", "z_tan", "z_noise"].forEach((t) => {
    Fs(
      t,
      (e, n, r) => {
        const { node: s } = K2({ s: t, ...n }, e);
        return s.onended = () => {
          s.disconnect(), r();
        }, {
          node: s,
          stop: () => {
          }
        };
      },
      { type: "synth", prebake: !0 }
    );
  });
}
let ua;
async function eC(t, e) {
  const n = `dsp-worklet-${Date.now()}`, r = `${e}
let __q = []; // trigger queue
class MyProcessor extends AudioWorkletProcessor {
  constructor() {
    super();
    this.t = 0;
    this.stopped = false;
    this.port.onmessage = (e) => {
      if(e.data==='stop') {
        this.stopped = true;
      } else if(e.data?.dough) {
        __q.push(e.data)
      } else {
        msg?.(e.data)
      }
    };
  }
  process(inputs, outputs, parameters) {
    const output = outputs[0];
    if(__q.length) {
      for(let i=0;i<__q.length;++i) {
        const deadline = __q[i].time-currentTime;
        if(deadline<=0) {
          trigger(__q[i].dough)
          __q.splice(i,1)
        }
      }
    }
    for (let i = 0; i < output[0].length; i++) {
      const out = dsp(this.t / sampleRate);
      output.forEach((channel) => {
        channel[i] = out;
      });
      this.t++;
    }
  return !this.stopped;
  }
}
registerProcessor('${n}', MyProcessor);
`, i = `data:text/javascript;base64,${btoa(r)}`;
  await t.audioWorklet.addModule(i);
  const a = new AudioWorkletNode(t, n);
  return { node: a, stop: () => a.port.postMessage("stop") };
}
const tC = () => {
  ua && (ua?.stop(), ua?.node?.disconnect());
};
typeof window < "u" && window.addEventListener("message", (t) => {
  t.data === "strudel-stop" ? tC() : t.data?.dough && ua?.node.port.postMessage(t.data);
});
const $8 = async (t) => {
  const e = ot();
  tC(), ua = await eC(e, t), ua.node.connect(e.destination);
};
function nC(t, e, n, r) {
  window.postMessage({ time: r, dough: t.value, currentTime: e, duration: t.duration, cps: n });
}
const { Pattern: L8, logger: I8, repl: N8 } = kk;
v2(I8);
const V8 = (t) => (t.ensureObjectValue(), t.value), zd = (t, e, n, r, s) => Gd(V8(t), s, n, r, t.whole?.begin.valueOf());
function X8(t = {}) {
  return t = {
    getTime: () => ot().currentTime,
    defaultOutput: zd,
    ...t
  }, N8(t);
}
L8.prototype.dough = function() {
  return this.onTrigger(nC, 1);
};
function rC(t, {
  align: e = !0,
  color: n = "white",
  thickness: r = 3,
  scale: s = 0.25,
  pos: i = 0.75,
  trigger: a = 0,
  ctx: o = Is(),
  id: l = 1
} = {}) {
  o.lineWidth = r, o.strokeStyle = n;
  let u = o.canvas;
  if (!t) {
    o.beginPath();
    let C = i * u.height;
    o.moveTo(0, C), o.lineTo(u.width, C), o.stroke();
    return;
  }
  const h = Nu("time", l);
  o.beginPath();
  const f = t.frequencyBinCount;
  let m = e ? Array.from(h).findIndex((C, S, B) => S && B[S - 1] > -a && C <= -a) : 0;
  m = Math.max(m, 0);
  const b = u.width * 1 / f;
  let v = 0;
  for (let C = m; C < f; C++) {
    const S = h[C] + 1, B = (i - s * (S - 1)) * u.height;
    C === 0 ? o.moveTo(v, B) : o.lineTo(v, B), v += b;
  }
  o.stroke();
}
function sC(t, { color: e = "white", scale: n = 0.25, pos: r = 0.75, lean: s = 0.5, min: i = -150, max: a = 0, ctx: o = Is(), id: l = 1 } = {}) {
  if (!t) {
    o.beginPath();
    let v = r * h.height;
    o.moveTo(0, v), o.lineTo(h.width, v), o.stroke();
    return;
  }
  const u = Nu("frequency", l), h = o.canvas;
  o.fillStyle = e;
  const f = t.frequencyBinCount, m = h.width * 1 / f;
  let b = 0;
  for (let v = 0; v < f; v++) {
    const S = Du((u[v] - i) / (a - i), 0, 1) * n, B = S * h.height, $ = (r - S * s) * h.height;
    o.fillRect(b, $, Math.max(m, 1), B), b += m;
  }
}
function iC(t = 0, e = "0,0,0", n = Is()) {
  t ? (n.fillStyle = `rgba(${e},${1 - t})`, n.fillRect(0, 0, n.canvas.width, n.canvas.height)) : n.clearRect(0, 0, n.canvas.width, n.canvas.height);
}
me.prototype.fscope = function(t = {}) {
  let e = t.id ?? 1;
  return this.analyze(e).draw(
    () => {
      iC(t.smear, "0,0,0", t.ctx), Zn[e] && sC(Zn[e], t);
    },
    { id: e }
  );
};
me.prototype.tscope = function(t = {}) {
  let e = t.id ?? 1;
  return this.analyze(e).draw(
    (n) => {
      t.color = n[0]?.value?.color || js().foreground, t.color, iC(t.smear, "0,0,0", t.ctx), rC(Zn[e], t);
    },
    { id: e }
  );
};
me.prototype.scope = me.prototype.tscope;
let jg = {};
me.prototype.spectrum = function(t = {}) {
  let e = t.id ?? 1;
  return this.analyze(e).draw(
    (n) => {
      t.color = n[0]?.value?.color || jg[e] || js().foreground, jg[e] = t.color, W8(Zn[e], t);
    },
    { id: e }
  );
};
me.prototype.scope = me.prototype.tscope;
const Wh = /* @__PURE__ */ new Map();
function W8(t, { thickness: e = 3, speed: n = 1, min: r = -80, max: s = 0, ctx: i = Is(), id: a = 1, color: o } = {}) {
  if (i.lineWidth = e, i.strokeStyle = o, !t)
    return;
  const l = n, u = Nu("frequency", a), h = i.canvas;
  i.fillStyle = o;
  const f = t.frequencyBinCount;
  let m = Wh.get(a) || i.getImageData(0, 0, h.width, h.height);
  Wh.set(a, m), i.clearRect(0, 0, i.canvas.width, i.canvas.height), i.putImageData(m, -l, 0);
  let b = h.width - n;
  for (let v = 0; v < f; v++) {
    const C = Du((u[v] - r) / (s - r), 0, 1);
    i.globalAlpha = C;
    const S = Math.log(v + 1) / Math.log(f) * h.height;
    i.fillRect(b, h.height - S, l, 2);
  }
  Wh.set(a, i.getImageData(0, 0, h.width, h.height));
}
const U8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DEFAULT_MAX_POLYPHONY: Wd,
  aliasBank: I2,
  get analysers() {
    return Zn;
  },
  get analysersData() {
    return Qi;
  },
  applyFM: Mc,
  applyGainCurve: Es,
  connectToDestination: q2,
  createFilter: uc,
  dough: $8,
  doughTrigger: nC,
  drawFrequencyScope: sC,
  drawTimeScope: rC,
  drywet: S2,
  dspWorklet: eC,
  errorLogger: Id,
  gainNode: zn,
  getADSRValues: ps,
  getAnalyserById: G2,
  getAnalyzerData: Nu,
  getAudioContext: ot,
  getAudioContextCurrentTime: k8,
  getAudioDevices: N2,
  getCachedBuffer: c8,
  getCompressor: C2,
  getDefaultValue: rn,
  getLfo: Iu,
  getLoadedBuffer: h8,
  getOscillator: H2,
  getParamADSR: hs,
  getPitchEnvelope: Mo,
  getSampleBuffer: D2,
  getSampleBufferSource: E2,
  getSampleInfo: P2,
  getSound: hc,
  getVibratoOscillator: To,
  getWorklet: Yr,
  getZZFX: K2,
  initAudio: W2,
  initAudioOnFirstClick: S8,
  initializeAudioOutput: U2,
  loadBuffer: Xd,
  logger: br,
  noises: Nd,
  onTriggerSample: j2,
  panic: A8,
  processSampleMap: T2,
  registerSamplesPrefix: p8,
  registerSound: Fs,
  registerSynthSounds: z2,
  registerZZFXSounds: J2,
  resetDefaultValues: V2,
  resetDefaults: O8,
  resetGlobalEffects: T8,
  resetLoadedSounds: w8,
  reverseBuffer: F2,
  samples: Hs,
  setDefault: y8,
  setDefaultAudioContext: X2,
  setDefaultValue: qd,
  setDefaultValues: v8,
  setGainCurve: m8,
  setLogger: v2,
  setMaxPolyphony: R2,
  setMultiChannelOrbits: $2,
  setVersionDefaults: x8,
  soundMap: ys,
  superdough: Gd,
  superdoughTrigger: Q8,
  waveformN: Y2,
  webAudioTimeout: xo,
  webaudioOutput: zd,
  webaudioRepl: X8
}, Symbol.toStringTag, { value: "Module" }));
let $p = [], aC = [];
(() => {
  let t = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((e) => e ? parseInt(e, 36) : 1);
  for (let e = 0, n = 0; e < t.length; e++)
    (e % 2 ? aC : $p).push(n = n + t[e]);
})();
function q8(t) {
  if (t < 768) return !1;
  for (let e = 0, n = $p.length; ; ) {
    let r = e + n >> 1;
    if (t < $p[r]) n = r;
    else if (t >= aC[r]) e = r + 1;
    else return !0;
    if (e == n) return !1;
  }
}
function _g(t) {
  return t >= 127462 && t <= 127487;
}
const Rg = 8205;
function G8(t, e, n = !0, r = !0) {
  return (n ? oC : z8)(t, e, r);
}
function oC(t, e, n) {
  if (e == t.length) return e;
  e && lC(t.charCodeAt(e)) && cC(t.charCodeAt(e - 1)) && e--;
  let r = Uh(t, e);
  for (e += Zg(r); e < t.length; ) {
    let s = Uh(t, e);
    if (r == Rg || s == Rg || n && q8(s))
      e += Zg(s), r = s;
    else if (_g(s)) {
      let i = 0, a = e - 2;
      for (; a >= 0 && _g(Uh(t, a)); )
        i++, a -= 2;
      if (i % 2 == 0) break;
      e += 2;
    } else
      break;
  }
  return e;
}
function z8(t, e, n) {
  for (; e > 0; ) {
    let r = oC(t, e - 2, n);
    if (r < e) return r;
    e--;
  }
  return 0;
}
function Uh(t, e) {
  let n = t.charCodeAt(e);
  if (!cC(n) || e + 1 == t.length) return n;
  let r = t.charCodeAt(e + 1);
  return lC(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;
}
function lC(t) {
  return t >= 56320 && t < 57344;
}
function cC(t) {
  return t >= 55296 && t < 56320;
}
function Zg(t) {
  return t < 65536 ? 1 : 2;
}
class ht {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, n, r) {
    [e, n] = ka(this, e, n);
    let s = [];
    return this.decompose(
      0,
      e,
      s,
      2
      /* Open.To */
    ), r.length && r.decompose(
      0,
      r.length,
      s,
      3
      /* Open.To */
    ), this.decompose(
      n,
      this.length,
      s,
      1
      /* Open.From */
    ), fs.from(s, this.length - (n - e) + r.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, n = this.length) {
    [e, n] = ka(this, e, n);
    let r = [];
    return this.decompose(e, n, r, 0), fs.from(r, n - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let n = this.scanIdentical(e, 1), r = this.length - this.scanIdentical(e, -1), s = new wo(this), i = new wo(e);
    for (let a = n, o = n; ; ) {
      if (s.next(a), i.next(a), a = 0, s.lineBreak != i.lineBreak || s.done != i.done || s.value != i.value)
        return !1;
      if (o += s.value.length, s.done || o >= r)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new wo(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, n = this.length) {
    return new uC(this, e, n);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, n) {
    let r;
    if (e == null)
      r = this.iter();
    else {
      n == null && (n = this.lines + 1);
      let s = this.line(e).from;
      r = this.iterRange(s, Math.max(s, n == this.lines + 1 ? this.length : n <= 1 ? 0 : this.line(n - 1).to));
    }
    return new hC(r);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? ht.empty : e.length <= 32 ? new Ht(e) : fs.from(Ht.split(e, []));
  }
}
class Ht extends ht {
  constructor(e, n = Y8(e)) {
    super(), this.text = e, this.length = n;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, n, r, s) {
    for (let i = 0; ; i++) {
      let a = this.text[i], o = s + a.length;
      if ((n ? r : o) >= e)
        return new H8(s, o, r, a);
      s = o + 1, r++;
    }
  }
  decompose(e, n, r, s) {
    let i = e <= 0 && n >= this.length ? this : new Ht($g(this.text, e, n), Math.min(n, this.length) - Math.max(0, e));
    if (s & 1) {
      let a = r.pop(), o = pc(i.text, a.text.slice(), 0, i.length);
      if (o.length <= 32)
        r.push(new Ht(o, a.length + i.length));
      else {
        let l = o.length >> 1;
        r.push(new Ht(o.slice(0, l)), new Ht(o.slice(l)));
      }
    } else
      r.push(i);
  }
  replace(e, n, r) {
    if (!(r instanceof Ht))
      return super.replace(e, n, r);
    [e, n] = ka(this, e, n);
    let s = pc(this.text, pc(r.text, $g(this.text, 0, e)), n), i = this.length + r.length - (n - e);
    return s.length <= 32 ? new Ht(s, i) : fs.from(Ht.split(s, []), i);
  }
  sliceString(e, n = this.length, r = `
`) {
    [e, n] = ka(this, e, n);
    let s = "";
    for (let i = 0, a = 0; i <= n && a < this.text.length; a++) {
      let o = this.text[a], l = i + o.length;
      i > e && a && (s += r), e < l && n > i && (s += o.slice(Math.max(0, e - i), n - i)), i = l + 1;
    }
    return s;
  }
  flatten(e) {
    for (let n of this.text)
      e.push(n);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, n) {
    let r = [], s = -1;
    for (let i of e)
      r.push(i), s += i.length + 1, r.length == 32 && (n.push(new Ht(r, s)), r = [], s = -1);
    return s > -1 && n.push(new Ht(r, s)), n;
  }
}
class fs extends ht {
  constructor(e, n) {
    super(), this.children = e, this.length = n, this.lines = 0;
    for (let r of e)
      this.lines += r.lines;
  }
  lineInner(e, n, r, s) {
    for (let i = 0; ; i++) {
      let a = this.children[i], o = s + a.length, l = r + a.lines - 1;
      if ((n ? l : o) >= e)
        return a.lineInner(e, n, r, s);
      s = o + 1, r = l + 1;
    }
  }
  decompose(e, n, r, s) {
    for (let i = 0, a = 0; a <= n && i < this.children.length; i++) {
      let o = this.children[i], l = a + o.length;
      if (e <= l && n >= a) {
        let u = s & ((a <= e ? 1 : 0) | (l >= n ? 2 : 0));
        a >= e && l <= n && !u ? r.push(o) : o.decompose(e - a, n - a, r, u);
      }
      a = l + 1;
    }
  }
  replace(e, n, r) {
    if ([e, n] = ka(this, e, n), r.lines < this.lines)
      for (let s = 0, i = 0; s < this.children.length; s++) {
        let a = this.children[s], o = i + a.length;
        if (e >= i && n <= o) {
          let l = a.replace(e - i, n - i, r), u = this.lines - a.lines + l.lines;
          if (l.lines < u >> 4 && l.lines > u >> 6) {
            let h = this.children.slice();
            return h[s] = l, new fs(h, this.length - (n - e) + r.length);
          }
          return super.replace(i, o, l);
        }
        i = o + 1;
      }
    return super.replace(e, n, r);
  }
  sliceString(e, n = this.length, r = `
`) {
    [e, n] = ka(this, e, n);
    let s = "";
    for (let i = 0, a = 0; i < this.children.length && a <= n; i++) {
      let o = this.children[i], l = a + o.length;
      a > e && i && (s += r), e < l && n > a && (s += o.sliceString(e - a, n - a, r)), a = l + 1;
    }
    return s;
  }
  flatten(e) {
    for (let n of this.children)
      n.flatten(e);
  }
  scanIdentical(e, n) {
    if (!(e instanceof fs))
      return 0;
    let r = 0, [s, i, a, o] = n > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; s += n, i += n) {
      if (s == a || i == o)
        return r;
      let l = this.children[s], u = e.children[i];
      if (l != u)
        return r + l.scanIdentical(u, n);
      r += l.length + 1;
    }
  }
  static from(e, n = e.reduce((r, s) => r + s.length + 1, -1)) {
    let r = 0;
    for (let b of e)
      r += b.lines;
    if (r < 32) {
      let b = [];
      for (let v of e)
        v.flatten(b);
      return new Ht(b, n);
    }
    let s = Math.max(
      32,
      r >> 5
      /* Tree.BranchShift */
    ), i = s << 1, a = s >> 1, o = [], l = 0, u = -1, h = [];
    function f(b) {
      let v;
      if (b.lines > i && b instanceof fs)
        for (let C of b.children)
          f(C);
      else b.lines > a && (l > a || !l) ? (m(), o.push(b)) : b instanceof Ht && l && (v = h[h.length - 1]) instanceof Ht && b.lines + v.lines <= 32 ? (l += b.lines, u += b.length + 1, h[h.length - 1] = new Ht(v.text.concat(b.text), v.length + 1 + b.length)) : (l + b.lines > s && m(), l += b.lines, u += b.length + 1, h.push(b));
    }
    function m() {
      l != 0 && (o.push(h.length == 1 ? h[0] : fs.from(h, u)), u = -1, l = h.length = 0);
    }
    for (let b of e)
      f(b);
    return m(), o.length == 1 ? o[0] : new fs(o, n);
  }
}
ht.empty = /* @__PURE__ */ new Ht([""], 0);
function Y8(t) {
  let e = -1;
  for (let n of t)
    e += n.length + 1;
  return e;
}
function pc(t, e, n = 0, r = 1e9) {
  for (let s = 0, i = 0, a = !0; i < t.length && s <= r; i++) {
    let o = t[i], l = s + o.length;
    l >= n && (l > r && (o = o.slice(0, r - s)), s < n && (o = o.slice(n - s)), a ? (e[e.length - 1] += o, a = !1) : e.push(o)), s = l + 1;
  }
  return e;
}
function $g(t, e, n) {
  return pc(t, [""], e, n);
}
class wo {
  constructor(e, n = 1) {
    this.dir = n, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [n > 0 ? 1 : (e instanceof Ht ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, n) {
    for (this.done = this.lineBreak = !1; ; ) {
      let r = this.nodes.length - 1, s = this.nodes[r], i = this.offsets[r], a = i >> 1, o = s instanceof Ht ? s.text.length : s.children.length;
      if (a == (n > 0 ? o : 0)) {
        if (r == 0)
          return this.done = !0, this.value = "", this;
        n > 0 && this.offsets[r - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((i & 1) == (n > 0 ? 0 : 1)) {
        if (this.offsets[r] += n, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (s instanceof Ht) {
        let l = s.text[a + (n < 0 ? -1 : 0)];
        if (this.offsets[r] += n, l.length > Math.max(0, e))
          return this.value = e == 0 ? l : n > 0 ? l.slice(e) : l.slice(0, l.length - e), this;
        e -= l.length;
      } else {
        let l = s.children[a + (n < 0 ? -1 : 0)];
        e > l.length ? (e -= l.length, this.offsets[r] += n) : (n < 0 && this.offsets[r]--, this.nodes.push(l), this.offsets.push(n > 0 ? 1 : (l instanceof Ht ? l.text.length : l.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class uC {
  constructor(e, n, r) {
    this.value = "", this.done = !1, this.cursor = new wo(e, n > r ? -1 : 1), this.pos = n > r ? e.length : 0, this.from = Math.min(n, r), this.to = Math.max(n, r);
  }
  nextInner(e, n) {
    if (n < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, n < 0 ? this.pos - this.to : this.from - this.pos);
    let r = n < 0 ? this.pos - this.from : this.to - this.pos;
    e > r && (e = r), r -= e;
    let { value: s } = this.cursor.next(e);
    return this.pos += (s.length + e) * n, this.value = s.length <= r ? s : n < 0 ? s.slice(s.length - r) : s.slice(0, r), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class hC {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: n, lineBreak: r, value: s } = this.inner.next(e);
    return n && this.afterBreak ? (this.value = "", this.afterBreak = !1) : n ? (this.done = !0, this.value = "") : r ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = s, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && (ht.prototype[Symbol.iterator] = function() {
  return this.iter();
}, wo.prototype[Symbol.iterator] = uC.prototype[Symbol.iterator] = hC.prototype[Symbol.iterator] = function() {
  return this;
});
class H8 {
  /**
  @internal
  */
  constructor(e, n, r, s) {
    this.from = e, this.to = n, this.number = r, this.text = s;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
}
function ka(t, e, n) {
  return e = Math.max(0, Math.min(t.length, e)), [e, Math.max(e, Math.min(t.length, n))];
}
function kn(t, e, n = !0, r = !0) {
  return G8(t, e, n, r);
}
function K8(t) {
  return t >= 56320 && t < 57344;
}
function J8(t) {
  return t >= 55296 && t < 56320;
}
function tr(t, e) {
  let n = t.charCodeAt(e);
  if (!J8(n) || e + 1 == t.length)
    return n;
  let r = t.charCodeAt(e + 1);
  return K8(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;
}
function Yd(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));
}
function ds(t) {
  return t < 65536 ? 1 : 2;
}
const Lp = /\r\n?|\n/;
var an = /* @__PURE__ */ function(t) {
  return t[t.Simple = 0] = "Simple", t[t.TrackDel = 1] = "TrackDel", t[t.TrackBefore = 2] = "TrackBefore", t[t.TrackAfter = 3] = "TrackAfter", t;
}(an || (an = {}));
class Os {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let n = 0; n < this.sections.length; n += 2)
      e += this.sections[n];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let n = 0; n < this.sections.length; n += 2) {
      let r = this.sections[n + 1];
      e += r < 0 ? this.sections[n] : r;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let n = 0, r = 0, s = 0; n < this.sections.length; ) {
      let i = this.sections[n++], a = this.sections[n++];
      a < 0 ? (e(r, s, i), s += i) : s += a, r += i;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, n = !1) {
    Ip(this, e, n);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let n = 0; n < this.sections.length; ) {
      let r = this.sections[n++], s = this.sections[n++];
      s < 0 ? e.push(r, s) : e.push(s, r);
    }
    return new Os(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : pC(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `this` happened before the ones in `other`.
  */
  mapDesc(e, n = !1) {
    return e.empty ? this : Np(this, e, n);
  }
  mapPos(e, n = -1, r = an.Simple) {
    let s = 0, i = 0;
    for (let a = 0; a < this.sections.length; ) {
      let o = this.sections[a++], l = this.sections[a++], u = s + o;
      if (l < 0) {
        if (u > e)
          return i + (e - s);
        i += o;
      } else {
        if (r != an.Simple && u >= e && (r == an.TrackDel && s < e && u > e || r == an.TrackBefore && s < e || r == an.TrackAfter && u > e))
          return null;
        if (u > e || u == e && n < 0 && !o)
          return e == s || n < 0 ? i : i + l;
        i += l;
      }
      s = u;
    }
    if (e > s)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${s}`);
    return i;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, n = e) {
    for (let r = 0, s = 0; r < this.sections.length && s <= n; ) {
      let i = this.sections[r++], a = this.sections[r++], o = s + i;
      if (a >= 0 && s <= n && o >= e)
        return s < e && o > n ? "cover" : !0;
      s = o;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 0; n < this.sections.length; ) {
      let r = this.sections[n++], s = this.sections[n++];
      e += (e ? " " : "") + r + (s >= 0 ? ":" + s : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((n) => typeof n != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new Os(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new Os(e);
  }
}
class pn extends Os {
  constructor(e, n) {
    super(e), this.inserted = n;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return Ip(this, (n, r, s, i, a) => e = e.replace(s, s + (r - n), a), !1), e;
  }
  mapDesc(e, n = !1) {
    return Np(this, e, n, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let n = this.sections.slice(), r = [];
    for (let s = 0, i = 0; s < n.length; s += 2) {
      let a = n[s], o = n[s + 1];
      if (o >= 0) {
        n[s] = o, n[s + 1] = a;
        let l = s >> 1;
        for (; r.length < l; )
          r.push(ht.empty);
        r.push(a ? e.slice(i, i + a) : ht.empty);
      }
      i += a;
    }
    return new pn(n, r);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : pC(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, n = !1) {
    return e.empty ? this : Np(this, e, n, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, n = !1) {
    Ip(this, e, n);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return Os.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let n = [], r = [], s = [], i = new Qo(this);
    e: for (let a = 0, o = 0; ; ) {
      let l = a == e.length ? 1e9 : e[a++];
      for (; o < l || o == l && i.len == 0; ) {
        if (i.done)
          break e;
        let h = Math.min(i.len, l - o);
        En(s, h, -1);
        let f = i.ins == -1 ? -1 : i.off == 0 ? i.ins : 0;
        En(n, h, f), f > 0 && ni(r, n, i.text), i.forward(h), o += h;
      }
      let u = e[a++];
      for (; o < u; ) {
        if (i.done)
          break e;
        let h = Math.min(i.len, u - o);
        En(n, h, -1), En(s, h, i.ins == -1 ? -1 : i.off == 0 ? i.ins : 0), i.forward(h), o += h;
      }
    }
    return {
      changes: new pn(n, r),
      filtered: Os.create(s)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let n = 0; n < this.sections.length; n += 2) {
      let r = this.sections[n], s = this.sections[n + 1];
      s < 0 ? e.push(r) : s == 0 ? e.push([r]) : e.push([r].concat(this.inserted[n >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, n, r) {
    let s = [], i = [], a = 0, o = null;
    function l(h = !1) {
      if (!h && !s.length)
        return;
      a < n && En(s, n - a, -1);
      let f = new pn(s, i);
      o = o ? o.compose(f.map(o)) : f, s = [], i = [], a = 0;
    }
    function u(h) {
      if (Array.isArray(h))
        for (let f of h)
          u(f);
      else if (h instanceof pn) {
        if (h.length != n)
          throw new RangeError(`Mismatched change set length (got ${h.length}, expected ${n})`);
        l(), o = o ? o.compose(h.map(o)) : h;
      } else {
        let { from: f, to: m = f, insert: b } = h;
        if (f > m || f < 0 || m > n)
          throw new RangeError(`Invalid change range ${f} to ${m} (in doc of length ${n})`);
        let v = b ? typeof b == "string" ? ht.of(b.split(r || Lp)) : b : ht.empty, C = v.length;
        if (f == m && C == 0)
          return;
        f < a && l(), f > a && En(s, f - a, -1), En(s, m - f, C), ni(i, s, v), a = m;
      }
    }
    return u(e), l(!o), o;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new pn(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let n = [], r = [];
    for (let s = 0; s < e.length; s++) {
      let i = e[s];
      if (typeof i == "number")
        n.push(i, -1);
      else {
        if (!Array.isArray(i) || typeof i[0] != "number" || i.some((a, o) => o && typeof a != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (i.length == 1)
          n.push(i[0], 0);
        else {
          for (; r.length < s; )
            r.push(ht.empty);
          r[s] = ht.of(i.slice(1)), n.push(i[0], r[s].length);
        }
      }
    }
    return new pn(n, r);
  }
  /**
  @internal
  */
  static createSet(e, n) {
    return new pn(e, n);
  }
}
function En(t, e, n, r = !1) {
  if (e == 0 && n <= 0)
    return;
  let s = t.length - 2;
  s >= 0 && n <= 0 && n == t[s + 1] ? t[s] += e : s >= 0 && e == 0 && t[s] == 0 ? t[s + 1] += n : r ? (t[s] += e, t[s + 1] += n) : t.push(e, n);
}
function ni(t, e, n) {
  if (n.length == 0)
    return;
  let r = e.length - 2 >> 1;
  if (r < t.length)
    t[t.length - 1] = t[t.length - 1].append(n);
  else {
    for (; t.length < r; )
      t.push(ht.empty);
    t.push(n);
  }
}
function Ip(t, e, n) {
  let r = t.inserted;
  for (let s = 0, i = 0, a = 0; a < t.sections.length; ) {
    let o = t.sections[a++], l = t.sections[a++];
    if (l < 0)
      s += o, i += o;
    else {
      let u = s, h = i, f = ht.empty;
      for (; u += o, h += l, l && r && (f = f.append(r[a - 2 >> 1])), !(n || a == t.sections.length || t.sections[a + 1] < 0); )
        o = t.sections[a++], l = t.sections[a++];
      e(s, u, i, h, f), s = u, i = h;
    }
  }
}
function Np(t, e, n, r = !1) {
  let s = [], i = r ? [] : null, a = new Qo(t), o = new Qo(e);
  for (let l = -1; ; ) {
    if (a.done && o.len || o.done && a.len)
      throw new Error("Mismatched change set lengths");
    if (a.ins == -1 && o.ins == -1) {
      let u = Math.min(a.len, o.len);
      En(s, u, -1), a.forward(u), o.forward(u);
    } else if (o.ins >= 0 && (a.ins < 0 || l == a.i || a.off == 0 && (o.len < a.len || o.len == a.len && !n))) {
      let u = o.len;
      for (En(s, o.ins, -1); u; ) {
        let h = Math.min(a.len, u);
        a.ins >= 0 && l < a.i && a.len <= h && (En(s, 0, a.ins), i && ni(i, s, a.text), l = a.i), a.forward(h), u -= h;
      }
      o.next();
    } else if (a.ins >= 0) {
      let u = 0, h = a.len;
      for (; h; )
        if (o.ins == -1) {
          let f = Math.min(h, o.len);
          u += f, h -= f, o.forward(f);
        } else if (o.ins == 0 && o.len < h)
          h -= o.len, o.next();
        else
          break;
      En(s, u, l < a.i ? a.ins : 0), i && l < a.i && ni(i, s, a.text), l = a.i, a.forward(a.len - h);
    } else {
      if (a.done && o.done)
        return i ? pn.createSet(s, i) : Os.create(s);
      throw new Error("Mismatched change set lengths");
    }
  }
}
function pC(t, e, n = !1) {
  let r = [], s = n ? [] : null, i = new Qo(t), a = new Qo(e);
  for (let o = !1; ; ) {
    if (i.done && a.done)
      return s ? pn.createSet(r, s) : Os.create(r);
    if (i.ins == 0)
      En(r, i.len, 0, o), i.next();
    else if (a.len == 0 && !a.done)
      En(r, 0, a.ins, o), s && ni(s, r, a.text), a.next();
    else {
      if (i.done || a.done)
        throw new Error("Mismatched change set lengths");
      {
        let l = Math.min(i.len2, a.len), u = r.length;
        if (i.ins == -1) {
          let h = a.ins == -1 ? -1 : a.off ? 0 : a.ins;
          En(r, l, h, o), s && h && ni(s, r, a.text);
        } else a.ins == -1 ? (En(r, i.off ? 0 : i.len, l, o), s && ni(s, r, i.textBit(l))) : (En(r, i.off ? 0 : i.len, a.off ? 0 : a.ins, o), s && !a.off && ni(s, r, a.text));
        o = (i.ins > l || a.ins >= 0 && a.len > l) && (o || r.length > u), i.forward2(l), a.forward(l);
      }
    }
  }
}
class Qo {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, n = this.i - 2 >> 1;
    return n >= e.length ? ht.empty : e[n];
  }
  textBit(e) {
    let { inserted: n } = this.set, r = this.i - 2 >> 1;
    return r >= n.length && !e ? ht.empty : n[r].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class Bi {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.flags = r;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, n = -1) {
    let r, s;
    return this.empty ? r = s = e.mapPos(this.from, n) : (r = e.mapPos(this.from, 1), s = e.mapPos(this.to, -1)), r == this.from && s == this.to ? this : new Bi(r, s, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, n = e) {
    if (e <= this.anchor && n >= this.anchor)
      return ne.range(e, n);
    let r = Math.abs(e - this.anchor) > Math.abs(n - this.anchor) ? e : n;
    return ne.range(this.anchor, r);
  }
  /**
  Compare this range to another range.
  */
  eq(e, n = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!n || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return ne.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Bi(e, n, r);
  }
}
class ne {
  constructor(e, n) {
    this.ranges = e, this.mainIndex = n;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, n = -1) {
    return e.empty ? this : ne.create(this.ranges.map((r) => r.map(e, n)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, n = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let r = 0; r < this.ranges.length; r++)
      if (!this.ranges[r].eq(e.ranges[r], n))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new ne([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, n = !0) {
    return ne.create([e].concat(this.ranges), n ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, n = this.mainIndex) {
    let r = this.ranges.slice();
    return r[n] = e, ne.create(r, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new ne(e.ranges.map((n) => Bi.fromJSON(n)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, n = e) {
    return new ne([ne.range(e, n)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, n = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let r = 0, s = 0; s < e.length; s++) {
      let i = e[s];
      if (i.empty ? i.from <= r : i.from < r)
        return ne.normalized(e.slice(), n);
      r = i.to;
    }
    return new ne(e, n);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, n = 0, r, s) {
    return Bi.create(e, e, (n == 0 ? 0 : n < 0 ? 8 : 16) | (r == null ? 7 : Math.min(6, r)) | (s ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, n, r, s) {
    let i = (r ?? 16777215) << 6 | (s == null ? 7 : Math.min(6, s));
    return n < e ? Bi.create(n, e, 48 | i) : Bi.create(e, n, (n > e ? 8 : 0) | i);
  }
  /**
  @internal
  */
  static normalized(e, n = 0) {
    let r = e[n];
    e.sort((s, i) => s.from - i.from), n = e.indexOf(r);
    for (let s = 1; s < e.length; s++) {
      let i = e[s], a = e[s - 1];
      if (i.empty ? i.from <= a.to : i.from < a.to) {
        let o = a.from, l = Math.max(i.to, a.to);
        s <= n && n--, e.splice(--s, 2, i.anchor > i.head ? ne.range(l, o) : ne.range(o, l));
      }
    }
    return new ne(e, n);
  }
}
function fC(t, e) {
  for (let n of t.ranges)
    if (n.to > e)
      throw new RangeError("Selection points outside of document");
}
let Hd = 0;
class Ae {
  constructor(e, n, r, s, i) {
    this.combine = e, this.compareInput = n, this.compare = r, this.isStatic = s, this.id = Hd++, this.default = e([]), this.extensions = typeof i == "function" ? i(this) : i;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new Ae(e.combine || ((n) => n), e.compareInput || ((n, r) => n === r), e.compare || (e.combine ? (n, r) => n === r : Kd), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new fc([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, n) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new fc(e, this, 1, n);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, n) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new fc(e, this, 2, n);
  }
  from(e, n) {
    return n || (n = (r) => r), this.compute([e], (r) => n(r.field(e)));
  }
}
function Kd(t, e) {
  return t == e || t.length == e.length && t.every((n, r) => n === e[r]);
}
class fc {
  constructor(e, n, r, s) {
    this.dependencies = e, this.facet = n, this.type = r, this.value = s, this.id = Hd++;
  }
  dynamicSlot(e) {
    var n;
    let r = this.value, s = this.facet.compareInput, i = this.id, a = e[i] >> 1, o = this.type == 2, l = !1, u = !1, h = [];
    for (let f of this.dependencies)
      f == "doc" ? l = !0 : f == "selection" ? u = !0 : ((n = e[f.id]) !== null && n !== void 0 ? n : 1) & 1 || h.push(e[f.id]);
    return {
      create(f) {
        return f.values[a] = r(f), 1;
      },
      update(f, m) {
        if (l && m.docChanged || u && (m.docChanged || m.selection) || Vp(f, h)) {
          let b = r(f);
          if (o ? !Lg(b, f.values[a], s) : !s(b, f.values[a]))
            return f.values[a] = b, 1;
        }
        return 0;
      },
      reconfigure: (f, m) => {
        let b, v = m.config.address[i];
        if (v != null) {
          let C = Rc(m, v);
          if (this.dependencies.every((S) => S instanceof Ae ? m.facet(S) === f.facet(S) : S instanceof Vt ? m.field(S, !1) == f.field(S, !1) : !0) || (o ? Lg(b = r(f), C, s) : s(b = r(f), C)))
            return f.values[a] = C, 0;
        } else
          b = r(f);
        return f.values[a] = b, 1;
      }
    };
  }
}
function Lg(t, e, n) {
  if (t.length != e.length)
    return !1;
  for (let r = 0; r < t.length; r++)
    if (!n(t[r], e[r]))
      return !1;
  return !0;
}
function Vp(t, e) {
  let n = !1;
  for (let r of e)
    ko(t, r) & 1 && (n = !0);
  return n;
}
function e6(t, e, n) {
  let r = n.map((l) => t[l.id]), s = n.map((l) => l.type), i = r.filter((l) => !(l & 1)), a = t[e.id] >> 1;
  function o(l) {
    let u = [];
    for (let h = 0; h < r.length; h++) {
      let f = Rc(l, r[h]);
      if (s[h] == 2)
        for (let m of f)
          u.push(m);
      else
        u.push(f);
    }
    return e.combine(u);
  }
  return {
    create(l) {
      for (let u of r)
        ko(l, u);
      return l.values[a] = o(l), 1;
    },
    update(l, u) {
      if (!Vp(l, i))
        return 0;
      let h = o(l);
      return e.compare(h, l.values[a]) ? 0 : (l.values[a] = h, 1);
    },
    reconfigure(l, u) {
      let h = Vp(l, r), f = u.config.facets[e.id], m = u.facet(e);
      if (f && !h && Kd(n, f))
        return l.values[a] = m, 0;
      let b = o(l);
      return e.compare(b, m) ? (l.values[a] = m, 0) : (l.values[a] = b, 1);
    }
  };
}
const Ig = /* @__PURE__ */ Ae.define({ static: !0 });
class Vt {
  constructor(e, n, r, s, i) {
    this.id = e, this.createF = n, this.updateF = r, this.compareF = s, this.spec = i, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let n = new Vt(Hd++, e.create, e.update, e.compare || ((r, s) => r === s), e);
    return e.provide && (n.provides = e.provide(n)), n;
  }
  create(e) {
    let n = e.facet(Ig).find((r) => r.field == this);
    return (n?.create || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let n = e[this.id] >> 1;
    return {
      create: (r) => (r.values[n] = this.create(r), 1),
      update: (r, s) => {
        let i = r.values[n], a = this.updateF(i, s);
        return this.compareF(i, a) ? 0 : (r.values[n] = a, 1);
      },
      reconfigure: (r, s) => s.config.address[this.id] != null ? (r.values[n] = s.field(this), 0) : (r.values[n] = this.create(r), 1)
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, Ig.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const Ei = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function so(t) {
  return (e) => new dC(e, t);
}
const lr = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ so(Ei.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ so(Ei.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ so(Ei.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ so(Ei.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ so(Ei.lowest)
};
class dC {
  constructor(e, n) {
    this.inner = e, this.prec = n;
  }
}
class al {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new Xp(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return al.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class Xp {
  constructor(e, n) {
    this.compartment = e, this.inner = n;
  }
}
class _c {
  constructor(e, n, r, s, i, a) {
    for (this.base = e, this.compartments = n, this.dynamicSlots = r, this.address = s, this.staticValues = i, this.facets = a, this.statusTemplate = []; this.statusTemplate.length < r.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let n = this.address[e.id];
    return n == null ? e.default : this.staticValues[n >> 1];
  }
  static resolve(e, n, r) {
    let s = [], i = /* @__PURE__ */ Object.create(null), a = /* @__PURE__ */ new Map();
    for (let m of t6(e, n, a))
      m instanceof Vt ? s.push(m) : (i[m.facet.id] || (i[m.facet.id] = [])).push(m);
    let o = /* @__PURE__ */ Object.create(null), l = [], u = [];
    for (let m of s)
      o[m.id] = u.length << 1, u.push((b) => m.slot(b));
    let h = r?.config.facets;
    for (let m in i) {
      let b = i[m], v = b[0].facet, C = h && h[m] || [];
      if (b.every(
        (S) => S.type == 0
        /* Provider.Static */
      ))
        if (o[v.id] = l.length << 1 | 1, Kd(C, b))
          l.push(r.facet(v));
        else {
          let S = v.combine(b.map((B) => B.value));
          l.push(r && v.compare(S, r.facet(v)) ? r.facet(v) : S);
        }
      else {
        for (let S of b)
          S.type == 0 ? (o[S.id] = l.length << 1 | 1, l.push(S.value)) : (o[S.id] = u.length << 1, u.push((B) => S.dynamicSlot(B)));
        o[v.id] = u.length << 1, u.push((S) => e6(S, v, b));
      }
    }
    let f = u.map((m) => m(o));
    return new _c(e, a, f, o, l, i);
  }
}
function t6(t, e, n) {
  let r = [[], [], [], [], []], s = /* @__PURE__ */ new Map();
  function i(a, o) {
    let l = s.get(a);
    if (l != null) {
      if (l <= o)
        return;
      let u = r[l].indexOf(a);
      u > -1 && r[l].splice(u, 1), a instanceof Xp && n.delete(a.compartment);
    }
    if (s.set(a, o), Array.isArray(a))
      for (let u of a)
        i(u, o);
    else if (a instanceof Xp) {
      if (n.has(a.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let u = e.get(a.compartment) || a.inner;
      n.set(a.compartment, u), i(u, o);
    } else if (a instanceof dC)
      i(a.inner, a.prec);
    else if (a instanceof Vt)
      r[o].push(a), a.provides && i(a.provides, o);
    else if (a instanceof fc)
      r[o].push(a), a.facet.extensions && i(a.facet.extensions, Ei.default);
    else {
      let u = a.extension;
      if (!u)
        throw new Error(`Unrecognized extension value in extension set (${a}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      i(u, o);
    }
  }
  return i(t, Ei.default), r.reduce((a, o) => a.concat(o));
}
function ko(t, e) {
  if (e & 1)
    return 2;
  let n = e >> 1, r = t.status[n];
  if (r == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (r & 2)
    return r;
  t.status[n] = 4;
  let s = t.computeSlot(t, t.config.dynamicSlots[n]);
  return t.status[n] = 2 | s;
}
function Rc(t, e) {
  return e & 1 ? t.config.staticValues[e >> 1] : t.values[e >> 1];
}
const mC = /* @__PURE__ */ Ae.define(), Wp = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e),
  static: !0
}), gC = /* @__PURE__ */ Ae.define({
  combine: (t) => t.length ? t[0] : void 0,
  static: !0
}), bC = /* @__PURE__ */ Ae.define(), yC = /* @__PURE__ */ Ae.define(), OC = /* @__PURE__ */ Ae.define(), vC = /* @__PURE__ */ Ae.define({
  combine: (t) => t.length ? t[0] : !1
});
class Vs {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.value = n;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new n6();
  }
}
class n6 {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new Vs(this, e);
  }
}
class r6 {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new Ze(this, e);
  }
}
class Ze {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.value = n;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let n = this.type.map(this.value, e);
    return n === void 0 ? void 0 : n == this.value ? this : new Ze(this.type, n);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new r6(e.map || ((n) => n));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, n) {
    if (!e.length)
      return e;
    let r = [];
    for (let s of e) {
      let i = s.map(n);
      i && r.push(i);
    }
    return r;
  }
}
Ze.reconfigure = /* @__PURE__ */ Ze.define();
Ze.appendConfig = /* @__PURE__ */ Ze.define();
class on {
  constructor(e, n, r, s, i, a) {
    this.startState = e, this.changes = n, this.selection = r, this.effects = s, this.annotations = i, this.scrollIntoView = a, this._doc = null, this._state = null, r && fC(r, n.newLength), i.some((o) => o.type == on.time) || (this.annotations = i.concat(on.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, n, r, s, i, a) {
    return new on(e, n, r, s, i, a);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let n of this.annotations)
      if (n.type == e)
        return n.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let n = this.annotation(on.userEvent);
    return !!(n && (n == e || n.length > e.length && n.slice(0, e.length) == e && n[e.length] == "."));
  }
}
on.time = /* @__PURE__ */ Vs.define();
on.userEvent = /* @__PURE__ */ Vs.define();
on.addToHistory = /* @__PURE__ */ Vs.define();
on.remote = /* @__PURE__ */ Vs.define();
function s6(t, e) {
  let n = [];
  for (let r = 0, s = 0; ; ) {
    let i, a;
    if (r < t.length && (s == e.length || e[s] >= t[r]))
      i = t[r++], a = t[r++];
    else if (s < e.length)
      i = e[s++], a = e[s++];
    else
      return n;
    !n.length || n[n.length - 1] < i ? n.push(i, a) : n[n.length - 1] < a && (n[n.length - 1] = a);
  }
}
function xC(t, e, n) {
  var r;
  let s, i, a;
  return n ? (s = e.changes, i = pn.empty(e.changes.length), a = t.changes.compose(e.changes)) : (s = e.changes.map(t.changes), i = t.changes.mapDesc(e.changes, !0), a = t.changes.compose(s)), {
    changes: a,
    selection: e.selection ? e.selection.map(i) : (r = t.selection) === null || r === void 0 ? void 0 : r.map(s),
    effects: Ze.mapEffects(t.effects, s).concat(Ze.mapEffects(e.effects, i)),
    annotations: t.annotations.length ? t.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: t.scrollIntoView || e.scrollIntoView
  };
}
function Up(t, e, n) {
  let r = e.selection, s = ha(e.annotations);
  return e.userEvent && (s = s.concat(on.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof pn ? e.changes : pn.of(e.changes || [], n, t.facet(gC)),
    selection: r && (r instanceof ne ? r : ne.single(r.anchor, r.head)),
    effects: ha(e.effects),
    annotations: s,
    scrollIntoView: !!e.scrollIntoView
  };
}
function wC(t, e, n) {
  let r = Up(t, e.length ? e[0] : {}, t.doc.length);
  e.length && e[0].filter === !1 && (n = !1);
  for (let i = 1; i < e.length; i++) {
    e[i].filter === !1 && (n = !1);
    let a = !!e[i].sequential;
    r = xC(r, Up(t, e[i], a ? r.changes.newLength : t.doc.length), a);
  }
  let s = on.create(t, r.changes, r.selection, r.effects, r.annotations, r.scrollIntoView);
  return a6(n ? i6(s) : s);
}
function i6(t) {
  let e = t.startState, n = !0;
  for (let s of e.facet(bC)) {
    let i = s(t);
    if (i === !1) {
      n = !1;
      break;
    }
    Array.isArray(i) && (n = n === !0 ? i : s6(n, i));
  }
  if (n !== !0) {
    let s, i;
    if (n === !1)
      i = t.changes.invertedDesc, s = pn.empty(e.doc.length);
    else {
      let a = t.changes.filter(n);
      s = a.changes, i = a.filtered.mapDesc(a.changes).invertedDesc;
    }
    t = on.create(e, s, t.selection && t.selection.map(i), Ze.mapEffects(t.effects, i), t.annotations, t.scrollIntoView);
  }
  let r = e.facet(yC);
  for (let s = r.length - 1; s >= 0; s--) {
    let i = r[s](t);
    i instanceof on ? t = i : Array.isArray(i) && i.length == 1 && i[0] instanceof on ? t = i[0] : t = wC(e, ha(i), !1);
  }
  return t;
}
function a6(t) {
  let e = t.startState, n = e.facet(OC), r = t;
  for (let s = n.length - 1; s >= 0; s--) {
    let i = n[s](t);
    i && Object.keys(i).length && (r = xC(r, Up(e, i, t.changes.newLength), !0));
  }
  return r == t ? t : on.create(e, t.changes, t.selection, r.effects, r.annotations, r.scrollIntoView);
}
const o6 = [];
function ha(t) {
  return t == null ? o6 : Array.isArray(t) ? t : [t];
}
var ln = /* @__PURE__ */ function(t) {
  return t[t.Word = 0] = "Word", t[t.Space = 1] = "Space", t[t.Other = 2] = "Other", t;
}(ln || (ln = {}));
const l6 = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let qp;
try {
  qp = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function c6(t) {
  if (qp)
    return qp.test(t);
  for (let e = 0; e < t.length; e++) {
    let n = t[e];
    if (/\w/.test(n) || n > "" && (n.toUpperCase() != n.toLowerCase() || l6.test(n)))
      return !0;
  }
  return !1;
}
function u6(t) {
  return (e) => {
    if (!/\S/.test(e))
      return ln.Space;
    if (c6(e))
      return ln.Word;
    for (let n = 0; n < t.length; n++)
      if (e.indexOf(t[n]) > -1)
        return ln.Word;
    return ln.Other;
  };
}
class ft {
  constructor(e, n, r, s, i, a) {
    this.config = e, this.doc = n, this.selection = r, this.values = s, this.status = e.statusTemplate.slice(), this.computeSlot = i, a && (a._state = this);
    for (let o = 0; o < this.config.dynamicSlots.length; o++)
      ko(this, o << 1);
    this.computeSlot = null;
  }
  field(e, n = !0) {
    let r = this.config.address[e.id];
    if (r == null) {
      if (n)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return ko(this, r), Rc(this, r);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return wC(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let n = this.config, { base: r, compartments: s } = n;
    for (let o of e.effects)
      o.is(al.reconfigure) ? (n && (s = /* @__PURE__ */ new Map(), n.compartments.forEach((l, u) => s.set(u, l)), n = null), s.set(o.value.compartment, o.value.extension)) : o.is(Ze.reconfigure) ? (n = null, r = o.value) : o.is(Ze.appendConfig) && (n = null, r = ha(r).concat(o.value));
    let i;
    n ? i = e.startState.values.slice() : (n = _c.resolve(r, s, this), i = new ft(n, this.doc, this.selection, n.dynamicSlots.map(() => null), (l, u) => u.reconfigure(l, this), null).values);
    let a = e.startState.facet(Wp) ? e.newSelection : e.newSelection.asSingle();
    new ft(n, e.newDoc, a, i, (o, l) => l.update(o, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((n) => ({
      changes: { from: n.from, to: n.to, insert: e },
      range: ne.cursor(n.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let n = this.selection, r = e(n.ranges[0]), s = this.changes(r.changes), i = [r.range], a = ha(r.effects);
    for (let o = 1; o < n.ranges.length; o++) {
      let l = e(n.ranges[o]), u = this.changes(l.changes), h = u.map(s);
      for (let m = 0; m < o; m++)
        i[m] = i[m].map(h);
      let f = s.mapDesc(u, !0);
      i.push(l.range.map(f)), s = s.compose(h), a = Ze.mapEffects(a, h).concat(Ze.mapEffects(ha(l.effects), f));
    }
    return {
      changes: s,
      selection: ne.create(i, n.mainIndex),
      effects: a
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof pn ? e : pn.of(e, this.doc.length, this.facet(ft.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return ht.of(e.split(this.facet(ft.lineSeparator) || Lp));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, n = this.doc.length) {
    return this.doc.sliceString(e, n, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let n = this.config.address[e.id];
    return n == null ? e.default : (ko(this, n), Rc(this, n));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let n = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let r in e) {
        let s = e[r];
        s instanceof Vt && this.config.address[s.id] != null && (n[r] = s.spec.toJSON(this.field(e[r]), this));
      }
    return n;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, n = {}, r) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let s = [];
    if (r) {
      for (let i in r)
        if (Object.prototype.hasOwnProperty.call(e, i)) {
          let a = r[i], o = e[i];
          s.push(a.init((l) => a.spec.fromJSON(o, l)));
        }
    }
    return ft.create({
      doc: e.doc,
      selection: ne.fromJSON(e.selection),
      extensions: n.extensions ? s.concat([n.extensions]) : s
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let n = _c.resolve(e.extensions || [], /* @__PURE__ */ new Map()), r = e.doc instanceof ht ? e.doc : ht.of((e.doc || "").split(n.staticFacet(ft.lineSeparator) || Lp)), s = e.selection ? e.selection instanceof ne ? e.selection : ne.single(e.selection.anchor, e.selection.head) : ne.single(0);
    return fC(s, r.length), n.staticFacet(Wp) || (s = s.asSingle()), new ft(n, r, s, n.dynamicSlots.map(() => null), (i, a) => a.create(i), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(ft.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(ft.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(vC);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...n) {
    for (let r of this.facet(ft.phrases))
      if (Object.prototype.hasOwnProperty.call(r, e)) {
        e = r[e];
        break;
      }
    return n.length && (e = e.replace(/\$(\$|\d*)/g, (r, s) => {
      if (s == "$")
        return "$";
      let i = +(s || 1);
      return !i || i > n.length ? r : n[i - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, n, r = -1) {
    let s = [];
    for (let i of this.facet(mC))
      for (let a of i(this, n, r))
        Object.prototype.hasOwnProperty.call(a, e) && s.push(a[e]);
    return s;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return u6(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: n, from: r, length: s } = this.doc.lineAt(e), i = this.charCategorizer(e), a = e - r, o = e - r;
    for (; a > 0; ) {
      let l = kn(n, a, !1);
      if (i(n.slice(l, a)) != ln.Word)
        break;
      a = l;
    }
    for (; o < s; ) {
      let l = kn(n, o);
      if (i(n.slice(o, l)) != ln.Word)
        break;
      o = l;
    }
    return a == o ? null : ne.range(a + r, o + r);
  }
}
ft.allowMultipleSelections = Wp;
ft.tabSize = /* @__PURE__ */ Ae.define({
  combine: (t) => t.length ? t[0] : 4
});
ft.lineSeparator = gC;
ft.readOnly = vC;
ft.phrases = /* @__PURE__ */ Ae.define({
  compare(t, e) {
    let n = Object.keys(t), r = Object.keys(e);
    return n.length == r.length && n.every((s) => t[s] == e[s]);
  }
});
ft.languageData = mC;
ft.changeFilter = bC;
ft.transactionFilter = yC;
ft.transactionExtender = OC;
al.reconfigure = /* @__PURE__ */ Ze.define();
function Xs(t, e, n = {}) {
  let r = {};
  for (let s of t)
    for (let i of Object.keys(s)) {
      let a = s[i], o = r[i];
      if (o === void 0)
        r[i] = a;
      else if (!(o === a || a === void 0)) if (Object.hasOwnProperty.call(n, i))
        r[i] = n[i](o, a);
      else
        throw new Error("Config merge conflict for field " + i);
    }
  for (let s in e)
    r[s] === void 0 && (r[s] = e[s]);
  return r;
}
class Li {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, n = e) {
    return Gp.create(e, n, this);
  }
}
Li.prototype.startSide = Li.prototype.endSide = 0;
Li.prototype.point = !1;
Li.prototype.mapMode = an.TrackDel;
let Gp = class kC {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.value = r;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new kC(e, n, r);
  }
};
function zp(t, e) {
  return t.from - e.from || t.value.startSide - e.value.startSide;
}
class Jd {
  constructor(e, n, r, s) {
    this.from = e, this.to = n, this.value = r, this.maxPoint = s;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, n, r, s = 0) {
    let i = r ? this.to : this.from;
    for (let a = s, o = i.length; ; ) {
      if (a == o)
        return a;
      let l = a + o >> 1, u = i[l] - e || (r ? this.value[l].endSide : this.value[l].startSide) - n;
      if (l == a)
        return u >= 0 ? a : o;
      u >= 0 ? o = l : a = l + 1;
    }
  }
  between(e, n, r, s) {
    for (let i = this.findIndex(n, -1e9, !0), a = this.findIndex(r, 1e9, !1, i); i < a; i++)
      if (s(this.from[i] + e, this.to[i] + e, this.value[i]) === !1)
        return !1;
  }
  map(e, n) {
    let r = [], s = [], i = [], a = -1, o = -1;
    for (let l = 0; l < this.value.length; l++) {
      let u = this.value[l], h = this.from[l] + e, f = this.to[l] + e, m, b;
      if (h == f) {
        let v = n.mapPos(h, u.startSide, u.mapMode);
        if (v == null || (m = b = v, u.startSide != u.endSide && (b = n.mapPos(h, u.endSide), b < m)))
          continue;
      } else if (m = n.mapPos(h, u.startSide), b = n.mapPos(f, u.endSide), m > b || m == b && u.startSide > 0 && u.endSide <= 0)
        continue;
      (b - m || u.endSide - u.startSide) < 0 || (a < 0 && (a = m), u.point && (o = Math.max(o, b - m)), r.push(u), s.push(m - a), i.push(b - a));
    }
    return { mapped: r.length ? new Jd(s, i, r, o) : null, pos: a };
  }
}
class mt {
  constructor(e, n, r, s) {
    this.chunkPos = e, this.chunk = n, this.nextLayer = r, this.maxPoint = s;
  }
  /**
  @internal
  */
  static create(e, n, r, s) {
    return new mt(e, n, r, s);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let n of this.chunk)
      e += n.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: n = [], sort: r = !1, filterFrom: s = 0, filterTo: i = this.length } = e, a = e.filter;
    if (n.length == 0 && !a)
      return this;
    if (r && (n = n.slice().sort(zp)), this.isEmpty)
      return n.length ? mt.of(n) : this;
    let o = new CC(this, null, -1).goto(0), l = 0, u = [], h = new vs();
    for (; o.value || l < n.length; )
      if (l < n.length && (o.from - n[l].from || o.startSide - n[l].value.startSide) >= 0) {
        let f = n[l++];
        h.addInner(f.from, f.to, f.value) || u.push(f);
      } else o.rangeIndex == 1 && o.chunkIndex < this.chunk.length && (l == n.length || this.chunkEnd(o.chunkIndex) < n[l].from) && (!a || s > this.chunkEnd(o.chunkIndex) || i < this.chunkPos[o.chunkIndex]) && h.addChunk(this.chunkPos[o.chunkIndex], this.chunk[o.chunkIndex]) ? o.nextChunk() : ((!a || s > o.to || i < o.from || a(o.from, o.to, o.value)) && (h.addInner(o.from, o.to, o.value) || u.push(Gp.create(o.from, o.to, o.value))), o.next());
    return h.finishInner(this.nextLayer.isEmpty && !u.length ? mt.empty : this.nextLayer.update({ add: u, filter: a, filterFrom: s, filterTo: i }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let n = [], r = [], s = -1;
    for (let a = 0; a < this.chunk.length; a++) {
      let o = this.chunkPos[a], l = this.chunk[a], u = e.touchesRange(o, o + l.length);
      if (u === !1)
        s = Math.max(s, l.maxPoint), n.push(l), r.push(e.mapPos(o));
      else if (u === !0) {
        let { mapped: h, pos: f } = l.map(o, e);
        h && (s = Math.max(s, h.maxPoint), n.push(h), r.push(f));
      }
    }
    let i = this.nextLayer.map(e);
    return n.length == 0 ? i : new mt(r, n, i || mt.empty, s);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, n, r) {
    if (!this.isEmpty) {
      for (let s = 0; s < this.chunk.length; s++) {
        let i = this.chunkPos[s], a = this.chunk[s];
        if (n >= i && e <= i + a.length && a.between(i, e - i, n - i, r) === !1)
          return;
      }
      this.nextLayer.between(e, n, r);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return jo.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, n = 0) {
    return jo.from(e).goto(n);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, n, r, s, i = -1) {
    let a = e.filter((f) => f.maxPoint > 0 || !f.isEmpty && f.maxPoint >= i), o = n.filter((f) => f.maxPoint > 0 || !f.isEmpty && f.maxPoint >= i), l = Ng(a, o, r), u = new io(a, l, i), h = new io(o, l, i);
    r.iterGaps((f, m, b) => Vg(u, f, h, m, b, s)), r.empty && r.length == 0 && Vg(u, 0, h, 0, 0, s);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, n, r = 0, s) {
    s == null && (s = 999999999);
    let i = e.filter((h) => !h.isEmpty && n.indexOf(h) < 0), a = n.filter((h) => !h.isEmpty && e.indexOf(h) < 0);
    if (i.length != a.length)
      return !1;
    if (!i.length)
      return !0;
    let o = Ng(i, a), l = new io(i, o, 0).goto(r), u = new io(a, o, 0).goto(r);
    for (; ; ) {
      if (l.to != u.to || !Yp(l.active, u.active) || l.point && (!u.point || !l.point.eq(u.point)))
        return !1;
      if (l.to > s)
        return !0;
      l.next(), u.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, n, r, s, i = -1) {
    let a = new io(e, null, i).goto(n), o = n, l = a.openStart;
    for (; ; ) {
      let u = Math.min(a.to, r);
      if (a.point) {
        let h = a.activeForPoint(a.to), f = a.pointFrom < n ? h.length + 1 : a.point.startSide < 0 ? h.length : Math.min(h.length, l);
        s.point(o, u, a.point, h, f, a.pointRank), l = Math.min(a.openEnd(u), h.length);
      } else u > o && (s.span(o, u, a.active, l), l = a.openEnd(u));
      if (a.to > r)
        return l + (a.point && a.to > r ? 1 : 0);
      o = a.to, a.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, n = !1) {
    let r = new vs();
    for (let s of e instanceof Gp ? [e] : n ? h6(e) : e)
      r.add(s.from, s.to, s.value);
    return r.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return mt.empty;
    let n = e[e.length - 1];
    for (let r = e.length - 2; r >= 0; r--)
      for (let s = e[r]; s != mt.empty; s = s.nextLayer)
        n = new mt(s.chunkPos, s.chunk, n, Math.max(s.maxPoint, n.maxPoint));
    return n;
  }
}
mt.empty = /* @__PURE__ */ new mt([], [], null, -1);
function h6(t) {
  if (t.length > 1)
    for (let e = t[0], n = 1; n < t.length; n++) {
      let r = t[n];
      if (zp(e, r) > 0)
        return t.slice().sort(zp);
      e = r;
    }
  return t;
}
mt.empty.nextLayer = mt.empty;
class vs {
  finishChunk(e) {
    this.chunks.push(new Jd(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, n, r) {
    this.addInner(e, n, r) || (this.nextLayer || (this.nextLayer = new vs())).add(e, n, r);
  }
  /**
  @internal
  */
  addInner(e, n, r) {
    let s = e - this.lastTo || r.startSide - this.last.endSide;
    if (s <= 0 && (e - this.lastFrom || r.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return s < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(n - this.chunkStart), this.last = r, this.lastFrom = e, this.lastTo = n, this.value.push(r), r.point && (this.maxPoint = Math.max(this.maxPoint, n - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, n) {
    if ((e - this.lastTo || n.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, n.maxPoint), this.chunks.push(n), this.chunkPos.push(e);
    let r = n.value.length - 1;
    return this.last = n.value[r], this.lastFrom = n.from[r] + e, this.lastTo = n.to[r] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(mt.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let n = mt.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, n;
  }
}
function Ng(t, e, n) {
  let r = /* @__PURE__ */ new Map();
  for (let i of t)
    for (let a = 0; a < i.chunk.length; a++)
      i.chunk[a].maxPoint <= 0 && r.set(i.chunk[a], i.chunkPos[a]);
  let s = /* @__PURE__ */ new Set();
  for (let i of e)
    for (let a = 0; a < i.chunk.length; a++) {
      let o = r.get(i.chunk[a]);
      o != null && (n ? n.mapPos(o) : o) == i.chunkPos[a] && !n?.touchesRange(o, o + i.chunk[a].length) && s.add(i.chunk[a]);
    }
  return s;
}
class CC {
  constructor(e, n, r, s = 0) {
    this.layer = e, this.skip = n, this.minPoint = r, this.rank = s;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, n = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, n, !1), this;
  }
  gotoInner(e, n, r) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let s = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(s) || this.layer.chunkEnd(this.chunkIndex) < e || s.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, r = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let s = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], n, !0);
      (!r || this.rangeIndex < s) && this.setRangeIndex(s);
    }
    this.next();
  }
  forward(e, n) {
    (this.to - e || this.endSide - n) < 0 && this.gotoInner(e, n, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], n = this.layer.chunk[this.chunkIndex], r = e + n.from[this.rangeIndex];
        if (this.from = r, this.to = e + n.to[this.rangeIndex], this.value = n.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class jo {
  constructor(e) {
    this.heap = e;
  }
  static from(e, n = null, r = -1) {
    let s = [];
    for (let i = 0; i < e.length; i++)
      for (let a = e[i]; !a.isEmpty; a = a.nextLayer)
        a.maxPoint >= r && s.push(new CC(a, n, r, i));
    return s.length == 1 ? s[0] : new jo(s);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, n = -1e9) {
    for (let r of this.heap)
      r.goto(e, n);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      qh(this.heap, r);
    return this.next(), this;
  }
  forward(e, n) {
    for (let r of this.heap)
      r.forward(e, n);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      qh(this.heap, r);
    (this.to - e || this.value.endSide - n) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), qh(this.heap, 0);
    }
  }
}
function qh(t, e) {
  for (let n = t[e]; ; ) {
    let r = (e << 1) + 1;
    if (r >= t.length)
      break;
    let s = t[r];
    if (r + 1 < t.length && s.compare(t[r + 1]) >= 0 && (s = t[r + 1], r++), n.compare(s) < 0)
      break;
    t[r] = n, t[e] = s, e = r;
  }
}
class io {
  constructor(e, n, r) {
    this.minPoint = r, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = jo.from(e, n, r);
  }
  goto(e, n = -1e9) {
    return this.cursor.goto(e, n), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = n, this.openStart = -1, this.next(), this;
  }
  forward(e, n) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - n) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, n);
  }
  removeActive(e) {
    Nl(this.active, e), Nl(this.activeTo, e), Nl(this.activeRank, e), this.minActive = Xg(this.active, this.activeTo);
  }
  addActive(e) {
    let n = 0, { value: r, to: s, rank: i } = this.cursor;
    for (; n < this.activeRank.length && (i - this.activeRank[n] || s - this.activeTo[n]) > 0; )
      n++;
    Vl(this.active, n, r), Vl(this.activeTo, n, s), Vl(this.activeRank, n, i), e && Vl(e, n, this.cursor.from), this.minActive = Xg(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, n = this.point;
    this.point = null;
    let r = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let s = this.minActive;
      if (s > -1 && (this.activeTo[s] - this.cursor.from || this.active[s].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[s] > e) {
          this.to = this.activeTo[s], this.endSide = this.active[s].endSide;
          break;
        }
        this.removeActive(s), r && Nl(r, s);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let i = this.cursor.value;
          if (!i.point)
            this.addActive(r), this.cursor.next();
          else if (n && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = i, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = i.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (r) {
      this.openStart = 0;
      for (let s = r.length - 1; s >= 0 && r[s] < e; s--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let n = [];
    for (let r = this.active.length - 1; r >= 0 && !(this.activeRank[r] < this.pointRank); r--)
      (this.activeTo[r] > e || this.activeTo[r] == e && this.active[r].endSide >= this.point.endSide) && n.push(this.active[r]);
    return n.reverse();
  }
  openEnd(e) {
    let n = 0;
    for (let r = this.activeTo.length - 1; r >= 0 && this.activeTo[r] > e; r--)
      n++;
    return n;
  }
}
function Vg(t, e, n, r, s, i) {
  t.goto(e), n.goto(r);
  let a = r + s, o = r, l = r - e;
  for (; ; ) {
    let u = t.to + l - n.to, h = u || t.endSide - n.endSide, f = h < 0 ? t.to + l : n.to, m = Math.min(f, a);
    if (t.point || n.point ? t.point && n.point && (t.point == n.point || t.point.eq(n.point)) && Yp(t.activeForPoint(t.to), n.activeForPoint(n.to)) || i.comparePoint(o, m, t.point, n.point) : m > o && !Yp(t.active, n.active) && i.compareRange(o, m, t.active, n.active), f > a)
      break;
    (u || t.openEnd != n.openEnd) && i.boundChange && i.boundChange(f), o = f, h <= 0 && t.next(), h >= 0 && n.next();
  }
}
function Yp(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (t[n] != e[n] && !t[n].eq(e[n]))
      return !1;
  return !0;
}
function Nl(t, e) {
  for (let n = e, r = t.length - 1; n < r; n++)
    t[n] = t[n + 1];
  t.pop();
}
function Vl(t, e, n) {
  for (let r = t.length - 1; r >= e; r--)
    t[r + 1] = t[r];
  t[e] = n;
}
function Xg(t, e) {
  let n = -1, r = 1e9;
  for (let s = 0; s < e.length; s++)
    (e[s] - r || t[s].endSide - t[n].endSide) < 0 && (n = s, r = e[s]);
  return n;
}
function La(t, e, n = t.length) {
  let r = 0;
  for (let s = 0; s < n && s < t.length; )
    t.charCodeAt(s) == 9 ? (r += e - r % e, s++) : (r++, s = kn(t, s));
  return r;
}
function Hp(t, e, n, r) {
  for (let s = 0, i = 0; ; ) {
    if (i >= e)
      return s;
    if (s == t.length)
      break;
    i += t.charCodeAt(s) == 9 ? n - i % n : 1, s = kn(t, s);
  }
  return r === !0 ? -1 : t.length;
}
const Kp = "ͼ", Wg = typeof Symbol > "u" ? "__" + Kp : Symbol.for(Kp), Jp = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), Ug = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class li {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, n) {
    this.rules = [];
    let { finish: r } = n || {};
    function s(a) {
      return /^@/.test(a) ? [a] : a.split(/,\s*/);
    }
    function i(a, o, l, u) {
      let h = [], f = /^@(\w+)\b/.exec(a[0]), m = f && f[1] == "keyframes";
      if (f && o == null) return l.push(a[0] + ";");
      for (let b in o) {
        let v = o[b];
        if (/&/.test(b))
          i(
            b.split(/,\s*/).map((C) => a.map((S) => C.replace(/&/, S))).reduce((C, S) => C.concat(S)),
            v,
            l
          );
        else if (v && typeof v == "object") {
          if (!f) throw new RangeError("The value of a property (" + b + ") should be a primitive value.");
          i(s(b), v, h, m);
        } else v != null && h.push(b.replace(/_.*/, "").replace(/[A-Z]/g, (C) => "-" + C.toLowerCase()) + ": " + v + ";");
      }
      (h.length || m) && l.push((r && !f && !u ? a.map(r) : a).join(", ") + " {" + h.join(" ") + "}");
    }
    for (let a in e) i(s(a), e[a], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = Ug[Wg] || 1;
    return Ug[Wg] = e + 1, Kp + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, n, r) {
    let s = e[Jp], i = r && r.nonce;
    s ? i && s.setNonce(i) : s = new p6(e, i), s.mount(Array.isArray(n) ? n : [n], e);
  }
}
let qg = /* @__PURE__ */ new Map();
class p6 {
  constructor(e, n) {
    let r = e.ownerDocument || e, s = r.defaultView;
    if (!e.head && e.adoptedStyleSheets && s.CSSStyleSheet) {
      let i = qg.get(r);
      if (i) return e[Jp] = i;
      this.sheet = new s.CSSStyleSheet(), qg.set(r, this);
    } else
      this.styleTag = r.createElement("style"), n && this.styleTag.setAttribute("nonce", n);
    this.modules = [], e[Jp] = this;
  }
  mount(e, n) {
    let r = this.sheet, s = 0, i = 0;
    for (let a = 0; a < e.length; a++) {
      let o = e[a], l = this.modules.indexOf(o);
      if (l < i && l > -1 && (this.modules.splice(l, 1), i--, l = -1), l == -1) {
        if (this.modules.splice(i++, 0, o), r) for (let u = 0; u < o.rules.length; u++)
          r.insertRule(o.rules[u], s++);
      } else {
        for (; i < l; ) s += this.modules[i++].rules.length;
        s += o.rules.length, i++;
      }
    }
    if (r)
      n.adoptedStyleSheets.indexOf(this.sheet) < 0 && (n.adoptedStyleSheets = [this.sheet, ...n.adoptedStyleSheets]);
    else {
      let a = "";
      for (let l = 0; l < this.modules.length; l++)
        a += this.modules[l].getRules() + `
`;
      this.styleTag.textContent = a;
      let o = n.head || n;
      this.styleTag.parentNode != o && o.insertBefore(this.styleTag, o.firstChild);
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var ci = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, _o = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, f6 = typeof navigator < "u" && /Mac/.test(navigator.platform), d6 = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var wn = 0; wn < 10; wn++) ci[48 + wn] = ci[96 + wn] = String(wn);
for (var wn = 1; wn <= 24; wn++) ci[wn + 111] = "F" + wn;
for (var wn = 65; wn <= 90; wn++)
  ci[wn] = String.fromCharCode(wn + 32), _o[wn] = String.fromCharCode(wn);
for (var Gh in ci) _o.hasOwnProperty(Gh) || (_o[Gh] = ci[Gh]);
function m6(t) {
  var e = f6 && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || d6 && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? _o : ci)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
function Ro(t) {
  let e;
  return t.nodeType == 11 ? e = t.getSelection ? t : t.ownerDocument : e = t, e.getSelection();
}
function ef(t, e) {
  return e ? t == e || t.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function dc(t, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return ef(t, e.anchorNode);
  } catch {
    return !1;
  }
}
function Zo(t) {
  return t.nodeType == 3 ? Ni(t, 0, t.nodeValue.length).getClientRects() : t.nodeType == 1 ? t.getClientRects() : [];
}
function Co(t, e, n, r) {
  return n ? Gg(t, e, n, r, -1) || Gg(t, e, n, r, 1) : !1;
}
function Ii(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}
function Zc(t) {
  return t.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName);
}
function Gg(t, e, n, r, s) {
  for (; ; ) {
    if (t == n && e == r)
      return !0;
    if (e == (s < 0 ? 0 : xs(t))) {
      if (t.nodeName == "DIV")
        return !1;
      let i = t.parentNode;
      if (!i || i.nodeType != 1)
        return !1;
      e = Ii(t) + (s < 0 ? 0 : 1), t = i;
    } else if (t.nodeType == 1) {
      if (t = t.childNodes[e + (s < 0 ? -1 : 0)], t.nodeType == 1 && t.contentEditable == "false")
        return !1;
      e = s < 0 ? xs(t) : 0;
    } else
      return !1;
  }
}
function xs(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function Vu(t, e) {
  let n = e ? t.left : t.right;
  return { left: n, right: n, top: t.top, bottom: t.bottom };
}
function g6(t) {
  let e = t.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: t.innerWidth,
    top: 0,
    bottom: t.innerHeight
  };
}
function SC(t, e) {
  let n = e.width / t.offsetWidth, r = e.height / t.offsetHeight;
  return (n > 0.995 && n < 1.005 || !isFinite(n) || Math.abs(e.width - t.offsetWidth) < 1) && (n = 1), (r > 0.995 && r < 1.005 || !isFinite(r) || Math.abs(e.height - t.offsetHeight) < 1) && (r = 1), { scaleX: n, scaleY: r };
}
function b6(t, e, n, r, s, i, a, o) {
  let l = t.ownerDocument, u = l.defaultView || window;
  for (let h = t, f = !1; h && !f; )
    if (h.nodeType == 1) {
      let m, b = h == l.body, v = 1, C = 1;
      if (b)
        m = g6(u);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(h).position) && (f = !0), h.scrollHeight <= h.clientHeight && h.scrollWidth <= h.clientWidth) {
          h = h.assignedSlot || h.parentNode;
          continue;
        }
        let $ = h.getBoundingClientRect();
        ({ scaleX: v, scaleY: C } = SC(h, $)), m = {
          left: $.left,
          right: $.left + h.clientWidth * v,
          top: $.top,
          bottom: $.top + h.clientHeight * C
        };
      }
      let S = 0, B = 0;
      if (s == "nearest")
        e.top < m.top ? (B = -(m.top - e.top + a), n > 0 && e.bottom > m.bottom + B && (B = e.bottom - m.bottom + B + a)) : e.bottom > m.bottom && (B = e.bottom - m.bottom + a, n < 0 && e.top - B < m.top && (B = -(m.top + B - e.top + a)));
      else {
        let $ = e.bottom - e.top, W = m.bottom - m.top;
        B = (s == "center" && $ <= W ? e.top + $ / 2 - W / 2 : s == "start" || s == "center" && n < 0 ? e.top - a : e.bottom - W + a) - m.top;
      }
      if (r == "nearest" ? e.left < m.left ? (S = -(m.left - e.left + i), n > 0 && e.right > m.right + S && (S = e.right - m.right + S + i)) : e.right > m.right && (S = e.right - m.right + i, n < 0 && e.left < m.left + S && (S = -(m.left + S - e.left + i))) : S = (r == "center" ? e.left + (e.right - e.left) / 2 - (m.right - m.left) / 2 : r == "start" == o ? e.left - i : e.right - (m.right - m.left) + i) - m.left, S || B)
        if (b)
          u.scrollBy(S, B);
        else {
          let $ = 0, W = 0;
          if (B) {
            let _ = h.scrollTop;
            h.scrollTop += B / C, W = (h.scrollTop - _) * C;
          }
          if (S) {
            let _ = h.scrollLeft;
            h.scrollLeft += S / v, $ = (h.scrollLeft - _) * v;
          }
          e = {
            left: e.left - $,
            top: e.top - W,
            right: e.right - $,
            bottom: e.bottom - W
          }, $ && Math.abs($ - S) < 1 && (r = "nearest"), W && Math.abs(W - B) < 1 && (s = "nearest");
        }
      if (b)
        break;
      h = h.assignedSlot || h.parentNode;
    } else if (h.nodeType == 11)
      h = h.host;
    else
      break;
}
function y6(t) {
  let e = t.ownerDocument, n, r;
  for (let s = t.parentNode; s && !(s == e.body || n && r); )
    if (s.nodeType == 1)
      !r && s.scrollHeight > s.clientHeight && (r = s), !n && s.scrollWidth > s.clientWidth && (n = s), s = s.assignedSlot || s.parentNode;
    else if (s.nodeType == 11)
      s = s.host;
    else
      break;
  return { x: n, y: r };
}
class O6 {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: n, focusNode: r } = e;
    this.set(n, Math.min(e.anchorOffset, n ? xs(n) : 0), r, Math.min(e.focusOffset, r ? xs(r) : 0));
  }
  set(e, n, r, s) {
    this.anchorNode = e, this.anchorOffset = n, this.focusNode = r, this.focusOffset = s;
  }
}
let Ji = null;
function AC(t) {
  if (t.setActive)
    return t.setActive();
  if (Ji)
    return t.focus(Ji);
  let e = [];
  for (let n = t; n && (e.push(n, n.scrollTop, n.scrollLeft), n != n.ownerDocument); n = n.parentNode)
    ;
  if (t.focus(Ji == null ? {
    get preventScroll() {
      return Ji = { preventScroll: !0 }, !0;
    }
  } : void 0), !Ji) {
    Ji = !1;
    for (let n = 0; n < e.length; ) {
      let r = e[n++], s = e[n++], i = e[n++];
      r.scrollTop != s && (r.scrollTop = s), r.scrollLeft != i && (r.scrollLeft = i);
    }
  }
}
let zg;
function Ni(t, e, n = e) {
  let r = zg || (zg = document.createRange());
  return r.setEnd(t, n), r.setStart(t, e), r;
}
function pa(t, e, n, r) {
  let s = { key: e, code: e, keyCode: n, which: n, cancelable: !0 };
  r && ({ altKey: s.altKey, ctrlKey: s.ctrlKey, shiftKey: s.shiftKey, metaKey: s.metaKey } = r);
  let i = new KeyboardEvent("keydown", s);
  i.synthetic = !0, t.dispatchEvent(i);
  let a = new KeyboardEvent("keyup", s);
  return a.synthetic = !0, t.dispatchEvent(a), i.defaultPrevented || a.defaultPrevented;
}
function v6(t) {
  for (; t; ) {
    if (t && (t.nodeType == 9 || t.nodeType == 11 && t.host))
      return t;
    t = t.assignedSlot || t.parentNode;
  }
  return null;
}
function PC(t) {
  for (; t.attributes.length; )
    t.removeAttributeNode(t.attributes[0]);
}
function x6(t, e) {
  let n = e.focusNode, r = e.focusOffset;
  if (!n || e.anchorNode != n || e.anchorOffset != r)
    return !1;
  for (r = Math.min(r, xs(n)); ; )
    if (r) {
      if (n.nodeType != 1)
        return !1;
      let s = n.childNodes[r - 1];
      s.contentEditable == "false" ? r-- : (n = s, r = xs(n));
    } else {
      if (n == t)
        return !0;
      r = Ii(n), n = n.parentNode;
    }
}
function DC(t) {
  return t.scrollTop > Math.max(1, t.scrollHeight - t.clientHeight - 4);
}
function EC(t, e) {
  for (let n = t, r = e; ; ) {
    if (n.nodeType == 3 && r > 0)
      return { node: n, offset: r };
    if (n.nodeType == 1 && r > 0) {
      if (n.contentEditable == "false")
        return null;
      n = n.childNodes[r - 1], r = xs(n);
    } else if (n.parentNode && !Zc(n))
      r = Ii(n), n = n.parentNode;
    else
      return null;
  }
}
function FC(t, e) {
  for (let n = t, r = e; ; ) {
    if (n.nodeType == 3 && r < n.nodeValue.length)
      return { node: n, offset: r };
    if (n.nodeType == 1 && r < n.childNodes.length) {
      if (n.contentEditable == "false")
        return null;
      n = n.childNodes[r], r = 0;
    } else if (n.parentNode && !Zc(n))
      r = Ii(n) + 1, n = n.parentNode;
    else
      return null;
  }
}
class Fn {
  constructor(e, n, r = !0) {
    this.node = e, this.offset = n, this.precise = r;
  }
  static before(e, n) {
    return new Fn(e.parentNode, Ii(e), n);
  }
  static after(e, n) {
    return new Fn(e.parentNode, Ii(e) + 1, n);
  }
}
const em = [];
class Dt {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let n = this.posAtStart;
    for (let r of this.children) {
      if (r == e)
        return n;
      n += r.length + r.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, n) {
    if (this.flags & 2) {
      let r = this.dom, s = null, i;
      for (let a of this.children) {
        if (a.flags & 7) {
          if (!a.dom && (i = s ? s.nextSibling : r.firstChild)) {
            let o = Dt.get(i);
            (!o || !o.parent && o.canReuseDOM(a)) && a.reuseDOM(i);
          }
          a.sync(e, n), a.flags &= -8;
        }
        if (i = s ? s.nextSibling : r.firstChild, n && !n.written && n.node == r && i != a.dom && (n.written = !0), a.dom.parentNode == r)
          for (; i && i != a.dom; )
            i = Yg(i);
        else
          r.insertBefore(a.dom, i);
        s = a.dom;
      }
      for (i = s ? s.nextSibling : r.firstChild, i && n && n.node == r && (n.written = !0); i; )
        i = Yg(i);
    } else if (this.flags & 1)
      for (let r of this.children)
        r.flags & 7 && (r.sync(e, n), r.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, n) {
    let r;
    if (e == this.dom)
      r = this.dom.childNodes[n];
    else {
      let s = xs(e) == 0 ? 0 : n == 0 ? -1 : 1;
      for (; ; ) {
        let i = e.parentNode;
        if (i == this.dom)
          break;
        s == 0 && i.firstChild != i.lastChild && (e == i.firstChild ? s = -1 : s = 1), e = i;
      }
      s < 0 ? r = e : r = e.nextSibling;
    }
    if (r == this.dom.firstChild)
      return 0;
    for (; r && !Dt.get(r); )
      r = r.nextSibling;
    if (!r)
      return this.length;
    for (let s = 0, i = 0; ; s++) {
      let a = this.children[s];
      if (a.dom == r)
        return i;
      i += a.length + a.breakAfter;
    }
  }
  domBoundsAround(e, n, r = 0) {
    let s = -1, i = -1, a = -1, o = -1;
    for (let l = 0, u = r, h = r; l < this.children.length; l++) {
      let f = this.children[l], m = u + f.length;
      if (u < e && m > n)
        return f.domBoundsAround(e, n, u);
      if (m >= e && s == -1 && (s = l, i = u), u > n && f.dom.parentNode == this.dom) {
        a = l, o = h;
        break;
      }
      h = m, u = m + f.breakAfter;
    }
    return {
      from: i,
      to: o < 0 ? r + this.length : o,
      startDOM: (s ? this.children[s - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: a < this.children.length && a >= 0 ? this.children[a].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let n = this.parent; n; n = n.parent) {
      if (e && (n.flags |= 2), n.flags & 1)
        return;
      n.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let n = e.parent;
      if (!n)
        return e;
      e = n;
    }
  }
  replaceChildren(e, n, r = em) {
    this.markDirty();
    for (let s = e; s < n; s++) {
      let i = this.children[s];
      i.parent == this && r.indexOf(i) < 0 && i.destroy();
    }
    r.length < 250 ? this.children.splice(e, n - e, ...r) : this.children = [].concat(this.children.slice(0, e), r, this.children.slice(n));
    for (let s = 0; s < r.length; s++)
      r[s].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new BC(this.children, e, this.children.length);
  }
  childPos(e, n = 1) {
    return this.childCursor().findPos(e, n);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, n, r, s, i, a) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
Dt.prototype.breakAfter = 0;
function Yg(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class BC {
  constructor(e, n, r) {
    this.children = e, this.pos = n, this.i = r, this.off = 0;
  }
  findPos(e, n = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (n > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let r = this.children[--this.i];
      this.pos -= r.length + r.breakAfter;
    }
  }
}
function MC(t, e, n, r, s, i, a, o, l) {
  let { children: u } = t, h = u.length ? u[e] : null, f = i.length ? i[i.length - 1] : null, m = f ? f.breakAfter : a;
  if (!(e == r && h && !a && !m && i.length < 2 && h.merge(n, s, i.length ? f : null, n == 0, o, l))) {
    if (r < u.length) {
      let b = u[r];
      b && (s < b.length || b.breakAfter && f?.breakAfter) ? (e == r && (b = b.split(s), s = 0), !m && f && b.merge(0, s, f, !0, 0, l) ? i[i.length - 1] = b : ((s || b.children.length && !b.children[0].length) && b.merge(0, s, null, !1, 0, l), i.push(b))) : b?.breakAfter && (f ? f.breakAfter = 1 : a = 1), r++;
    }
    for (h && (h.breakAfter = a, n > 0 && (!a && i.length && h.merge(n, h.length, i[0], !1, o, 0) ? h.breakAfter = i.shift().breakAfter : (n < h.length || h.children.length && h.children[h.children.length - 1].length == 0) && h.merge(n, h.length, null, !1, o, 0), e++)); e < r && i.length; )
      if (u[r - 1].become(i[i.length - 1]))
        r--, i.pop(), l = i.length ? 0 : o;
      else if (u[e].become(i[0]))
        e++, i.shift(), o = i.length ? 0 : l;
      else
        break;
    !i.length && e && r < u.length && !u[e - 1].breakAfter && u[r].merge(0, 0, u[e - 1], !1, o, l) && e--, (e < r || i.length) && t.replaceChildren(e, r, i);
  }
}
function TC(t, e, n, r, s, i) {
  let a = t.childCursor(), { i: o, off: l } = a.findPos(n, 1), { i: u, off: h } = a.findPos(e, -1), f = e - n;
  for (let m of r)
    f += m.length;
  t.length += f, MC(t, u, h, o, l, r, 0, s, i);
}
let nr = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, tf = typeof document < "u" ? document : { documentElement: { style: {} } };
const nf = /* @__PURE__ */ /Edge\/(\d+)/.exec(nr.userAgent), QC = /* @__PURE__ */ /MSIE \d/.test(nr.userAgent), rf = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(nr.userAgent), Xu = !!(QC || rf || nf), Hg = !Xu && /* @__PURE__ */ /gecko\/(\d+)/i.test(nr.userAgent), zh = !Xu && /* @__PURE__ */ /Chrome\/(\d+)/.exec(nr.userAgent), Kg = "webkitFontSmoothing" in tf.documentElement.style, jC = !Xu && /* @__PURE__ */ /Apple Computer/.test(nr.vendor), Jg = jC && (/* @__PURE__ */ /Mobile\/\w+/.test(nr.userAgent) || nr.maxTouchPoints > 2);
var we = {
  mac: Jg || /* @__PURE__ */ /Mac/.test(nr.platform),
  windows: /* @__PURE__ */ /Win/.test(nr.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(nr.platform),
  ie: Xu,
  ie_version: QC ? tf.documentMode || 6 : rf ? +rf[1] : nf ? +nf[1] : 0,
  gecko: Hg,
  gecko_version: Hg ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(nr.userAgent) || [0, 0])[1] : 0,
  chrome: !!zh,
  chrome_version: zh ? +zh[1] : 0,
  ios: Jg,
  android: /* @__PURE__ */ /Android\b/.test(nr.userAgent),
  webkit: Kg,
  safari: jC,
  webkit_version: Kg ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(nr.userAgent) || [0, 0])[1] : 0,
  tabSize: tf.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const w6 = 256;
class es extends Dt {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, n) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (n && n.node == this.dom && (n.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, n, r) {
    return this.flags & 8 || r && (!(r instanceof es) || this.length - (n - e) + r.length > w6 || r.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (r ? r.text : "") + this.text.slice(n), this.markDirty(), !0);
  }
  split(e) {
    let n = new es(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), n.flags |= this.flags & 8, n;
  }
  localPosFromDOM(e, n) {
    return e == this.dom ? n : n ? this.text.length : 0;
  }
  domAtPos(e) {
    return new Fn(this.dom, e);
  }
  domBoundsAround(e, n, r) {
    return { from: r, to: r + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, n) {
    return k6(this.dom, e, n);
  }
}
class Ls extends Dt {
  constructor(e, n = [], r = 0) {
    super(), this.mark = e, this.children = n, this.length = r;
    for (let s of n)
      s.setParent(this);
  }
  setAttrs(e) {
    if (PC(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let n in this.mark.attrs)
        e.setAttribute(n, this.mark.attrs[n]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, n) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, n);
  }
  merge(e, n, r, s, i, a) {
    return r && (!(r instanceof Ls && r.mark.eq(this.mark)) || e && i <= 0 || n < this.length && a <= 0) ? !1 : (TC(this, e, n, r ? r.children.slice() : [], i - 1, a - 1), this.markDirty(), !0);
  }
  split(e) {
    let n = [], r = 0, s = -1, i = 0;
    for (let o of this.children) {
      let l = r + o.length;
      l > e && n.push(r < e ? o.split(e - r) : o), s < 0 && r >= e && (s = i), r = l, i++;
    }
    let a = this.length - e;
    return this.length = e, s > -1 && (this.children.length = s, this.markDirty()), new Ls(this.mark, n, a);
  }
  domAtPos(e) {
    return _C(this, e);
  }
  coordsAt(e, n) {
    return ZC(this, e, n);
  }
}
function k6(t, e, n) {
  let r = t.nodeValue.length;
  e > r && (e = r);
  let s = e, i = e, a = 0;
  e == 0 && n < 0 || e == r && n >= 0 ? we.chrome || we.gecko || (e ? (s--, a = 1) : i < r && (i++, a = -1)) : n < 0 ? s-- : i < r && i++;
  let o = Ni(t, s, i).getClientRects();
  if (!o.length)
    return null;
  let l = o[(a ? a < 0 : n >= 0) ? 0 : o.length - 1];
  return we.safari && !a && l.width == 0 && (l = Array.prototype.find.call(o, (u) => u.width) || l), a ? Vu(l, a < 0) : l || null;
}
class ri extends Dt {
  static create(e, n, r) {
    return new ri(e, n, r);
  }
  constructor(e, n, r) {
    super(), this.widget = e, this.length = n, this.side = r, this.prevWidget = null;
  }
  split(e) {
    let n = ri.create(this.widget, this.length - e, this.side);
    return this.length -= e, n;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, n, r, s, i, a) {
    return r && (!(r instanceof ri) || !this.widget.compare(r.widget) || e > 0 && i <= 0 || n < this.length && a <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);
  }
  become(e) {
    return e instanceof ri && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return ht.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: n } = e, r = n && n.state.doc, s = this.posAtStart;
    return r ? r.slice(s, s + this.length) : ht.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? Fn.before(this.dom) : Fn.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, n) {
    let r = this.widget.coordsAt(this.dom, e, n);
    if (r)
      return r;
    let s = this.dom.getClientRects(), i = null;
    if (!s.length)
      return null;
    let a = this.side ? this.side < 0 : e > 0;
    for (let o = a ? s.length - 1 : 0; i = s[o], !(e > 0 ? o == 0 : o == s.length - 1 || i.top < i.bottom); o += a ? -1 : 1)
      ;
    return Vu(i, !a);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class Ca extends Dt {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof Ca && e.side == this.side;
  }
  split() {
    return new Ca(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? Fn.before(this.dom) : Fn.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return ht.empty;
  }
  get isHidden() {
    return !0;
  }
}
es.prototype.children = ri.prototype.children = Ca.prototype.children = em;
function _C(t, e) {
  let n = t.dom, { children: r } = t, s = 0;
  for (let i = 0; s < r.length; s++) {
    let a = r[s], o = i + a.length;
    if (!(o == i && a.getSide() <= 0)) {
      if (e > i && e < o && a.dom.parentNode == n)
        return a.domAtPos(e - i);
      if (e <= i)
        break;
      i = o;
    }
  }
  for (let i = s; i > 0; i--) {
    let a = r[i - 1];
    if (a.dom.parentNode == n)
      return a.domAtPos(a.length);
  }
  for (let i = s; i < r.length; i++) {
    let a = r[i];
    if (a.dom.parentNode == n)
      return a.domAtPos(0);
  }
  return new Fn(n, 0);
}
function RC(t, e, n) {
  let r, { children: s } = t;
  n > 0 && e instanceof Ls && s.length && (r = s[s.length - 1]) instanceof Ls && r.mark.eq(e.mark) ? RC(r, e.children[0], n - 1) : (s.push(e), e.setParent(t)), t.length += e.length;
}
function ZC(t, e, n) {
  let r = null, s = -1, i = null, a = -1;
  function o(u, h) {
    for (let f = 0, m = 0; f < u.children.length && m <= h; f++) {
      let b = u.children[f], v = m + b.length;
      v >= h && (b.children.length ? o(b, h - m) : (!i || i.isHidden && n > 0) && (v > h || m == v && b.getSide() > 0) ? (i = b, a = h - m) : (m < h || m == v && b.getSide() < 0 && !b.isHidden) && (r = b, s = h - m)), m = v;
    }
  }
  o(t, e);
  let l = (n < 0 ? r : i) || r || i;
  return l ? l.coordsAt(Math.max(0, l == r ? s : a), n) : C6(t);
}
function C6(t) {
  let e = t.dom.lastChild;
  if (!e)
    return t.dom.getBoundingClientRect();
  let n = Zo(e);
  return n[n.length - 1] || null;
}
function sf(t, e) {
  for (let n in t)
    n == "class" && e.class ? e.class += " " + t.class : n == "style" && e.style ? e.style += ";" + t.style : e[n] = t[n];
  return e;
}
const e0 = /* @__PURE__ */ Object.create(null);
function $c(t, e, n) {
  if (t == e)
    return !0;
  t || (t = e0), e || (e = e0);
  let r = Object.keys(t), s = Object.keys(e);
  if (r.length - (n && r.indexOf(n) > -1 ? 1 : 0) != s.length - (n && s.indexOf(n) > -1 ? 1 : 0))
    return !1;
  for (let i of r)
    if (i != n && (s.indexOf(i) == -1 || t[i] !== e[i]))
      return !1;
  return !0;
}
function af(t, e, n) {
  let r = !1;
  if (e)
    for (let s in e)
      n && s in n || (r = !0, s == "style" ? t.style.cssText = "" : t.removeAttribute(s));
  if (n)
    for (let s in n)
      e && e[s] == n[s] || (r = !0, s == "style" ? t.style.cssText = n[s] : t.setAttribute(s, n[s]));
  return r;
}
function S6(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n = 0; n < t.attributes.length; n++) {
    let r = t.attributes[n];
    e[r.name] = r.value;
  }
  return e;
}
class ns {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, n) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, n, r) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var In = /* @__PURE__ */ function(t) {
  return t[t.Text = 0] = "Text", t[t.WidgetBefore = 1] = "WidgetBefore", t[t.WidgetAfter = 2] = "WidgetAfter", t[t.WidgetRange = 3] = "WidgetRange", t;
}(In || (In = {}));
class Be extends Li {
  constructor(e, n, r, s) {
    super(), this.startSide = e, this.endSide = n, this.widget = r, this.spec = s;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new ol(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let n = Math.max(-1e4, Math.min(1e4, e.side || 0)), r = !!e.block;
    return n += r && !e.inlineOrder ? n > 0 ? 3e8 : -4e8 : n > 0 ? 1e8 : -1e8, new ui(e, n, n, r, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let n = !!e.block, r, s;
    if (e.isBlockGap)
      r = -5e8, s = 4e8;
    else {
      let { start: i, end: a } = $C(e, n);
      r = (i ? n ? -3e8 : -1 : 5e8) - 1, s = (a ? n ? 2e8 : 1 : -6e8) + 1;
    }
    return new ui(e, r, s, n, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new ll(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, n = !1) {
    return mt.of(e, n);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
Be.none = mt.empty;
class ol extends Be {
  constructor(e) {
    let { start: n, end: r } = $C(e);
    super(n ? -1 : 5e8, r ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var n, r;
    return this == e || e instanceof ol && this.tagName == e.tagName && (this.class || ((n = this.attrs) === null || n === void 0 ? void 0 : n.class)) == (e.class || ((r = e.attrs) === null || r === void 0 ? void 0 : r.class)) && $c(this.attrs, e.attrs, "class");
  }
  range(e, n = e) {
    if (e >= n)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, n);
  }
}
ol.prototype.point = !1;
class ll extends Be {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof ll && this.spec.class == e.spec.class && $c(this.spec.attributes, e.spec.attributes);
  }
  range(e, n = e) {
    if (n != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, n);
  }
}
ll.prototype.mapMode = an.TrackBefore;
ll.prototype.point = !0;
class ui extends Be {
  constructor(e, n, r, s, i, a) {
    super(n, r, i, e), this.block = s, this.isReplace = a, this.mapMode = s ? n <= 0 ? an.TrackBefore : an.TrackAfter : an.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? In.WidgetRange : this.startSide <= 0 ? In.WidgetBefore : In.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof ui && A6(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, n = e) {
    if (this.isReplace && (e > n || e == n && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && n != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, n);
  }
}
ui.prototype.point = !0;
function $C(t, e = !1) {
  let { inclusiveStart: n, inclusiveEnd: r } = t;
  return n == null && (n = t.inclusive), r == null && (r = t.inclusive), { start: n ?? e, end: r ?? e };
}
function A6(t, e) {
  return t == e || !!(t && e && t.compare(e));
}
function mc(t, e, n, r = 0) {
  let s = n.length - 1;
  s >= 0 && n[s] + r >= t ? n[s] = Math.max(n[s], e) : n.push(t, e);
}
class sn extends Dt {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, n, r, s, i, a) {
    if (r) {
      if (!(r instanceof sn))
        return !1;
      this.dom || r.transferDOM(this);
    }
    return s && this.setDeco(r ? r.attrs : null), TC(this, e, n, r ? r.children.slice() : [], i, a), !0;
  }
  split(e) {
    let n = new sn();
    if (n.breakAfter = this.breakAfter, this.length == 0)
      return n;
    let { i: r, off: s } = this.childPos(e);
    s && (n.append(this.children[r].split(s), 0), this.children[r].merge(s, this.children[r].length, null, !1, 0, 0), r++);
    for (let i = r; i < this.children.length; i++)
      n.append(this.children[i], 0);
    for (; r > 0 && this.children[r - 1].length == 0; )
      this.children[--r].destroy();
    return this.children.length = r, this.markDirty(), this.length = e, n;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    $c(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, n) {
    RC(this, e, n);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let n = e.spec.attributes, r = e.spec.class;
    n && (this.attrs = sf(n, this.attrs || {})), r && (this.attrs = sf({ class: r }, this.attrs || {}));
  }
  domAtPos(e) {
    return _C(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, n) {
    var r;
    this.dom ? this.flags & 4 && (PC(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (af(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, n);
    let s = this.dom.lastChild;
    for (; s && Dt.get(s) instanceof Ls; )
      s = s.lastChild;
    if (!s || !this.length || s.nodeName != "BR" && ((r = Dt.get(s)) === null || r === void 0 ? void 0 : r.isEditable) == !1 && (!we.ios || !this.children.some((i) => i instanceof es))) {
      let i = document.createElement("BR");
      i.cmIgnore = !0, this.dom.appendChild(i);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, n;
    for (let r of this.children) {
      if (!(r instanceof es) || /[^ -~]/.test(r.text))
        return null;
      let s = Zo(r.dom);
      if (s.length != 1)
        return null;
      e += s[0].width, n = s[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: n
    } : null;
  }
  coordsAt(e, n) {
    let r = ZC(this, e, n);
    if (!this.children.length && r && this.parent) {
      let { heightOracle: s } = this.parent.view.viewState, i = r.bottom - r.top;
      if (Math.abs(i - s.lineHeight) < 2 && s.textHeight < i) {
        let a = (i - s.textHeight) / 2;
        return { top: r.top + a, bottom: r.bottom - a, left: r.left, right: r.left };
      }
    }
    return r;
  }
  become(e) {
    return e instanceof sn && this.children.length == 0 && e.children.length == 0 && $c(this.attrs, e.attrs) && this.breakAfter == e.breakAfter;
  }
  covers() {
    return !0;
  }
  static find(e, n) {
    for (let r = 0, s = 0; r < e.children.length; r++) {
      let i = e.children[r], a = s + i.length;
      if (a >= n) {
        if (i instanceof sn)
          return i;
        if (a > n)
          break;
      }
      s = a + i.breakAfter;
    }
    return null;
  }
}
class _s extends Dt {
  constructor(e, n, r) {
    super(), this.widget = e, this.length = n, this.deco = r, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, n, r, s, i, a) {
    return r && (!(r instanceof _s) || !this.widget.compare(r.widget) || e > 0 && i <= 0 || n < this.length && a <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);
  }
  domAtPos(e) {
    return e == 0 ? Fn.before(this.dom) : Fn.after(this.dom, e == this.length);
  }
  split(e) {
    let n = this.length - e;
    this.length = e;
    let r = new _s(this.widget, n, this.deco);
    return r.breakAfter = this.breakAfter, r;
  }
  get children() {
    return em;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : ht.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof _s && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, n) {
    let r = this.widget.coordsAt(this.dom, e, n);
    return r || (this.widget instanceof of ? null : Vu(this.dom.getBoundingClientRect(), this.length ? e == 0 : n <= 0));
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: n, endSide: r } = this.deco;
    return n == r ? !1 : e < 0 ? n < 0 : r > 0;
  }
}
class of extends ns {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
class So {
  constructor(e, n, r, s) {
    this.doc = e, this.pos = n, this.end = r, this.disallowBlockEffectsFor = s, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = n;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof _s && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new sn()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(Xl(new Ca(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof _s) && this.getLine();
  }
  buildText(e, n, r) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: i, lineBreak: a, done: o } = this.cursor.next(this.skip);
        if (this.skip = 0, o)
          throw new Error("Ran out of text content when drawing inline views");
        if (a) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = i, this.textOff = 0;
      }
      let s = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(n.slice(n.length - r)), this.getLine().append(Xl(new es(this.text.slice(this.textOff, this.textOff + s)), n), r), this.atCursorPos = !0, this.textOff += s, e -= s, r = 0;
    }
  }
  span(e, n, r, s) {
    this.buildText(n - e, r, s), this.pos = n, this.openStart < 0 && (this.openStart = s);
  }
  point(e, n, r, s, i, a) {
    if (this.disallowBlockEffectsFor[a] && r instanceof ui) {
      if (r.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (n > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let o = n - e;
    if (r instanceof ui)
      if (r.block)
        r.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new _s(r.widget || Sa.block, o, r));
      else {
        let l = ri.create(r.widget || Sa.inline, o, o ? 0 : r.startSide), u = this.atCursorPos && !l.isEditable && i <= s.length && (e < n || r.startSide > 0), h = !l.isEditable && (e < n || i > s.length || r.startSide <= 0), f = this.getLine();
        this.pendingBuffer == 2 && !u && !l.isEditable && (this.pendingBuffer = 0), this.flushBuffer(s), u && (f.append(Xl(new Ca(1), s), i), i = s.length + Math.max(0, i - s.length)), f.append(Xl(l, s), i), this.atCursorPos = h, this.pendingBuffer = h ? e < n || i > s.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = s.slice());
      }
    else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(r);
    o && (this.textOff + o <= this.text.length ? this.textOff += o : (this.skip += o - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = n), this.openStart < 0 && (this.openStart = i);
  }
  static build(e, n, r, s, i) {
    let a = new So(e, n, r, i);
    return a.openEnd = mt.spans(s, n, r, a), a.openStart < 0 && (a.openStart = a.openEnd), a.finish(a.openEnd), a;
  }
}
function Xl(t, e) {
  for (let n of e)
    t = new Ls(n, [t], t.length);
  return t;
}
class Sa extends ns {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
Sa.inline = /* @__PURE__ */ new Sa("span");
Sa.block = /* @__PURE__ */ new Sa("div");
var Et = /* @__PURE__ */ function(t) {
  return t[t.LTR = 0] = "LTR", t[t.RTL = 1] = "RTL", t;
}(Et || (Et = {}));
const Vi = Et.LTR, tm = Et.RTL;
function LC(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    e.push(1 << +t[n]);
  return e;
}
const P6 = /* @__PURE__ */ LC("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), D6 = /* @__PURE__ */ LC("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), lf = /* @__PURE__ */ Object.create(null), as = [];
for (let t of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ t.charCodeAt(0), n = /* @__PURE__ */ t.charCodeAt(1);
  lf[e] = n, lf[n] = -e;
}
function IC(t) {
  return t <= 247 ? P6[t] : 1424 <= t && t <= 1524 ? 2 : 1536 <= t && t <= 1785 ? D6[t - 1536] : 1774 <= t && t <= 2220 ? 4 : 8192 <= t && t <= 8204 ? 256 : 64336 <= t && t <= 65023 ? 4 : 1;
}
const E6 = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class si {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? tm : Vi;
  }
  /**
  @internal
  */
  constructor(e, n, r) {
    this.from = e, this.to = n, this.level = r;
  }
  /**
  @internal
  */
  side(e, n) {
    return this.dir == n == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, n) {
    return e == (this.dir == n);
  }
  /**
  @internal
  */
  static find(e, n, r, s) {
    let i = -1;
    for (let a = 0; a < e.length; a++) {
      let o = e[a];
      if (o.from <= n && o.to >= n) {
        if (o.level == r)
          return a;
        (i < 0 || (s != 0 ? s < 0 ? o.from < n : o.to > n : e[i].level > o.level)) && (i = a);
      }
    }
    if (i < 0)
      throw new RangeError("Index out of range");
    return i;
  }
}
function NC(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++) {
    let r = t[n], s = e[n];
    if (r.from != s.from || r.to != s.to || r.direction != s.direction || !NC(r.inner, s.inner))
      return !1;
  }
  return !0;
}
const At = [];
function F6(t, e, n, r, s) {
  for (let i = 0; i <= r.length; i++) {
    let a = i ? r[i - 1].to : e, o = i < r.length ? r[i].from : n, l = i ? 256 : s;
    for (let u = a, h = l, f = l; u < o; u++) {
      let m = IC(t.charCodeAt(u));
      m == 512 ? m = h : m == 8 && f == 4 && (m = 16), At[u] = m == 4 ? 2 : m, m & 7 && (f = m), h = m;
    }
    for (let u = a, h = l, f = l; u < o; u++) {
      let m = At[u];
      if (m == 128)
        u < o - 1 && h == At[u + 1] && h & 24 ? m = At[u] = h : At[u] = 256;
      else if (m == 64) {
        let b = u + 1;
        for (; b < o && At[b] == 64; )
          b++;
        let v = u && h == 8 || b < n && At[b] == 8 ? f == 1 ? 1 : 8 : 256;
        for (let C = u; C < b; C++)
          At[C] = v;
        u = b - 1;
      } else m == 8 && f == 1 && (At[u] = 1);
      h = m, m & 7 && (f = m);
    }
  }
}
function B6(t, e, n, r, s) {
  let i = s == 1 ? 2 : 1;
  for (let a = 0, o = 0, l = 0; a <= r.length; a++) {
    let u = a ? r[a - 1].to : e, h = a < r.length ? r[a].from : n;
    for (let f = u, m, b, v; f < h; f++)
      if (b = lf[m = t.charCodeAt(f)])
        if (b < 0) {
          for (let C = o - 3; C >= 0; C -= 3)
            if (as[C + 1] == -b) {
              let S = as[C + 2], B = S & 2 ? s : S & 4 ? S & 1 ? i : s : 0;
              B && (At[f] = At[as[C]] = B), o = C;
              break;
            }
        } else {
          if (as.length == 189)
            break;
          as[o++] = f, as[o++] = m, as[o++] = l;
        }
      else if ((v = At[f]) == 2 || v == 1) {
        let C = v == s;
        l = C ? 0 : 1;
        for (let S = o - 3; S >= 0; S -= 3) {
          let B = as[S + 2];
          if (B & 2)
            break;
          if (C)
            as[S + 2] |= 2;
          else {
            if (B & 4)
              break;
            as[S + 2] |= 4;
          }
        }
      }
  }
}
function M6(t, e, n, r) {
  for (let s = 0, i = r; s <= n.length; s++) {
    let a = s ? n[s - 1].to : t, o = s < n.length ? n[s].from : e;
    for (let l = a; l < o; ) {
      let u = At[l];
      if (u == 256) {
        let h = l + 1;
        for (; ; )
          if (h == o) {
            if (s == n.length)
              break;
            h = n[s++].to, o = s < n.length ? n[s].from : e;
          } else if (At[h] == 256)
            h++;
          else
            break;
        let f = i == 1, m = (h < e ? At[h] : r) == 1, b = f == m ? f ? 1 : 2 : r;
        for (let v = h, C = s, S = C ? n[C - 1].to : t; v > l; )
          v == S && (v = n[--C].from, S = C ? n[C - 1].to : t), At[--v] = b;
        l = h;
      } else
        i = u, l++;
    }
  }
}
function cf(t, e, n, r, s, i, a) {
  let o = r % 2 ? 2 : 1;
  if (r % 2 == s % 2)
    for (let l = e, u = 0; l < n; ) {
      let h = !0, f = !1;
      if (u == i.length || l < i[u].from) {
        let C = At[l];
        C != o && (h = !1, f = C == 16);
      }
      let m = !h && o == 1 ? [] : null, b = h ? r : r + 1, v = l;
      e: for (; ; )
        if (u < i.length && v == i[u].from) {
          if (f)
            break e;
          let C = i[u];
          if (!h)
            for (let S = C.to, B = u + 1; ; ) {
              if (S == n)
                break e;
              if (B < i.length && i[B].from == S)
                S = i[B++].to;
              else {
                if (At[S] == o)
                  break e;
                break;
              }
            }
          if (u++, m)
            m.push(C);
          else {
            C.from > l && a.push(new si(l, C.from, b));
            let S = C.direction == Vi != !(b % 2);
            uf(t, S ? r + 1 : r, s, C.inner, C.from, C.to, a), l = C.to;
          }
          v = C.to;
        } else {
          if (v == n || (h ? At[v] != o : At[v] == o))
            break;
          v++;
        }
      m ? cf(t, l, v, r + 1, s, m, a) : l < v && a.push(new si(l, v, b)), l = v;
    }
  else
    for (let l = n, u = i.length; l > e; ) {
      let h = !0, f = !1;
      if (!u || l > i[u - 1].to) {
        let C = At[l - 1];
        C != o && (h = !1, f = C == 16);
      }
      let m = !h && o == 1 ? [] : null, b = h ? r : r + 1, v = l;
      e: for (; ; )
        if (u && v == i[u - 1].to) {
          if (f)
            break e;
          let C = i[--u];
          if (!h)
            for (let S = C.from, B = u; ; ) {
              if (S == e)
                break e;
              if (B && i[B - 1].to == S)
                S = i[--B].from;
              else {
                if (At[S - 1] == o)
                  break e;
                break;
              }
            }
          if (m)
            m.push(C);
          else {
            C.to < l && a.push(new si(C.to, l, b));
            let S = C.direction == Vi != !(b % 2);
            uf(t, S ? r + 1 : r, s, C.inner, C.from, C.to, a), l = C.from;
          }
          v = C.from;
        } else {
          if (v == e || (h ? At[v - 1] != o : At[v - 1] == o))
            break;
          v--;
        }
      m ? cf(t, v, l, r + 1, s, m, a) : v < l && a.push(new si(v, l, b)), l = v;
    }
}
function uf(t, e, n, r, s, i, a) {
  let o = e % 2 ? 2 : 1;
  F6(t, s, i, r, o), B6(t, s, i, r, o), M6(s, i, r, o), cf(t, s, i, e, n, r, a);
}
function T6(t, e, n) {
  if (!t)
    return [new si(0, 0, e == tm ? 1 : 0)];
  if (e == Vi && !n.length && !E6.test(t))
    return VC(t.length);
  if (n.length)
    for (; t.length > At.length; )
      At[At.length] = 256;
  let r = [], s = e == Vi ? 0 : 1;
  return uf(t, s, s, n, 0, t.length, r), r;
}
function VC(t) {
  return [new si(0, t, 0)];
}
let XC = "";
function Q6(t, e, n, r, s) {
  var i;
  let a = r.head - t.from, o = si.find(e, a, (i = r.bidiLevel) !== null && i !== void 0 ? i : -1, r.assoc), l = e[o], u = l.side(s, n);
  if (a == u) {
    let m = o += s ? 1 : -1;
    if (m < 0 || m >= e.length)
      return null;
    l = e[o = m], a = l.side(!s, n), u = l.side(s, n);
  }
  let h = kn(t.text, a, l.forward(s, n));
  (h < l.from || h > l.to) && (h = u), XC = t.text.slice(Math.min(a, h), Math.max(a, h));
  let f = o == (s ? e.length - 1 : 0) ? null : e[o + (s ? 1 : -1)];
  return f && h == u && f.level + (s ? 0 : 1) < l.level ? ne.cursor(f.side(!s, n) + t.from, f.forward(s, n) ? 1 : -1, f.level) : ne.cursor(h + t.from, l.forward(s, n) ? -1 : 1, l.level);
}
function j6(t, e, n) {
  for (let r = e; r < n; r++) {
    let s = IC(t.charCodeAt(r));
    if (s == 1)
      return Vi;
    if (s == 2 || s == 4)
      return tm;
  }
  return Vi;
}
const WC = /* @__PURE__ */ Ae.define(), UC = /* @__PURE__ */ Ae.define(), qC = /* @__PURE__ */ Ae.define(), GC = /* @__PURE__ */ Ae.define(), hf = /* @__PURE__ */ Ae.define(), zC = /* @__PURE__ */ Ae.define(), YC = /* @__PURE__ */ Ae.define(), nm = /* @__PURE__ */ Ae.define(), rm = /* @__PURE__ */ Ae.define(), HC = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e)
}), KC = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e)
}), JC = /* @__PURE__ */ Ae.define();
class fa {
  constructor(e, n = "nearest", r = "nearest", s = 5, i = 5, a = !1) {
    this.range = e, this.y = n, this.x = r, this.yMargin = s, this.xMargin = i, this.isSnapshot = a;
  }
  map(e) {
    return e.empty ? this : new fa(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new fa(ne.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const Wl = /* @__PURE__ */ Ze.define({ map: (t, e) => t.map(e) }), eS = /* @__PURE__ */ Ze.define();
function rr(t, e, n) {
  let r = t.facet(GC);
  r.length ? r[0](e) : window.onerror ? window.onerror(String(e), n, void 0, void 0, e) : n ? console.error(n + ":", e) : console.error(e);
}
const Ms = /* @__PURE__ */ Ae.define({ combine: (t) => t.length ? t[0] : !0 });
let _6 = 0;
const po = /* @__PURE__ */ Ae.define();
class qt {
  constructor(e, n, r, s, i) {
    this.id = e, this.create = n, this.domEventHandlers = r, this.domEventObservers = s, this.extension = i(this);
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, n) {
    const { eventHandlers: r, eventObservers: s, provide: i, decorations: a } = n || {};
    return new qt(_6++, e, r, s, (o) => {
      let l = [po.of(o)];
      return a && l.push($o.of((u) => {
        let h = u.plugin(o);
        return h ? a(h) : Be.none;
      })), i && l.push(i(o)), l;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, n) {
    return qt.define((r) => new e(r), n);
  }
}
class Yh {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let n = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(n);
          } catch (r) {
            if (rr(n.state, r, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.create(e);
      } catch (n) {
        rr(e.state, n, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var n;
    if (!((n = this.value) === null || n === void 0) && n.destroy)
      try {
        this.value.destroy();
      } catch (r) {
        rr(e.state, r, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const tS = /* @__PURE__ */ Ae.define(), sm = /* @__PURE__ */ Ae.define(), $o = /* @__PURE__ */ Ae.define(), nS = /* @__PURE__ */ Ae.define(), im = /* @__PURE__ */ Ae.define(), rS = /* @__PURE__ */ Ae.define();
function t0(t, e) {
  let n = t.state.facet(rS);
  if (!n.length)
    return n;
  let r = n.map((i) => i instanceof Function ? i(t) : i), s = [];
  return mt.spans(r, e.from, e.to, {
    point() {
    },
    span(i, a, o, l) {
      let u = i - e.from, h = a - e.from, f = s;
      for (let m = o.length - 1; m >= 0; m--, l--) {
        let b = o[m].spec.bidiIsolate, v;
        if (b == null && (b = j6(e.text, u, h)), l > 0 && f.length && (v = f[f.length - 1]).to == u && v.direction == b)
          v.to = h, f = v.inner;
        else {
          let C = { from: u, to: h, direction: b, inner: [] };
          f.push(C), f = C.inner;
        }
      }
    }
  }), s;
}
const sS = /* @__PURE__ */ Ae.define();
function am(t) {
  let e = 0, n = 0, r = 0, s = 0;
  for (let i of t.state.facet(sS)) {
    let a = i(t);
    a && (a.left != null && (e = Math.max(e, a.left)), a.right != null && (n = Math.max(n, a.right)), a.top != null && (r = Math.max(r, a.top)), a.bottom != null && (s = Math.max(s, a.bottom)));
  }
  return { left: e, right: n, top: r, bottom: s };
}
const fo = /* @__PURE__ */ Ae.define();
class Qr {
  constructor(e, n, r, s) {
    this.fromA = e, this.toA = n, this.fromB = r, this.toB = s;
  }
  join(e) {
    return new Qr(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let n = e.length, r = this;
    for (; n > 0; n--) {
      let s = e[n - 1];
      if (!(s.fromA > r.toA)) {
        if (s.toA < r.fromA)
          break;
        r = r.join(s), e.splice(n - 1, 1);
      }
    }
    return e.splice(n, 0, r), e;
  }
  static extendWithRanges(e, n) {
    if (n.length == 0)
      return e;
    let r = [];
    for (let s = 0, i = 0, a = 0, o = 0; ; s++) {
      let l = s == e.length ? null : e[s], u = a - o, h = l ? l.fromB : 1e9;
      for (; i < n.length && n[i] < h; ) {
        let f = n[i], m = n[i + 1], b = Math.max(o, f), v = Math.min(h, m);
        if (b <= v && new Qr(b + u, v + u, b, v).addToSet(r), m > h)
          break;
        i += 2;
      }
      if (!l)
        return r;
      new Qr(l.fromA, l.toA, l.fromB, l.toB).addToSet(r), a = l.toA, o = l.toB;
    }
  }
}
class Lc {
  constructor(e, n, r) {
    this.view = e, this.state = n, this.transactions = r, this.flags = 0, this.startState = e.state, this.changes = pn.empty(this.startState.doc.length);
    for (let i of r)
      this.changes = this.changes.compose(i.changes);
    let s = [];
    this.changes.iterChangedRanges((i, a, o, l) => s.push(new Qr(i, a, o, l))), this.changedRanges = s;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Lc(e, n, r);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Returns true when
  [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true
  and the viewport change is not just the result of mapping it in
  response to document changes.
  */
  get viewportMoved() {
    return (this.flags & 8) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 18) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class n0 extends Dt {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [!1], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.editContextFormatting = Be.none, this.lastCompositionAfterCursor = !1, this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new sn()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new Qr(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var n;
    let r = e.changedRanges;
    this.minWidth > 0 && r.length && (r.every(({ fromA: u, toA: h }) => h < this.minWidthFrom || u > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0), this.updateEditContextFormatting(e);
    let s = -1;
    this.view.inputState.composing >= 0 && !this.view.observer.editContext && (!((n = this.domChanged) === null || n === void 0) && n.newSel ? s = this.domChanged.newSel.head : !V6(e.changes, this.hasComposition) && !e.selectionSet && (s = e.state.selection.main.head));
    let i = s > -1 ? Z6(this.view, e.changes, s) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: u, to: h } = this.hasComposition;
      r = new Qr(u, h, e.changes.mapPos(u, -1), e.changes.mapPos(h, 1)).addToSet(r.slice());
    }
    this.hasComposition = i ? { from: i.range.fromB, to: i.range.toB } : null, (we.ie || we.chrome) && !i && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let a = this.decorations, o = this.updateDeco(), l = I6(a, o, e.changes);
    return r = Qr.extendWithRanges(r, l), !(this.flags & 7) && r.length == 0 ? !1 : (this.updateInner(r, e.startState.doc.length, i), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, n, r) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, n, r);
    let { observer: s } = this.view;
    s.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let a = we.chrome || we.ios ? { node: s.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, a), this.flags &= -8, a && (a.written || s.selectionRange.focusNode != a.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (a) => a.flags &= -9
      /* ViewFlag.Composition */
    );
    let i = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let a of this.children)
        a instanceof _s && a.widget instanceof of && i.push(a.dom);
    s.updateGaps(i);
  }
  updateChildren(e, n, r) {
    let s = r ? r.range.addToSet(e.slice()) : e, i = this.childCursor(n);
    for (let a = s.length - 1; ; a--) {
      let o = a >= 0 ? s[a] : null;
      if (!o)
        break;
      let { fromA: l, toA: u, fromB: h, toB: f } = o, m, b, v, C;
      if (r && r.range.fromB < f && r.range.toB > h) {
        let _ = So.build(this.view.state.doc, h, r.range.fromB, this.decorations, this.dynamicDecorationMap), M = So.build(this.view.state.doc, r.range.toB, f, this.decorations, this.dynamicDecorationMap);
        b = _.breakAtStart, v = _.openStart, C = M.openEnd;
        let Z = this.compositionView(r);
        M.breakAtStart ? Z.breakAfter = 1 : M.content.length && Z.merge(Z.length, Z.length, M.content[0], !1, M.openStart, 0) && (Z.breakAfter = M.content[0].breakAfter, M.content.shift()), _.content.length && Z.merge(0, 0, _.content[_.content.length - 1], !0, 0, _.openEnd) && _.content.pop(), m = _.content.concat(Z).concat(M.content);
      } else
        ({ content: m, breakAtStart: b, openStart: v, openEnd: C } = So.build(this.view.state.doc, h, f, this.decorations, this.dynamicDecorationMap));
      let { i: S, off: B } = i.findPos(u, 1), { i: $, off: W } = i.findPos(l, -1);
      MC(this, $, W, S, B, m, b, v, C);
    }
    r && this.fixCompositionDOM(r);
  }
  updateEditContextFormatting(e) {
    this.editContextFormatting = this.editContextFormatting.map(e.changes);
    for (let n of e.transactions)
      for (let r of n.effects)
        r.is(eS) && (this.editContextFormatting = r.value);
  }
  compositionView(e) {
    let n = new es(e.text.nodeValue);
    n.flags |= 8;
    for (let { deco: s } of e.marks)
      n = new Ls(s, [n], n.length);
    let r = new sn();
    return r.append(n, 0), r;
  }
  fixCompositionDOM(e) {
    let n = (i, a) => {
      a.flags |= 8 | (a.children.some(
        (l) => l.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(a);
      let o = Dt.get(i);
      o && o != a && (o.dom = null), a.setDOM(i);
    }, r = this.childPos(e.range.fromB, 1), s = this.children[r.i];
    n(e.line, s);
    for (let i = e.marks.length - 1; i >= -1; i--)
      r = s.childPos(r.off, 1), s = s.children[r.i], n(i >= 0 ? e.marks[i].node : e.text, s);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, n = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let r = this.view.root.activeElement, s = r == this.dom, i = !s && !(this.view.state.facet(Ms) || this.dom.tabIndex > -1) && dc(this.dom, this.view.observer.selectionRange) && !(r && this.dom.contains(r));
    if (!(s || n || i))
      return;
    let a = this.forceSelection;
    this.forceSelection = !1;
    let o = this.view.state.selection.main, l = this.moveToLine(this.domAtPos(o.anchor)), u = o.empty ? l : this.moveToLine(this.domAtPos(o.head));
    if (we.gecko && o.empty && !this.hasComposition && R6(l)) {
      let f = document.createTextNode("");
      this.view.observer.ignore(() => l.node.insertBefore(f, l.node.childNodes[l.offset] || null)), l = u = new Fn(f, 0), a = !0;
    }
    let h = this.view.observer.selectionRange;
    (a || !h.focusNode || (!Co(l.node, l.offset, h.anchorNode, h.anchorOffset) || !Co(u.node, u.offset, h.focusNode, h.focusOffset)) && !this.suppressWidgetCursorChange(h, o)) && (this.view.observer.ignore(() => {
      we.android && we.chrome && this.dom.contains(h.focusNode) && N6(h.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let f = Ro(this.view.root);
      if (f) if (o.empty) {
        if (we.gecko) {
          let m = $6(l.node, l.offset);
          if (m && m != 3) {
            let b = (m == 1 ? EC : FC)(l.node, l.offset);
            b && (l = new Fn(b.node, b.offset));
          }
        }
        f.collapse(l.node, l.offset), o.bidiLevel != null && f.caretBidiLevel !== void 0 && (f.caretBidiLevel = o.bidiLevel);
      } else if (f.extend) {
        f.collapse(l.node, l.offset);
        try {
          f.extend(u.node, u.offset);
        } catch {
        }
      } else {
        let m = document.createRange();
        o.anchor > o.head && ([l, u] = [u, l]), m.setEnd(u.node, u.offset), m.setStart(l.node, l.offset), f.removeAllRanges(), f.addRange(m);
      }
      i && this.view.root.activeElement == this.dom && (this.dom.blur(), r && r.focus());
    }), this.view.observer.setSelectionRange(l, u)), this.impreciseAnchor = l.precise ? null : new Fn(h.anchorNode, h.anchorOffset), this.impreciseHead = u.precise ? null : new Fn(h.focusNode, h.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, n) {
    return this.hasComposition && n.empty && Co(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == n.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, n = e.state.selection.main, r = Ro(e.root), { anchorNode: s, anchorOffset: i } = e.observer.selectionRange;
    if (!r || !n.empty || !n.assoc || !r.modify)
      return;
    let a = sn.find(this, n.head);
    if (!a)
      return;
    let o = a.posAtStart;
    if (n.head == o || n.head == o + a.length)
      return;
    let l = this.coordsAt(n.head, -1), u = this.coordsAt(n.head, 1);
    if (!l || !u || l.bottom > u.top)
      return;
    let h = this.domAtPos(n.head + n.assoc);
    r.collapse(h.node, h.offset), r.modify("move", n.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let f = e.observer.selectionRange;
    e.docView.posFromDOM(f.anchorNode, f.anchorOffset) != n.from && r.collapse(s, i);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let n = this.dom, r;
    if (e.node != n)
      return e;
    for (let s = e.offset; !r && s < n.childNodes.length; s++) {
      let i = Dt.get(n.childNodes[s]);
      i instanceof sn && (r = i.domAtPos(0));
    }
    for (let s = e.offset - 1; !r && s >= 0; s--) {
      let i = Dt.get(n.childNodes[s]);
      i instanceof sn && (r = i.domAtPos(i.length));
    }
    return r ? new Fn(r.node, r.offset, !0) : e;
  }
  nearest(e) {
    for (let n = e; n; ) {
      let r = Dt.get(n);
      if (r && r.rootView == this)
        return r;
      n = n.parentNode;
    }
    return null;
  }
  posFromDOM(e, n) {
    let r = this.nearest(e);
    if (!r)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return r.localPosFromDOM(e, n) + r.posAtStart;
  }
  domAtPos(e) {
    let { i: n, off: r } = this.childCursor().findPos(e, -1);
    for (; n < this.children.length - 1; ) {
      let s = this.children[n];
      if (r < s.length || s instanceof sn)
        break;
      n++, r = 0;
    }
    return this.children[n].domAtPos(r);
  }
  coordsAt(e, n) {
    let r = null, s = 0;
    for (let i = this.length, a = this.children.length - 1; a >= 0; a--) {
      let o = this.children[a], l = i - o.breakAfter, u = l - o.length;
      if (l < e)
        break;
      if (u <= e && (u < e || o.covers(-1)) && (l > e || o.covers(1)) && (!r || o instanceof sn && !(r instanceof sn && n >= 0)))
        r = o, s = u;
      else if (r && u == e && l == e && o instanceof _s && Math.abs(n) < 2) {
        if (o.deco.startSide < 0)
          break;
        a && (r = null);
      }
      i = u;
    }
    return r ? r.coordsAt(e - s, n) : null;
  }
  coordsForChar(e) {
    let { i: n, off: r } = this.childPos(e, 1), s = this.children[n];
    if (!(s instanceof sn))
      return null;
    for (; s.children.length; ) {
      let { i: o, off: l } = s.childPos(r, 1);
      for (; ; o++) {
        if (o == s.children.length)
          return null;
        if ((s = s.children[o]).length)
          break;
      }
      r = l;
    }
    if (!(s instanceof es))
      return null;
    let i = kn(s.text, r);
    if (i == r)
      return null;
    let a = Ni(s.dom, r, i).getClientRects();
    for (let o = 0; o < a.length; o++) {
      let l = a[o];
      if (o == a.length - 1 || l.top < l.bottom && l.left < l.right)
        return l;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let n = [], { from: r, to: s } = e, i = this.view.contentDOM.clientWidth, a = i > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, o = -1, l = this.view.textDirection == Et.LTR;
    for (let u = 0, h = 0; h < this.children.length; h++) {
      let f = this.children[h], m = u + f.length;
      if (m > s)
        break;
      if (u >= r) {
        let b = f.dom.getBoundingClientRect();
        if (n.push(b.height), a) {
          let v = f.dom.lastChild, C = v ? Zo(v) : [];
          if (C.length) {
            let S = C[C.length - 1], B = l ? S.right - b.left : b.right - S.left;
            B > o && (o = B, this.minWidth = i, this.minWidthFrom = u, this.minWidthTo = m);
          }
        }
      }
      u = m + f.breakAfter;
    }
    return n;
  }
  textDirectionAt(e) {
    let { i: n } = this.childPos(e, 1);
    return getComputedStyle(this.children[n].dom).direction == "rtl" ? Et.RTL : Et.LTR;
  }
  measureTextSize() {
    for (let i of this.children)
      if (i instanceof sn) {
        let a = i.measureTextSize();
        if (a)
          return a;
      }
    let e = document.createElement("div"), n, r, s;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let i = Zo(e.firstChild)[0];
      n = e.getBoundingClientRect().height, r = i ? i.width / 27 : 7, s = i ? i.height : n, e.remove();
    }), { lineHeight: n, charWidth: r, textHeight: s };
  }
  childCursor(e = this.length) {
    let n = this.children.length;
    return n && (e -= this.children[--n].length), new BC(this.children, e, n);
  }
  computeBlockGapDeco() {
    let e = [], n = this.view.viewState;
    for (let r = 0, s = 0; ; s++) {
      let i = s == n.viewports.length ? null : n.viewports[s], a = i ? i.from - 1 : this.length;
      if (a > r) {
        let o = (n.lineBlockAt(a).bottom - n.lineBlockAt(r).top) / this.view.scaleY;
        e.push(Be.replace({
          widget: new of(o),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(r, a));
      }
      if (!i)
        break;
      r = i.to + 1;
    }
    return Be.set(e);
  }
  updateDeco() {
    let e = 1, n = this.view.state.facet($o).map((i) => (this.dynamicDecorationMap[e++] = typeof i == "function") ? i(this.view) : i), r = !1, s = this.view.state.facet(nS).map((i, a) => {
      let o = typeof i == "function";
      return o && (r = !0), o ? i(this.view) : i;
    });
    for (s.length && (this.dynamicDecorationMap[e++] = r, n.push(mt.join(s))), this.decorations = [
      this.editContextFormatting,
      ...n,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ]; e < this.decorations.length; )
      this.dynamicDecorationMap[e++] = !1;
    return this.decorations;
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let u = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = u.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    for (let u of this.view.state.facet(JC))
      try {
        if (u(this.view, e.range, e))
          return !0;
      } catch (h) {
        rr(this.view.state, h, "scroll handler");
      }
    let { range: n } = e, r = this.coordsAt(n.head, n.empty ? n.assoc : n.head > n.anchor ? -1 : 1), s;
    if (!r)
      return;
    !n.empty && (s = this.coordsAt(n.anchor, n.anchor > n.head ? -1 : 1)) && (r = {
      left: Math.min(r.left, s.left),
      top: Math.min(r.top, s.top),
      right: Math.max(r.right, s.right),
      bottom: Math.max(r.bottom, s.bottom)
    });
    let i = am(this.view), a = {
      left: r.left - i.left,
      top: r.top - i.top,
      right: r.right + i.right,
      bottom: r.bottom + i.bottom
    }, { offsetWidth: o, offsetHeight: l } = this.view.scrollDOM;
    b6(this.view.scrollDOM, a, n.head < n.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, o), -o), Math.max(Math.min(e.yMargin, l), -l), this.view.textDirection == Et.LTR);
  }
}
function R6(t) {
  return t.node.nodeType == 1 && t.node.firstChild && (t.offset == 0 || t.node.childNodes[t.offset - 1].contentEditable == "false") && (t.offset == t.node.childNodes.length || t.node.childNodes[t.offset].contentEditable == "false");
}
function iS(t, e) {
  let n = t.observer.selectionRange;
  if (!n.focusNode)
    return null;
  let r = EC(n.focusNode, n.focusOffset), s = FC(n.focusNode, n.focusOffset), i = r || s;
  if (s && r && s.node != r.node) {
    let o = Dt.get(s.node);
    if (!o || o instanceof es && o.text != s.node.nodeValue)
      i = s;
    else if (t.docView.lastCompositionAfterCursor) {
      let l = Dt.get(r.node);
      !l || l instanceof es && l.text != r.node.nodeValue || (i = s);
    }
  }
  if (t.docView.lastCompositionAfterCursor = i != r, !i)
    return null;
  let a = e - i.offset;
  return { from: a, to: a + i.node.nodeValue.length, node: i.node };
}
function Z6(t, e, n) {
  let r = iS(t, n);
  if (!r)
    return null;
  let { node: s, from: i, to: a } = r, o = s.nodeValue;
  if (/[\n\r]/.test(o) || t.state.doc.sliceString(r.from, r.to) != o)
    return null;
  let l = e.invertedDesc, u = new Qr(l.mapPos(i), l.mapPos(a), i, a), h = [];
  for (let f = s.parentNode; ; f = f.parentNode) {
    let m = Dt.get(f);
    if (m instanceof Ls)
      h.push({ node: f, deco: m.mark });
    else {
      if (m instanceof sn || f.nodeName == "DIV" && f.parentNode == t.contentDOM)
        return { range: u, text: s, marks: h, line: f };
      if (f != t.contentDOM)
        h.push({ node: f, deco: new ol({
          inclusive: !0,
          attributes: S6(f),
          tagName: f.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function $6(t, e) {
  return t.nodeType != 1 ? 0 : (e && t.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < t.childNodes.length && t.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let L6 = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, n) {
    mc(e, n, this.changes);
  }
  comparePoint(e, n) {
    mc(e, n, this.changes);
  }
  boundChange(e) {
    mc(e, e, this.changes);
  }
};
function I6(t, e, n) {
  let r = new L6();
  return mt.compare(t, e, n, r), r.changes;
}
function N6(t, e) {
  for (let n = t; n && n != e; n = n.assignedSlot || n.parentNode)
    if (n.nodeType == 1 && n.contentEditable == "false")
      return !0;
  return !1;
}
function V6(t, e) {
  let n = !1;
  return e && t.iterChangedRanges((r, s) => {
    r < e.to && s > e.from && (n = !0);
  }), n;
}
function X6(t, e, n = 1) {
  let r = t.charCategorizer(e), s = t.doc.lineAt(e), i = e - s.from;
  if (s.length == 0)
    return ne.cursor(e);
  i == 0 ? n = 1 : i == s.length && (n = -1);
  let a = i, o = i;
  n < 0 ? a = kn(s.text, i, !1) : o = kn(s.text, i);
  let l = r(s.text.slice(a, o));
  for (; a > 0; ) {
    let u = kn(s.text, a, !1);
    if (r(s.text.slice(u, a)) != l)
      break;
    a = u;
  }
  for (; o < s.length; ) {
    let u = kn(s.text, o);
    if (r(s.text.slice(o, u)) != l)
      break;
    o = u;
  }
  return ne.range(a + s.from, o + s.from);
}
function W6(t, e) {
  return e.left > t ? e.left - t : Math.max(0, t - e.right);
}
function U6(t, e) {
  return e.top > t ? e.top - t : Math.max(0, t - e.bottom);
}
function Hh(t, e) {
  return t.top < e.bottom - 1 && t.bottom > e.top + 1;
}
function r0(t, e) {
  return e < t.top ? { top: e, left: t.left, right: t.right, bottom: t.bottom } : t;
}
function s0(t, e) {
  return e > t.bottom ? { top: t.top, left: t.left, right: t.right, bottom: e } : t;
}
function pf(t, e, n) {
  let r, s, i, a, o = !1, l, u, h, f;
  for (let v = t.firstChild; v; v = v.nextSibling) {
    let C = Zo(v);
    for (let S = 0; S < C.length; S++) {
      let B = C[S];
      s && Hh(s, B) && (B = r0(s0(B, s.bottom), s.top));
      let $ = W6(e, B), W = U6(n, B);
      if ($ == 0 && W == 0)
        return v.nodeType == 3 ? i0(v, e, n) : pf(v, e, n);
      if (!r || a > W || a == W && i > $) {
        r = v, s = B, i = $, a = W;
        let _ = W ? n < B.top ? -1 : 1 : $ ? e < B.left ? -1 : 1 : 0;
        o = !_ || (_ > 0 ? S < C.length - 1 : S > 0);
      }
      $ == 0 ? n > B.bottom && (!h || h.bottom < B.bottom) ? (l = v, h = B) : n < B.top && (!f || f.top > B.top) && (u = v, f = B) : h && Hh(h, B) ? h = s0(h, B.bottom) : f && Hh(f, B) && (f = r0(f, B.top));
    }
  }
  if (h && h.bottom >= n ? (r = l, s = h) : f && f.top <= n && (r = u, s = f), !r)
    return { node: t, offset: 0 };
  let m = Math.max(s.left, Math.min(s.right, e));
  if (r.nodeType == 3)
    return i0(r, m, n);
  if (o && r.contentEditable != "false")
    return pf(r, m, n);
  let b = Array.prototype.indexOf.call(t.childNodes, r) + (e >= (s.left + s.right) / 2 ? 1 : 0);
  return { node: t, offset: b };
}
function i0(t, e, n) {
  let r = t.nodeValue.length, s = -1, i = 1e9, a = 0;
  for (let o = 0; o < r; o++) {
    let l = Ni(t, o, o + 1).getClientRects();
    for (let u = 0; u < l.length; u++) {
      let h = l[u];
      if (h.top == h.bottom)
        continue;
      a || (a = e - h.left);
      let f = (h.top > n ? h.top - n : n - h.bottom) - 1;
      if (h.left - 1 <= e && h.right + 1 >= e && f < i) {
        let m = e >= (h.left + h.right) / 2, b = m;
        if ((we.chrome || we.gecko) && Ni(t, o).getBoundingClientRect().left == h.right && (b = !m), f <= 0)
          return { node: t, offset: o + (b ? 1 : 0) };
        s = o + (b ? 1 : 0), i = f;
      }
    }
  }
  return { node: t, offset: s > -1 ? s : a > 0 ? t.nodeValue.length : 0 };
}
function aS(t, e, n, r = -1) {
  var s, i;
  let a = t.contentDOM.getBoundingClientRect(), o = a.top + t.viewState.paddingTop, l, { docHeight: u } = t.viewState, { x: h, y: f } = e, m = f - o;
  if (m < 0)
    return 0;
  if (m > u)
    return t.state.doc.length;
  for (let _ = t.viewState.heightOracle.textHeight / 2, M = !1; l = t.elementAtHeight(m), l.type != In.Text; )
    for (; m = r > 0 ? l.bottom + _ : l.top - _, !(m >= 0 && m <= u); ) {
      if (M)
        return n ? null : 0;
      M = !0, r = -r;
    }
  f = o + m;
  let b = l.from;
  if (b < t.viewport.from)
    return t.viewport.from == 0 ? 0 : n ? null : a0(t, a, l, h, f);
  if (b > t.viewport.to)
    return t.viewport.to == t.state.doc.length ? t.state.doc.length : n ? null : a0(t, a, l, h, f);
  let v = t.dom.ownerDocument, C = t.root.elementFromPoint ? t.root : v, S = C.elementFromPoint(h, f);
  S && !t.contentDOM.contains(S) && (S = null), S || (h = Math.max(a.left + 1, Math.min(a.right - 1, h)), S = C.elementFromPoint(h, f), S && !t.contentDOM.contains(S) && (S = null));
  let B, $ = -1;
  if (S && ((s = t.docView.nearest(S)) === null || s === void 0 ? void 0 : s.isEditable) != !1) {
    if (v.caretPositionFromPoint) {
      let _ = v.caretPositionFromPoint(h, f);
      _ && ({ offsetNode: B, offset: $ } = _);
    } else if (v.caretRangeFromPoint) {
      let _ = v.caretRangeFromPoint(h, f);
      _ && ({ startContainer: B, startOffset: $ } = _, (!t.contentDOM.contains(B) || we.safari && q6(B, $, h) || we.chrome && G6(B, $, h)) && (B = void 0));
    }
    B && ($ = Math.min(xs(B), $));
  }
  if (!B || !t.docView.dom.contains(B)) {
    let _ = sn.find(t.docView, b);
    if (!_)
      return m > l.top + l.height / 2 ? l.to : l.from;
    ({ node: B, offset: $ } = pf(_.dom, h, f));
  }
  let W = t.docView.nearest(B);
  if (!W)
    return null;
  if (W.isWidget && ((i = W.dom) === null || i === void 0 ? void 0 : i.nodeType) == 1) {
    let _ = W.dom.getBoundingClientRect();
    return e.y < _.top || e.y <= _.bottom && e.x <= (_.left + _.right) / 2 ? W.posAtStart : W.posAtEnd;
  } else
    return W.localPosFromDOM(B, $) + W.posAtStart;
}
function a0(t, e, n, r, s) {
  let i = Math.round((r - e.left) * t.defaultCharacterWidth);
  if (t.lineWrapping && n.height > t.defaultLineHeight * 1.5) {
    let o = t.viewState.heightOracle.textHeight, l = Math.floor((s - n.top - (t.defaultLineHeight - o) * 0.5) / o);
    i += l * t.viewState.heightOracle.lineLength;
  }
  let a = t.state.sliceDoc(n.from, n.to);
  return n.from + Hp(a, i, t.state.tabSize);
}
function q6(t, e, n) {
  let r;
  if (t.nodeType != 3 || e != (r = t.nodeValue.length))
    return !1;
  for (let s = t.nextSibling; s; s = s.nextSibling)
    if (s.nodeType != 1 || s.nodeName != "BR")
      return !1;
  return Ni(t, r - 1, r).getBoundingClientRect().left > n;
}
function G6(t, e, n) {
  if (e != 0)
    return !1;
  for (let s = t; ; ) {
    let i = s.parentNode;
    if (!i || i.nodeType != 1 || i.firstChild != s)
      return !1;
    if (i.classList.contains("cm-line"))
      break;
    s = i;
  }
  let r = t.nodeType == 1 ? t.getBoundingClientRect() : Ni(t, 0, Math.max(t.nodeValue.length, 1)).getBoundingClientRect();
  return n - r.left > 5;
}
function ff(t, e) {
  let n = t.lineBlockAt(e);
  if (Array.isArray(n.type)) {
    for (let r of n.type)
      if (r.to > e || r.to == e && (r.to == n.to || r.type == In.Text))
        return r;
  }
  return n;
}
function z6(t, e, n, r) {
  let s = ff(t, e.head), i = !r || s.type != In.Text || !(t.lineWrapping || s.widgetLineBreaks) ? null : t.coordsAtPos(e.assoc < 0 && e.head > s.from ? e.head - 1 : e.head);
  if (i) {
    let a = t.dom.getBoundingClientRect(), o = t.textDirectionAt(s.from), l = t.posAtCoords({
      x: n == (o == Et.LTR) ? a.right - 1 : a.left + 1,
      y: (i.top + i.bottom) / 2
    });
    if (l != null)
      return ne.cursor(l, n ? -1 : 1);
  }
  return ne.cursor(n ? s.to : s.from, n ? -1 : 1);
}
function o0(t, e, n, r) {
  let s = t.state.doc.lineAt(e.head), i = t.bidiSpans(s), a = t.textDirectionAt(s.from);
  for (let o = e, l = null; ; ) {
    let u = Q6(s, i, a, o, n), h = XC;
    if (!u) {
      if (s.number == (n ? t.state.doc.lines : 1))
        return o;
      h = `
`, s = t.state.doc.line(s.number + (n ? 1 : -1)), i = t.bidiSpans(s), u = t.visualLineSide(s, !n);
    }
    if (l) {
      if (!l(h))
        return o;
    } else {
      if (!r)
        return u;
      l = r(h);
    }
    o = u;
  }
}
function Y6(t, e, n) {
  let r = t.state.charCategorizer(e), s = r(n);
  return (i) => {
    let a = r(i);
    return s == ln.Space && (s = a), s == a;
  };
}
function H6(t, e, n, r) {
  let s = e.head, i = n ? 1 : -1;
  if (s == (n ? t.state.doc.length : 0))
    return ne.cursor(s, e.assoc);
  let a = e.goalColumn, o, l = t.contentDOM.getBoundingClientRect(), u = t.coordsAtPos(s, e.assoc || -1), h = t.documentTop;
  if (u)
    a == null && (a = u.left - l.left), o = i < 0 ? u.top : u.bottom;
  else {
    let b = t.viewState.lineBlockAt(s);
    a == null && (a = Math.min(l.right - l.left, t.defaultCharacterWidth * (s - b.from))), o = (i < 0 ? b.top : b.bottom) + h;
  }
  let f = l.left + a, m = r ?? t.viewState.heightOracle.textHeight >> 1;
  for (let b = 0; ; b += 10) {
    let v = o + (m + b) * i, C = aS(t, { x: f, y: v }, !1, i);
    if (v < l.top || v > l.bottom || (i < 0 ? C < s : C > s)) {
      let S = t.docView.coordsForChar(C), B = !S || v < S.top ? -1 : 1;
      return ne.cursor(C, B, void 0, a);
    }
  }
}
function gc(t, e, n) {
  for (; ; ) {
    let r = 0;
    for (let s of t)
      s.between(e - 1, e + 1, (i, a, o) => {
        if (e > i && e < a) {
          let l = r || n || (e - i < a - e ? -1 : 1);
          e = l < 0 ? i : a, r = l;
        }
      });
    if (!r)
      return e;
  }
}
function Kh(t, e, n) {
  let r = gc(t.state.facet(im).map((s) => s(t)), n.from, e.head > n.from ? -1 : 1);
  return r == n.from ? n : ne.cursor(r, r < n.from ? 1 : -1);
}
const mo = "￿";
class K6 {
  constructor(e, n) {
    this.points = e, this.text = "", this.lineSeparator = n.facet(ft.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += mo;
  }
  readRange(e, n) {
    if (!e)
      return this;
    let r = e.parentNode;
    for (let s = e; ; ) {
      this.findPointBefore(r, s);
      let i = this.text.length;
      this.readNode(s);
      let a = s.nextSibling;
      if (a == n)
        break;
      let o = Dt.get(s), l = Dt.get(a);
      (o && l ? o.breakAfter : (o ? o.breakAfter : Zc(s)) || Zc(a) && (s.nodeName != "BR" || s.cmIgnore) && this.text.length > i) && this.lineBreak(), s = a;
    }
    return this.findPointBefore(r, n), this;
  }
  readTextNode(e) {
    let n = e.nodeValue;
    for (let r of this.points)
      r.node == e && (r.pos = this.text.length + Math.min(r.offset, n.length));
    for (let r = 0, s = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let i = -1, a = 1, o;
      if (this.lineSeparator ? (i = n.indexOf(this.lineSeparator, r), a = this.lineSeparator.length) : (o = s.exec(n)) && (i = o.index, a = o[0].length), this.append(n.slice(r, i < 0 ? n.length : i)), i < 0)
        break;
      if (this.lineBreak(), a > 1)
        for (let l of this.points)
          l.node == e && l.pos > this.text.length && (l.pos -= a - 1);
      r = i + a;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let n = Dt.get(e), r = n && n.overrideDOMText;
    if (r != null) {
      this.findPointInside(e, r.length);
      for (let s = r.iter(); !s.next().done; )
        s.lineBreak ? this.lineBreak() : this.append(s.value);
    } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, n) {
    for (let r of this.points)
      r.node == e && e.childNodes[r.offset] == n && (r.pos = this.text.length);
  }
  findPointInside(e, n) {
    for (let r of this.points)
      (e.nodeType == 3 ? r.node == e : e.contains(r.node)) && (r.pos = this.text.length + (J6(e, r.node, r.offset) ? n : 0));
  }
}
function J6(t, e, n) {
  for (; ; ) {
    if (!e || n < xs(e))
      return !1;
    if (e == t)
      return !0;
    n = Ii(e) + 1, e = e.parentNode;
  }
}
class l0 {
  constructor(e, n) {
    this.node = e, this.offset = n, this.pos = -1;
  }
}
class eM {
  constructor(e, n, r, s) {
    this.typeOver = s, this.bounds = null, this.text = "", this.domChanged = n > -1;
    let { impreciseHead: i, impreciseAnchor: a } = e.docView;
    if (e.state.readOnly && n > -1)
      this.newSel = null;
    else if (n > -1 && (this.bounds = e.docView.domBoundsAround(n, r, 0))) {
      let o = i || a ? [] : rM(e), l = new K6(o, e.state);
      l.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = l.text, this.newSel = sM(o, this.bounds.from);
    } else {
      let o = e.observer.selectionRange, l = i && i.node == o.focusNode && i.offset == o.focusOffset || !ef(e.contentDOM, o.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(o.focusNode, o.focusOffset), u = a && a.node == o.anchorNode && a.offset == o.anchorOffset || !ef(e.contentDOM, o.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(o.anchorNode, o.anchorOffset), h = e.viewport;
      if ((we.ios || we.chrome) && e.state.selection.main.empty && l != u && (h.from > 0 || h.to < e.state.doc.length)) {
        let f = Math.min(l, u), m = Math.max(l, u), b = h.from - f, v = h.to - m;
        (b == 0 || b == 1 || f == 0) && (v == 0 || v == -1 || m == e.state.doc.length) && (l = 0, u = e.state.doc.length);
      }
      this.newSel = ne.single(u, l);
    }
  }
}
function oS(t, e) {
  let n, { newSel: r } = e, s = t.state.selection.main, i = t.inputState.lastKeyTime > Date.now() - 100 ? t.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: a, to: o } = e.bounds, l = s.from, u = null;
    (i === 8 || we.android && e.text.length < o - a) && (l = s.to, u = "end");
    let h = nM(t.state.doc.sliceString(a, o, mo), e.text, l - a, u);
    h && (we.chrome && i == 13 && h.toB == h.from + 2 && e.text.slice(h.from, h.toB) == mo + mo && h.toB--, n = {
      from: a + h.from,
      to: a + h.toA,
      insert: ht.of(e.text.slice(h.from, h.toB).split(mo))
    });
  } else r && (!t.hasFocus && t.state.facet(Ms) || r.main.eq(s)) && (r = null);
  if (!n && !r)
    return !1;
  if (!n && e.typeOver && !s.empty && r && r.main.empty ? n = { from: s.from, to: s.to, insert: t.state.doc.slice(s.from, s.to) } : (we.mac || we.android) && n && n.from == n.to && n.from == s.head - 1 && /^\. ?$/.test(n.insert.toString()) && t.contentDOM.getAttribute("autocorrect") == "off" ? (r && n.insert.length == 2 && (r = ne.single(r.main.anchor - 1, r.main.head - 1)), n = { from: n.from, to: n.to, insert: ht.of([n.insert.toString().replace(".", " ")]) }) : n && n.from >= s.from && n.to <= s.to && (n.from != s.from || n.to != s.to) && s.to - s.from - (n.to - n.from) <= 4 ? n = {
    from: s.from,
    to: s.to,
    insert: t.state.doc.slice(s.from, n.from).append(n.insert).append(t.state.doc.slice(n.to, s.to))
  } : we.chrome && n && n.from == n.to && n.from == s.head && n.insert.toString() == `
 ` && t.lineWrapping && (r && (r = ne.single(r.main.anchor - 1, r.main.head - 1)), n = { from: s.from, to: s.to, insert: ht.of([" "]) }), n)
    return om(t, n, r, i);
  if (r && !r.main.eq(s)) {
    let a = !1, o = "select";
    return t.inputState.lastSelectionTime > Date.now() - 50 && (t.inputState.lastSelectionOrigin == "select" && (a = !0), o = t.inputState.lastSelectionOrigin), t.dispatch({ selection: r, scrollIntoView: a, userEvent: o }), !0;
  } else
    return !1;
}
function om(t, e, n, r = -1) {
  if (we.ios && t.inputState.flushIOSKey(e))
    return !0;
  let s = t.state.selection.main;
  if (we.android && (e.to == s.to && // GBoard will sometimes remove a space it just inserted
  // after a completion when you press enter
  (e.from == s.from || e.from == s.from - 1 && t.state.sliceDoc(e.from, s.from) == " ") && e.insert.length == 1 && e.insert.lines == 2 && pa(t.contentDOM, "Enter", 13) || (e.from == s.from - 1 && e.to == s.to && e.insert.length == 0 || r == 8 && e.insert.length < e.to - e.from && e.to > s.head) && pa(t.contentDOM, "Backspace", 8) || e.from == s.from && e.to == s.to + 1 && e.insert.length == 0 && pa(t.contentDOM, "Delete", 46)))
    return !0;
  let i = e.insert.toString();
  t.inputState.composing >= 0 && t.inputState.composing++;
  let a, o = () => a || (a = tM(t, e, n));
  return t.state.facet(zC).some((l) => l(t, e.from, e.to, i, o)) || t.dispatch(o()), !0;
}
function tM(t, e, n) {
  let r, s = t.state, i = s.selection.main;
  if (e.from >= i.from && e.to <= i.to && e.to - e.from >= (i.to - i.from) / 3 && (!n || n.main.empty && n.main.from == e.from + e.insert.length) && t.inputState.composing < 0) {
    let o = i.from < e.from ? s.sliceDoc(i.from, e.from) : "", l = i.to > e.to ? s.sliceDoc(e.to, i.to) : "";
    r = s.replaceSelection(t.state.toText(o + e.insert.sliceString(0, void 0, t.state.lineBreak) + l));
  } else {
    let o = s.changes(e), l = n && n.main.to <= o.newLength ? n.main : void 0;
    if (s.selection.ranges.length > 1 && t.inputState.composing >= 0 && e.to <= i.to && e.to >= i.to - 10) {
      let u = t.state.sliceDoc(e.from, e.to), h, f = n && iS(t, n.main.head);
      if (f) {
        let v = e.insert.length - (e.to - e.from);
        h = { from: f.from, to: f.to - v };
      } else
        h = t.state.doc.lineAt(i.head);
      let m = i.to - e.to, b = i.to - i.from;
      r = s.changeByRange((v) => {
        if (v.from == i.from && v.to == i.to)
          return { changes: o, range: l || v.map(o) };
        let C = v.to - m, S = C - u.length;
        if (v.to - v.from != b || t.state.sliceDoc(S, C) != u || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        v.to >= h.from && v.from <= h.to)
          return { range: v };
        let B = s.changes({ from: S, to: C, insert: e.insert }), $ = v.to - i.to;
        return {
          changes: B,
          range: l ? ne.range(Math.max(0, l.anchor + $), Math.max(0, l.head + $)) : v.map(B)
        };
      });
    } else
      r = {
        changes: o,
        selection: l && s.selection.replaceRange(l)
      };
  }
  let a = "input.type";
  return (t.composing || t.inputState.compositionPendingChange && t.inputState.compositionEndedAt > Date.now() - 50) && (t.inputState.compositionPendingChange = !1, a += ".compose", t.inputState.compositionFirstChange && (a += ".start", t.inputState.compositionFirstChange = !1)), s.update(r, { userEvent: a, scrollIntoView: !0 });
}
function nM(t, e, n, r) {
  let s = Math.min(t.length, e.length), i = 0;
  for (; i < s && t.charCodeAt(i) == e.charCodeAt(i); )
    i++;
  if (i == s && t.length == e.length)
    return null;
  let a = t.length, o = e.length;
  for (; a > 0 && o > 0 && t.charCodeAt(a - 1) == e.charCodeAt(o - 1); )
    a--, o--;
  if (r == "end") {
    let l = Math.max(0, i - Math.min(a, o));
    n -= a + l - i;
  }
  if (a < i && t.length < e.length) {
    let l = n <= i && n >= a ? i - n : 0;
    i -= l, o = i + (o - a), a = i;
  } else if (o < i) {
    let l = n <= i && n >= o ? i - n : 0;
    i -= l, a = i + (a - o), o = i;
  }
  return { from: i, toA: a, toB: o };
}
function rM(t) {
  let e = [];
  if (t.root.activeElement != t.contentDOM)
    return e;
  let { anchorNode: n, anchorOffset: r, focusNode: s, focusOffset: i } = t.observer.selectionRange;
  return n && (e.push(new l0(n, r)), (s != n || i != r) && e.push(new l0(s, i))), e;
}
function sM(t, e) {
  if (t.length == 0)
    return null;
  let n = t[0].pos, r = t.length == 2 ? t[1].pos : n;
  return n > -1 && r > -1 ? ne.single(n + e, r + e) : null;
}
class iM {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.tabFocusMode = -1, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, we.safari && e.contentDOM.addEventListener("input", () => null), we.gecko && xM(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !fM(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);
  }
  runHandlers(e, n) {
    let r = this.handlers[e];
    if (r) {
      for (let s of r.observers)
        s(this.view, n);
      for (let s of r.handlers) {
        if (n.defaultPrevented)
          break;
        if (s(this.view, n)) {
          n.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let n = aM(e), r = this.handlers, s = this.view.contentDOM;
    for (let i in n)
      if (i != "scroll") {
        let a = !n[i].handlers.length, o = r[i];
        o && a != !o.handlers.length && (s.removeEventListener(i, this.handleEvent), o = null), o || s.addEventListener(i, this.handleEvent, { passive: a });
      }
    for (let i in r)
      i != "scroll" && !n[i] && s.removeEventListener(i, this.handleEvent);
    this.handlers = n;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))
      return !0;
    if (this.tabFocusMode > 0 && e.keyCode != 27 && cS.indexOf(e.keyCode) < 0 && (this.tabFocusMode = -1), we.android && we.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let n;
    return we.ios && !e.synthetic && !e.altKey && !e.metaKey && ((n = lS.find((r) => r.keyCode == e.keyCode)) && !e.ctrlKey || oM.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = n || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey(e) {
    let n = this.pendingIOSKey;
    return !n || n.key == "Enter" && e && e.from < e.to && /^\S+$/.test(e.insert.toString()) ? !1 : (this.pendingIOSKey = void 0, pa(this.view.contentDOM, n.key, n.keyCode, n instanceof KeyboardEvent ? n : void 0));
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : we.safari && !we.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.view.observer.update(e), this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function c0(t, e) {
  return (n, r) => {
    try {
      return e.call(t, r, n);
    } catch (s) {
      rr(n.state, s);
    }
  };
}
function aM(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(r) {
    return e[r] || (e[r] = { observers: [], handlers: [] });
  }
  for (let r of t) {
    let s = r.spec;
    if (s && s.domEventHandlers)
      for (let i in s.domEventHandlers) {
        let a = s.domEventHandlers[i];
        a && n(i).handlers.push(c0(r.value, a));
      }
    if (s && s.domEventObservers)
      for (let i in s.domEventObservers) {
        let a = s.domEventObservers[i];
        a && n(i).observers.push(c0(r.value, a));
      }
  }
  for (let r in ts)
    n(r).handlers.push(ts[r]);
  for (let r in jr)
    n(r).observers.push(jr[r]);
  return e;
}
const lS = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], oM = "dthko", cS = [16, 17, 18, 20, 91, 92, 224, 225], Ul = 6;
function ql(t) {
  return Math.max(0, t) * 0.7 + 8;
}
function lM(t, e) {
  return Math.max(Math.abs(t.clientX - e.clientX), Math.abs(t.clientY - e.clientY));
}
class cM {
  constructor(e, n, r, s) {
    this.view = e, this.startEvent = n, this.style = r, this.mustSelect = s, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = n, this.scrollParents = y6(e.contentDOM), this.atoms = e.state.facet(im).map((a) => a(e));
    let i = e.contentDOM.ownerDocument;
    i.addEventListener("mousemove", this.move = this.move.bind(this)), i.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = n.shiftKey, this.multiple = e.state.facet(ft.allowMultipleSelections) && uM(e, n), this.dragging = pM(e, n) && pS(n) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && lM(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let n = 0, r = 0, s = 0, i = 0, a = this.view.win.innerWidth, o = this.view.win.innerHeight;
    this.scrollParents.x && ({ left: s, right: a } = this.scrollParents.x.getBoundingClientRect()), this.scrollParents.y && ({ top: i, bottom: o } = this.scrollParents.y.getBoundingClientRect());
    let l = am(this.view);
    e.clientX - l.left <= s + Ul ? n = -ql(s - e.clientX) : e.clientX + l.right >= a - Ul && (n = ql(e.clientX - a)), e.clientY - l.top <= i + Ul ? r = -ql(i - e.clientY) : e.clientY + l.bottom >= o - Ul && (r = ql(e.clientY - o)), this.setScrollSpeed(n, r);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, n) {
    this.scrollSpeed = { x: e, y: n }, e || n ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    let { x: e, y: n } = this.scrollSpeed;
    e && this.scrollParents.x && (this.scrollParents.x.scrollLeft += e, e = 0), n && this.scrollParents.y && (this.scrollParents.y.scrollTop += n, n = 0), (e || n) && this.view.win.scrollBy(e, n), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let n = null;
    for (let r = 0; r < e.ranges.length; r++) {
      let s = e.ranges[r], i = null;
      if (s.empty) {
        let a = gc(this.atoms, s.from, 0);
        a != s.from && (i = ne.cursor(a, -1));
      } else {
        let a = gc(this.atoms, s.from, -1), o = gc(this.atoms, s.to, 1);
        (a != s.from || o != s.to) && (i = ne.range(s.from == s.anchor ? a : o, s.from == s.head ? a : o));
      }
      i && (n || (n = e.ranges.slice()), n[r] = i);
    }
    return n ? ne.create(n, e.mainIndex) : e;
  }
  select(e) {
    let { view: n } = this, r = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !r.eq(n.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: r,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    e.transactions.some((n) => n.isUserEvent("input.type")) ? this.destroy() : this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function uM(t, e) {
  let n = t.state.facet(WC);
  return n.length ? n[0](e) : we.mac ? e.metaKey : e.ctrlKey;
}
function hM(t, e) {
  let n = t.state.facet(UC);
  return n.length ? n[0](e) : we.mac ? !e.altKey : !e.ctrlKey;
}
function pM(t, e) {
  let { main: n } = t.state.selection;
  if (n.empty)
    return !1;
  let r = Ro(t.root);
  if (!r || r.rangeCount == 0)
    return !0;
  let s = r.getRangeAt(0).getClientRects();
  for (let i = 0; i < s.length; i++) {
    let a = s[i];
    if (a.left <= e.clientX && a.right >= e.clientX && a.top <= e.clientY && a.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function fM(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target, r; n != t.contentDOM; n = n.parentNode)
    if (!n || n.nodeType == 11 || (r = Dt.get(n)) && r.ignoreEvent(e))
      return !1;
  return !0;
}
const ts = /* @__PURE__ */ Object.create(null), jr = /* @__PURE__ */ Object.create(null), uS = we.ie && we.ie_version < 15 || we.ios && we.webkit_version < 604;
function dM(t) {
  let e = t.dom.parentNode;
  if (!e)
    return;
  let n = e.appendChild(document.createElement("textarea"));
  n.style.cssText = "position: fixed; left: -10000px; top: 10px", n.focus(), setTimeout(() => {
    t.focus(), n.remove(), hS(t, n.value);
  }, 50);
}
function Wu(t, e, n) {
  for (let r of t.facet(e))
    n = r(n, t);
  return n;
}
function hS(t, e) {
  e = Wu(t.state, nm, e);
  let { state: n } = t, r, s = 1, i = n.toText(e), a = i.lines == n.selection.ranges.length;
  if (df != null && n.selection.ranges.every((l) => l.empty) && df == i.toString()) {
    let l = -1;
    r = n.changeByRange((u) => {
      let h = n.doc.lineAt(u.from);
      if (h.from == l)
        return { range: u };
      l = h.from;
      let f = n.toText((a ? i.line(s++).text : e) + n.lineBreak);
      return {
        changes: { from: h.from, insert: f },
        range: ne.cursor(u.from + f.length)
      };
    });
  } else a ? r = n.changeByRange((l) => {
    let u = i.line(s++);
    return {
      changes: { from: l.from, to: l.to, insert: u.text },
      range: ne.cursor(l.from + u.length)
    };
  }) : r = n.replaceSelection(i);
  t.dispatch(r, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
jr.scroll = (t) => {
  t.inputState.lastScrollTop = t.scrollDOM.scrollTop, t.inputState.lastScrollLeft = t.scrollDOM.scrollLeft;
};
ts.keydown = (t, e) => (t.inputState.setSelectionOrigin("select"), e.keyCode == 27 && t.inputState.tabFocusMode != 0 && (t.inputState.tabFocusMode = Date.now() + 2e3), !1);
jr.touchstart = (t, e) => {
  t.inputState.lastTouchTime = Date.now(), t.inputState.setSelectionOrigin("select.pointer");
};
jr.touchmove = (t) => {
  t.inputState.setSelectionOrigin("select.pointer");
};
ts.mousedown = (t, e) => {
  if (t.observer.flush(), t.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let n = null;
  for (let r of t.state.facet(qC))
    if (n = r(t, e), n)
      break;
  if (!n && e.button == 0 && (n = bM(t, e)), n) {
    let r = !t.hasFocus;
    t.inputState.startMouseSelection(new cM(t, e, n, r)), r && t.observer.ignore(() => {
      AC(t.contentDOM);
      let i = t.root.activeElement;
      i && !i.contains(t.contentDOM) && i.blur();
    });
    let s = t.inputState.mouseSelection;
    if (s)
      return s.start(e), s.dragging === !1;
  }
  return !1;
};
function u0(t, e, n, r) {
  if (r == 1)
    return ne.cursor(e, n);
  if (r == 2)
    return X6(t.state, e, n);
  {
    let s = sn.find(t.docView, e), i = t.state.doc.lineAt(s ? s.posAtEnd : e), a = s ? s.posAtStart : i.from, o = s ? s.posAtEnd : i.to;
    return o < t.state.doc.length && o == i.to && o++, ne.range(a, o);
  }
}
let h0 = (t, e, n) => e >= n.top && e <= n.bottom && t >= n.left && t <= n.right;
function mM(t, e, n, r) {
  let s = sn.find(t.docView, e);
  if (!s)
    return 1;
  let i = e - s.posAtStart;
  if (i == 0)
    return 1;
  if (i == s.length)
    return -1;
  let a = s.coordsAt(i, -1);
  if (a && h0(n, r, a))
    return -1;
  let o = s.coordsAt(i, 1);
  return o && h0(n, r, o) ? 1 : a && a.bottom >= r ? -1 : 1;
}
function p0(t, e) {
  let n = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: n, bias: mM(t, n, e.clientX, e.clientY) };
}
const gM = we.ie && we.ie_version <= 11;
let f0 = null, d0 = 0, m0 = 0;
function pS(t) {
  if (!gM)
    return t.detail;
  let e = f0, n = m0;
  return f0 = t, m0 = Date.now(), d0 = !e || n > Date.now() - 400 && Math.abs(e.clientX - t.clientX) < 2 && Math.abs(e.clientY - t.clientY) < 2 ? (d0 + 1) % 3 : 1;
}
function bM(t, e) {
  let n = p0(t, e), r = pS(e), s = t.state.selection;
  return {
    update(i) {
      i.docChanged && (n.pos = i.changes.mapPos(n.pos), s = s.map(i.changes));
    },
    get(i, a, o) {
      let l = p0(t, i), u, h = u0(t, l.pos, l.bias, r);
      if (n.pos != l.pos && !a) {
        let f = u0(t, n.pos, n.bias, r), m = Math.min(f.from, h.from), b = Math.max(f.to, h.to);
        h = m < h.from ? ne.range(m, b) : ne.range(b, m);
      }
      return a ? s.replaceRange(s.main.extend(h.from, h.to)) : o && r == 1 && s.ranges.length > 1 && (u = yM(s, l.pos)) ? u : o ? s.addRange(h) : ne.create([h]);
    }
  };
}
function yM(t, e) {
  for (let n = 0; n < t.ranges.length; n++) {
    let { from: r, to: s } = t.ranges[n];
    if (r <= e && s >= e)
      return ne.create(t.ranges.slice(0, n).concat(t.ranges.slice(n + 1)), t.mainIndex == n ? 0 : t.mainIndex - (t.mainIndex > n ? 1 : 0));
  }
  return null;
}
ts.dragstart = (t, e) => {
  let { selection: { main: n } } = t.state;
  if (e.target.draggable) {
    let s = t.docView.nearest(e.target);
    if (s && s.isWidget) {
      let i = s.posAtStart, a = i + s.length;
      (i >= n.to || a <= n.from) && (n = ne.range(i, a));
    }
  }
  let { inputState: r } = t;
  return r.mouseSelection && (r.mouseSelection.dragging = !0), r.draggedContent = n, e.dataTransfer && (e.dataTransfer.setData("Text", Wu(t.state, rm, t.state.sliceDoc(n.from, n.to))), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
ts.dragend = (t) => (t.inputState.draggedContent = null, !1);
function g0(t, e, n, r) {
  if (n = Wu(t.state, nm, n), !n)
    return;
  let s = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: i } = t.inputState, a = r && i && hM(t, e) ? { from: i.from, to: i.to } : null, o = { from: s, insert: n }, l = t.state.changes(a ? [a, o] : o);
  t.focus(), t.dispatch({
    changes: l,
    selection: { anchor: l.mapPos(s, -1), head: l.mapPos(s, 1) },
    userEvent: a ? "move.drop" : "input.drop"
  }), t.inputState.draggedContent = null;
}
ts.drop = (t, e) => {
  if (!e.dataTransfer)
    return !1;
  if (t.state.readOnly)
    return !0;
  let n = e.dataTransfer.files;
  if (n && n.length) {
    let r = Array(n.length), s = 0, i = () => {
      ++s == n.length && g0(t, e, r.filter((a) => a != null).join(t.state.lineBreak), !1);
    };
    for (let a = 0; a < n.length; a++) {
      let o = new FileReader();
      o.onerror = i, o.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(o.result) || (r[a] = o.result), i();
      }, o.readAsText(n[a]);
    }
    return !0;
  } else {
    let r = e.dataTransfer.getData("Text");
    if (r)
      return g0(t, e, r, !0), !0;
  }
  return !1;
};
ts.paste = (t, e) => {
  if (t.state.readOnly)
    return !0;
  t.observer.flush();
  let n = uS ? null : e.clipboardData;
  return n ? (hS(t, n.getData("text/plain") || n.getData("text/uri-list")), !0) : (dM(t), !1);
};
function OM(t, e) {
  let n = t.dom.parentNode;
  if (!n)
    return;
  let r = n.appendChild(document.createElement("textarea"));
  r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.value = e, r.focus(), r.selectionEnd = e.length, r.selectionStart = 0, setTimeout(() => {
    r.remove(), t.focus();
  }, 50);
}
function vM(t) {
  let e = [], n = [], r = !1;
  for (let s of t.selection.ranges)
    s.empty || (e.push(t.sliceDoc(s.from, s.to)), n.push(s));
  if (!e.length) {
    let s = -1;
    for (let { from: i } of t.selection.ranges) {
      let a = t.doc.lineAt(i);
      a.number > s && (e.push(a.text), n.push({ from: a.from, to: Math.min(t.doc.length, a.to + 1) })), s = a.number;
    }
    r = !0;
  }
  return { text: Wu(t, rm, e.join(t.lineBreak)), ranges: n, linewise: r };
}
let df = null;
ts.copy = ts.cut = (t, e) => {
  let { text: n, ranges: r, linewise: s } = vM(t.state);
  if (!n && !s)
    return !1;
  df = s ? n : null, e.type == "cut" && !t.state.readOnly && t.dispatch({
    changes: r,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let i = uS ? null : e.clipboardData;
  return i ? (i.clearData(), i.setData("text/plain", n), !0) : (OM(t, n), !1);
};
const fS = /* @__PURE__ */ Vs.define();
function dS(t, e) {
  let n = [];
  for (let r of t.facet(YC)) {
    let s = r(t, e);
    s && n.push(s);
  }
  return n ? t.update({ effects: n, annotations: fS.of(!0) }) : null;
}
function mS(t) {
  setTimeout(() => {
    let e = t.hasFocus;
    if (e != t.inputState.notifiedFocused) {
      let n = dS(t.state, e);
      n ? t.dispatch(n) : t.update([]);
    }
  }, 10);
}
jr.focus = (t) => {
  t.inputState.lastFocusTime = Date.now(), !t.scrollDOM.scrollTop && (t.inputState.lastScrollTop || t.inputState.lastScrollLeft) && (t.scrollDOM.scrollTop = t.inputState.lastScrollTop, t.scrollDOM.scrollLeft = t.inputState.lastScrollLeft), mS(t);
};
jr.blur = (t) => {
  t.observer.clearSelectionRange(), mS(t);
};
jr.compositionstart = jr.compositionupdate = (t) => {
  t.observer.editContext || (t.inputState.compositionFirstChange == null && (t.inputState.compositionFirstChange = !0), t.inputState.composing < 0 && (t.inputState.composing = 0));
};
jr.compositionend = (t) => {
  t.observer.editContext || (t.inputState.composing = -1, t.inputState.compositionEndedAt = Date.now(), t.inputState.compositionPendingKey = !0, t.inputState.compositionPendingChange = t.observer.pendingRecords().length > 0, t.inputState.compositionFirstChange = null, we.chrome && we.android ? t.observer.flushSoon() : t.inputState.compositionPendingChange ? Promise.resolve().then(() => t.observer.flush()) : setTimeout(() => {
    t.inputState.composing < 0 && t.docView.hasComposition && t.update([]);
  }, 50));
};
jr.contextmenu = (t) => {
  t.inputState.lastContextMenu = Date.now();
};
ts.beforeinput = (t, e) => {
  var n, r;
  if (e.inputType == "insertReplacementText" && t.observer.editContext) {
    let i = (n = e.dataTransfer) === null || n === void 0 ? void 0 : n.getData("text/plain"), a = e.getTargetRanges();
    if (i && a.length) {
      let o = a[0], l = t.posAtDOM(o.startContainer, o.startOffset), u = t.posAtDOM(o.endContainer, o.endOffset);
      return om(t, { from: l, to: u, insert: t.state.toText(i) }, null), !0;
    }
  }
  let s;
  if (we.chrome && we.android && (s = lS.find((i) => i.inputType == e.inputType)) && (t.observer.delayAndroidKey(s.key, s.keyCode), s.key == "Backspace" || s.key == "Delete")) {
    let i = ((r = window.visualViewport) === null || r === void 0 ? void 0 : r.height) || 0;
    setTimeout(() => {
      var a;
      (((a = window.visualViewport) === null || a === void 0 ? void 0 : a.height) || 0) > i + 10 && t.hasFocus && (t.contentDOM.blur(), t.focus());
    }, 100);
  }
  return we.ios && e.inputType == "deleteContentForward" && t.observer.flushSoon(), we.safari && e.inputType == "insertText" && t.inputState.composing >= 0 && setTimeout(() => jr.compositionend(t, e), 20), !1;
};
const b0 = /* @__PURE__ */ new Set();
function xM(t) {
  b0.has(t) || (b0.add(t), t.addEventListener("copy", () => {
  }), t.addEventListener("cut", () => {
  }));
}
const y0 = ["pre-wrap", "normal", "pre-line", "break-spaces"];
let Aa = !1;
function O0() {
  Aa = !1;
}
class wM {
  constructor(e) {
    this.lineWrapping = e, this.doc = ht.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30;
  }
  heightForGap(e, n) {
    let r = this.doc.lineAt(n).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (r += Math.max(0, Math.ceil((n - e - r * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * r;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return y0.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let n = !1;
    for (let r = 0; r < e.length; r++) {
      let s = e[r];
      s < 0 ? r++ : this.heightSamples[Math.floor(s * 10)] || (n = !0, this.heightSamples[Math.floor(s * 10)] = !0);
    }
    return n;
  }
  refresh(e, n, r, s, i, a) {
    let o = y0.indexOf(e) > -1, l = Math.round(n) != Math.round(this.lineHeight) || this.lineWrapping != o;
    if (this.lineWrapping = o, this.lineHeight = n, this.charWidth = r, this.textHeight = s, this.lineLength = i, l) {
      this.heightSamples = {};
      for (let u = 0; u < a.length; u++) {
        let h = a[u];
        h < 0 ? u++ : this.heightSamples[Math.floor(h * 10)] = !0;
      }
    }
    return l;
  }
}
class kM {
  constructor(e, n) {
    this.from = e, this.heights = n, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class ms {
  /**
  @internal
  */
  constructor(e, n, r, s, i) {
    this.from = e, this.length = n, this.top = r, this.height = s, this._content = i;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? In.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof ui ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let n = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new ms(this.from, this.length + e.length, this.top, this.height + e.height, n);
  }
}
var Rt = /* @__PURE__ */ function(t) {
  return t[t.ByPos = 0] = "ByPos", t[t.ByHeight = 1] = "ByHeight", t[t.ByPosNoHeight = 2] = "ByPosNoHeight", t;
}(Rt || (Rt = {}));
const bc = 1e-3;
class Nn {
  constructor(e, n, r = 2) {
    this.length = e, this.height = n, this.flags = r;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e) {
    this.height != e && (Math.abs(this.height - e) > bc && (Aa = !0), this.height = e);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, n, r) {
    return Nn.of(r);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, n) {
    n.push(this);
  }
  decomposeRight(e, n) {
    n.push(this);
  }
  applyChanges(e, n, r, s) {
    let i = this, a = r.doc;
    for (let o = s.length - 1; o >= 0; o--) {
      let { fromA: l, toA: u, fromB: h, toB: f } = s[o], m = i.lineAt(l, Rt.ByPosNoHeight, r.setDoc(n), 0, 0), b = m.to >= u ? m : i.lineAt(u, Rt.ByPosNoHeight, r, 0, 0);
      for (f += b.to - u, u = b.to; o > 0 && m.from <= s[o - 1].toA; )
        l = s[o - 1].fromA, h = s[o - 1].fromB, o--, l < m.from && (m = i.lineAt(l, Rt.ByPosNoHeight, r, 0, 0));
      h += m.from - l, l = m.from;
      let v = lm.build(r.setDoc(a), e, h, f);
      i = Ic(i, i.replace(l, u, v));
    }
    return i.updateHeight(r, 0);
  }
  static empty() {
    return new gr(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let n = 0, r = e.length, s = 0, i = 0;
    for (; ; )
      if (n == r)
        if (s > i * 2) {
          let o = e[n - 1];
          o.break ? e.splice(--n, 1, o.left, null, o.right) : e.splice(--n, 1, o.left, o.right), r += 1 + o.break, s -= o.size;
        } else if (i > s * 2) {
          let o = e[r];
          o.break ? e.splice(r, 1, o.left, null, o.right) : e.splice(r, 1, o.left, o.right), r += 2 + o.break, i -= o.size;
        } else
          break;
      else if (s < i) {
        let o = e[n++];
        o && (s += o.size);
      } else {
        let o = e[--r];
        o && (i += o.size);
      }
    let a = 0;
    return e[n - 1] == null ? (a = 1, n--) : e[n] == null && (a = 1, r++), new CM(Nn.of(e.slice(0, n)), a, Nn.of(e.slice(r)));
  }
}
function Ic(t, e) {
  return t == e ? t : (t.constructor != e.constructor && (Aa = !0), e);
}
Nn.prototype.size = 1;
class gS extends Nn {
  constructor(e, n, r) {
    super(e, n), this.deco = r;
  }
  blockAt(e, n, r, s) {
    return new ms(s, this.length, r, this.height, this.deco || 0);
  }
  lineAt(e, n, r, s, i) {
    return this.blockAt(0, r, s, i);
  }
  forEachLine(e, n, r, s, i, a) {
    e <= i + this.length && n >= i && a(this.blockAt(0, r, s, i));
  }
  updateHeight(e, n = 0, r = !1, s) {
    return s && s.from <= n && s.more && this.setHeight(s.heights[s.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class gr extends gS {
  constructor(e, n) {
    super(e, n, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, n, r, s) {
    return new ms(s, this.length, r, this.height, this.breaks);
  }
  replace(e, n, r) {
    let s = r[0];
    return r.length == 1 && (s instanceof gr || s instanceof xn && s.flags & 4) && Math.abs(this.length - s.length) < 10 ? (s instanceof xn ? s = new gr(s.length, this.height) : s.height = this.height, this.outdated || (s.outdated = !1), s) : Nn.of(r);
  }
  updateHeight(e, n = 0, r = !1, s) {
    return s && s.from <= n && s.more ? this.setHeight(s.heights[s.index++]) : (r || this.outdated) && this.setHeight(Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class xn extends Nn {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, n) {
    let r = e.doc.lineAt(n).number, s = e.doc.lineAt(n + this.length).number, i = s - r + 1, a, o = 0;
    if (e.lineWrapping) {
      let l = Math.min(this.height, e.lineHeight * i);
      a = l / i, this.length > i + 1 && (o = (this.height - l) / (this.length - i - 1));
    } else
      a = this.height / i;
    return { firstLine: r, lastLine: s, perLine: a, perChar: o };
  }
  blockAt(e, n, r, s) {
    let { firstLine: i, lastLine: a, perLine: o, perChar: l } = this.heightMetrics(n, s);
    if (n.lineWrapping) {
      let u = s + (e < n.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - r) / this.height)) * this.length)), h = n.doc.lineAt(u), f = o + h.length * l, m = Math.max(r, e - f / 2);
      return new ms(h.from, h.length, m, f, 0);
    } else {
      let u = Math.max(0, Math.min(a - i, Math.floor((e - r) / o))), { from: h, length: f } = n.doc.line(i + u);
      return new ms(h, f, r + o * u, o, 0);
    }
  }
  lineAt(e, n, r, s, i) {
    if (n == Rt.ByHeight)
      return this.blockAt(e, r, s, i);
    if (n == Rt.ByPosNoHeight) {
      let { from: b, to: v } = r.doc.lineAt(e);
      return new ms(b, v - b, 0, 0, 0);
    }
    let { firstLine: a, perLine: o, perChar: l } = this.heightMetrics(r, i), u = r.doc.lineAt(e), h = o + u.length * l, f = u.number - a, m = s + o * f + l * (u.from - i - f);
    return new ms(u.from, u.length, Math.max(s, Math.min(m, s + this.height - h)), h, 0);
  }
  forEachLine(e, n, r, s, i, a) {
    e = Math.max(e, i), n = Math.min(n, i + this.length);
    let { firstLine: o, perLine: l, perChar: u } = this.heightMetrics(r, i);
    for (let h = e, f = s; h <= n; ) {
      let m = r.doc.lineAt(h);
      if (h == e) {
        let v = m.number - o;
        f += l * v + u * (e - i - v);
      }
      let b = l + u * m.length;
      a(new ms(m.from, m.length, f, b, 0)), f += b, h = m.to + 1;
    }
  }
  replace(e, n, r) {
    let s = this.length - n;
    if (s > 0) {
      let i = r[r.length - 1];
      i instanceof xn ? r[r.length - 1] = new xn(i.length + s) : r.push(null, new xn(s - 1));
    }
    if (e > 0) {
      let i = r[0];
      i instanceof xn ? r[0] = new xn(e + i.length) : r.unshift(new xn(e - 1), null);
    }
    return Nn.of(r);
  }
  decomposeLeft(e, n) {
    n.push(new xn(e - 1), null);
  }
  decomposeRight(e, n) {
    n.push(null, new xn(this.length - e - 1));
  }
  updateHeight(e, n = 0, r = !1, s) {
    let i = n + this.length;
    if (s && s.from <= n + this.length && s.more) {
      let a = [], o = Math.max(n, s.from), l = -1;
      for (s.from > n && a.push(new xn(s.from - n - 1).updateHeight(e, n)); o <= i && s.more; ) {
        let h = e.doc.lineAt(o).length;
        a.length && a.push(null);
        let f = s.heights[s.index++];
        l == -1 ? l = f : Math.abs(f - l) >= bc && (l = -2);
        let m = new gr(h, f);
        m.outdated = !1, a.push(m), o += h + 1;
      }
      o <= i && a.push(null, new xn(i - o).updateHeight(e, o));
      let u = Nn.of(a);
      return (l < 0 || Math.abs(u.height - this.height) >= bc || Math.abs(l - this.heightMetrics(e, n).perLine) >= bc) && (Aa = !0), Ic(this, u);
    } else (r || this.outdated) && (this.setHeight(e.heightForGap(n, n + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class CM extends Nn {
  constructor(e, n, r) {
    super(e.length + n + r.length, e.height + r.height, n | (e.outdated || r.outdated ? 2 : 0)), this.left = e, this.right = r, this.size = e.size + r.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, n, r, s) {
    let i = r + this.left.height;
    return e < i ? this.left.blockAt(e, n, r, s) : this.right.blockAt(e, n, i, s + this.left.length + this.break);
  }
  lineAt(e, n, r, s, i) {
    let a = s + this.left.height, o = i + this.left.length + this.break, l = n == Rt.ByHeight ? e < a : e < o, u = l ? this.left.lineAt(e, n, r, s, i) : this.right.lineAt(e, n, r, a, o);
    if (this.break || (l ? u.to < o : u.from > o))
      return u;
    let h = n == Rt.ByPosNoHeight ? Rt.ByPosNoHeight : Rt.ByPos;
    return l ? u.join(this.right.lineAt(o, h, r, a, o)) : this.left.lineAt(o, h, r, s, i).join(u);
  }
  forEachLine(e, n, r, s, i, a) {
    let o = s + this.left.height, l = i + this.left.length + this.break;
    if (this.break)
      e < l && this.left.forEachLine(e, n, r, s, i, a), n >= l && this.right.forEachLine(e, n, r, o, l, a);
    else {
      let u = this.lineAt(l, Rt.ByPos, r, s, i);
      e < u.from && this.left.forEachLine(e, u.from - 1, r, s, i, a), u.to >= e && u.from <= n && a(u), n > u.to && this.right.forEachLine(u.to + 1, n, r, o, l, a);
    }
  }
  replace(e, n, r) {
    let s = this.left.length + this.break;
    if (n < s)
      return this.balanced(this.left.replace(e, n, r), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - s, n - s, r));
    let i = [];
    e > 0 && this.decomposeLeft(e, i);
    let a = i.length;
    for (let o of r)
      i.push(o);
    if (e > 0 && v0(i, a - 1), n < this.length) {
      let o = i.length;
      this.decomposeRight(n, i), v0(i, o);
    }
    return Nn.of(i);
  }
  decomposeLeft(e, n) {
    let r = this.left.length;
    if (e <= r)
      return this.left.decomposeLeft(e, n);
    n.push(this.left), this.break && (r++, e >= r && n.push(null)), e > r && this.right.decomposeLeft(e - r, n);
  }
  decomposeRight(e, n) {
    let r = this.left.length, s = r + this.break;
    if (e >= s)
      return this.right.decomposeRight(e - s, n);
    e < r && this.left.decomposeRight(e, n), this.break && e < s && n.push(null), n.push(this.right);
  }
  balanced(e, n) {
    return e.size > 2 * n.size || n.size > 2 * e.size ? Nn.of(this.break ? [e, null, n] : [e, n]) : (this.left = Ic(this.left, e), this.right = Ic(this.right, n), this.setHeight(e.height + n.height), this.outdated = e.outdated || n.outdated, this.size = e.size + n.size, this.length = e.length + this.break + n.length, this);
  }
  updateHeight(e, n = 0, r = !1, s) {
    let { left: i, right: a } = this, o = n + i.length + this.break, l = null;
    return s && s.from <= n + i.length && s.more ? l = i = i.updateHeight(e, n, r, s) : i.updateHeight(e, n, r), s && s.from <= o + a.length && s.more ? l = a = a.updateHeight(e, o, r, s) : a.updateHeight(e, o, r), l ? this.balanced(i, a) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function v0(t, e) {
  let n, r;
  t[e] == null && (n = t[e - 1]) instanceof xn && (r = t[e + 1]) instanceof xn && t.splice(e - 1, 3, new xn(n.length + 1 + r.length));
}
const SM = 5;
class lm {
  constructor(e, n) {
    this.pos = e, this.oracle = n, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, n) {
    if (this.lineStart > -1) {
      let r = Math.min(n, this.lineEnd), s = this.nodes[this.nodes.length - 1];
      s instanceof gr ? s.length += r - this.pos : (r > this.pos || !this.isCovered) && this.nodes.push(new gr(r - this.pos, -1)), this.writtenTo = r, n > r && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = n;
  }
  point(e, n, r) {
    if (e < n || r.heightRelevant) {
      let s = r.widget ? r.widget.estimatedHeight : 0, i = r.widget ? r.widget.lineBreaks : 0;
      s < 0 && (s = this.oracle.lineHeight);
      let a = n - e;
      r.block ? this.addBlock(new gS(a, s, r)) : (a || i || s >= SM) && this.addLineDeco(s, i, a);
    } else n > e && this.span(e, n);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: n } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = n, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new gr(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, n) {
    let r = new xn(n - e);
    return this.oracle.doc.lineAt(e).to == n && (r.flags |= 4), r;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof gr)
      return e;
    let n = new gr(0, -1);
    return this.nodes.push(n), n;
  }
  addBlock(e) {
    this.enterLine();
    let n = e.deco;
    n && n.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, n && n.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, n, r) {
    let s = this.ensureLine();
    s.length += r, s.collapsed += r, s.widgetHeight = Math.max(s.widgetHeight, e), s.breaks += n, this.writtenTo = this.pos = this.pos + r;
  }
  finish(e) {
    let n = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(n instanceof gr) && !this.isCovered ? this.nodes.push(new gr(0, -1)) : (this.writtenTo < this.pos || n == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let r = e;
    for (let s of this.nodes)
      s instanceof gr && s.updateHeight(this.oracle, r), r += s ? s.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, n, r, s) {
    let i = new lm(r, e);
    return mt.spans(n, r, s, i, 0), i.finish(r);
  }
}
function AM(t, e, n) {
  let r = new PM();
  return mt.compare(t, e, n, r, 0), r.changes;
}
class PM {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, n, r, s) {
    (e < n || r && r.heightRelevant || s && s.heightRelevant) && mc(e, n, this.changes, 5);
  }
}
function DM(t, e) {
  let n = t.getBoundingClientRect(), r = t.ownerDocument, s = r.defaultView || window, i = Math.max(0, n.left), a = Math.min(s.innerWidth, n.right), o = Math.max(0, n.top), l = Math.min(s.innerHeight, n.bottom);
  for (let u = t.parentNode; u && u != r.body; )
    if (u.nodeType == 1) {
      let h = u, f = window.getComputedStyle(h);
      if ((h.scrollHeight > h.clientHeight || h.scrollWidth > h.clientWidth) && f.overflow != "visible") {
        let m = h.getBoundingClientRect();
        i = Math.max(i, m.left), a = Math.min(a, m.right), o = Math.max(o, m.top), l = Math.min(u == t.parentNode ? s.innerHeight : l, m.bottom);
      }
      u = f.position == "absolute" || f.position == "fixed" ? h.offsetParent : h.parentNode;
    } else if (u.nodeType == 11)
      u = u.host;
    else
      break;
  return {
    left: i - n.left,
    right: Math.max(i, a) - n.left,
    top: o - (n.top + e),
    bottom: Math.max(o, l) - (n.top + e)
  };
}
function EM(t) {
  let e = t.getBoundingClientRect(), n = t.ownerDocument.defaultView || window;
  return e.left < n.innerWidth && e.right > 0 && e.top < n.innerHeight && e.bottom > 0;
}
function FM(t, e) {
  let n = t.getBoundingClientRect();
  return {
    left: 0,
    right: n.right - n.left,
    top: e,
    bottom: n.bottom - (n.top + e)
  };
}
class Jh {
  constructor(e, n, r, s) {
    this.from = e, this.to = n, this.size = r, this.displaySize = s;
  }
  static same(e, n) {
    if (e.length != n.length)
      return !1;
    for (let r = 0; r < e.length; r++) {
      let s = e[r], i = n[r];
      if (s.from != i.from || s.to != i.to || s.size != i.size)
        return !1;
    }
    return !0;
  }
  draw(e, n) {
    return Be.replace({
      widget: new BM(this.displaySize * (n ? e.scaleY : e.scaleX), n)
    }).range(this.from, this.to);
  }
}
class BM extends ns {
  constructor(e, n) {
    super(), this.size = e, this.vertical = n;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class x0 {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !1, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = w0, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = Et.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let n = e.facet(sm).some((r) => typeof r != "function" && r.class == "cm-lineWrapping");
    this.heightOracle = new wM(n), this.stateDeco = e.facet($o).filter((r) => typeof r != "function"), this.heightMap = Nn.empty().applyChanges(this.stateDeco, ht.empty, this.heightOracle.setDoc(e.doc), [new Qr(0, 0, 0, e.doc.length)]);
    for (let r = 0; r < 2 && (this.viewport = this.getViewport(0, null), !!this.updateForViewport()); r++)
      ;
    this.updateViewportLines(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = Be.set(this.lineGaps.map((r) => r.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: n } = this.state.selection;
    for (let r = 0; r <= 1; r++) {
      let s = r ? n.head : n.anchor;
      if (!e.some(({ from: i, to: a }) => s >= i && s <= a)) {
        let { from: i, to: a } = this.lineBlockAt(s);
        e.push(new Gl(i, a));
      }
    }
    return this.viewports = e.sort((r, s) => r.from - s.from), this.updateScaler();
  }
  updateScaler() {
    let e = this.scaler;
    return this.scaler = this.heightMap.height <= 7e6 ? w0 : new cm(this.heightOracle, this.heightMap, this.viewports), e.eq(this.scaler) ? 0 : 2;
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(go(e, this.scaler));
    });
  }
  update(e, n = null) {
    this.state = e.state;
    let r = this.stateDeco;
    this.stateDeco = this.state.facet($o).filter((h) => typeof h != "function");
    let s = e.changedRanges, i = Qr.extendWithRanges(s, AM(r, this.stateDeco, e ? e.changes : pn.empty(this.state.doc.length))), a = this.heightMap.height, o = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    O0(), this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), i), (this.heightMap.height != a || Aa) && (e.flags |= 2), o ? (this.scrollAnchorPos = e.changes.mapPos(o.from, -1), this.scrollAnchorHeight = o.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);
    let l = i.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (n && (n.range.head < l.from || n.range.head > l.to) || !this.viewportIsAppropriate(l)) && (l = this.getViewport(0, n));
    let u = l.from != this.viewport.from || l.to != this.viewport.to;
    this.viewport = l, e.flags |= this.updateForViewport(), (u || !e.changes.empty || e.flags & 2) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(e.changes), n && (this.scrollTarget = n), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(KC) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let n = e.contentDOM, r = window.getComputedStyle(n), s = this.heightOracle, i = r.whiteSpace;
    this.defaultTextDirection = r.direction == "rtl" ? Et.RTL : Et.LTR;
    let a = this.heightOracle.mustRefreshForWrapping(i), o = n.getBoundingClientRect(), l = a || this.mustMeasureContent || this.contentDOMHeight != o.height;
    this.contentDOMHeight = o.height, this.mustMeasureContent = !1;
    let u = 0, h = 0;
    if (o.width && o.height) {
      let { scaleX: _, scaleY: M } = SC(n, o);
      (_ > 5e-3 && Math.abs(this.scaleX - _) > 5e-3 || M > 5e-3 && Math.abs(this.scaleY - M) > 5e-3) && (this.scaleX = _, this.scaleY = M, u |= 16, a = l = !0);
    }
    let f = (parseInt(r.paddingTop) || 0) * this.scaleY, m = (parseInt(r.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != f || this.paddingBottom != m) && (this.paddingTop = f, this.paddingBottom = m, u |= 18), this.editorWidth != e.scrollDOM.clientWidth && (s.lineWrapping && (l = !0), this.editorWidth = e.scrollDOM.clientWidth, u |= 16);
    let b = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != b && (this.scrollAnchorHeight = -1, this.scrollTop = b), this.scrolledToBottom = DC(e.scrollDOM);
    let v = (this.printing ? FM : DM)(n, this.paddingTop), C = v.top - this.pixelViewport.top, S = v.bottom - this.pixelViewport.bottom;
    this.pixelViewport = v;
    let B = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (B != this.inView && (this.inView = B, B && (l = !0)), !this.inView && !this.scrollTarget && !EM(e.dom))
      return 0;
    let $ = o.width;
    if ((this.contentDOMWidth != $ || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = o.width, this.editorHeight = e.scrollDOM.clientHeight, u |= 16), l) {
      let _ = e.docView.measureVisibleLineHeights(this.viewport);
      if (s.mustRefreshForHeights(_) && (a = !0), a || s.lineWrapping && Math.abs($ - this.contentDOMWidth) > s.charWidth) {
        let { lineHeight: M, charWidth: Z, textHeight: N } = e.docView.measureTextSize();
        a = M > 0 && s.refresh(i, M, Z, N, $ / Z, _), a && (e.docView.minWidth = 0, u |= 16);
      }
      C > 0 && S > 0 ? h = Math.max(C, S) : C < 0 && S < 0 && (h = Math.min(C, S)), O0();
      for (let M of this.viewports) {
        let Z = M.from == this.viewport.from ? _ : e.docView.measureVisibleLineHeights(M);
        this.heightMap = (a ? Nn.empty().applyChanges(this.stateDeco, ht.empty, this.heightOracle, [new Qr(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(s, 0, a, new kM(M.from, Z));
      }
      Aa && (u |= 2);
    }
    let W = !this.viewportIsAppropriate(this.viewport, h) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return W && (u & 2 && (u |= this.updateScaler()), this.viewport = this.getViewport(h, this.scrollTarget), u |= this.updateForViewport()), (u & 2 || W) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(a ? [] : this.lineGaps, e)), u |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), u;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, n) {
    let r = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), s = this.heightMap, i = this.heightOracle, { visibleTop: a, visibleBottom: o } = this, l = new Gl(s.lineAt(a - r * 1e3, Rt.ByHeight, i, 0, 0).from, s.lineAt(o + (1 - r) * 1e3, Rt.ByHeight, i, 0, 0).to);
    if (n) {
      let { head: u } = n.range;
      if (u < l.from || u > l.to) {
        let h = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), f = s.lineAt(u, Rt.ByPos, i, 0, 0), m;
        n.y == "center" ? m = (f.top + f.bottom) / 2 - h / 2 : n.y == "start" || n.y == "nearest" && u < l.from ? m = f.top : m = f.bottom - h, l = new Gl(s.lineAt(m - 1e3 / 2, Rt.ByHeight, i, 0, 0).from, s.lineAt(m + h + 1e3 / 2, Rt.ByHeight, i, 0, 0).to);
      }
    }
    return l;
  }
  mapViewport(e, n) {
    let r = n.mapPos(e.from, -1), s = n.mapPos(e.to, 1);
    return new Gl(this.heightMap.lineAt(r, Rt.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(s, Rt.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: n }, r = 0) {
    if (!this.inView)
      return !0;
    let { top: s } = this.heightMap.lineAt(e, Rt.ByPos, this.heightOracle, 0, 0), { bottom: i } = this.heightMap.lineAt(n, Rt.ByPos, this.heightOracle, 0, 0), { visibleTop: a, visibleBottom: o } = this;
    return (e == 0 || s <= a - Math.max(10, Math.min(
      -r,
      250
      /* VP.MaxCoverMargin */
    ))) && (n == this.state.doc.length || i >= o + Math.max(10, Math.min(
      r,
      250
      /* VP.MaxCoverMargin */
    ))) && s > a - 2 * 1e3 && i < o + 2 * 1e3;
  }
  mapLineGaps(e, n) {
    if (!e.length || n.empty)
      return e;
    let r = [];
    for (let s of e)
      n.touchesRange(s.from, s.to) || r.push(new Jh(n.mapPos(s.from), n.mapPos(s.to), s.size, s.displaySize));
    return r;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, n) {
    let r = this.heightOracle.lineWrapping, s = r ? 1e4 : 2e3, i = s >> 1, a = s << 1;
    if (this.defaultTextDirection != Et.LTR && !r)
      return [];
    let o = [], l = (h, f, m, b) => {
      if (f - h < i)
        return;
      let v = this.state.selection.main, C = [v.from];
      v.empty || C.push(v.to);
      for (let B of C)
        if (B > h && B < f) {
          l(h, B - 10, m, b), l(B + 10, f, m, b);
          return;
        }
      let S = TM(e, (B) => B.from >= m.from && B.to <= m.to && Math.abs(B.from - h) < i && Math.abs(B.to - f) < i && !C.some(($) => B.from < $ && B.to > $));
      if (!S) {
        if (f < m.to && n && r && n.visibleRanges.some((W) => W.from <= f && W.to >= f)) {
          let W = n.moveToLineBoundary(ne.cursor(f), !1, !0).head;
          W > h && (f = W);
        }
        let B = this.gapSize(m, h, f, b), $ = r || B < 2e6 ? B : 2e6;
        S = new Jh(h, f, B, $);
      }
      o.push(S);
    }, u = (h) => {
      if (h.length < a || h.type != In.Text)
        return;
      let f = MM(h.from, h.to, this.stateDeco);
      if (f.total < a)
        return;
      let m = this.scrollTarget ? this.scrollTarget.range.head : null, b, v;
      if (r) {
        let C = s / this.heightOracle.lineLength * this.heightOracle.lineHeight, S, B;
        if (m != null) {
          let $ = Yl(f, m), W = ((this.visibleBottom - this.visibleTop) / 2 + C) / h.height;
          S = $ - W, B = $ + W;
        } else
          S = (this.visibleTop - h.top - C) / h.height, B = (this.visibleBottom - h.top + C) / h.height;
        b = zl(f, S), v = zl(f, B);
      } else {
        let C = f.total * this.heightOracle.charWidth, S = s * this.heightOracle.charWidth, B = 0;
        if (C > 2e6)
          for (let Z of e)
            Z.from >= h.from && Z.from < h.to && Z.size != Z.displaySize && Z.from * this.heightOracle.charWidth + B < this.pixelViewport.left && (B = Z.size - Z.displaySize);
        let $ = this.pixelViewport.left + B, W = this.pixelViewport.right + B, _, M;
        if (m != null) {
          let Z = Yl(f, m), N = ((W - $) / 2 + S) / C;
          _ = Z - N, M = Z + N;
        } else
          _ = ($ - S) / C, M = (W + S) / C;
        b = zl(f, _), v = zl(f, M);
      }
      b > h.from && l(h.from, b, h, f), v < h.to && l(v, h.to, h, f);
    };
    for (let h of this.viewportLines)
      Array.isArray(h.type) ? h.type.forEach(u) : u(h);
    return o;
  }
  gapSize(e, n, r, s) {
    let i = Yl(s, r) - Yl(s, n);
    return this.heightOracle.lineWrapping ? e.height * i : s.total * this.heightOracle.charWidth * i;
  }
  updateLineGaps(e) {
    Jh.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = Be.set(e.map((n) => n.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges(e) {
    let n = this.stateDeco;
    this.lineGaps.length && (n = n.concat(this.lineGapDeco));
    let r = [];
    mt.spans(n, this.viewport.from, this.viewport.to, {
      span(i, a) {
        r.push({ from: i, to: a });
      },
      point() {
      }
    }, 20);
    let s = 0;
    if (r.length != this.visibleRanges.length)
      s = 12;
    else
      for (let i = 0; i < r.length && !(s & 8); i++) {
        let a = this.visibleRanges[i], o = r[i];
        (a.from != o.from || a.to != o.to) && (s |= 4, e && e.mapPos(a.from, -1) == o.from && e.mapPos(a.to, 1) == o.to || (s |= 8));
      }
    return this.visibleRanges = r, s;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((n) => n.from <= e && n.to >= e) || go(this.heightMap.lineAt(e, Rt.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return e >= this.viewportLines[0].top && e <= this.viewportLines[this.viewportLines.length - 1].bottom && this.viewportLines.find((n) => n.top <= e && n.bottom >= e) || go(this.heightMap.lineAt(this.scaler.fromDOM(e), Rt.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let n = this.lineBlockAtHeight(e + 8);
    return n.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? n : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return go(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class Gl {
  constructor(e, n) {
    this.from = e, this.to = n;
  }
}
function MM(t, e, n) {
  let r = [], s = t, i = 0;
  return mt.spans(n, t, e, {
    span() {
    },
    point(a, o) {
      a > s && (r.push({ from: s, to: a }), i += a - s), s = o;
    }
  }, 20), s < e && (r.push({ from: s, to: e }), i += e - s), { total: i, ranges: r };
}
function zl({ total: t, ranges: e }, n) {
  if (n <= 0)
    return e[0].from;
  if (n >= 1)
    return e[e.length - 1].to;
  let r = Math.floor(t * n);
  for (let s = 0; ; s++) {
    let { from: i, to: a } = e[s], o = a - i;
    if (r <= o)
      return i + r;
    r -= o;
  }
}
function Yl(t, e) {
  let n = 0;
  for (let { from: r, to: s } of t.ranges) {
    if (e <= s) {
      n += e - r;
      break;
    }
    n += s - r;
  }
  return n / t.total;
}
function TM(t, e) {
  for (let n of t)
    if (e(n))
      return n;
}
const w0 = {
  toDOM(t) {
    return t;
  },
  fromDOM(t) {
    return t;
  },
  scale: 1,
  eq(t) {
    return t == this;
  }
};
class cm {
  constructor(e, n, r) {
    let s = 0, i = 0, a = 0;
    this.viewports = r.map(({ from: o, to: l }) => {
      let u = n.lineAt(o, Rt.ByPos, e, 0, 0).top, h = n.lineAt(l, Rt.ByPos, e, 0, 0).bottom;
      return s += h - u, { from: o, to: l, top: u, bottom: h, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - s) / (n.height - s);
    for (let o of this.viewports)
      o.domTop = a + (o.top - i) * this.scale, a = o.domBottom = o.domTop + (o.bottom - o.top), i = o.bottom;
  }
  toDOM(e) {
    for (let n = 0, r = 0, s = 0; ; n++) {
      let i = n < this.viewports.length ? this.viewports[n] : null;
      if (!i || e < i.top)
        return s + (e - r) * this.scale;
      if (e <= i.bottom)
        return i.domTop + (e - i.top);
      r = i.bottom, s = i.domBottom;
    }
  }
  fromDOM(e) {
    for (let n = 0, r = 0, s = 0; ; n++) {
      let i = n < this.viewports.length ? this.viewports[n] : null;
      if (!i || e < i.domTop)
        return r + (e - s) / this.scale;
      if (e <= i.domBottom)
        return i.top + (e - i.domTop);
      r = i.bottom, s = i.domBottom;
    }
  }
  eq(e) {
    return e instanceof cm ? this.scale == e.scale && this.viewports.length == e.viewports.length && this.viewports.every((n, r) => n.from == e.viewports[r].from && n.to == e.viewports[r].to) : !1;
  }
}
function go(t, e) {
  if (e.scale == 1)
    return t;
  let n = e.toDOM(t.top), r = e.toDOM(t.bottom);
  return new ms(t.from, t.length, n, r - n, Array.isArray(t._content) ? t._content.map((s) => go(s, e)) : t._content);
}
const Hl = /* @__PURE__ */ Ae.define({ combine: (t) => t.join(" ") }), mf = /* @__PURE__ */ Ae.define({ combine: (t) => t.indexOf(!0) > -1 }), gf = /* @__PURE__ */ li.newName(), bS = /* @__PURE__ */ li.newName(), yS = /* @__PURE__ */ li.newName(), OS = { "&light": "." + bS, "&dark": "." + yS };
function bf(t, e, n) {
  return new li(e, {
    finish(r) {
      return /&/.test(r) ? r.replace(/&\w*/, (s) => {
        if (s == "&")
          return t;
        if (!n || !n[s])
          throw new RangeError(`Unsupported selector: ${s}`);
        return n[s];
      }) : t + " " + r;
    }
  });
}
const QM = /* @__PURE__ */ bf("." + gf, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0,
    overflowAnchor: "none"
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#ddd"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    insetInlineStart: 0,
    zIndex: 200
  },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    borderRight: "1px solid #ddd"
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0,
    zIndex: 300
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top"
  },
  ".cm-highlightSpace": {
    backgroundImage: "radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)",
    backgroundPosition: "center"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, OS), jM = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, ep = we.ie && we.ie_version <= 11;
class _M {
  constructor(e) {
    this.view = e, this.active = !1, this.editContext = null, this.selectionRange = new O6(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.printQuery = null, this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((n) => {
      for (let r of n)
        this.queue.push(r);
      (we.ie && we.ie_version <= 11 || we.ios && e.composing) && n.some((r) => r.type == "childList" && r.removedNodes.length || r.type == "characterData" && r.oldValue.length > r.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), window.EditContext && e.constructor.EDIT_CONTEXT !== !1 && // Chrome <126 doesn't support inverted selections in edit context (#1392)
    !(we.chrome && we.chrome_version < 126) && (this.editContext = new ZM(e), e.state.facet(Ms) && (e.contentDOM.editContext = this.editContext.editContext)), ep && (this.onCharData = (n) => {
      this.queue.push({
        target: n.target,
        type: "characterData",
        oldValue: n.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), window.matchMedia && (this.printQuery = window.matchMedia("print")), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var n;
      ((n = this.view.docView) === null || n === void 0 ? void 0 : n.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((n) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), n.length > 0 && n[n.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((n) => {
      n.length > 0 && n[n.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.editContext && this.view.requestMeasure(this.editContext.measureReq), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint(e) {
    (e.type == "change" || !e.type) && !e.matches || (this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500));
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((n, r) => n != e[r]))) {
      this.gapIntersection.disconnect();
      for (let n of e)
        this.gapIntersection.observe(n);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let n = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: r } = this, s = this.selectionRange;
    if (r.state.facet(Ms) ? r.root.activeElement != this.dom : !dc(this.dom, s))
      return;
    let i = s.anchorNode && r.docView.nearest(s.anchorNode);
    if (i && i.ignoreEvent(e)) {
      n || (this.selectionChanged = !1);
      return;
    }
    (we.ie && we.ie_version <= 11 || we.android && we.chrome) && !r.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    s.focusNode && Co(s.focusNode, s.focusOffset, s.anchorNode, s.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, n = Ro(e.root);
    if (!n)
      return !1;
    let r = we.safari && e.root.nodeType == 11 && e.root.activeElement == this.dom && RM(this.view, n) || n;
    if (!r || this.selectionRange.eq(r))
      return !1;
    let s = dc(this.dom, r);
    return s && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && x6(this.dom, r) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(r), s && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, n) {
    this.selectionRange.set(e.node, e.offset, n.node, n.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, n = null;
    for (let r = this.dom; r; )
      if (r.nodeType == 1)
        !n && e < this.scrollTargets.length && this.scrollTargets[e] == r ? e++ : n || (n = this.scrollTargets.slice(0, e)), n && n.push(r), r = r.assignedSlot || r.parentNode;
      else if (r.nodeType == 11)
        r = r.host;
      else
        break;
    if (e < this.scrollTargets.length && !n && (n = this.scrollTargets.slice(0, e)), n) {
      for (let r of this.scrollTargets)
        r.removeEventListener("scroll", this.onScroll);
      for (let r of this.scrollTargets = n)
        r.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, jM), ep && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), ep && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, n) {
    var r;
    if (!this.delayedAndroidKey) {
      let s = () => {
        let i = this.delayedAndroidKey;
        i && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = i.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && i.force && pa(this.dom, i.key, i.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(s);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: n,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((r = this.delayedAndroidKey) === null || r === void 0) && r.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let n = -1, r = -1, s = !1;
    for (let i of e) {
      let a = this.readMutation(i);
      a && (a.typeOver && (s = !0), n == -1 ? { from: n, to: r } = a : (n = Math.min(a.from, n), r = Math.max(a.to, r)));
    }
    return { from: n, to: r, typeOver: s };
  }
  readChange() {
    let { from: e, to: n, typeOver: r } = this.processRecords(), s = this.selectionChanged && dc(this.dom, this.selectionRange);
    if (e < 0 && !s)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let i = new eM(this.view, e, n, r);
    return this.view.docView.domChanged = { newSel: i.newSel ? i.newSel.main : null }, i;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let n = this.readChange();
    if (!n)
      return this.view.requestMeasure(), !1;
    let r = this.view.state, s = oS(this.view, n);
    return this.view.state == r && (n.domChanged || n.newSel && !n.newSel.main.eq(this.view.state.selection.main)) && this.view.update([]), s;
  }
  readMutation(e) {
    let n = this.view.docView.nearest(e.target);
    if (!n || n.ignoreMutation(e))
      return null;
    if (n.markDirty(e.type == "attributes"), e.type == "attributes" && (n.flags |= 4), e.type == "childList") {
      let r = k0(n, e.previousSibling || e.target.previousSibling, -1), s = k0(n, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: r ? n.posAfter(r) : n.posAtStart,
        to: s ? n.posBefore(s) : n.posAtEnd,
        typeOver: !1
      };
    } else return e.type == "characterData" ? { from: n.posAtStart, to: n.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener ? this.printQuery.addEventListener("change", this.onPrint) : this.printQuery.addListener(this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener ? this.printQuery.removeEventListener("change", this.onPrint) : this.printQuery.removeListener(this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  update(e) {
    this.editContext && (this.editContext.update(e), e.startState.facet(Ms) != e.state.facet(Ms) && (e.view.contentDOM.editContext = e.state.facet(Ms) ? this.editContext.editContext : null));
  }
  destroy() {
    var e, n, r;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (n = this.gapIntersection) === null || n === void 0 || n.disconnect(), (r = this.resizeScroll) === null || r === void 0 || r.disconnect();
    for (let s of this.scrollTargets)
      s.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey), this.editContext && (this.view.contentDOM.editContext = null, this.editContext.destroy());
  }
}
function k0(t, e, n) {
  for (; e; ) {
    let r = Dt.get(e);
    if (r && r.parent == t)
      return r;
    let s = e.parentNode;
    e = s != t.dom ? s : n > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function C0(t, e) {
  let n = e.startContainer, r = e.startOffset, s = e.endContainer, i = e.endOffset, a = t.docView.domAtPos(t.state.selection.main.anchor);
  return Co(a.node, a.offset, s, i) && ([n, r, s, i] = [s, i, n, r]), { anchorNode: n, anchorOffset: r, focusNode: s, focusOffset: i };
}
function RM(t, e) {
  if (e.getComposedRanges) {
    let s = e.getComposedRanges(t.root)[0];
    if (s)
      return C0(t, s);
  }
  let n = null;
  function r(s) {
    s.preventDefault(), s.stopImmediatePropagation(), n = s.getTargetRanges()[0];
  }
  return t.contentDOM.addEventListener("beforeinput", r, !0), t.dom.ownerDocument.execCommand("indent"), t.contentDOM.removeEventListener("beforeinput", r, !0), n ? C0(t, n) : null;
}
class ZM {
  constructor(e) {
    this.from = 0, this.to = 0, this.pendingContextChange = null, this.handlers = /* @__PURE__ */ Object.create(null), this.composing = null, this.resetRange(e.state);
    let n = this.editContext = new window.EditContext({
      text: e.state.doc.sliceString(this.from, this.to),
      selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, e.state.selection.main.anchor))),
      selectionEnd: this.toContextPos(e.state.selection.main.head)
    });
    this.handlers.textupdate = (r) => {
      let s = e.state.selection.main, { anchor: i, head: a } = s, o = this.toEditorPos(r.updateRangeStart), l = this.toEditorPos(r.updateRangeEnd);
      e.inputState.composing >= 0 && !this.composing && (this.composing = { contextBase: r.updateRangeStart, editorBase: o, drifted: !1 });
      let u = { from: o, to: l, insert: ht.of(r.text.split(`
`)) };
      if (u.from == this.from && i < this.from ? u.from = i : u.to == this.to && i > this.to && (u.to = i), u.from == u.to && !u.insert.length) {
        let h = ne.single(this.toEditorPos(r.selectionStart), this.toEditorPos(r.selectionEnd));
        h.main.eq(s) || e.dispatch({ selection: h, userEvent: "select" });
        return;
      }
      if ((we.mac || we.android) && u.from == a - 1 && /^\. ?$/.test(r.text) && e.contentDOM.getAttribute("autocorrect") == "off" && (u = { from: o, to: l, insert: ht.of([r.text.replace(".", " ")]) }), this.pendingContextChange = u, !e.state.readOnly) {
        let h = this.to - this.from + (u.to - u.from + u.insert.length);
        om(e, u, ne.single(this.toEditorPos(r.selectionStart, h), this.toEditorPos(r.selectionEnd, h)));
      }
      this.pendingContextChange && (this.revertPending(e.state), this.setSelection(e.state));
    }, this.handlers.characterboundsupdate = (r) => {
      let s = [], i = null;
      for (let a = this.toEditorPos(r.rangeStart), o = this.toEditorPos(r.rangeEnd); a < o; a++) {
        let l = e.coordsForChar(a);
        i = l && new DOMRect(l.left, l.top, l.right - l.left, l.bottom - l.top) || i || new DOMRect(), s.push(i);
      }
      n.updateCharacterBounds(r.rangeStart, s);
    }, this.handlers.textformatupdate = (r) => {
      let s = [];
      for (let i of r.getTextFormats()) {
        let a = i.underlineStyle, o = i.underlineThickness;
        if (a != "None" && o != "None") {
          let l = this.toEditorPos(i.rangeStart), u = this.toEditorPos(i.rangeEnd);
          if (l < u) {
            let h = `text-decoration: underline ${a == "Dashed" ? "dashed " : a == "Squiggle" ? "wavy " : ""}${o == "Thin" ? 1 : 2}px`;
            s.push(Be.mark({ attributes: { style: h } }).range(l, u));
          }
        }
      }
      e.dispatch({ effects: eS.of(Be.set(s)) });
    }, this.handlers.compositionstart = () => {
      e.inputState.composing < 0 && (e.inputState.composing = 0, e.inputState.compositionFirstChange = !0);
    }, this.handlers.compositionend = () => {
      if (e.inputState.composing = -1, e.inputState.compositionFirstChange = null, this.composing) {
        let { drifted: r } = this.composing;
        this.composing = null, r && this.reset(e.state);
      }
    };
    for (let r in this.handlers)
      n.addEventListener(r, this.handlers[r]);
    this.measureReq = { read: (r) => {
      this.editContext.updateControlBounds(r.contentDOM.getBoundingClientRect());
      let s = Ro(r.root);
      s && s.rangeCount && this.editContext.updateSelectionBounds(s.getRangeAt(0).getBoundingClientRect());
    } };
  }
  applyEdits(e) {
    let n = 0, r = !1, s = this.pendingContextChange;
    return e.changes.iterChanges((i, a, o, l, u) => {
      if (r)
        return;
      let h = u.length - (a - i);
      if (s && a >= s.to)
        if (s.from == i && s.to == a && s.insert.eq(u)) {
          s = this.pendingContextChange = null, n += h, this.to += h;
          return;
        } else
          s = null, this.revertPending(e.state);
      if (i += n, a += n, a <= this.from)
        this.from += h, this.to += h;
      else if (i < this.to) {
        if (i < this.from || a > this.to || this.to - this.from + u.length > 3e4) {
          r = !0;
          return;
        }
        this.editContext.updateText(this.toContextPos(i), this.toContextPos(a), u.toString()), this.to += h;
      }
      n += h;
    }), s && !r && this.revertPending(e.state), !r;
  }
  update(e) {
    let n = this.pendingContextChange;
    this.composing && (this.composing.drifted || e.transactions.some((r) => !r.isUserEvent("input.type") && r.changes.touchesRange(this.from, this.to))) ? (this.composing.drifted = !0, this.composing.editorBase = e.changes.mapPos(this.composing.editorBase)) : !this.applyEdits(e) || !this.rangeIsValid(e.state) ? (this.pendingContextChange = null, this.reset(e.state)) : (e.docChanged || e.selectionSet || n) && this.setSelection(e.state), (e.geometryChanged || e.docChanged || e.selectionSet) && e.view.requestMeasure(this.measureReq);
  }
  resetRange(e) {
    let { head: n } = e.selection.main;
    this.from = Math.max(
      0,
      n - 1e4
      /* CxVp.Margin */
    ), this.to = Math.min(
      e.doc.length,
      n + 1e4
      /* CxVp.Margin */
    );
  }
  reset(e) {
    this.resetRange(e), this.editContext.updateText(0, this.editContext.text.length, e.doc.sliceString(this.from, this.to)), this.setSelection(e);
  }
  revertPending(e) {
    let n = this.pendingContextChange;
    this.pendingContextChange = null, this.editContext.updateText(this.toContextPos(n.from), this.toContextPos(n.from + n.insert.length), e.doc.sliceString(n.from, n.to));
  }
  setSelection(e) {
    let { main: n } = e.selection, r = this.toContextPos(Math.max(this.from, Math.min(this.to, n.anchor))), s = this.toContextPos(n.head);
    (this.editContext.selectionStart != r || this.editContext.selectionEnd != s) && this.editContext.updateSelection(r, s);
  }
  rangeIsValid(e) {
    let { head: n } = e.selection.main;
    return !(this.from > 0 && n - this.from < 500 || this.to < e.doc.length && this.to - n < 500 || this.to - this.from > 1e4 * 3);
  }
  toEditorPos(e, n = this.to - this.from) {
    e = Math.min(e, n);
    let r = this.composing;
    return r && r.drifted ? r.editorBase + (e - r.contextBase) : e + this.from;
  }
  toContextPos(e) {
    let n = this.composing;
    return n && n.drifted ? n.contextBase + (e - n.editorBase) : e - this.from;
  }
  destroy() {
    for (let e in this.handlers)
      this.editContext.removeEventListener(e, this.handlers[e]);
  }
}
class ye {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    var n;
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: r } = e;
    this.dispatchTransactions = e.dispatchTransactions || r && ((s) => s.forEach((i) => r(i, this))) || ((s) => this.update(s)), this.dispatch = this.dispatch.bind(this), this._root = e.root || v6(e.parent) || document, this.viewState = new x0(e.state || ft.create(e)), e.scrollTo && e.scrollTo.is(Wl) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(po).map((s) => new Yh(s));
    for (let s of this.plugins)
      s.update(this);
    this.observer = new _M(this), this.inputState = new iM(this), this.inputState.ensureHandlers(this.plugins), this.docView = new n0(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure(), !((n = document.fonts) === null || n === void 0) && n.ready && document.fonts.ready.then(() => this.requestMeasure());
  }
  dispatch(...e) {
    let n = e.length == 1 && e[0] instanceof on ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(n, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let n = !1, r = !1, s, i = this.state;
    for (let m of e) {
      if (m.startState != i)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      i = m.state;
    }
    if (this.destroyed) {
      this.viewState.state = i;
      return;
    }
    let a = this.hasFocus, o = 0, l = null;
    e.some((m) => m.annotation(fS)) ? (this.inputState.notifiedFocused = a, o = 1) : a != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = a, l = dS(i, a), l || (o = 1));
    let u = this.observer.delayedAndroidKey, h = null;
    if (u ? (this.observer.clearDelayedAndroidKey(), h = this.observer.readChange(), (h && !this.state.doc.eq(i.doc) || !this.state.selection.eq(i.selection)) && (h = null)) : this.observer.clear(), i.facet(ft.phrases) != this.state.facet(ft.phrases))
      return this.setState(i);
    s = Lc.create(this, i, e), s.flags |= o;
    let f = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let m of e) {
        if (f && (f = f.map(m.changes)), m.scrollIntoView) {
          let { main: b } = m.state.selection;
          f = new fa(b.empty ? b : ne.cursor(b.head, b.head > b.anchor ? -1 : 1));
        }
        for (let b of m.effects)
          b.is(Wl) && (f = b.value.clip(this.state));
      }
      this.viewState.update(s, f), this.bidiCache = Nc.update(this.bidiCache, s.changes), s.empty || (this.updatePlugins(s), this.inputState.update(s)), n = this.docView.update(s), this.state.facet(fo) != this.styleModules && this.mountStyles(), r = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(n, e.some((m) => m.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (s.startState.facet(Hl) != s.state.facet(Hl) && (this.viewState.mustMeasureContent = !0), (n || r || f || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), n && this.docViewUpdate(), !s.empty)
      for (let m of this.state.facet(hf))
        try {
          m(s);
        } catch (b) {
          rr(this.state, b, "update listener");
        }
    (l || h) && Promise.resolve().then(() => {
      l && this.state == l.startState && this.dispatch(l), h && !oS(this, h) && u.force && pa(this.contentDOM, u.key, u.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let n = this.hasFocus;
    try {
      for (let r of this.plugins)
        r.destroy(this);
      this.viewState = new x0(e), this.plugins = e.facet(po).map((r) => new Yh(r)), this.pluginMap.clear();
      for (let r of this.plugins)
        r.update(this);
      this.docView.destroy(), this.docView = new n0(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    n && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let n = e.startState.facet(po), r = e.state.facet(po);
    if (n != r) {
      let s = [];
      for (let i of r) {
        let a = n.indexOf(i);
        if (a < 0)
          s.push(new Yh(i));
        else {
          let o = this.plugins[a];
          o.mustUpdate = e, s.push(o);
        }
      }
      for (let i of this.plugins)
        i.mustUpdate != e && i.destroy(this);
      this.plugins = s, this.pluginMap.clear();
    } else
      for (let s of this.plugins)
        s.mustUpdate = e;
    for (let s = 0; s < this.plugins.length; s++)
      this.plugins[s].update(this);
    n != r && this.inputState.ensureHandlers(this.plugins);
  }
  docViewUpdate() {
    for (let e of this.plugins) {
      let n = e.value;
      if (n && n.docViewUpdate)
        try {
          n.docViewUpdate(this);
        } catch (r) {
          rr(this.state, r, "doc view update listener");
        }
    }
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let n = null, r = this.scrollDOM, s = r.scrollTop * this.scaleY, { scrollAnchorPos: i, scrollAnchorHeight: a } = this.viewState;
    Math.abs(s - this.viewState.scrollTop) > 1 && (a = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let o = 0; ; o++) {
        if (a < 0)
          if (DC(r))
            i = -1, a = this.viewState.heightMap.height;
          else {
            let b = this.viewState.scrollAnchorAt(s);
            i = b.from, a = b.top;
          }
        this.updateState = 1;
        let l = this.viewState.measure(this);
        if (!l && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (o > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let u = [];
        l & 4 || ([this.measureRequests, u] = [u, this.measureRequests]);
        let h = u.map((b) => {
          try {
            return b.read(this);
          } catch (v) {
            return rr(this.state, v), S0;
          }
        }), f = Lc.create(this, this.state, []), m = !1;
        f.flags |= l, n ? n.flags |= l : n = f, this.updateState = 2, f.empty || (this.updatePlugins(f), this.inputState.update(f), this.updateAttrs(), m = this.docView.update(f), m && this.docViewUpdate());
        for (let b = 0; b < u.length; b++)
          if (h[b] != S0)
            try {
              let v = u[b];
              v.write && v.write(h[b], this);
            } catch (v) {
              rr(this.state, v);
            }
        if (m && this.docView.updateSelection(!0), !f.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, a = -1;
              continue;
            } else {
              let v = (i < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(i).top) - a;
              if (v > 1 || v < -1) {
                s = s + v, r.scrollTop = s / this.scaleY, a = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (n && !n.empty)
      for (let o of this.state.facet(hf))
        o(n);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return gf + " " + (this.state.facet(mf) ? yS : bS) + " " + this.state.facet(Hl);
  }
  updateAttrs() {
    let e = A0(this, tS, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), n = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      writingsuggestions: "false",
      translate: "no",
      contenteditable: this.state.facet(Ms) ? "true" : "false",
      class: "cm-content",
      style: `${we.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (n["aria-readonly"] = "true"), A0(this, sm, n);
    let r = this.observer.ignore(() => {
      let s = af(this.contentDOM, this.contentAttrs, n), i = af(this.dom, this.editorAttrs, e);
      return s || i;
    });
    return this.editorAttrs = e, this.contentAttrs = n, r;
  }
  showAnnouncements(e) {
    let n = !0;
    for (let r of e)
      for (let s of r.effects)
        if (s.is(ye.announce)) {
          n && (this.announceDOM.textContent = ""), n = !1;
          let i = this.announceDOM.appendChild(document.createElement("div"));
          i.textContent = s.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(fo);
    let e = this.state.facet(ye.cspNonce);
    li.mount(this.root, this.styleModules.concat(QM).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let n = 0; n < this.measureRequests.length; n++)
          if (this.measureRequests[n].key === e.key) {
            this.measureRequests[n] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let n = this.pluginMap.get(e);
    return (n === void 0 || n && n.spec != e) && this.pluginMap.set(e, n = this.plugins.find((r) => r.spec == e) || null), n && n.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, n, r) {
    return Kh(this, e, o0(this, e, n, r));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, n) {
    return Kh(this, e, o0(this, e, n, (r) => Y6(this, e.head, r)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, n) {
    let r = this.bidiSpans(e), s = this.textDirectionAt(e.from), i = r[n ? r.length - 1 : 0];
    return ne.cursor(i.side(n, s) + e.from, i.forward(!n, s) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, n, r = !0) {
    return z6(this, e, n, r);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, n, r) {
    return Kh(this, e, H6(this, e, n, r));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, n = 0) {
    return this.docView.posFromDOM(e, n);
  }
  posAtCoords(e, n = !0) {
    return this.readMeasured(), aS(this, e, n);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, n = 1) {
    this.readMeasured();
    let r = this.docView.coordsAt(e, n);
    if (!r || r.left == r.right)
      return r;
    let s = this.state.doc.lineAt(e), i = this.bidiSpans(s), a = i[si.find(i, e - s.from, -1, n)];
    return Vu(r, a.dir == Et.LTR == n > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(HC) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > $M)
      return VC(e.length);
    let n = this.textDirectionAt(e.from), r;
    for (let i of this.bidiCache)
      if (i.from == e.from && i.dir == n && (i.fresh || NC(i.isolates, r = t0(this, e))))
        return i.order;
    r || (r = t0(this, e));
    let s = T6(e.text, n, r);
    return this.bidiCache.push(new Nc(e.from, e.to, n, r, !0, s)), s;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || we.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      AC(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    this.root.activeElement == this.contentDOM && this.contentDOM.blur();
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, n = {}) {
    return Wl.of(new fa(typeof e == "number" ? ne.cursor(e) : e, n.y, n.x, n.yMargin, n.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: n } = this.scrollDOM, r = this.viewState.scrollAnchorAt(e);
    return Wl.of(new fa(ne.cursor(r.from), "start", "start", r.top - e, n, !0));
  }
  /**
  Enable or disable tab-focus mode, which disables key bindings
  for Tab and Shift-Tab, letting the browser's default
  focus-changing behavior go through instead. This is useful to
  prevent trapping keyboard users in your editor.
  
  Without argument, this toggles the mode. With a boolean, it
  enables (true) or disables it (false). Given a number, it
  temporarily enables the mode until that number of milliseconds
  have passed or another non-Tab key is pressed.
  */
  setTabFocusMode(e) {
    e == null ? this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1 : typeof e == "boolean" ? this.inputState.tabFocusMode = e ? 0 : -1 : this.inputState.tabFocusMode != 0 && (this.inputState.tabFocusMode = Date.now() + e);
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return qt.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return qt.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, n) {
    let r = li.newName(), s = [Hl.of(r), fo.of(bf(`.${r}`, e))];
    return n && n.dark && s.push(mf.of(!0)), s;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return lr.lowest(fo.of(bf("." + gf, e, OS)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var n;
    let r = e.querySelector(".cm-content"), s = r && Dt.get(r) || Dt.get(e);
    return ((n = s?.rootView) === null || n === void 0 ? void 0 : n.view) || null;
  }
}
ye.styleModule = fo;
ye.inputHandler = zC;
ye.clipboardInputFilter = nm;
ye.clipboardOutputFilter = rm;
ye.scrollHandler = JC;
ye.focusChangeEffect = YC;
ye.perLineTextDirection = HC;
ye.exceptionSink = GC;
ye.updateListener = hf;
ye.editable = Ms;
ye.mouseSelectionStyle = qC;
ye.dragMovesSelection = UC;
ye.clickAddsSelectionRange = WC;
ye.decorations = $o;
ye.outerDecorations = nS;
ye.atomicRanges = im;
ye.bidiIsolatedRanges = rS;
ye.scrollMargins = sS;
ye.darkTheme = mf;
ye.cspNonce = /* @__PURE__ */ Ae.define({ combine: (t) => t.length ? t[0] : "" });
ye.contentAttributes = sm;
ye.editorAttributes = tS;
ye.lineWrapping = /* @__PURE__ */ ye.contentAttributes.of({ class: "cm-lineWrapping" });
ye.announce = /* @__PURE__ */ Ze.define();
const $M = 4096, S0 = {};
class Nc {
  constructor(e, n, r, s, i, a) {
    this.from = e, this.to = n, this.dir = r, this.isolates = s, this.fresh = i, this.order = a;
  }
  static update(e, n) {
    if (n.empty && !e.some((i) => i.fresh))
      return e;
    let r = [], s = e.length ? e[e.length - 1].dir : Et.LTR;
    for (let i = Math.max(0, e.length - 10); i < e.length; i++) {
      let a = e[i];
      a.dir == s && !n.touchesRange(a.from, a.to) && r.push(new Nc(n.mapPos(a.from, 1), n.mapPos(a.to, -1), a.dir, a.isolates, !1, a.order));
    }
    return r;
  }
}
function A0(t, e, n) {
  for (let r = t.state.facet(e), s = r.length - 1; s >= 0; s--) {
    let i = r[s], a = typeof i == "function" ? i(t) : i;
    a && sf(a, n);
  }
  return n;
}
const LM = we.mac ? "mac" : we.windows ? "win" : we.linux ? "linux" : "key";
function IM(t, e) {
  const n = t.split(/-(?!$)/);
  let r = n[n.length - 1];
  r == "Space" && (r = " ");
  let s, i, a, o;
  for (let l = 0; l < n.length - 1; ++l) {
    const u = n[l];
    if (/^(cmd|meta|m)$/i.test(u))
      o = !0;
    else if (/^a(lt)?$/i.test(u))
      s = !0;
    else if (/^(c|ctrl|control)$/i.test(u))
      i = !0;
    else if (/^s(hift)?$/i.test(u))
      a = !0;
    else if (/^mod$/i.test(u))
      e == "mac" ? o = !0 : i = !0;
    else
      throw new Error("Unrecognized modifier name: " + u);
  }
  return s && (r = "Alt-" + r), i && (r = "Ctrl-" + r), o && (r = "Meta-" + r), a && (r = "Shift-" + r), r;
}
function Kl(t, e, n) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n !== !1 && e.shiftKey && (t = "Shift-" + t), t;
}
const NM = /* @__PURE__ */ lr.default(/* @__PURE__ */ ye.domEventHandlers({
  keydown(t, e) {
    return xS(vS(e.state), t, e, "editor");
  }
})), Ws = /* @__PURE__ */ Ae.define({ enables: NM }), P0 = /* @__PURE__ */ new WeakMap();
function vS(t) {
  let e = t.facet(Ws), n = P0.get(e);
  return n || P0.set(e, n = WM(e.reduce((r, s) => r.concat(s), []))), n;
}
function VM(t, e, n) {
  return xS(vS(t.state), e, t, n);
}
let ei = null;
const XM = 4e3;
function WM(t, e = LM) {
  let n = /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null), s = (a, o) => {
    let l = r[a];
    if (l == null)
      r[a] = o;
    else if (l != o)
      throw new Error("Key binding " + a + " is used both as a regular binding and as a multi-stroke prefix");
  }, i = (a, o, l, u, h) => {
    var f, m;
    let b = n[a] || (n[a] = /* @__PURE__ */ Object.create(null)), v = o.split(/ (?!$)/).map((B) => IM(B, e));
    for (let B = 1; B < v.length; B++) {
      let $ = v.slice(0, B).join(" ");
      s($, !0), b[$] || (b[$] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(W) => {
          let _ = ei = { view: W, prefix: $, scope: a };
          return setTimeout(() => {
            ei == _ && (ei = null);
          }, XM), !0;
        }]
      });
    }
    let C = v.join(" ");
    s(C, !1);
    let S = b[C] || (b[C] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((m = (f = b._any) === null || f === void 0 ? void 0 : f.run) === null || m === void 0 ? void 0 : m.slice()) || []
    });
    l && S.run.push(l), u && (S.preventDefault = !0), h && (S.stopPropagation = !0);
  };
  for (let a of t) {
    let o = a.scope ? a.scope.split(" ") : ["editor"];
    if (a.any)
      for (let u of o) {
        let h = n[u] || (n[u] = /* @__PURE__ */ Object.create(null));
        h._any || (h._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        let { any: f } = a;
        for (let m in h)
          h[m].run.push((b) => f(b, yf));
      }
    let l = a[e] || a.key;
    if (l)
      for (let u of o)
        i(u, l, a.run, a.preventDefault, a.stopPropagation), a.shift && i(u, "Shift-" + l, a.shift, a.preventDefault, a.stopPropagation);
  }
  return n;
}
let yf = null;
function xS(t, e, n, r) {
  yf = e;
  let s = m6(e), i = tr(s, 0), a = ds(i) == s.length && s != " ", o = "", l = !1, u = !1, h = !1;
  ei && ei.view == n && ei.scope == r && (o = ei.prefix + " ", cS.indexOf(e.keyCode) < 0 && (u = !0, ei = null));
  let f = /* @__PURE__ */ new Set(), m = (S) => {
    if (S) {
      for (let B of S.run)
        if (!f.has(B) && (f.add(B), B(n)))
          return S.stopPropagation && (h = !0), !0;
      S.preventDefault && (S.stopPropagation && (h = !0), u = !0);
    }
    return !1;
  }, b = t[r], v, C;
  return b && (m(b[o + Kl(s, e, !a)]) ? l = !0 : a && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(we.windows && e.ctrlKey && e.altKey) && (v = ci[e.keyCode]) && v != s ? (m(b[o + Kl(v, e, !0)]) || e.shiftKey && (C = _o[e.keyCode]) != s && C != v && m(b[o + Kl(C, e, !1)])) && (l = !0) : a && e.shiftKey && m(b[o + Kl(s, e, !0)]) && (l = !0), !l && m(b._any) && (l = !0)), u && (l = !0), l && h && e.stopPropagation(), yf = null, l;
}
class cl {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, n, r, s, i) {
    this.className = e, this.left = n, this.top = r, this.width = s, this.height = i;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, n) {
    return n.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, n, r) {
    if (r.empty) {
      let s = e.coordsAtPos(r.head, r.assoc || 1);
      if (!s)
        return [];
      let i = wS(e);
      return [new cl(n, s.left - i.left, s.top - i.top, null, s.bottom - s.top)];
    } else
      return UM(e, n, r);
  }
}
function wS(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Et.LTR ? e.left : e.right - t.scrollDOM.clientWidth * t.scaleX) - t.scrollDOM.scrollLeft * t.scaleX, top: e.top - t.scrollDOM.scrollTop * t.scaleY };
}
function D0(t, e, n, r) {
  let s = t.coordsAtPos(e, n * 2);
  if (!s)
    return r;
  let i = t.dom.getBoundingClientRect(), a = (s.top + s.bottom) / 2, o = t.posAtCoords({ x: i.left + 1, y: a }), l = t.posAtCoords({ x: i.right - 1, y: a });
  return o == null || l == null ? r : { from: Math.max(r.from, Math.min(o, l)), to: Math.min(r.to, Math.max(o, l)) };
}
function UM(t, e, n) {
  if (n.to <= t.viewport.from || n.from >= t.viewport.to)
    return [];
  let r = Math.max(n.from, t.viewport.from), s = Math.min(n.to, t.viewport.to), i = t.textDirection == Et.LTR, a = t.contentDOM, o = a.getBoundingClientRect(), l = wS(t), u = a.querySelector(".cm-line"), h = u && window.getComputedStyle(u), f = o.left + (h ? parseInt(h.paddingLeft) + Math.min(0, parseInt(h.textIndent)) : 0), m = o.right - (h ? parseInt(h.paddingRight) : 0), b = ff(t, r), v = ff(t, s), C = b.type == In.Text ? b : null, S = v.type == In.Text ? v : null;
  if (C && (t.lineWrapping || b.widgetLineBreaks) && (C = D0(t, r, 1, C)), S && (t.lineWrapping || v.widgetLineBreaks) && (S = D0(t, s, -1, S)), C && S && C.from == S.from && C.to == S.to)
    return $(W(n.from, n.to, C));
  {
    let M = C ? W(n.from, null, C) : _(b, !1), Z = S ? W(null, n.to, S) : _(v, !0), N = [];
    return (C || b).to < (S || v).from - (C && S ? 1 : 0) || b.widgetLineBreaks > 1 && M.bottom + t.defaultLineHeight / 2 < Z.top ? N.push(B(f, M.bottom, m, Z.top)) : M.bottom < Z.top && t.elementAtHeight((M.bottom + Z.top) / 2).type == In.Text && (M.bottom = Z.top = (M.bottom + Z.top) / 2), $(M).concat(N).concat($(Z));
  }
  function B(M, Z, N, q) {
    return new cl(e, M - l.left, Z - l.top, N - M, q - Z);
  }
  function $({ top: M, bottom: Z, horizontal: N }) {
    let q = [];
    for (let ae = 0; ae < N.length; ae += 2)
      q.push(B(N[ae], M, N[ae + 1], Z));
    return q;
  }
  function W(M, Z, N) {
    let q = 1e9, ae = -1e9, J = [];
    function pe(fe, ke, Pe, ie, Ce) {
      let Le = t.coordsAtPos(fe, fe == N.to ? -2 : 2), Ue = t.coordsAtPos(Pe, Pe == N.from ? 2 : -2);
      !Le || !Ue || (q = Math.min(Le.top, Ue.top, q), ae = Math.max(Le.bottom, Ue.bottom, ae), Ce == Et.LTR ? J.push(i && ke ? f : Le.left, i && ie ? m : Ue.right) : J.push(!i && ie ? f : Ue.left, !i && ke ? m : Le.right));
    }
    let H = M ?? N.from, oe = Z ?? N.to;
    for (let fe of t.visibleRanges)
      if (fe.to > H && fe.from < oe)
        for (let ke = Math.max(fe.from, H), Pe = Math.min(fe.to, oe); ; ) {
          let ie = t.state.doc.lineAt(ke);
          for (let Ce of t.bidiSpans(ie)) {
            let Le = Ce.from + ie.from, Ue = Ce.to + ie.from;
            if (Le >= Pe)
              break;
            Ue > ke && pe(Math.max(Le, ke), M == null && Le <= H, Math.min(Ue, Pe), Z == null && Ue >= oe, Ce.dir);
          }
          if (ke = ie.to + 1, ke >= Pe)
            break;
        }
    return J.length == 0 && pe(H, M == null, oe, Z == null, t.textDirection), { top: q, bottom: ae, horizontal: J };
  }
  function _(M, Z) {
    let N = o.top + (Z ? M.top : M.bottom);
    return { top: N, bottom: N, horizontal: [] };
  }
}
function qM(t, e) {
  return t.constructor == e.constructor && t.eq(e);
}
class GM {
  constructor(e, n) {
    this.view = e, this.layer = n, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), n.above && this.dom.classList.add("cm-layer-above"), n.class && this.dom.classList.add(n.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), n.mount && n.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(yc) != e.state.facet(yc) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  docViewUpdate(e) {
    this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);
  }
  setOrder(e) {
    let n = 0, r = e.facet(yc);
    for (; n < r.length && r[n] != this.layer; )
      n++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - n);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: n } = this.view;
    (e != this.scaleX || n != this.scaleY) && (this.scaleX = e, this.scaleY = n, this.dom.style.transform = `scale(${1 / e}, ${1 / n})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((n, r) => !qM(n, this.drawn[r]))) {
      let n = this.dom.firstChild, r = 0;
      for (let s of e)
        s.update && n && s.constructor && this.drawn[r].constructor && s.update(n, this.drawn[r]) ? (n = n.nextSibling, r++) : this.dom.insertBefore(s.draw(), n);
      for (; n; ) {
        let s = n.nextSibling;
        n.remove(), n = s;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const yc = /* @__PURE__ */ Ae.define();
function kS(t) {
  return [
    qt.define((e) => new GM(e, t)),
    yc.of(t)
  ];
}
const CS = !(we.ios && we.webkit && we.webkit_version < 534), Pa = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, n) => Math.min(e, n),
      drawRangeCursor: (e, n) => e || n
    });
  }
});
function SS(t = {}) {
  return [
    Pa.of(t),
    zM,
    YM,
    HM,
    KC.of(!0)
  ];
}
function AS(t) {
  return t.facet(Pa);
}
function PS(t) {
  return t.startState.facet(Pa) != t.state.facet(Pa);
}
const zM = /* @__PURE__ */ kS({
  above: !0,
  markers(t) {
    let { state: e } = t, n = e.facet(Pa), r = [];
    for (let s of e.selection.ranges) {
      let i = s == e.selection.main;
      if (s.empty ? !i || CS : n.drawRangeCursor) {
        let a = i ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", o = s.empty ? s : ne.cursor(s.head, s.head > s.anchor ? -1 : 1);
        for (let l of cl.forRange(t, a, o))
          r.push(l);
      }
    }
    return r;
  },
  update(t, e) {
    t.transactions.some((r) => r.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let n = PS(t);
    return n && E0(t.state, e), t.docChanged || t.selectionSet || n;
  },
  mount(t, e) {
    E0(e.state, t);
  },
  class: "cm-cursorLayer"
});
function E0(t, e) {
  e.style.animationDuration = t.facet(Pa).cursorBlinkRate + "ms";
}
const YM = /* @__PURE__ */ kS({
  above: !1,
  markers(t) {
    return t.state.selection.ranges.map((e) => e.empty ? [] : cl.forRange(t, "cm-selectionBackground", e)).reduce((e, n) => e.concat(n));
  },
  update(t, e) {
    return t.docChanged || t.selectionSet || t.viewportChanged || PS(t);
  },
  class: "cm-selectionLayer"
}), Of = {
  ".cm-line": {
    "& ::selection, &::selection": { backgroundColor: "transparent !important" }
  },
  ".cm-content": {
    "& :focus": {
      caretColor: "initial !important",
      "&::selection, & ::selection": {
        backgroundColor: "Highlight !important"
      }
    }
  }
};
CS && (Of[".cm-line"].caretColor = Of[".cm-content"].caretColor = "transparent !important");
const HM = /* @__PURE__ */ lr.highest(/* @__PURE__ */ ye.theme(Of)), DS = /* @__PURE__ */ Ze.define({
  map(t, e) {
    return t == null ? null : e.mapPos(t);
  }
}), bo = /* @__PURE__ */ Vt.define({
  create() {
    return null;
  },
  update(t, e) {
    return t != null && (t = e.changes.mapPos(t)), e.effects.reduce((n, r) => r.is(DS) ? r.value : n, t);
  }
}), KM = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.view = t, this.cursor = null, this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
  }
  update(t) {
    var e;
    let n = t.state.field(bo);
    n == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), this.cursor = null) : (this.cursor || (this.cursor = this.view.scrollDOM.appendChild(document.createElement("div")), this.cursor.className = "cm-dropCursor"), (t.startState.field(bo) != n || t.docChanged || t.geometryChanged) && this.view.requestMeasure(this.measureReq));
  }
  readPos() {
    let { view: t } = this, e = t.state.field(bo), n = e != null && t.coordsAtPos(e);
    if (!n)
      return null;
    let r = t.scrollDOM.getBoundingClientRect();
    return {
      left: n.left - r.left + t.scrollDOM.scrollLeft * t.scaleX,
      top: n.top - r.top + t.scrollDOM.scrollTop * t.scaleY,
      height: n.bottom - n.top
    };
  }
  drawCursor(t) {
    if (this.cursor) {
      let { scaleX: e, scaleY: n } = this.view;
      t ? (this.cursor.style.left = t.left / e + "px", this.cursor.style.top = t.top / n + "px", this.cursor.style.height = t.height / n + "px") : this.cursor.style.left = "-100000px";
    }
  }
  destroy() {
    this.cursor && this.cursor.remove();
  }
  setDropPos(t) {
    this.view.state.field(bo) != t && this.view.dispatch({ effects: DS.of(t) });
  }
}, {
  eventObservers: {
    dragover(t) {
      this.setDropPos(this.view.posAtCoords({ x: t.clientX, y: t.clientY }));
    },
    dragleave(t) {
      (t.target == this.view.contentDOM || !this.view.contentDOM.contains(t.relatedTarget)) && this.setDropPos(null);
    },
    dragend() {
      this.setDropPos(null);
    },
    drop() {
      this.setDropPos(null);
    }
  }
});
function JM() {
  return [bo, KM];
}
function F0(t, e, n, r, s) {
  e.lastIndex = 0;
  for (let i = t.iterRange(n, r), a = n, o; !i.next().done; a += i.value.length)
    if (!i.lineBreak)
      for (; o = e.exec(i.value); )
        s(a + o.index, o);
}
function e7(t, e) {
  let n = t.visibleRanges;
  if (n.length == 1 && n[0].from == t.viewport.from && n[0].to == t.viewport.to)
    return n;
  let r = [];
  for (let { from: s, to: i } of n)
    s = Math.max(t.state.doc.lineAt(s).from, s - e), i = Math.min(t.state.doc.lineAt(i).to, i + e), r.length && r[r.length - 1].to >= s ? r[r.length - 1].to = i : r.push({ from: s, to: i });
  return r;
}
class t7 {
  /**
  Create a decorator.
  */
  constructor(e) {
    const { regexp: n, decoration: r, decorate: s, boundary: i, maxLength: a = 1e3 } = e;
    if (!n.global)
      throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
    if (this.regexp = n, s)
      this.addMatch = (o, l, u, h) => s(h, u, u + o[0].length, o, l);
    else if (typeof r == "function")
      this.addMatch = (o, l, u, h) => {
        let f = r(o, l, u);
        f && h(u, u + o[0].length, f);
      };
    else if (r)
      this.addMatch = (o, l, u, h) => h(u, u + o[0].length, r);
    else
      throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
    this.boundary = i, this.maxLength = a;
  }
  /**
  Compute the full set of decorations for matches in the given
  view's viewport. You'll want to call this when initializing your
  plugin.
  */
  createDeco(e) {
    let n = new vs(), r = n.add.bind(n);
    for (let { from: s, to: i } of e7(e, this.maxLength))
      F0(e.state.doc, this.regexp, s, i, (a, o) => this.addMatch(o, e, a, r));
    return n.finish();
  }
  /**
  Update a set of decorations for a view update. `deco` _must_ be
  the set of decorations produced by _this_ `MatchDecorator` for
  the view state before the update.
  */
  updateDeco(e, n) {
    let r = 1e9, s = -1;
    return e.docChanged && e.changes.iterChanges((i, a, o, l) => {
      l >= e.view.viewport.from && o <= e.view.viewport.to && (r = Math.min(o, r), s = Math.max(l, s));
    }), e.viewportMoved || s - r > 1e3 ? this.createDeco(e.view) : s > -1 ? this.updateRange(e.view, n.map(e.changes), r, s) : n;
  }
  updateRange(e, n, r, s) {
    for (let i of e.visibleRanges) {
      let a = Math.max(i.from, r), o = Math.min(i.to, s);
      if (o > a) {
        let l = e.state.doc.lineAt(a), u = l.to < o ? e.state.doc.lineAt(o) : l, h = Math.max(i.from, l.from), f = Math.min(i.to, u.to);
        if (this.boundary) {
          for (; a > l.from; a--)
            if (this.boundary.test(l.text[a - 1 - l.from])) {
              h = a;
              break;
            }
          for (; o < u.to; o++)
            if (this.boundary.test(u.text[o - u.from])) {
              f = o;
              break;
            }
        }
        let m = [], b, v = (C, S, B) => m.push(B.range(C, S));
        if (l == u)
          for (this.regexp.lastIndex = h - l.from; (b = this.regexp.exec(l.text)) && b.index < f - l.from; )
            this.addMatch(b, e, b.index + l.from, v);
        else
          F0(e.state.doc, this.regexp, h, f, (C, S) => this.addMatch(S, e, C, v));
        n = n.update({ filterFrom: h, filterTo: f, filter: (C, S) => C < h || S > f, add: m });
      }
    }
    return n;
  }
}
const vf = /x/.unicode != null ? "gu" : "g", n7 = /* @__PURE__ */ new RegExp(`[\0-\b
--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]`, vf), r7 = {
  0: "null",
  7: "bell",
  8: "backspace",
  10: "newline",
  11: "vertical tab",
  13: "carriage return",
  27: "escape",
  8203: "zero width space",
  8204: "zero width non-joiner",
  8205: "zero width joiner",
  8206: "left-to-right mark",
  8207: "right-to-left mark",
  8232: "line separator",
  8237: "left-to-right override",
  8238: "right-to-left override",
  8294: "left-to-right isolate",
  8295: "right-to-left isolate",
  8297: "pop directional isolate",
  8233: "paragraph separator",
  65279: "zero width no-break space",
  65532: "object replacement"
};
let tp = null;
function s7() {
  var t;
  if (tp == null && typeof document < "u" && document.body) {
    let e = document.body.style;
    tp = ((t = e.tabSize) !== null && t !== void 0 ? t : e.MozTabSize) != null;
  }
  return tp || !1;
}
const Oc = /* @__PURE__ */ Ae.define({
  combine(t) {
    let e = Xs(t, {
      render: null,
      specialChars: n7,
      addSpecialChars: null
    });
    return (e.replaceTabs = !s7()) && (e.specialChars = new RegExp("	|" + e.specialChars.source, vf)), e.addSpecialChars && (e.specialChars = new RegExp(e.specialChars.source + "|" + e.addSpecialChars.source, vf)), e;
  }
});
function ES(t = {}) {
  return [Oc.of(t), i7()];
}
let B0 = null;
function i7() {
  return B0 || (B0 = qt.fromClass(class {
    constructor(t) {
      this.view = t, this.decorations = Be.none, this.decorationCache = /* @__PURE__ */ Object.create(null), this.decorator = this.makeDecorator(t.state.facet(Oc)), this.decorations = this.decorator.createDeco(t);
    }
    makeDecorator(t) {
      return new t7({
        regexp: t.specialChars,
        decoration: (e, n, r) => {
          let { doc: s } = n.state, i = tr(e[0], 0);
          if (i == 9) {
            let a = s.lineAt(r), o = n.state.tabSize, l = La(a.text, o, r - a.from);
            return Be.replace({
              widget: new c7((o - l % o) * this.view.defaultCharacterWidth / this.view.scaleX)
            });
          }
          return this.decorationCache[i] || (this.decorationCache[i] = Be.replace({ widget: new l7(t, i) }));
        },
        boundary: t.replaceTabs ? void 0 : /[^]/
      });
    }
    update(t) {
      let e = t.state.facet(Oc);
      t.startState.facet(Oc) != e ? (this.decorator = this.makeDecorator(e), this.decorations = this.decorator.createDeco(t.view)) : this.decorations = this.decorator.updateDeco(t, this.decorations);
    }
  }, {
    decorations: (t) => t.decorations
  }));
}
const a7 = "•";
function o7(t) {
  return t >= 32 ? a7 : t == 10 ? "␤" : String.fromCharCode(9216 + t);
}
class l7 extends ns {
  constructor(e, n) {
    super(), this.options = e, this.code = n;
  }
  eq(e) {
    return e.code == this.code;
  }
  toDOM(e) {
    let n = o7(this.code), r = e.state.phrase("Control character") + " " + (r7[this.code] || "0x" + this.code.toString(16)), s = this.options.render && this.options.render(this.code, r, n);
    if (s)
      return s;
    let i = document.createElement("span");
    return i.textContent = n, i.title = r, i.setAttribute("aria-label", r), i.className = "cm-specialChar", i;
  }
  ignoreEvent() {
    return !1;
  }
}
class c7 extends ns {
  constructor(e) {
    super(), this.width = e;
  }
  eq(e) {
    return e.width == this.width;
  }
  toDOM() {
    let e = document.createElement("span");
    return e.textContent = "	", e.className = "cm-tab", e.style.width = this.width + "px", e;
  }
  ignoreEvent() {
    return !1;
  }
}
function u7() {
  return p7;
}
const h7 = /* @__PURE__ */ Be.line({ class: "cm-activeLine" }), p7 = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.decorations = this.getDeco(t);
  }
  update(t) {
    (t.docChanged || t.selectionSet) && (this.decorations = this.getDeco(t.view));
  }
  getDeco(t) {
    let e = -1, n = [];
    for (let r of t.state.selection.ranges) {
      let s = t.lineBlockAt(r.head);
      s.from > e && (n.push(h7.range(s.from)), e = s.from);
    }
    return Be.set(n);
  }
}, {
  decorations: (t) => t.decorations
}), xf = 2e3;
function f7(t, e, n) {
  let r = Math.min(e.line, n.line), s = Math.max(e.line, n.line), i = [];
  if (e.off > xf || n.off > xf || e.col < 0 || n.col < 0) {
    let a = Math.min(e.off, n.off), o = Math.max(e.off, n.off);
    for (let l = r; l <= s; l++) {
      let u = t.doc.line(l);
      u.length <= o && i.push(ne.range(u.from + a, u.to + o));
    }
  } else {
    let a = Math.min(e.col, n.col), o = Math.max(e.col, n.col);
    for (let l = r; l <= s; l++) {
      let u = t.doc.line(l), h = Hp(u.text, a, t.tabSize, !0);
      if (h < 0)
        i.push(ne.cursor(u.to));
      else {
        let f = Hp(u.text, o, t.tabSize);
        i.push(ne.range(u.from + h, u.from + f));
      }
    }
  }
  return i;
}
function d7(t, e) {
  let n = t.coordsAtPos(t.viewport.from);
  return n ? Math.round(Math.abs((n.left - e) / t.defaultCharacterWidth)) : -1;
}
function M0(t, e) {
  let n = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1), r = t.state.doc.lineAt(n), s = n - r.from, i = s > xf ? -1 : s == r.length ? d7(t, e.clientX) : La(r.text, t.state.tabSize, n - r.from);
  return { line: r.number, col: i, off: s };
}
function m7(t, e) {
  let n = M0(t, e), r = t.state.selection;
  return n ? {
    update(s) {
      if (s.docChanged) {
        let i = s.changes.mapPos(s.startState.doc.line(n.line).from), a = s.state.doc.lineAt(i);
        n = { line: a.number, col: n.col, off: Math.min(n.off, a.length) }, r = r.map(s.changes);
      }
    },
    get(s, i, a) {
      let o = M0(t, s);
      if (!o)
        return r;
      let l = f7(t.state, n, o);
      return l.length ? a ? ne.create(l.concat(r.ranges)) : ne.create(l) : r;
    }
  } : null;
}
function g7(t) {
  let e = (n) => n.altKey && n.button == 0;
  return ye.mouseSelectionStyle.of((n, r) => e(r) ? m7(n, r) : null);
}
const b7 = {
  Alt: [18, (t) => !!t.altKey],
  Control: [17, (t) => !!t.ctrlKey],
  Shift: [16, (t) => !!t.shiftKey],
  Meta: [91, (t) => !!t.metaKey]
}, y7 = { style: "cursor: crosshair" };
function O7(t = {}) {
  let [e, n] = b7[t.key || "Alt"], r = qt.fromClass(class {
    constructor(s) {
      this.view = s, this.isDown = !1;
    }
    set(s) {
      this.isDown != s && (this.isDown = s, this.view.update([]));
    }
  }, {
    eventObservers: {
      keydown(s) {
        this.set(s.keyCode == e || n(s));
      },
      keyup(s) {
        (s.keyCode == e || !n(s)) && this.set(!1);
      },
      mousemove(s) {
        this.set(n(s));
      }
    }
  });
  return [
    r,
    ye.contentAttributes.of((s) => {
      var i;
      return !((i = s.plugin(r)) === null || i === void 0) && i.isDown ? y7 : null;
    })
  ];
}
const ao = "-10000px";
class FS {
  constructor(e, n, r, s) {
    this.facet = n, this.createTooltipView = r, this.removeTooltipView = s, this.input = e.state.facet(n), this.tooltips = this.input.filter((a) => a);
    let i = null;
    this.tooltipViews = this.tooltips.map((a) => i = r(a, i));
  }
  update(e, n) {
    var r;
    let s = e.state.facet(this.facet), i = s.filter((l) => l);
    if (s === this.input) {
      for (let l of this.tooltipViews)
        l.update && l.update(e);
      return !1;
    }
    let a = [], o = n ? [] : null;
    for (let l = 0; l < i.length; l++) {
      let u = i[l], h = -1;
      if (u) {
        for (let f = 0; f < this.tooltips.length; f++) {
          let m = this.tooltips[f];
          m && m.create == u.create && (h = f);
        }
        if (h < 0)
          a[l] = this.createTooltipView(u, l ? a[l - 1] : null), o && (o[l] = !!u.above);
        else {
          let f = a[l] = this.tooltipViews[h];
          o && (o[l] = n[h]), f.update && f.update(e);
        }
      }
    }
    for (let l of this.tooltipViews)
      a.indexOf(l) < 0 && (this.removeTooltipView(l), (r = l.destroy) === null || r === void 0 || r.call(l));
    return n && (o.forEach((l, u) => n[u] = l), n.length = o.length), this.input = s, this.tooltips = i, this.tooltipViews = a, !0;
  }
}
function v7(t) {
  let { win: e } = t;
  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
}
const np = /* @__PURE__ */ Ae.define({
  combine: (t) => {
    var e, n, r;
    return {
      position: we.ios ? "absolute" : ((e = t.find((s) => s.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((n = t.find((s) => s.parent)) === null || n === void 0 ? void 0 : n.parent) || null,
      tooltipSpace: ((r = t.find((s) => s.tooltipSpace)) === null || r === void 0 ? void 0 : r.tooltipSpace) || v7
    };
  }
}), T0 = /* @__PURE__ */ new WeakMap(), um = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.view = t, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = t.state.facet(np);
    this.position = e.position, this.parent = e.parent, this.classes = t.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new FS(t, hm, (n, r) => this.createTooltip(n, r), (n) => {
      this.resizeObserver && this.resizeObserver.unobserve(n.dom), n.dom.remove();
    }), this.above = this.manager.tooltips.map((n) => !!n.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((n) => {
      Date.now() > this.lastTransaction - 50 && n.length > 0 && n[n.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), t.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let t of this.manager.tooltipViews)
        this.intersectionObserver.observe(t.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(t) {
    t.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(t, this.above);
    e && this.observeIntersection();
    let n = e || t.geometryChanged, r = t.state.facet(np);
    if (r.position != this.position && !this.madeAbsolute) {
      this.position = r.position;
      for (let s of this.manager.tooltipViews)
        s.dom.style.position = this.position;
      n = !0;
    }
    if (r.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = r.parent, this.createContainer();
      for (let s of this.manager.tooltipViews)
        this.container.appendChild(s.dom);
      n = !0;
    } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    n && this.maybeMeasure();
  }
  createTooltip(t, e) {
    let n = t.create(this.view), r = e ? e.dom : null;
    if (n.dom.classList.add("cm-tooltip"), t.arrow && !n.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let s = document.createElement("div");
      s.className = "cm-tooltip-arrow", n.dom.appendChild(s);
    }
    return n.dom.style.position = this.position, n.dom.style.top = ao, n.dom.style.left = "0px", this.container.insertBefore(n.dom, r), n.mount && n.mount(this.view), this.resizeObserver && this.resizeObserver.observe(n.dom), n;
  }
  destroy() {
    var t, e, n;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let r of this.manager.tooltipViews)
      r.dom.remove(), (t = r.destroy) === null || t === void 0 || t.call(r);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (n = this.intersectionObserver) === null || n === void 0 || n.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let t = 1, e = 1, n = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: i } = this.manager.tooltipViews[0];
      if (we.gecko)
        n = i.offsetParent != this.container.ownerDocument.body;
      else if (i.style.top == ao && i.style.left == "0px") {
        let a = i.getBoundingClientRect();
        n = Math.abs(a.top + 1e4) > 1 || Math.abs(a.left) > 1;
      }
    }
    if (n || this.position == "absolute")
      if (this.parent) {
        let i = this.parent.getBoundingClientRect();
        i.width && i.height && (t = i.width / this.parent.offsetWidth, e = i.height / this.parent.offsetHeight);
      } else
        ({ scaleX: t, scaleY: e } = this.view.viewState);
    let r = this.view.scrollDOM.getBoundingClientRect(), s = am(this.view);
    return {
      visible: {
        left: r.left + s.left,
        top: r.top + s.top,
        right: r.right - s.right,
        bottom: r.bottom - s.bottom
      },
      parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),
      pos: this.manager.tooltips.map((i, a) => {
        let o = this.manager.tooltipViews[a];
        return o.getCoords ? o.getCoords(i.pos) : this.view.coordsAtPos(i.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: i }) => i.getBoundingClientRect()),
      space: this.view.state.facet(np).tooltipSpace(this.view),
      scaleX: t,
      scaleY: e,
      makeAbsolute: n
    };
  }
  writeMeasure(t) {
    var e;
    if (t.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let o of this.manager.tooltipViews)
        o.dom.style.position = "absolute";
    }
    let { visible: n, space: r, scaleX: s, scaleY: i } = t, a = [];
    for (let o = 0; o < this.manager.tooltips.length; o++) {
      let l = this.manager.tooltips[o], u = this.manager.tooltipViews[o], { dom: h } = u, f = t.pos[o], m = t.size[o];
      if (!f || l.clip !== !1 && (f.bottom <= Math.max(n.top, r.top) || f.top >= Math.min(n.bottom, r.bottom) || f.right < Math.max(n.left, r.left) - 0.1 || f.left > Math.min(n.right, r.right) + 0.1)) {
        h.style.top = ao;
        continue;
      }
      let b = l.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null, v = b ? 7 : 0, C = m.right - m.left, S = (e = T0.get(u)) !== null && e !== void 0 ? e : m.bottom - m.top, B = u.offset || w7, $ = this.view.textDirection == Et.LTR, W = m.width > r.right - r.left ? $ ? r.left : r.right - m.width : $ ? Math.max(r.left, Math.min(f.left - (b ? 14 : 0) + B.x, r.right - C)) : Math.min(Math.max(r.left, f.left - C + (b ? 14 : 0) - B.x), r.right - C), _ = this.above[o];
      !l.strictSide && (_ ? f.top - S - v - B.y < r.top : f.bottom + S + v + B.y > r.bottom) && _ == r.bottom - f.bottom > f.top - r.top && (_ = this.above[o] = !_);
      let M = (_ ? f.top - r.top : r.bottom - f.bottom) - v;
      if (M < S && u.resize !== !1) {
        if (M < this.view.defaultLineHeight) {
          h.style.top = ao;
          continue;
        }
        T0.set(u, S), h.style.height = (S = M) / i + "px";
      } else h.style.height && (h.style.height = "");
      let Z = _ ? f.top - S - v - B.y : f.bottom + v + B.y, N = W + C;
      if (u.overlap !== !0)
        for (let q of a)
          q.left < N && q.right > W && q.top < Z + S && q.bottom > Z && (Z = _ ? q.top - S - 2 - v : q.bottom + v + 2);
      if (this.position == "absolute" ? (h.style.top = (Z - t.parent.top) / i + "px", Q0(h, (W - t.parent.left) / s)) : (h.style.top = Z / i + "px", Q0(h, W / s)), b) {
        let q = f.left + ($ ? B.x : -B.x) - (W + 14 - 7);
        b.style.left = q / s + "px";
      }
      u.overlap !== !0 && a.push({ left: W, top: Z, right: N, bottom: Z + S }), h.classList.toggle("cm-tooltip-above", _), h.classList.toggle("cm-tooltip-below", !_), u.positioned && u.positioned(t.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let t of this.manager.tooltipViews)
        t.dom.style.top = ao;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
});
function Q0(t, e) {
  let n = parseInt(t.style.left, 10);
  (isNaN(n) || Math.abs(e - n) > 1) && (t.style.left = e + "px");
}
const x7 = /* @__PURE__ */ ye.baseTheme({
  ".cm-tooltip": {
    zIndex: 500,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: `${7 * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), w7 = { x: 0, y: 0 }, hm = /* @__PURE__ */ Ae.define({
  enables: [um, x7]
}), Vc = /* @__PURE__ */ Ae.define({
  combine: (t) => t.reduce((e, n) => e.concat(n), [])
});
class Uu {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new Uu(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new FS(e, Vc, (n, r) => this.createHostedView(n, r), (n) => n.dom.remove());
  }
  createHostedView(e, n) {
    let r = e.create(this.view);
    return r.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(r.dom, n ? n.dom.nextSibling : this.dom.firstChild), this.mounted && r.mount && r.mount(this.view), r;
  }
  mount(e) {
    for (let n of this.manager.tooltipViews)
      n.mount && n.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let n of this.manager.tooltipViews)
      n.positioned && n.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let n of this.manager.tooltipViews)
      (e = n.destroy) === null || e === void 0 || e.call(n);
  }
  passProp(e) {
    let n;
    for (let r of this.manager.tooltipViews) {
      let s = r[e];
      if (s !== void 0) {
        if (n === void 0)
          n = s;
        else if (n !== s)
          return;
      }
    }
    return n;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const k7 = /* @__PURE__ */ hm.compute([Vc], (t) => {
  let e = t.facet(Vc);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((n) => n.pos)),
    end: Math.max(...e.map((n) => {
      var r;
      return (r = n.end) !== null && r !== void 0 ? r : n.pos;
    })),
    create: Uu.create,
    above: e[0].above,
    arrow: e.some((n) => n.arrow)
  };
});
class C7 {
  constructor(e, n, r, s, i) {
    this.view = e, this.source = n, this.field = r, this.setHover = s, this.hoverTime = i, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: n } = this, r = e.docView.nearest(n.target);
    if (!r)
      return;
    let s, i = 1;
    if (r instanceof ri)
      s = r.posAtStart;
    else {
      if (s = e.posAtCoords(n), s == null)
        return;
      let o = e.coordsAtPos(s);
      if (!o || n.y < o.top || n.y > o.bottom || n.x < o.left - e.defaultCharacterWidth || n.x > o.right + e.defaultCharacterWidth)
        return;
      let l = e.bidiSpans(e.state.doc.lineAt(s)).find((h) => h.from <= s && h.to >= s), u = l && l.dir == Et.RTL ? -1 : 1;
      i = n.x < o.left ? -u : u;
    }
    let a = this.source(e, s, i);
    if (a?.then) {
      let o = this.pending = { pos: s };
      a.then((l) => {
        this.pending == o && (this.pending = null, l && !(Array.isArray(l) && !l.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(l) ? l : [l]) }));
      }, (l) => rr(e.state, l, "hover tooltip"));
    } else a && !(Array.isArray(a) && !a.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(a) ? a : [a]) });
  }
  get tooltip() {
    let e = this.view.plugin(um), n = e ? e.manager.tooltips.findIndex((r) => r.create == Uu.create) : -1;
    return n > -1 ? e.manager.tooltipViews[n] : null;
  }
  mousemove(e) {
    var n, r;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: s, tooltip: i } = this;
    if (s.length && i && !S7(i.dom, e) || this.pending) {
      let { pos: a } = s[0] || this.pending, o = (r = (n = s[0]) === null || n === void 0 ? void 0 : n.end) !== null && r !== void 0 ? r : a;
      (a == o ? this.view.posAtCoords(this.lastMove) != a : !A7(this.view, a, o, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: n } = this;
    if (n.length) {
      let { tooltip: r } = this;
      r && r.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(r.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let n = (r) => {
      e.removeEventListener("mouseleave", n), this.active.length && !this.view.dom.contains(r.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", n);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const Jl = 4;
function S7(t, e) {
  let { left: n, right: r, top: s, bottom: i } = t.getBoundingClientRect(), a;
  if (a = t.querySelector(".cm-tooltip-arrow")) {
    let o = a.getBoundingClientRect();
    s = Math.min(o.top, s), i = Math.max(o.bottom, i);
  }
  return e.clientX >= n - Jl && e.clientX <= r + Jl && e.clientY >= s - Jl && e.clientY <= i + Jl;
}
function A7(t, e, n, r, s, i) {
  let a = t.scrollDOM.getBoundingClientRect(), o = t.documentTop + t.documentPadding.top + t.contentHeight;
  if (a.left > r || a.right < r || a.top > s || Math.min(a.bottom, o) < s)
    return !1;
  let l = t.posAtCoords({ x: r, y: s }, !1);
  return l >= e && l <= n;
}
function BS(t, e = {}) {
  let n = Ze.define(), r = Vt.define({
    create() {
      return [];
    },
    update(s, i) {
      if (s.length && (e.hideOnChange && (i.docChanged || i.selection) ? s = [] : e.hideOn && (s = s.filter((a) => !e.hideOn(i, a))), i.docChanged)) {
        let a = [];
        for (let o of s) {
          let l = i.changes.mapPos(o.pos, -1, an.TrackDel);
          if (l != null) {
            let u = Object.assign(/* @__PURE__ */ Object.create(null), o);
            u.pos = l, u.end != null && (u.end = i.changes.mapPos(u.end)), a.push(u);
          }
        }
        s = a;
      }
      for (let a of i.effects)
        a.is(n) && (s = a.value), a.is(P7) && (s = []);
      return s;
    },
    provide: (s) => Vc.from(s)
  });
  return {
    active: r,
    extension: [
      r,
      qt.define((s) => new C7(
        s,
        t,
        r,
        n,
        e.hoverTime || 300
        /* Hover.Time */
      )),
      k7
    ]
  };
}
function MS(t, e) {
  let n = t.plugin(um);
  if (!n)
    return null;
  let r = n.manager.tooltips.indexOf(e);
  return r < 0 ? null : n.manager.tooltipViews[r];
}
const P7 = /* @__PURE__ */ Ze.define(), j0 = /* @__PURE__ */ Ae.define({
  combine(t) {
    let e, n;
    for (let r of t)
      e = e || r.topContainer, n = n || r.bottomContainer;
    return { topContainer: e, bottomContainer: n };
  }
});
function Lo(t, e) {
  let n = t.plugin(TS), r = n ? n.specs.indexOf(e) : -1;
  return r > -1 ? n.panels[r] : null;
}
const TS = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.input = t.state.facet(hi), this.specs = this.input.filter((n) => n), this.panels = this.specs.map((n) => n(t));
    let e = t.state.facet(j0);
    this.top = new ec(t, !0, e.topContainer), this.bottom = new ec(t, !1, e.bottomContainer), this.top.sync(this.panels.filter((n) => n.top)), this.bottom.sync(this.panels.filter((n) => !n.top));
    for (let n of this.panels)
      n.dom.classList.add("cm-panel"), n.mount && n.mount();
  }
  update(t) {
    let e = t.state.facet(j0);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new ec(t.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new ec(t.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let n = t.state.facet(hi);
    if (n != this.input) {
      let r = n.filter((l) => l), s = [], i = [], a = [], o = [];
      for (let l of r) {
        let u = this.specs.indexOf(l), h;
        u < 0 ? (h = l(t.view), o.push(h)) : (h = this.panels[u], h.update && h.update(t)), s.push(h), (h.top ? i : a).push(h);
      }
      this.specs = r, this.panels = s, this.top.sync(i), this.bottom.sync(a);
      for (let l of o)
        l.dom.classList.add("cm-panel"), l.mount && l.mount();
    } else
      for (let r of this.panels)
        r.update && r.update(t);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (t) => ye.scrollMargins.of((e) => {
    let n = e.plugin(t);
    return n && { top: n.top.scrollMargin(), bottom: n.bottom.scrollMargin() };
  })
});
class ec {
  constructor(e, n, r) {
    this.view = e, this.top = n, this.container = r, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let n of this.panels)
      n.destroy && e.indexOf(n) < 0 && n.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let n = this.container || this.view.dom;
      n.insertBefore(this.dom, this.top ? n.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let n of this.panels)
      if (n.dom.parentNode == this.dom) {
        for (; e != n.dom; )
          e = _0(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(n.dom, e);
    for (; e; )
      e = _0(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function _0(t) {
  let e = t.nextSibling;
  return t.remove(), e;
}
const hi = /* @__PURE__ */ Ae.define({
  enables: TS
});
class pi extends Li {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
pi.prototype.elementClass = "";
pi.prototype.toDOM = void 0;
pi.prototype.mapMode = an.TrackBefore;
pi.prototype.startSide = pi.prototype.endSide = -1;
pi.prototype.point = !0;
const vc = /* @__PURE__ */ Ae.define(), D7 = /* @__PURE__ */ Ae.define(), xc = /* @__PURE__ */ Ae.define(), R0 = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e)
});
function E7(t) {
  return [
    F7
  ];
}
const F7 = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.view = t, this.prevViewport = t.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = t.state.facet(xc).map((e) => new $0(t, e));
    for (let e of this.gutters)
      this.dom.appendChild(e.dom);
    this.fixed = !t.state.facet(R0), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), t.scrollDOM.insertBefore(this.dom, t.contentDOM);
  }
  update(t) {
    if (this.updateGutters(t)) {
      let e = this.prevViewport, n = t.view.viewport, r = Math.min(e.to, n.to) - Math.max(e.from, n.from);
      this.syncGutters(r < (n.to - n.from) * 0.8);
    }
    t.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), this.view.state.facet(R0) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = t.view.viewport;
  }
  syncGutters(t) {
    let e = this.dom.nextSibling;
    t && this.dom.remove();
    let n = mt.iter(this.view.state.facet(vc), this.view.viewport.from), r = [], s = this.gutters.map((i) => new B7(i, this.view.viewport, -this.view.documentPadding.top));
    for (let i of this.view.viewportLineBlocks)
      if (r.length && (r = []), Array.isArray(i.type)) {
        let a = !0;
        for (let o of i.type)
          if (o.type == In.Text && a) {
            wf(n, r, o.from);
            for (let l of s)
              l.line(this.view, o, r);
            a = !1;
          } else if (o.widget)
            for (let l of s)
              l.widget(this.view, o);
      } else if (i.type == In.Text) {
        wf(n, r, i.from);
        for (let a of s)
          a.line(this.view, i, r);
      } else if (i.widget)
        for (let a of s)
          a.widget(this.view, i);
    for (let i of s)
      i.finish();
    t && this.view.scrollDOM.insertBefore(this.dom, e);
  }
  updateGutters(t) {
    let e = t.startState.facet(xc), n = t.state.facet(xc), r = t.docChanged || t.heightChanged || t.viewportChanged || !mt.eq(t.startState.facet(vc), t.state.facet(vc), t.view.viewport.from, t.view.viewport.to);
    if (e == n)
      for (let s of this.gutters)
        s.update(t) && (r = !0);
    else {
      r = !0;
      let s = [];
      for (let i of n) {
        let a = e.indexOf(i);
        a < 0 ? s.push(new $0(this.view, i)) : (this.gutters[a].update(t), s.push(this.gutters[a]));
      }
      for (let i of this.gutters)
        i.dom.remove(), s.indexOf(i) < 0 && i.destroy();
      for (let i of s)
        this.dom.appendChild(i.dom);
      this.gutters = s;
    }
    return r;
  }
  destroy() {
    for (let t of this.gutters)
      t.destroy();
    this.dom.remove();
  }
}, {
  provide: (t) => ye.scrollMargins.of((e) => {
    let n = e.plugin(t);
    return !n || n.gutters.length == 0 || !n.fixed ? null : e.textDirection == Et.LTR ? { left: n.dom.offsetWidth * e.scaleX } : { right: n.dom.offsetWidth * e.scaleX };
  })
});
function Z0(t) {
  return Array.isArray(t) ? t : [t];
}
function wf(t, e, n) {
  for (; t.value && t.from <= n; )
    t.from == n && e.push(t.value), t.next();
}
class B7 {
  constructor(e, n, r) {
    this.gutter = e, this.height = r, this.i = 0, this.cursor = mt.iter(e.markers, n.from);
  }
  addElement(e, n, r) {
    let { gutter: s } = this, i = (n.top - this.height) / e.scaleY, a = n.height / e.scaleY;
    if (this.i == s.elements.length) {
      let o = new QS(e, a, i, r);
      s.elements.push(o), s.dom.appendChild(o.dom);
    } else
      s.elements[this.i].update(e, a, i, r);
    this.height = n.bottom, this.i++;
  }
  line(e, n, r) {
    let s = [];
    wf(this.cursor, s, n.from), r.length && (s = s.concat(r));
    let i = this.gutter.config.lineMarker(e, n, s);
    i && s.unshift(i);
    let a = this.gutter;
    s.length == 0 && !a.config.renderEmptyElements || this.addElement(e, n, s);
  }
  widget(e, n) {
    let r = this.gutter.config.widgetMarker(e, n.widget, n), s = r ? [r] : null;
    for (let i of e.state.facet(D7)) {
      let a = i(e, n.widget, n);
      a && (s || (s = [])).push(a);
    }
    s && this.addElement(e, n, s);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let n = e.elements.pop();
      e.dom.removeChild(n.dom), n.destroy();
    }
  }
}
class $0 {
  constructor(e, n) {
    this.view = e, this.config = n, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let r in n.domEventHandlers)
      this.dom.addEventListener(r, (s) => {
        let i = s.target, a;
        if (i != this.dom && this.dom.contains(i)) {
          for (; i.parentNode != this.dom; )
            i = i.parentNode;
          let l = i.getBoundingClientRect();
          a = (l.top + l.bottom) / 2;
        } else
          a = s.clientY;
        let o = e.lineBlockAtHeight(a - e.documentTop);
        n.domEventHandlers[r](e, o, s) && s.preventDefault();
      });
    this.markers = Z0(n.markers(e)), n.initialSpacer && (this.spacer = new QS(e, 0, 0, [n.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let n = this.markers;
    if (this.markers = Z0(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let s = this.config.updateSpacer(this.spacer.markers[0], e);
      s != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [s]);
    }
    let r = e.view.viewport;
    return !mt.eq(this.markers, n, r.from, r.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class QS {
  constructor(e, n, r, s) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, n, r, s);
  }
  update(e, n, r, s) {
    this.height != n && (this.height = n, this.dom.style.height = n + "px"), this.above != r && (this.dom.style.marginTop = (this.above = r) ? r + "px" : ""), M7(this.markers, s) || this.setMarkers(e, s);
  }
  setMarkers(e, n) {
    let r = "cm-gutterElement", s = this.dom.firstChild;
    for (let i = 0, a = 0; ; ) {
      let o = a, l = i < n.length ? n[i++] : null, u = !1;
      if (l) {
        let h = l.elementClass;
        h && (r += " " + h);
        for (let f = a; f < this.markers.length; f++)
          if (this.markers[f].compare(l)) {
            o = f, u = !0;
            break;
          }
      } else
        o = this.markers.length;
      for (; a < o; ) {
        let h = this.markers[a++];
        if (h.toDOM) {
          h.destroy(s);
          let f = s.nextSibling;
          s.remove(), s = f;
        }
      }
      if (!l)
        break;
      l.toDOM && (u ? s = s.nextSibling : this.dom.insertBefore(l.toDOM(e), s)), u && a++;
    }
    this.dom.className = r, this.markers = n;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function M7(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].compare(e[n]))
      return !1;
  return !0;
}
const T7 = /* @__PURE__ */ Ae.define(), Q7 = /* @__PURE__ */ Ae.define(), sa = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, n) {
        let r = Object.assign({}, e);
        for (let s in n) {
          let i = r[s], a = n[s];
          r[s] = i ? (o, l, u) => i(o, l, u) || a(o, l, u) : a;
        }
        return r;
      }
    });
  }
});
class rp extends pi {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function sp(t, e) {
  return t.state.facet(sa).formatNumber(e, t.state);
}
const j7 = /* @__PURE__ */ xc.compute([sa], (t) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(T7);
  },
  lineMarker(e, n, r) {
    return r.some((s) => s.toDOM) ? null : new rp(sp(e, e.state.doc.lineAt(n.from).number));
  },
  widgetMarker: (e, n, r) => {
    for (let s of e.state.facet(Q7)) {
      let i = s(e, n, r);
      if (i)
        return i;
    }
    return null;
  },
  lineMarkerChange: (e) => e.startState.facet(sa) != e.state.facet(sa),
  initialSpacer(e) {
    return new rp(sp(e, L0(e.state.doc.lines)));
  },
  updateSpacer(e, n) {
    let r = sp(n.view, L0(n.view.state.doc.lines));
    return r == e.number ? e : new rp(r);
  },
  domEventHandlers: t.facet(sa).domEventHandlers
}));
function _7(t = {}) {
  return [
    sa.of(t),
    E7(),
    j7
  ];
}
function L0(t) {
  let e = 9;
  for (; e < t; )
    e = e * 10 + 9;
  return e;
}
const R7 = /* @__PURE__ */ new class extends pi {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), Z7 = /* @__PURE__ */ vc.compute(["selection"], (t) => {
  let e = [], n = -1;
  for (let r of t.selection.ranges) {
    let s = t.doc.lineAt(r.head).from;
    s > n && (n = s, e.push(R7.range(s)));
  }
  return mt.of(e);
});
function $7() {
  return Z7;
}
const jS = 1024;
let L7 = 0;
class ip {
  constructor(e, n) {
    this.from = e, this.to = n;
  }
}
class nt {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = L7++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = or.match(e)), (n) => {
      let r = e(n);
      return r === void 0 ? null : [this, r];
    };
  }
}
nt.closedBy = new nt({ deserialize: (t) => t.split(" ") });
nt.openedBy = new nt({ deserialize: (t) => t.split(" ") });
nt.group = new nt({ deserialize: (t) => t.split(" ") });
nt.isolate = new nt({ deserialize: (t) => {
  if (t && t != "rtl" && t != "ltr" && t != "auto")
    throw new RangeError("Invalid value for isolate: " + t);
  return t || "auto";
} });
nt.contextHash = new nt({ perNode: !0 });
nt.lookAhead = new nt({ perNode: !0 });
nt.mounted = new nt({ perNode: !0 });
class Xc {
  constructor(e, n, r) {
    this.tree = e, this.overlay = n, this.parser = r;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[nt.mounted.id];
  }
}
const I7 = /* @__PURE__ */ Object.create(null);
class or {
  /**
  @internal
  */
  constructor(e, n, r, s = 0) {
    this.name = e, this.props = n, this.id = r, this.flags = s;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let n = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : I7, r = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), s = new or(e.name || "", n, e.id, r);
    if (e.props) {
      for (let i of e.props)
        if (Array.isArray(i) || (i = i(s)), i) {
          if (i[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          n[i[0].id] = i[1];
        }
    }
    return s;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let n = this.prop(nt.group);
      return n ? n.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let n = /* @__PURE__ */ Object.create(null);
    for (let r in e)
      for (let s of r.split(" "))
        n[s] = e[r];
    return (r) => {
      for (let s = r.prop(nt.group), i = -1; i < (s ? s.length : 0); i++) {
        let a = n[i < 0 ? r.name : s[i]];
        if (a)
          return a;
      }
    };
  }
}
or.none = new or(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class pm {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].id != n)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let n = [];
    for (let r of this.types) {
      let s = null;
      for (let i of e) {
        let a = i(r);
        a && (s || (s = Object.assign({}, r.props)), s[a[0].id] = a[1]);
      }
      n.push(s ? new or(r.name, s, r.id, r.flags) : r);
    }
    return new pm(n);
  }
}
const tc = /* @__PURE__ */ new WeakMap(), I0 = /* @__PURE__ */ new WeakMap();
var fn;
(function(t) {
  t[t.ExcludeBuffers = 1] = "ExcludeBuffers", t[t.IncludeAnonymous = 2] = "IncludeAnonymous", t[t.IgnoreMounts = 4] = "IgnoreMounts", t[t.IgnoreOverlays = 8] = "IgnoreOverlays";
})(fn || (fn = {}));
class cn {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, n, r, s, i) {
    if (this.type = e, this.children = n, this.positions = r, this.length = s, this.props = null, i && i.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [a, o] of i)
        this.props[typeof a == "number" ? a : a.id] = o;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = Xc.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let n = "";
    for (let r of this.children) {
      let s = r.toString();
      s && (n && (n += ","), n += s);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (n.length ? "(" + n + ")" : "") : n;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new Cf(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, n = 0, r = 0) {
    let s = tc.get(this) || this.topNode, i = new Cf(s);
    return i.moveTo(e, n), tc.set(this, i._tree), i;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new ir(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, n = 0) {
    let r = Io(tc.get(this) || this.topNode, e, n, !1);
    return tc.set(this, r), r;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, n = 0) {
    let r = Io(I0.get(this) || this.topNode, e, n, !0);
    return I0.set(this, r), r;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, n = 0) {
    return X7(this, e, n);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: n, leave: r, from: s = 0, to: i = this.length } = e, a = e.mode || 0, o = (a & fn.IncludeAnonymous) > 0;
    for (let l = this.cursor(a | fn.IncludeAnonymous); ; ) {
      let u = !1;
      if (l.from <= i && l.to >= s && (!o && l.type.isAnonymous || n(l) !== !1)) {
        if (l.firstChild())
          continue;
        u = !0;
      }
      for (; u && r && (o || !l.type.isAnonymous) && r(l), !l.nextSibling(); ) {
        if (!l.parent())
          return;
        u = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let n in this.props)
        e.push([+n, this.props[n]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : mm(or.none, this.children, this.positions, 0, this.children.length, 0, this.length, (n, r, s) => new cn(this.type, n, r, s, this.propValues), e.makeTree || ((n, r, s) => new cn(or.none, n, r, s)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return W7(e);
  }
}
cn.empty = new cn(or.none, [], [], 0);
class fm {
  constructor(e, n) {
    this.buffer = e, this.index = n;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new fm(this.buffer, this.index);
  }
}
class fi {
  /**
  Create a tree buffer.
  */
  constructor(e, n, r) {
    this.buffer = e, this.length = n, this.set = r;
  }
  /**
  @internal
  */
  get type() {
    return or.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let n = 0; n < this.buffer.length; )
      e.push(this.childString(n)), n = this.buffer[n + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let n = this.buffer[e], r = this.buffer[e + 3], s = this.set.types[n], i = s.name;
    if (/\W/.test(i) && !s.isError && (i = JSON.stringify(i)), e += 4, r == e)
      return i;
    let a = [];
    for (; e < r; )
      a.push(this.childString(e)), e = this.buffer[e + 3];
    return i + "(" + a.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, n, r, s, i) {
    let { buffer: a } = this, o = -1;
    for (let l = e; l != n && !(_S(i, s, a[l + 1], a[l + 2]) && (o = l, r > 0)); l = a[l + 3])
      ;
    return o;
  }
  /**
  @internal
  */
  slice(e, n, r) {
    let s = this.buffer, i = new Uint16Array(n - e), a = 0;
    for (let o = e, l = 0; o < n; ) {
      i[l++] = s[o++], i[l++] = s[o++] - r;
      let u = i[l++] = s[o++] - r;
      i[l++] = s[o++] - e, a = Math.max(a, u);
    }
    return new fi(i, a, this.set);
  }
}
function _S(t, e, n, r) {
  switch (t) {
    case -2:
      return n < e;
    case -1:
      return r >= e && n < e;
    case 0:
      return n < e && r > e;
    case 1:
      return n <= e && r > e;
    case 2:
      return r > e;
    case 4:
      return !0;
  }
}
function Io(t, e, n, r) {
  for (var s; t.from == t.to || (n < 1 ? t.from >= e : t.from > e) || (n > -1 ? t.to <= e : t.to < e); ) {
    let a = !r && t instanceof ir && t.index < 0 ? null : t.parent;
    if (!a)
      return t;
    t = a;
  }
  let i = r ? 0 : fn.IgnoreOverlays;
  if (r)
    for (let a = t, o = a.parent; o; a = o, o = a.parent)
      a instanceof ir && a.index < 0 && ((s = o.enter(e, n, i)) === null || s === void 0 ? void 0 : s.from) != a.from && (t = o);
  for (; ; ) {
    let a = t.enter(e, n, i);
    if (!a)
      return t;
    t = a;
  }
}
class RS {
  cursor(e = 0) {
    return new Cf(this, e);
  }
  getChild(e, n = null, r = null) {
    let s = N0(this, e, n, r);
    return s.length ? s[0] : null;
  }
  getChildren(e, n = null, r = null) {
    return N0(this, e, n, r);
  }
  resolve(e, n = 0) {
    return Io(this, e, n, !1);
  }
  resolveInner(e, n = 0) {
    return Io(this, e, n, !0);
  }
  matchContext(e) {
    return kf(this.parent, e);
  }
  enterUnfinishedNodesBefore(e) {
    let n = this.childBefore(e), r = this;
    for (; n; ) {
      let s = n.lastChild;
      if (!s || s.to != n.to)
        break;
      s.type.isError && s.from == s.to ? (r = n, n = s.prevSibling) : n = s;
    }
    return r;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
class ir extends RS {
  constructor(e, n, r, s) {
    super(), this._tree = e, this.from = n, this.index = r, this._parent = s;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, n, r, s, i = 0) {
    for (let a = this; ; ) {
      for (let { children: o, positions: l } = a._tree, u = n > 0 ? o.length : -1; e != u; e += n) {
        let h = o[e], f = l[e] + a.from;
        if (_S(s, r, f, f + h.length)) {
          if (h instanceof fi) {
            if (i & fn.ExcludeBuffers)
              continue;
            let m = h.findChild(0, h.buffer.length, n, r - f, s);
            if (m > -1)
              return new gs(new N7(a, h, e, f), null, m);
          } else if (i & fn.IncludeAnonymous || !h.type.isAnonymous || dm(h)) {
            let m;
            if (!(i & fn.IgnoreMounts) && (m = Xc.get(h)) && !m.overlay)
              return new ir(m.tree, f, e, a);
            let b = new ir(h, f, e, a);
            return i & fn.IncludeAnonymous || !b.type.isAnonymous ? b : b.nextChild(n < 0 ? h.children.length - 1 : 0, n, r, s);
          }
        }
      }
      if (i & fn.IncludeAnonymous || !a.type.isAnonymous || (a.index >= 0 ? e = a.index + n : e = n < 0 ? -1 : a._parent._tree.children.length, a = a._parent, !a))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, n, r = 0) {
    let s;
    if (!(r & fn.IgnoreOverlays) && (s = Xc.get(this._tree)) && s.overlay) {
      let i = e - this.from;
      for (let { from: a, to: o } of s.overlay)
        if ((n > 0 ? a <= i : a < i) && (n < 0 ? o >= i : o > i))
          return new ir(s.tree, s.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, n, r);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
}
function N0(t, e, n, r) {
  let s = t.cursor(), i = [];
  if (!s.firstChild())
    return i;
  if (n != null) {
    for (let a = !1; !a; )
      if (a = s.type.is(n), !s.nextSibling())
        return i;
  }
  for (; ; ) {
    if (r != null && s.type.is(r))
      return i;
    if (s.type.is(e) && i.push(s.node), !s.nextSibling())
      return r == null ? i : [];
  }
}
function kf(t, e, n = e.length - 1) {
  for (let r = t; n >= 0; r = r.parent) {
    if (!r)
      return !1;
    if (!r.type.isAnonymous) {
      if (e[n] && e[n] != r.name)
        return !1;
      n--;
    }
  }
  return !0;
}
class N7 {
  constructor(e, n, r, s) {
    this.parent = e, this.buffer = n, this.index = r, this.start = s;
  }
}
class gs extends RS {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, n, r) {
    super(), this.context = e, this._parent = n, this.index = r, this.type = e.buffer.set.types[e.buffer.buffer[r]];
  }
  child(e, n, r) {
    let { buffer: s } = this.context, i = s.findChild(this.index + 4, s.buffer[this.index + 3], e, n - this.context.start, r);
    return i < 0 ? null : new gs(this.context, this, i);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, n, r = 0) {
    if (r & fn.ExcludeBuffers)
      return null;
    let { buffer: s } = this.context, i = s.findChild(this.index + 4, s.buffer[this.index + 3], n > 0 ? 1 : -1, e - this.context.start, n);
    return i < 0 ? null : new gs(this.context, this, i);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, n = e.buffer[this.index + 3];
    return n < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new gs(this.context, this._parent, n) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, n = this._parent ? this._parent.index + 4 : 0;
    return this.index == n ? this.externalSibling(-1) : new gs(this.context, this._parent, e.findChild(
      n,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], n = [], { buffer: r } = this.context, s = this.index + 4, i = r.buffer[this.index + 3];
    if (i > s) {
      let a = r.buffer[this.index + 1];
      e.push(r.slice(s, i, a)), n.push(0);
    }
    return new cn(this.type, e, n, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function ZS(t) {
  if (!t.length)
    return null;
  let e = 0, n = t[0];
  for (let i = 1; i < t.length; i++) {
    let a = t[i];
    (a.from > n.from || a.to < n.to) && (n = a, e = i);
  }
  let r = n instanceof ir && n.index < 0 ? null : n.parent, s = t.slice();
  return r ? s[e] = r : s.splice(e, 1), new V7(s, n);
}
class V7 {
  constructor(e, n) {
    this.heads = e, this.node = n;
  }
  get next() {
    return ZS(this.heads);
  }
}
function X7(t, e, n) {
  let r = t.resolveInner(e, n), s = null;
  for (let i = r instanceof ir ? r : r.context.parent; i; i = i.parent)
    if (i.index < 0) {
      let a = i.parent;
      (s || (s = [r])).push(a.resolve(e, n)), i = a;
    } else {
      let a = Xc.get(i.tree);
      if (a && a.overlay && a.overlay[0].from <= e && a.overlay[a.overlay.length - 1].to >= e) {
        let o = new ir(a.tree, a.overlay[0].from + i.from, -1, i);
        (s || (s = [r])).push(Io(o, e, n, !1));
      }
    }
  return s ? ZS(s) : r;
}
class Cf {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, n = 0) {
    if (this.mode = n, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof ir)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let r = e._parent; r; r = r._parent)
        this.stack.unshift(r.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, n) {
    this.index = e;
    let { start: r, buffer: s } = this.buffer;
    return this.type = n || s.set.types[s.buffer[e]], this.from = r + s.buffer[e + 1], this.to = r + s.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof ir ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, n, r) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, n, r, this.mode));
    let { buffer: s } = this.buffer, i = s.findChild(this.index + 4, s.buffer[this.index + 3], e, n - this.buffer.start, r);
    return i < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(i));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, n, r = this.mode) {
    return this.buffer ? r & fn.ExcludeBuffers ? !1 : this.enterChild(1, e, n) : this.yield(this._tree.enter(e, n, r));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & fn.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & fn.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: n } = this.buffer, r = this.stack.length - 1;
    if (e < 0) {
      let s = r < 0 ? 0 : this.stack[r] + 4;
      if (this.index != s)
        return this.yieldBuf(n.findChild(
          s,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let s = n.buffer[this.index + 3];
      if (s < (r < 0 ? n.buffer.length : n.buffer[this.stack[r] + 3]))
        return this.yieldBuf(s);
    }
    return r < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let n, r, { buffer: s } = this;
    if (s) {
      if (e > 0) {
        if (this.index < s.buffer.buffer.length)
          return !1;
      } else
        for (let i = 0; i < this.index; i++)
          if (s.buffer.buffer[i + 3] < this.index)
            return !1;
      ({ index: n, parent: r } = s);
    } else
      ({ index: n, _parent: r } = this._tree);
    for (; r; { index: n, _parent: r } = r)
      if (n > -1)
        for (let i = n + e, a = e < 0 ? -1 : r._tree.children.length; i != a; i += e) {
          let o = r._tree.children[i];
          if (this.mode & fn.IncludeAnonymous || o instanceof fi || !o.type.isAnonymous || dm(o))
            return !1;
        }
    return !0;
  }
  move(e, n) {
    if (n && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traversal. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, n = 0) {
    for (; (this.from == this.to || (n < 1 ? this.from >= e : this.from > e) || (n > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, n); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, n = null, r = 0;
    if (e && e.context == this.buffer)
      e: for (let s = this.index, i = this.stack.length; i >= 0; ) {
        for (let a = e; a; a = a._parent)
          if (a.index == s) {
            if (s == this.index)
              return a;
            n = a, r = i + 1;
            break e;
          }
        s = this.stack[--i];
      }
    for (let s = r; s < this.stack.length; s++)
      n = new gs(this.buffer, n, this.stack[s]);
    return this.bufferNode = new gs(this.buffer, n, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, n) {
    for (let r = 0; ; ) {
      let s = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          r++;
          continue;
        }
        this.type.isAnonymous || (s = !0);
      }
      for (; ; ) {
        if (s && n && n(this), s = this.type.isAnonymous, !r)
          return;
        if (this.nextSibling())
          break;
        this.parent(), r--, s = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return kf(this.node.parent, e);
    let { buffer: n } = this.buffer, { types: r } = n.set;
    for (let s = e.length - 1, i = this.stack.length - 1; s >= 0; i--) {
      if (i < 0)
        return kf(this._tree, e, s);
      let a = r[n.buffer[this.stack[i]]];
      if (!a.isAnonymous) {
        if (e[s] && e[s] != a.name)
          return !1;
        s--;
      }
    }
    return !0;
  }
}
function dm(t) {
  return t.children.some((e) => e instanceof fi || !e.type.isAnonymous || dm(e));
}
function W7(t) {
  var e;
  let { buffer: n, nodeSet: r, maxBufferLength: s = jS, reused: i = [], minRepeatType: a = r.types.length } = t, o = Array.isArray(n) ? new fm(n, n.length) : n, l = r.types, u = 0, h = 0;
  function f(M, Z, N, q, ae, J) {
    let { id: pe, start: H, end: oe, size: fe } = o, ke = h, Pe = u;
    for (; fe < 0; )
      if (o.next(), fe == -1) {
        let De = i[pe];
        N.push(De), q.push(H - M);
        return;
      } else if (fe == -3) {
        u = pe;
        return;
      } else if (fe == -4) {
        h = pe;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${fe}`);
    let ie = l[pe], Ce, Le, Ue = H - M;
    if (oe - H <= s && (Le = S(o.pos - Z, ae))) {
      let De = new Uint16Array(Le.size - Le.skip), ue = o.pos - Le.size, _e = De.length;
      for (; o.pos > ue; )
        _e = B(Le.start, De, _e);
      Ce = new fi(De, oe - Le.start, r), Ue = Le.start - M;
    } else {
      let De = o.pos - fe;
      o.next();
      let ue = [], _e = [], He = pe >= a ? pe : -1, dt = 0, $e = oe;
      for (; o.pos > De; )
        He >= 0 && o.id == He && o.size >= 0 ? (o.end <= $e - s && (v(ue, _e, H, dt, o.end, $e, He, ke, Pe), dt = ue.length, $e = o.end), o.next()) : J > 2500 ? m(H, De, ue, _e) : f(H, De, ue, _e, He, J + 1);
      if (He >= 0 && dt > 0 && dt < ue.length && v(ue, _e, H, dt, H, $e, He, ke, Pe), ue.reverse(), _e.reverse(), He > -1 && dt > 0) {
        let Ft = b(ie, Pe);
        Ce = mm(ie, ue, _e, 0, ue.length, 0, oe - H, Ft, Ft);
      } else
        Ce = C(ie, ue, _e, oe - H, ke - oe, Pe);
    }
    N.push(Ce), q.push(Ue);
  }
  function m(M, Z, N, q) {
    let ae = [], J = 0, pe = -1;
    for (; o.pos > Z; ) {
      let { id: H, start: oe, end: fe, size: ke } = o;
      if (ke > 4)
        o.next();
      else {
        if (pe > -1 && oe < pe)
          break;
        pe < 0 && (pe = fe - s), ae.push(H, oe, fe), J++, o.next();
      }
    }
    if (J) {
      let H = new Uint16Array(J * 4), oe = ae[ae.length - 2];
      for (let fe = ae.length - 3, ke = 0; fe >= 0; fe -= 3)
        H[ke++] = ae[fe], H[ke++] = ae[fe + 1] - oe, H[ke++] = ae[fe + 2] - oe, H[ke++] = ke;
      N.push(new fi(H, ae[2] - oe, r)), q.push(oe - M);
    }
  }
  function b(M, Z) {
    return (N, q, ae) => {
      let J = 0, pe = N.length - 1, H, oe;
      if (pe >= 0 && (H = N[pe]) instanceof cn) {
        if (!pe && H.type == M && H.length == ae)
          return H;
        (oe = H.prop(nt.lookAhead)) && (J = q[pe] + H.length + oe);
      }
      return C(M, N, q, ae, J, Z);
    };
  }
  function v(M, Z, N, q, ae, J, pe, H, oe) {
    let fe = [], ke = [];
    for (; M.length > q; )
      fe.push(M.pop()), ke.push(Z.pop() + N - ae);
    M.push(C(r.types[pe], fe, ke, J - ae, H - J, oe)), Z.push(ae - N);
  }
  function C(M, Z, N, q, ae, J, pe) {
    if (J) {
      let H = [nt.contextHash, J];
      pe = pe ? [H].concat(pe) : [H];
    }
    if (ae > 25) {
      let H = [nt.lookAhead, ae];
      pe = pe ? [H].concat(pe) : [H];
    }
    return new cn(M, Z, N, q, pe);
  }
  function S(M, Z) {
    let N = o.fork(), q = 0, ae = 0, J = 0, pe = N.end - s, H = { size: 0, start: 0, skip: 0 };
    e: for (let oe = N.pos - M; N.pos > oe; ) {
      let fe = N.size;
      if (N.id == Z && fe >= 0) {
        H.size = q, H.start = ae, H.skip = J, J += 4, q += 4, N.next();
        continue;
      }
      let ke = N.pos - fe;
      if (fe < 0 || ke < oe || N.start < pe)
        break;
      let Pe = N.id >= a ? 4 : 0, ie = N.start;
      for (N.next(); N.pos > ke; ) {
        if (N.size < 0)
          if (N.size == -3)
            Pe += 4;
          else
            break e;
        else N.id >= a && (Pe += 4);
        N.next();
      }
      ae = ie, q += fe, J += Pe;
    }
    return (Z < 0 || q == M) && (H.size = q, H.start = ae, H.skip = J), H.size > 4 ? H : void 0;
  }
  function B(M, Z, N) {
    let { id: q, start: ae, end: J, size: pe } = o;
    if (o.next(), pe >= 0 && q < a) {
      let H = N;
      if (pe > 4) {
        let oe = o.pos - (pe - 4);
        for (; o.pos > oe; )
          N = B(M, Z, N);
      }
      Z[--N] = H, Z[--N] = J - M, Z[--N] = ae - M, Z[--N] = q;
    } else pe == -3 ? u = q : pe == -4 && (h = q);
    return N;
  }
  let $ = [], W = [];
  for (; o.pos > 0; )
    f(t.start || 0, t.bufferStart || 0, $, W, -1, 0);
  let _ = (e = t.length) !== null && e !== void 0 ? e : $.length ? W[0] + $[0].length : 0;
  return new cn(l[t.topID], $.reverse(), W.reverse(), _);
}
const V0 = /* @__PURE__ */ new WeakMap();
function wc(t, e) {
  if (!t.isAnonymous || e instanceof fi || e.type != t)
    return 1;
  let n = V0.get(e);
  if (n == null) {
    n = 1;
    for (let r of e.children) {
      if (r.type != t || !(r instanceof cn)) {
        n = 1;
        break;
      }
      n += wc(t, r);
    }
    V0.set(e, n);
  }
  return n;
}
function mm(t, e, n, r, s, i, a, o, l) {
  let u = 0;
  for (let v = r; v < s; v++)
    u += wc(t, e[v]);
  let h = Math.ceil(
    u * 1.5 / 8
    /* Balance.BranchFactor */
  ), f = [], m = [];
  function b(v, C, S, B, $) {
    for (let W = S; W < B; ) {
      let _ = W, M = C[W], Z = wc(t, v[W]);
      for (W++; W < B; W++) {
        let N = wc(t, v[W]);
        if (Z + N >= h)
          break;
        Z += N;
      }
      if (W == _ + 1) {
        if (Z > h) {
          let N = v[_];
          b(N.children, N.positions, 0, N.children.length, C[_] + $);
          continue;
        }
        f.push(v[_]);
      } else {
        let N = C[W - 1] + v[W - 1].length - M;
        f.push(mm(t, v, C, _, W, M, N, null, l));
      }
      m.push(M + $ - i);
    }
  }
  return b(e, n, r, s, 0), (o || l)(f, m, a);
}
class U7 {
  constructor() {
    this.map = /* @__PURE__ */ new WeakMap();
  }
  setBuffer(e, n, r) {
    let s = this.map.get(e);
    s || this.map.set(e, s = /* @__PURE__ */ new Map()), s.set(n, r);
  }
  getBuffer(e, n) {
    let r = this.map.get(e);
    return r && r.get(n);
  }
  /**
  Set the value for this syntax node.
  */
  set(e, n) {
    e instanceof gs ? this.setBuffer(e.context.buffer, e.index, n) : e instanceof ir && this.map.set(e.tree, n);
  }
  /**
  Retrieve value for this syntax node, if it exists in the map.
  */
  get(e) {
    return e instanceof gs ? this.getBuffer(e.context.buffer, e.index) : e instanceof ir ? this.map.get(e.tree) : void 0;
  }
  /**
  Set the value for the node that a cursor currently points to.
  */
  cursorSet(e, n) {
    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, n) : this.map.set(e.tree, n);
  }
  /**
  Retrieve the value for the node that a cursor currently points
  to.
  */
  cursorGet(e) {
    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);
  }
}
class ji {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, n, r, s, i = !1, a = !1) {
    this.from = e, this.to = n, this.tree = r, this.offset = s, this.open = (i ? 1 : 0) | (a ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, n = [], r = !1) {
    let s = [new ji(0, e.length, e, 0, !1, r)];
    for (let i of n)
      i.to > e.length && s.push(i);
    return s;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, n, r = 128) {
    if (!n.length)
      return e;
    let s = [], i = 1, a = e.length ? e[0] : null;
    for (let o = 0, l = 0, u = 0; ; o++) {
      let h = o < n.length ? n[o] : null, f = h ? h.fromA : 1e9;
      if (f - l >= r)
        for (; a && a.from < f; ) {
          let m = a;
          if (l >= m.from || f <= m.to || u) {
            let b = Math.max(m.from, l) - u, v = Math.min(m.to, f) - u;
            m = b >= v ? null : new ji(b, v, m.tree, m.offset + u, o > 0, !!h);
          }
          if (m && s.push(m), a.to > f)
            break;
          a = i < e.length ? e[i++] : null;
        }
      if (!h)
        break;
      l = h.toA, u = h.toA - h.toB;
    }
    return s;
  }
}
class $S {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, n, r) {
    return typeof e == "string" && (e = new q7(e)), r = r ? r.length ? r.map((s) => new ip(s.from, s.to)) : [new ip(0, 0)] : [new ip(0, e.length)], this.createParse(e, n || [], r);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, n, r) {
    let s = this.startParse(e, n, r);
    for (; ; ) {
      let i = s.advance();
      if (i)
        return i;
    }
  }
}
class q7 {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, n) {
    return this.string.slice(e, n);
  }
}
new nt({ perNode: !0 });
let G7 = 0;
class Dr {
  /**
  @internal
  */
  constructor(e, n, r, s) {
    this.name = e, this.set = n, this.base = r, this.modified = s, this.id = G7++;
  }
  toString() {
    let { name: e } = this;
    for (let n of this.modified)
      n.name && (e = `${n.name}(${e})`);
    return e;
  }
  static define(e, n) {
    let r = typeof e == "string" ? e : "?";
    if (e instanceof Dr && (n = e), n?.base)
      throw new Error("Can not derive from a modified tag");
    let s = new Dr(r, [], null, []);
    if (s.set.push(s), n)
      for (let i of n.set)
        s.set.push(i);
    return s;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier(e) {
    let n = new Wc(e);
    return (r) => r.modified.indexOf(n) > -1 ? r : Wc.get(r.base || r, r.modified.concat(n).sort((s, i) => s.id - i.id));
  }
}
let z7 = 0;
class Wc {
  constructor(e) {
    this.name = e, this.instances = [], this.id = z7++;
  }
  static get(e, n) {
    if (!n.length)
      return e;
    let r = n[0].instances.find((o) => o.base == e && Y7(n, o.modified));
    if (r)
      return r;
    let s = [], i = new Dr(e.name, s, e, n);
    for (let o of n)
      o.instances.push(i);
    let a = H7(n);
    for (let o of e.set)
      if (!o.modified.length)
        for (let l of a)
          s.push(Wc.get(o, l));
    return i;
  }
}
function Y7(t, e) {
  return t.length == e.length && t.every((n, r) => n == e[r]);
}
function H7(t) {
  let e = [[]];
  for (let n = 0; n < t.length; n++)
    for (let r = 0, s = e.length; r < s; r++)
      e.push(e[r].concat(t[n]));
  return e.sort((n, r) => r.length - n.length);
}
function LS(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let r = t[n];
    Array.isArray(r) || (r = [r]);
    for (let s of n.split(" "))
      if (s) {
        let i = [], a = 2, o = s;
        for (let f = 0; ; ) {
          if (o == "..." && f > 0 && f + 3 == s.length) {
            a = 1;
            break;
          }
          let m = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(o);
          if (!m)
            throw new RangeError("Invalid path: " + s);
          if (i.push(m[0] == "*" ? "" : m[0][0] == '"' ? JSON.parse(m[0]) : m[0]), f += m[0].length, f == s.length)
            break;
          let b = s[f++];
          if (f == s.length && b == "!") {
            a = 0;
            break;
          }
          if (b != "/")
            throw new RangeError("Invalid path: " + s);
          o = s.slice(f);
        }
        let l = i.length - 1, u = i[l];
        if (!u)
          throw new RangeError("Invalid path: " + s);
        let h = new Uc(r, a, l > 0 ? i.slice(0, l) : null);
        e[u] = h.sort(e[u]);
      }
  }
  return IS.add(e);
}
const IS = new nt();
class Uc {
  constructor(e, n, r, s) {
    this.tags = e, this.mode = n, this.context = r, this.next = s;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
Uc.empty = new Uc([], 2, null);
function NS(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let i of t)
    if (!Array.isArray(i.tag))
      n[i.tag.id] = i.class;
    else
      for (let a of i.tag)
        n[a.id] = i.class;
  let { scope: r, all: s = null } = e || {};
  return {
    style: (i) => {
      let a = s;
      for (let o of i)
        for (let l of o.set) {
          let u = n[l.id];
          if (u) {
            a = a ? a + " " + u : u;
            break;
          }
        }
      return a;
    },
    scope: r
  };
}
function K7(t, e) {
  let n = null;
  for (let r of t) {
    let s = r.style(e);
    s && (n = n ? n + " " + s : s);
  }
  return n;
}
function J7(t, e, n, r = 0, s = t.length) {
  let i = new eT(r, Array.isArray(e) ? e : [e], n);
  i.highlightRange(t.cursor(), r, s, "", i.highlighters), i.flush(s);
}
class eT {
  constructor(e, n, r) {
    this.at = e, this.highlighters = n, this.span = r, this.class = "";
  }
  startSpan(e, n) {
    n != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = n);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, n, r, s, i) {
    let { type: a, from: o, to: l } = e;
    if (o >= r || l <= n)
      return;
    a.isTop && (i = this.highlighters.filter((b) => !b.scope || b.scope(a)));
    let u = s, h = tT(e) || Uc.empty, f = K7(i, h.tags);
    if (f && (u && (u += " "), u += f, h.mode == 1 && (s += (s ? " " : "") + f)), this.startSpan(Math.max(n, o), u), h.opaque)
      return;
    let m = e.tree && e.tree.prop(nt.mounted);
    if (m && m.overlay) {
      let b = e.node.enter(m.overlay[0].from + o, 1), v = this.highlighters.filter((S) => !S.scope || S.scope(m.tree.type)), C = e.firstChild();
      for (let S = 0, B = o; ; S++) {
        let $ = S < m.overlay.length ? m.overlay[S] : null, W = $ ? $.from + o : l, _ = Math.max(n, B), M = Math.min(r, W);
        if (_ < M && C)
          for (; e.from < M && (this.highlightRange(e, _, M, s, i), this.startSpan(Math.min(M, e.to), u), !(e.to >= W || !e.nextSibling())); )
            ;
        if (!$ || W > r)
          break;
        B = $.to + o, B > n && (this.highlightRange(b.cursor(), Math.max(n, $.from + o), Math.min(r, B), "", v), this.startSpan(Math.min(r, B), u));
      }
      C && e.parent();
    } else if (e.firstChild()) {
      m && (s = "");
      do
        if (!(e.to <= n)) {
          if (e.from >= r)
            break;
          this.highlightRange(e, n, r, s, i), this.startSpan(Math.min(r, e.to), u);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function tT(t) {
  let e = t.type.prop(IS);
  for (; e && e.context && !t.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const Oe = Dr.define, nc = Oe(), Ks = Oe(), X0 = Oe(Ks), W0 = Oe(Ks), Js = Oe(), rc = Oe(Js), ap = Oe(Js), cs = Oe(), Ai = Oe(cs), os = Oe(), ls = Oe(), Sf = Oe(), oo = Oe(Sf), sc = Oe(), c = {
  /**
  A comment.
  */
  comment: nc,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: Oe(nc),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: Oe(nc),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: Oe(nc),
  /**
  Any kind of identifier.
  */
  name: Ks,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: Oe(Ks),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: X0,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: Oe(X0),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: W0,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: Oe(W0),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: Oe(Ks),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: Oe(Ks),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: Oe(Ks),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: Oe(Ks),
  /**
  A literal value.
  */
  literal: Js,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: rc,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: Oe(rc),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: Oe(rc),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: Oe(rc),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: ap,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: Oe(ap),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: Oe(ap),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: Oe(Js),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: Oe(Js),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: Oe(Js),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: Oe(Js),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: Oe(Js),
  /**
  A language keyword.
  */
  keyword: os,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: Oe(os),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: Oe(os),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: Oe(os),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: Oe(os),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: Oe(os),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: Oe(os),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: Oe(os),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: Oe(os),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: Oe(os),
  /**
  An operator.
  */
  operator: ls,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: Oe(ls),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: Oe(ls),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: Oe(ls),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: Oe(ls),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: Oe(ls),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: Oe(ls),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: Oe(ls),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: Oe(ls),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: Oe(ls),
  /**
  Program or markup punctuation.
  */
  punctuation: Sf,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: Oe(Sf),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: oo,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: Oe(oo),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: Oe(oo),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: Oe(oo),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: Oe(oo),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: cs,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: Ai,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: Oe(Ai),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: Oe(Ai),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: Oe(Ai),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: Oe(Ai),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: Oe(Ai),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: Oe(Ai),
  /**
  A prose [content](#highlight.tags.content) separator (such as a horizontal rule).
  */
  contentSeparator: Oe(cs),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: Oe(cs),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: Oe(cs),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: Oe(cs),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: Oe(cs),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: Oe(cs),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: Oe(cs),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: Oe(cs),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: Oe(),
  /**
  Deleted text.
  */
  deleted: Oe(),
  /**
  Changed text.
  */
  changed: Oe(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: Oe(),
  /**
  Metadata or meta-instruction.
  */
  meta: sc,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: Oe(sc),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: Oe(sc),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: Oe(sc),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: Dr.defineModifier("definition"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: Dr.defineModifier("constant"),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: Dr.defineModifier("function"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: Dr.defineModifier("standard"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: Dr.defineModifier("local"),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: Dr.defineModifier("special")
};
for (let t in c) {
  let e = c[t];
  e instanceof Dr && (e.name = t);
}
NS([
  { tag: c.link, class: "tok-link" },
  { tag: c.heading, class: "tok-heading" },
  { tag: c.emphasis, class: "tok-emphasis" },
  { tag: c.strong, class: "tok-strong" },
  { tag: c.keyword, class: "tok-keyword" },
  { tag: c.atom, class: "tok-atom" },
  { tag: c.bool, class: "tok-bool" },
  { tag: c.url, class: "tok-url" },
  { tag: c.labelName, class: "tok-labelName" },
  { tag: c.inserted, class: "tok-inserted" },
  { tag: c.deleted, class: "tok-deleted" },
  { tag: c.literal, class: "tok-literal" },
  { tag: c.string, class: "tok-string" },
  { tag: c.number, class: "tok-number" },
  { tag: [c.regexp, c.escape, c.special(c.string)], class: "tok-string2" },
  { tag: c.variableName, class: "tok-variableName" },
  { tag: c.local(c.variableName), class: "tok-variableName tok-local" },
  { tag: c.definition(c.variableName), class: "tok-variableName tok-definition" },
  { tag: c.special(c.variableName), class: "tok-variableName2" },
  { tag: c.definition(c.propertyName), class: "tok-propertyName tok-definition" },
  { tag: c.typeName, class: "tok-typeName" },
  { tag: c.namespace, class: "tok-namespace" },
  { tag: c.className, class: "tok-className" },
  { tag: c.macroName, class: "tok-macroName" },
  { tag: c.propertyName, class: "tok-propertyName" },
  { tag: c.operator, class: "tok-operator" },
  { tag: c.comment, class: "tok-comment" },
  { tag: c.meta, class: "tok-meta" },
  { tag: c.invalid, class: "tok-invalid" },
  { tag: c.punctuation, class: "tok-punctuation" }
]);
var op;
const ia = /* @__PURE__ */ new nt();
function VS(t) {
  return Ae.define({
    combine: t ? (e) => e.concat(t) : void 0
  });
}
const gm = /* @__PURE__ */ new nt();
class Fr {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, n, r = [], s = "") {
    this.data = e, this.name = s, ft.prototype.hasOwnProperty("tree") || Object.defineProperty(ft.prototype, "tree", { get() {
      return Cn(this);
    } }), this.parser = n, this.extension = [
      Ea.of(this),
      ft.languageData.of((i, a, o) => {
        let l = U0(i, a, o), u = l.type.prop(ia);
        if (!u)
          return [];
        let h = i.facet(u), f = l.type.prop(gm);
        if (f) {
          let m = l.resolve(a - l.from, o);
          for (let b of f)
            if (b.test(m, i)) {
              let v = i.facet(b.facet);
              return b.type == "replace" ? v : v.concat(h);
            }
        }
        return h;
      })
    ].concat(r);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, n, r = -1) {
    return U0(e, n, r).type.prop(ia) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let n = e.facet(Ea);
    if (n?.data == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!n || !n.allowsNesting)
      return [];
    let r = [], s = (i, a) => {
      if (i.prop(ia) == this.data) {
        r.push({ from: a, to: a + i.length });
        return;
      }
      let o = i.prop(nt.mounted);
      if (o) {
        if (o.tree.prop(ia) == this.data) {
          if (o.overlay)
            for (let l of o.overlay)
              r.push({ from: l.from + a, to: l.to + a });
          else
            r.push({ from: a, to: a + i.length });
          return;
        } else if (o.overlay) {
          let l = r.length;
          if (s(o.tree, o.overlay[0].from + a), r.length > l)
            return;
        }
      }
      for (let l = 0; l < i.children.length; l++) {
        let u = i.children[l];
        u instanceof cn && s(u, i.positions[l] + a);
      }
    };
    return s(Cn(e), 0), r;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
Fr.setState = /* @__PURE__ */ Ze.define();
function U0(t, e, n) {
  let r = t.facet(Ea), s = Cn(t).topNode;
  if (!r || r.allowsNesting)
    for (let i = s; i; i = i.enter(e, n, fn.ExcludeBuffers))
      i.type.isTop && (s = i);
  return s;
}
class qc extends Fr {
  constructor(e, n, r) {
    super(e, n, [], r), this.parser = n;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let n = VS(e.languageData);
    return new qc(n, e.parser.configure({
      props: [ia.add((r) => r.isTop ? n : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, n) {
    return new qc(this.data, this.parser.configure(e), n || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function Cn(t) {
  let e = t.field(Fr.state, !1);
  return e ? e.tree : cn.empty;
}
function XS(t, e, n = 50) {
  var r;
  let s = (r = t.field(Fr.state, !1)) === null || r === void 0 ? void 0 : r.context;
  if (!s)
    return null;
  let i = s.viewport;
  s.updateViewport({ from: 0, to: e });
  let a = s.isDone(e) || s.work(n, e) ? s.tree : null;
  return s.updateViewport(i), a;
}
class nT {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, n) {
    let r = this.cursorPos - this.string.length;
    return e < r || n >= this.cursorPos ? this.doc.sliceString(e, n) : this.string.slice(e - r, n - r);
  }
}
let lo = null;
class Gc {
  constructor(e, n, r = [], s, i, a, o, l) {
    this.parser = e, this.state = n, this.fragments = r, this.tree = s, this.treeLen = i, this.viewport = a, this.skipped = o, this.scheduleOn = l, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Gc(e, n, [], cn.empty, 0, r, [], null);
  }
  startParse() {
    return this.parser.startParse(new nT(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, n) {
    return n != null && n >= this.state.doc.length && (n = void 0), this.tree != cn.empty && this.isDone(n ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var r;
      if (typeof e == "number") {
        let s = Date.now() + e;
        e = () => Date.now() > s;
      }
      for (this.parse || (this.parse = this.startParse()), n != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > n) && n < this.state.doc.length && this.parse.stopAt(n); ; ) {
        let s = this.parse.advance();
        if (s)
          if (this.fragments = this.withoutTempSkipped(ji.addTree(s, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (r = this.parse.stoppedAt) !== null && r !== void 0 ? r : this.state.doc.length, this.tree = s, this.parse = null, this.treeLen < (n ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, n;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(n = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = n, this.fragments = this.withoutTempSkipped(ji.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let n = lo;
    lo = this;
    try {
      return e();
    } finally {
      lo = n;
    }
  }
  withoutTempSkipped(e) {
    for (let n; n = this.tempSkipped.pop(); )
      e = q0(e, n.from, n.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, n) {
    let { fragments: r, tree: s, treeLen: i, viewport: a, skipped: o } = this;
    if (this.takeTree(), !e.empty) {
      let l = [];
      if (e.iterChangedRanges((u, h, f, m) => l.push({ fromA: u, toA: h, fromB: f, toB: m })), r = ji.applyChanges(r, l), s = cn.empty, i = 0, a = { from: e.mapPos(a.from, -1), to: e.mapPos(a.to, 1) }, this.skipped.length) {
        o = [];
        for (let u of this.skipped) {
          let h = e.mapPos(u.from, 1), f = e.mapPos(u.to, -1);
          h < f && o.push({ from: h, to: f });
        }
      }
    }
    return new Gc(this.parser, n, r, s, i, a, o, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let n = this.skipped.length;
    for (let r = 0; r < this.skipped.length; r++) {
      let { from: s, to: i } = this.skipped[r];
      s < e.to && i > e.from && (this.fragments = q0(this.fragments, s, i), this.skipped.splice(r--, 1));
    }
    return this.skipped.length >= n ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, n) {
    this.skipped.push({ from: e, to: n });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends $S {
      createParse(n, r, s) {
        let i = s[0].from, a = s[s.length - 1].to;
        return {
          parsedPos: i,
          advance() {
            let l = lo;
            if (l) {
              for (let u of s)
                l.tempSkipped.push(u);
              e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);
            }
            return this.parsedPos = a, new cn(or.none, [], [], a - i);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let n = this.fragments;
    return this.treeLen >= e && n.length && n[0].from == 0 && n[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return lo;
  }
}
function q0(t, e, n) {
  return ji.applyChanges(t, [{ fromA: e, toA: n, fromB: e, toB: n }]);
}
class Da {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let n = this.context.changes(e.changes, e.state), r = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), n.viewport.to);
    return n.work(20, r) || n.takeTree(), new Da(n);
  }
  static init(e) {
    let n = Math.min(3e3, e.doc.length), r = Gc.create(e.facet(Ea).parser, e, { from: 0, to: n });
    return r.work(20, n) || r.takeTree(), new Da(r);
  }
}
Fr.state = /* @__PURE__ */ Vt.define({
  create: Da.init,
  update(t, e) {
    for (let n of e.effects)
      if (n.is(Fr.setState))
        return n.value;
    return e.startState.facet(Ea) != e.state.facet(Ea) ? Da.init(e.state) : t.apply(e);
  }
});
let WS = (t) => {
  let e = setTimeout(
    () => t(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (WS = (t) => {
  let e = -1, n = setTimeout(
    () => {
      e = requestIdleCallback(t, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(n) : cancelIdleCallback(e);
});
const lp = typeof navigator < "u" && (!((op = navigator.scheduling) === null || op === void 0) && op.isInputPending) ? () => navigator.scheduling.isInputPending() : null, rT = /* @__PURE__ */ qt.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let n = this.view.state.field(Fr.state).context;
    (n.updateViewport(e.view.viewport) || this.view.viewport.to > n.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(n);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, n = e.field(Fr.state);
    (n.tree != n.context.tree || !n.context.isDone(e.doc.length)) && (this.working = WS(this.work));
  }
  work(e) {
    this.working = null;
    let n = Date.now();
    if (this.chunkEnd < n && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = n + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: r, viewport: { to: s } } = this.view, i = r.field(Fr.state);
    if (i.tree == i.context.tree && i.context.isDone(
      s + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let a = Date.now() + Math.min(this.chunkBudget, 100, e && !lp ? Math.max(25, e.timeRemaining() - 5) : 1e9), o = i.context.treeLen < s && r.doc.length > s + 1e3, l = i.context.work(() => lp && lp() || Date.now() > a, s + (o ? 0 : 1e5));
    this.chunkBudget -= Date.now() - n, (l || this.chunkBudget <= 0) && (i.context.takeTree(), this.view.dispatch({ effects: Fr.setState.of(new Da(i.context)) })), this.chunkBudget > 0 && !(l && !o) && this.scheduleWork(), this.checkAsyncSchedule(i.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((n) => rr(this.view.state, n)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), Ea = /* @__PURE__ */ Ae.define({
  combine(t) {
    return t.length ? t[0] : null;
  },
  enables: (t) => [
    Fr.state,
    rT,
    ye.contentAttributes.compute([t], (e) => {
      let n = e.facet(t);
      return n && n.name ? { "data-language": n.name } : {};
    })
  ]
});
class sT {
  /**
  Create a language support object.
  */
  constructor(e, n = []) {
    this.language = e, this.support = n, this.extension = [e, n];
  }
}
const iT = /* @__PURE__ */ Ae.define(), Fa = /* @__PURE__ */ Ae.define({
  combine: (t) => {
    if (!t.length)
      return "  ";
    let e = t[0];
    if (!e || /\S/.test(e) || Array.from(e).some((n) => n != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(t[0]));
    return e;
  }
});
function zc(t) {
  let e = t.facet(Fa);
  return e.charCodeAt(0) == 9 ? t.tabSize * e.length : e.length;
}
function Yc(t, e) {
  let n = "", r = t.tabSize, s = t.facet(Fa)[0];
  if (s == "	") {
    for (; e >= r; )
      n += "	", e -= r;
    s = " ";
  }
  for (let i = 0; i < e; i++)
    n += s;
  return n;
}
function US(t, e) {
  t instanceof ft && (t = new qu(t));
  for (let r of t.state.facet(iT)) {
    let s = r(t, e);
    if (s !== void 0)
      return s;
  }
  let n = Cn(t.state);
  return n.length >= e ? aT(t, n, e) : null;
}
class qu {
  /**
  Create an indent context.
  */
  constructor(e, n = {}) {
    this.state = e, this.options = n, this.unit = zc(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, n = 1) {
    let r = this.state.doc.lineAt(e), { simulateBreak: s, simulateDoubleBreak: i } = this.options;
    return s != null && s >= r.from && s <= r.to ? i && s == e ? { text: "", from: e } : (n < 0 ? s < e : s <= e) ? { text: r.text.slice(s - r.from), from: s } : { text: r.text.slice(0, s - r.from), from: r.from } : r;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, n = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: r, from: s } = this.lineAt(e, n);
    return r.slice(e - s, Math.min(r.length, e + 100 - s));
  }
  /**
  Find the column for the given position.
  */
  column(e, n = 1) {
    let { text: r, from: s } = this.lineAt(e, n), i = this.countColumn(r, e - s), a = this.options.overrideIndentation ? this.options.overrideIndentation(s) : -1;
    return a > -1 && (i += a - this.countColumn(r, r.search(/\S|$/))), i;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, n = e.length) {
    return La(e, this.state.tabSize, n);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, n = 1) {
    let { text: r, from: s } = this.lineAt(e, n), i = this.options.overrideIndentation;
    if (i) {
      let a = i(s);
      if (a > -1)
        return a;
    }
    return this.countColumn(r, r.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const qS = /* @__PURE__ */ new nt();
function aT(t, e, n) {
  let r = e.resolveStack(n), s = e.resolveInner(n, -1).resolve(n, 0).enterUnfinishedNodesBefore(n);
  if (s != r.node) {
    let i = [];
    for (let a = s; a && !(a.from == r.node.from && a.type == r.node.type); a = a.parent)
      i.push(a);
    for (let a = i.length - 1; a >= 0; a--)
      r = { node: i[a], next: r };
  }
  return GS(r, t, n);
}
function GS(t, e, n) {
  for (let r = t; r; r = r.next) {
    let s = lT(r.node);
    if (s)
      return s(bm.create(e, n, r));
  }
  return 0;
}
function oT(t) {
  return t.pos == t.options.simulateBreak && t.options.simulateDoubleBreak;
}
function lT(t) {
  let e = t.type.prop(qS);
  if (e)
    return e;
  let n = t.firstChild, r;
  if (n && (r = n.type.prop(nt.closedBy))) {
    let s = t.lastChild, i = s && r.indexOf(s.name) > -1;
    return (a) => zS(a, !0, 1, void 0, i && !oT(a) ? s.from : void 0);
  }
  return t.parent == null ? cT : null;
}
function cT() {
  return 0;
}
class bm extends qu {
  constructor(e, n, r) {
    super(e.state, e.options), this.base = e, this.pos = n, this.context = r;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new bm(e, n, r);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let n = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let r = e.resolve(n.from);
      for (; r.parent && r.parent.from == r.from; )
        r = r.parent;
      if (uT(r, e))
        break;
      n = this.state.doc.lineAt(r.from);
    }
    return this.lineIndent(n.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return GS(this.context.next, this.base, this.pos);
  }
}
function uT(t, e) {
  for (let n = e; n; n = n.parent)
    if (t == n)
      return !0;
  return !1;
}
function hT(t) {
  let e = t.node, n = e.childAfter(e.from), r = e.lastChild;
  if (!n)
    return null;
  let s = t.options.simulateBreak, i = t.state.doc.lineAt(n.from), a = s == null || s <= i.from ? i.to : Math.min(i.to, s);
  for (let o = n.to; ; ) {
    let l = e.childAfter(o);
    if (!l || l == r)
      return null;
    if (!l.type.isSkipped) {
      if (l.from >= a)
        return null;
      let u = /^ */.exec(i.text.slice(n.to - i.from))[0].length;
      return { from: n.from, to: n.to + u };
    }
    o = l.to;
  }
}
function pT({ closing: t, align: e = !0, units: n = 1 }) {
  return (r) => zS(r, e, n, t);
}
function zS(t, e, n, r, s) {
  let i = t.textAfter, a = i.match(/^\s*/)[0].length, o = r && i.slice(a, a + r.length) == r || s == t.pos + a, l = e ? hT(t) : null;
  return l ? o ? t.column(l.from) : t.column(l.to) : t.baseIndent + (o ? 0 : t.unit * n);
}
const fT = (t) => t.baseIndent;
function cp({ except: t, units: e = 1 } = {}) {
  return (n) => {
    let r = t && t.test(n.textAfter);
    return n.baseIndent + (r ? 0 : e * n.unit);
  };
}
const dT = /* @__PURE__ */ Ae.define(), YS = /* @__PURE__ */ new nt();
function mT(t) {
  let e = t.firstChild, n = t.lastChild;
  return e && e.to < n.from ? { from: e.to, to: n.type.isError ? t.to : n.from } : null;
}
function gT(t, e, n) {
  let r = Cn(t);
  if (r.length < n)
    return null;
  let s = r.resolveStack(n, 1), i = null;
  for (let a = s; a; a = a.next) {
    let o = a.node;
    if (o.to <= n || o.from > n)
      continue;
    if (i && o.from < e)
      break;
    let l = o.type.prop(YS);
    if (l && (o.to < r.length - 50 || r.length == t.doc.length || !bT(o))) {
      let u = l(o, t);
      u && u.from <= n && u.from >= e && u.to > n && (i = u);
    }
  }
  return i;
}
function bT(t) {
  let e = t.lastChild;
  return e && e.to == t.to && e.type.isError;
}
function HS(t, e, n) {
  for (let r of t.facet(dT)) {
    let s = r(t, e, n);
    if (s)
      return s;
  }
  return gT(t, e, n);
}
function KS(t, e) {
  let n = e.mapPos(t.from, 1), r = e.mapPos(t.to, -1);
  return n >= r ? void 0 : { from: n, to: r };
}
const ym = /* @__PURE__ */ Ze.define({ map: KS }), Gu = /* @__PURE__ */ Ze.define({ map: KS });
function JS(t) {
  let e = [];
  for (let { head: n } of t.state.selection.ranges)
    e.some((r) => r.from <= n && r.to >= n) || e.push(t.lineBlockAt(n));
  return e;
}
const ul = /* @__PURE__ */ Vt.define({
  create() {
    return Be.none;
  },
  update(t, e) {
    t = t.map(e.changes);
    for (let n of e.effects)
      if (n.is(ym) && !yT(t, n.value.from, n.value.to)) {
        let { preparePlaceholder: r } = e.state.facet(sA), s = r ? Be.replace({ widget: new CT(r(e.state, n.value)) }) : G0;
        t = t.update({ add: [s.range(n.value.from, n.value.to)] });
      } else n.is(Gu) && (t = t.update({
        filter: (r, s) => n.value.from != r || n.value.to != s,
        filterFrom: n.value.from,
        filterTo: n.value.to
      }));
    if (e.selection) {
      let n = !1, { head: r } = e.selection.main;
      t.between(r, r, (s, i) => {
        s < r && i > r && (n = !0);
      }), n && (t = t.update({
        filterFrom: r,
        filterTo: r,
        filter: (s, i) => i <= r || s >= r
      }));
    }
    return t;
  },
  provide: (t) => ye.decorations.from(t),
  toJSON(t, e) {
    let n = [];
    return t.between(0, e.doc.length, (r, s) => {
      n.push(r, s);
    }), n;
  },
  fromJSON(t) {
    if (!Array.isArray(t) || t.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let n = 0; n < t.length; ) {
      let r = t[n++], s = t[n++];
      if (typeof r != "number" || typeof s != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(G0.range(r, s));
    }
    return Be.set(e, !0);
  }
});
function eA(t, e, n) {
  var r;
  let s = null;
  return (r = t.field(ul, !1)) === null || r === void 0 || r.between(e, n, (i, a) => {
    (!s || s.from > i) && (s = { from: i, to: a });
  }), s;
}
function yT(t, e, n) {
  let r = !1;
  return t.between(e, e, (s, i) => {
    s == e && i == n && (r = !0);
  }), r;
}
function tA(t, e) {
  return t.field(ul, !1) ? e : e.concat(Ze.appendConfig.of(kT()));
}
const nA = (t) => {
  for (let e of JS(t)) {
    let n = HS(t.state, e.from, e.to);
    if (n)
      return t.dispatch({ effects: tA(t.state, [ym.of(n), rA(t, n)]) }), !0;
  }
  return !1;
}, OT = (t) => {
  if (!t.state.field(ul, !1))
    return !1;
  let e = [];
  for (let n of JS(t)) {
    let r = eA(t.state, n.from, n.to);
    r && e.push(Gu.of(r), rA(t, r, !1));
  }
  return e.length && t.dispatch({ effects: e }), e.length > 0;
};
function rA(t, e, n = !0) {
  let r = t.state.doc.lineAt(e.from).number, s = t.state.doc.lineAt(e.to).number;
  return ye.announce.of(`${t.state.phrase(n ? "Folded lines" : "Unfolded lines")} ${r} ${t.state.phrase("to")} ${s}.`);
}
const vT = (t) => {
  let { state: e } = t, n = [];
  for (let r = 0; r < e.doc.length; ) {
    let s = t.lineBlockAt(r), i = HS(e, s.from, s.to);
    i && n.push(ym.of(i)), r = (i ? t.lineBlockAt(i.to) : s).to + 1;
  }
  return n.length && t.dispatch({ effects: tA(t.state, n) }), !!n.length;
}, xT = (t) => {
  let e = t.state.field(ul, !1);
  if (!e || !e.size)
    return !1;
  let n = [];
  return e.between(0, t.state.doc.length, (r, s) => {
    n.push(Gu.of({ from: r, to: s }));
  }), t.dispatch({ effects: n }), !0;
}, wT = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, sA = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, wT);
  }
});
function kT(t) {
  return [ul, ST];
}
function iA(t, e) {
  let { state: n } = t, r = n.facet(sA), s = (a) => {
    let o = t.lineBlockAt(t.posAtDOM(a.target)), l = eA(t.state, o.from, o.to);
    l && t.dispatch({ effects: Gu.of(l) }), a.preventDefault();
  };
  if (r.placeholderDOM)
    return r.placeholderDOM(t, s, e);
  let i = document.createElement("span");
  return i.textContent = r.placeholderText, i.setAttribute("aria-label", n.phrase("folded code")), i.title = n.phrase("unfold"), i.className = "cm-foldPlaceholder", i.onclick = s, i;
}
const G0 = /* @__PURE__ */ Be.replace({ widget: /* @__PURE__ */ new class extends ns {
  toDOM(t) {
    return iA(t, null);
  }
}() });
class CT extends ns {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return iA(e, this.value);
  }
}
const ST = /* @__PURE__ */ ye.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class hl {
  constructor(e, n) {
    this.specs = e;
    let r;
    function s(o) {
      let l = li.newName();
      return (r || (r = /* @__PURE__ */ Object.create(null)))["." + l] = o, l;
    }
    const i = typeof n.all == "string" ? n.all : n.all ? s(n.all) : void 0, a = n.scope;
    this.scope = a instanceof Fr ? (o) => o.prop(ia) == a.data : a ? (o) => o == a : void 0, this.style = NS(e.map((o) => ({
      tag: o.tag,
      class: o.class || s(Object.assign({}, o, { tag: null }))
    })), {
      all: i
    }).style, this.module = r ? new li(r) : null, this.themeType = n.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, n) {
    return new hl(e, n || {});
  }
}
const Af = /* @__PURE__ */ Ae.define(), aA = /* @__PURE__ */ Ae.define({
  combine(t) {
    return t.length ? [t[0]] : null;
  }
});
function up(t) {
  let e = t.facet(Af);
  return e.length ? e : t.facet(aA);
}
function Om(t, e) {
  let n = [PT], r;
  return t instanceof hl && (t.module && n.push(ye.styleModule.of(t.module)), r = t.themeType), e?.fallback ? n.push(aA.of(t)) : r ? n.push(Af.computeN([ye.darkTheme], (s) => s.facet(ye.darkTheme) == (r == "dark") ? [t] : [])) : n.push(Af.of(t)), n;
}
class AT {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = Cn(e.state), this.decorations = this.buildDeco(e, up(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let n = Cn(e.state), r = up(e.state), s = r != up(e.startState), { viewport: i } = e.view, a = e.changes.mapPos(this.decoratedTo, 1);
    n.length < i.to && !s && n.type == this.tree.type && a >= i.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = a) : (n != this.tree || e.viewportChanged || s) && (this.tree = n, this.decorations = this.buildDeco(e.view, r), this.decoratedTo = i.to);
  }
  buildDeco(e, n) {
    if (!n || !this.tree.length)
      return Be.none;
    let r = new vs();
    for (let { from: s, to: i } of e.visibleRanges)
      J7(this.tree, n, (a, o, l) => {
        r.add(a, o, this.markCache[l] || (this.markCache[l] = Be.mark({ class: l })));
      }, s, i);
    return r.finish();
  }
}
const PT = /* @__PURE__ */ lr.high(/* @__PURE__ */ qt.fromClass(AT, {
  decorations: (t) => t.decorations
})), oA = /* @__PURE__ */ hl.define([
  {
    tag: c.meta,
    color: "#404740"
  },
  {
    tag: c.link,
    textDecoration: "underline"
  },
  {
    tag: c.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: c.emphasis,
    fontStyle: "italic"
  },
  {
    tag: c.strong,
    fontWeight: "bold"
  },
  {
    tag: c.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: c.keyword,
    color: "#708"
  },
  {
    tag: [c.atom, c.bool, c.url, c.contentSeparator, c.labelName],
    color: "#219"
  },
  {
    tag: [c.literal, c.inserted],
    color: "#164"
  },
  {
    tag: [c.string, c.deleted],
    color: "#a11"
  },
  {
    tag: [c.regexp, c.escape, /* @__PURE__ */ c.special(c.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ c.definition(c.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ c.local(c.variableName),
    color: "#30a"
  },
  {
    tag: [c.typeName, c.namespace],
    color: "#085"
  },
  {
    tag: c.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ c.special(c.variableName), c.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ c.definition(c.propertyName),
    color: "#00c"
  },
  {
    tag: c.comment,
    color: "#940"
  },
  {
    tag: c.invalid,
    color: "#f00"
  }
]), DT = /* @__PURE__ */ ye.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), lA = 1e4, cA = "()[]{}", uA = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, {
      afterCursor: !0,
      brackets: cA,
      maxScanDistance: lA,
      renderMatch: BT
    });
  }
}), ET = /* @__PURE__ */ Be.mark({ class: "cm-matchingBracket" }), FT = /* @__PURE__ */ Be.mark({ class: "cm-nonmatchingBracket" });
function BT(t) {
  let e = [], n = t.matched ? ET : FT;
  return e.push(n.range(t.start.from, t.start.to)), t.end && e.push(n.range(t.end.from, t.end.to)), e;
}
const MT = /* @__PURE__ */ Vt.define({
  create() {
    return Be.none;
  },
  update(t, e) {
    if (!e.docChanged && !e.selection)
      return t;
    let n = [], r = e.state.facet(uA);
    for (let s of e.state.selection.ranges) {
      if (!s.empty)
        continue;
      let i = Br(e.state, s.head, -1, r) || s.head > 0 && Br(e.state, s.head - 1, 1, r) || r.afterCursor && (Br(e.state, s.head, 1, r) || s.head < e.state.doc.length && Br(e.state, s.head + 1, -1, r));
      i && (n = n.concat(r.renderMatch(i, e.state)));
    }
    return Be.set(n, !0);
  },
  provide: (t) => ye.decorations.from(t)
}), TT = [
  MT,
  DT
];
function QT(t = {}) {
  return [uA.of(t), TT];
}
const jT = /* @__PURE__ */ new nt();
function Pf(t, e, n) {
  let r = t.prop(e < 0 ? nt.openedBy : nt.closedBy);
  if (r)
    return r;
  if (t.name.length == 1) {
    let s = n.indexOf(t.name);
    if (s > -1 && s % 2 == (e < 0 ? 1 : 0))
      return [n[s + e]];
  }
  return null;
}
function Df(t) {
  let e = t.type.prop(jT);
  return e ? e(t.node) : t;
}
function Br(t, e, n, r = {}) {
  let s = r.maxScanDistance || lA, i = r.brackets || cA, a = Cn(t), o = a.resolveInner(e, n);
  for (let l = o; l; l = l.parent) {
    let u = Pf(l.type, n, i);
    if (u && l.from < l.to) {
      let h = Df(l);
      if (h && (n > 0 ? e >= h.from && e < h.to : e > h.from && e <= h.to))
        return _T(t, e, n, l, h, u, i);
    }
  }
  return RT(t, e, n, a, o.type, s, i);
}
function _T(t, e, n, r, s, i, a) {
  let o = r.parent, l = { from: s.from, to: s.to }, u = 0, h = o?.cursor();
  if (h && (n < 0 ? h.childBefore(r.from) : h.childAfter(r.to)))
    do
      if (n < 0 ? h.to <= r.from : h.from >= r.to) {
        if (u == 0 && i.indexOf(h.type.name) > -1 && h.from < h.to) {
          let f = Df(h);
          return { start: l, end: f ? { from: f.from, to: f.to } : void 0, matched: !0 };
        } else if (Pf(h.type, n, a))
          u++;
        else if (Pf(h.type, -n, a)) {
          if (u == 0) {
            let f = Df(h);
            return {
              start: l,
              end: f && f.from < f.to ? { from: f.from, to: f.to } : void 0,
              matched: !1
            };
          }
          u--;
        }
      }
    while (n < 0 ? h.prevSibling() : h.nextSibling());
  return { start: l, matched: !1 };
}
function RT(t, e, n, r, s, i, a) {
  let o = n < 0 ? t.sliceDoc(e - 1, e) : t.sliceDoc(e, e + 1), l = a.indexOf(o);
  if (l < 0 || l % 2 == 0 != n > 0)
    return null;
  let u = { from: n < 0 ? e - 1 : e, to: n > 0 ? e + 1 : e }, h = t.doc.iterRange(e, n > 0 ? t.doc.length : 0), f = 0;
  for (let m = 0; !h.next().done && m <= i; ) {
    let b = h.value;
    n < 0 && (m += b.length);
    let v = e + m * n;
    for (let C = n > 0 ? 0 : b.length - 1, S = n > 0 ? b.length : -1; C != S; C += n) {
      let B = a.indexOf(b[C]);
      if (!(B < 0 || r.resolveInner(v + C, 1).type != s))
        if (B % 2 == 0 == n > 0)
          f++;
        else {
          if (f == 1)
            return { start: u, end: { from: v + C, to: v + C + 1 }, matched: B >> 1 == l >> 1 };
          f--;
        }
    }
    n > 0 && (m += b.length);
  }
  return h.done ? { start: u, matched: !1 } : null;
}
function z0(t, e, n, r = 0, s = 0) {
  e == null && (e = t.search(/[^\s\u00a0]/), e == -1 && (e = t.length));
  let i = s;
  for (let a = r; a < e; a++)
    t.charCodeAt(a) == 9 ? i += n - i % n : i++;
  return i;
}
class ZT {
  /**
  Create a stream.
  */
  constructor(e, n, r, s) {
    this.string = e, this.tabSize = n, this.indentUnit = r, this.overrideIndent = s, this.pos = 0, this.start = 0, this.lastColumnPos = 0, this.lastColumnValue = 0;
  }
  /**
  True if we are at the end of the line.
  */
  eol() {
    return this.pos >= this.string.length;
  }
  /**
  True if we are at the start of the line.
  */
  sol() {
    return this.pos == 0;
  }
  /**
  Get the next code unit after the current position, or undefined
  if we're at the end of the line.
  */
  peek() {
    return this.string.charAt(this.pos) || void 0;
  }
  /**
  Read the next code unit and advance `this.pos`.
  */
  next() {
    if (this.pos < this.string.length)
      return this.string.charAt(this.pos++);
  }
  /**
  Match the next character against the given string, regular
  expression, or predicate. Consume and return it if it matches.
  */
  eat(e) {
    let n = this.string.charAt(this.pos), r;
    if (typeof e == "string" ? r = n == e : r = n && (e instanceof RegExp ? e.test(n) : e(n)), r)
      return ++this.pos, n;
  }
  /**
  Continue matching characters that match the given string,
  regular expression, or predicate function. Return true if any
  characters were consumed.
  */
  eatWhile(e) {
    let n = this.pos;
    for (; this.eat(e); )
      ;
    return this.pos > n;
  }
  /**
  Consume whitespace ahead of `this.pos`. Return true if any was
  found.
  */
  eatSpace() {
    let e = this.pos;
    for (; /[\s\u00a0]/.test(this.string.charAt(this.pos)); )
      ++this.pos;
    return this.pos > e;
  }
  /**
  Move to the end of the line.
  */
  skipToEnd() {
    this.pos = this.string.length;
  }
  /**
  Move to directly before the given character, if found on the
  current line.
  */
  skipTo(e) {
    let n = this.string.indexOf(e, this.pos);
    if (n > -1)
      return this.pos = n, !0;
  }
  /**
  Move back `n` characters.
  */
  backUp(e) {
    this.pos -= e;
  }
  /**
  Get the column position at `this.pos`.
  */
  column() {
    return this.lastColumnPos < this.start && (this.lastColumnValue = z0(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue), this.lastColumnPos = this.start), this.lastColumnValue;
  }
  /**
  Get the indentation column of the current line.
  */
  indentation() {
    var e;
    return (e = this.overrideIndent) !== null && e !== void 0 ? e : z0(this.string, null, this.tabSize);
  }
  /**
  Match the input against the given string or regular expression
  (which should start with a `^`). Return true or the regexp match
  if it matches.
  
  Unless `consume` is set to `false`, this will move `this.pos`
  past the matched text.
  
  When matching a string `caseInsensitive` can be set to true to
  make the match case-insensitive.
  */
  match(e, n, r) {
    if (typeof e == "string") {
      let s = (a) => r ? a.toLowerCase() : a, i = this.string.substr(this.pos, e.length);
      return s(i) == s(e) ? (n !== !1 && (this.pos += e.length), !0) : null;
    } else {
      let s = this.string.slice(this.pos).match(e);
      return s && s.index > 0 ? null : (s && n !== !1 && (this.pos += s[0].length), s);
    }
  }
  /**
  Get the current token.
  */
  current() {
    return this.string.slice(this.start, this.pos);
  }
}
const $T = /* @__PURE__ */ Object.create(null), Y0 = [or.none], H0 = [], K0 = /* @__PURE__ */ Object.create(null), LT = /* @__PURE__ */ Object.create(null);
for (let [t, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  LT[t] = /* @__PURE__ */ IT($T, e);
function hp(t, e) {
  H0.indexOf(t) > -1 || (H0.push(t), console.warn(e));
}
function IT(t, e) {
  let n = [];
  for (let o of e.split(" ")) {
    let l = [];
    for (let u of o.split(".")) {
      let h = t[u] || c[u];
      h ? typeof h == "function" ? l.length ? l = l.map(h) : hp(u, `Modifier ${u} used at start of tag`) : l.length ? hp(u, `Tag ${u} used as modifier`) : l = Array.isArray(h) ? h : [h] : hp(u, `Unknown highlighting tag ${u}`);
    }
    for (let u of l)
      n.push(u);
  }
  if (!n.length)
    return 0;
  let r = e.replace(/ /g, "_"), s = r + " " + n.map((o) => o.id), i = K0[s];
  if (i)
    return i.id;
  let a = K0[s] = or.define({
    id: Y0.length,
    name: r,
    props: [LS({ [r]: n })]
  });
  return Y0.push(a), a.id;
}
Et.RTL, Et.LTR;
class hA {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, n, r, s) {
    this.state = e, this.pos = n, this.explicit = r, this.view = s, this.abortListeners = [], this.abortOnDocChange = !1;
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let n = Cn(this.state).resolveInner(this.pos, -1);
    for (; n && e.indexOf(n.name) < 0; )
      n = n.parent;
    return n ? {
      from: n.from,
      to: this.pos,
      text: this.state.sliceDoc(n.from, this.pos),
      type: n.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let n = this.state.doc.lineAt(this.pos), r = Math.max(n.from, this.pos - 250), s = n.text.slice(r - n.from, this.pos - n.from), i = s.search(fA(e, !1));
    return i < 0 ? null : { from: r + i, to: this.pos, text: s.slice(i) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  
  By default, running queries will not be aborted for regular
  typing or backspacing, on the assumption that they are likely to
  return a result with a
  [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that
  allows the result to be used after all. Passing `onDocChange:
  true` will cause this query to be aborted for any document
  change.
  */
  addEventListener(e, n, r) {
    e == "abort" && this.abortListeners && (this.abortListeners.push(n), r && r.onDocChange && (this.abortOnDocChange = !0));
  }
}
function J0(t) {
  let e = Object.keys(t).join(""), n = /\w/.test(e);
  return n && (e = e.replace(/\w/g, "")), `[${n ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function NT(t) {
  let e = /* @__PURE__ */ Object.create(null), n = /* @__PURE__ */ Object.create(null);
  for (let { label: s } of t) {
    e[s[0]] = !0;
    for (let i = 1; i < s.length; i++)
      n[s[i]] = !0;
  }
  let r = J0(e) + J0(n) + "*$";
  return [new RegExp("^" + r), new RegExp(r)];
}
function pA(t) {
  let e = t.map((s) => typeof s == "string" ? { label: s } : s), [n, r] = e.every((s) => /^\w+$/.test(s.label)) ? [/\w*$/, /\w+$/] : NT(e);
  return (s) => {
    let i = s.matchBefore(r);
    return i || s.explicit ? { from: i ? i.from : s.pos, options: e, validFor: n } : null;
  };
}
function VT(t, e) {
  return (n) => {
    for (let r = Cn(n.state).resolveInner(n.pos, -1); r; r = r.parent) {
      if (t.indexOf(r.name) > -1)
        return null;
      if (r.type.isTop)
        break;
    }
    return e(n);
  };
}
class eb {
  constructor(e, n, r, s) {
    this.completion = e, this.source = n, this.match = r, this.score = s;
  }
}
function _i(t) {
  return t.selection.main.from;
}
function fA(t, e) {
  var n;
  let { source: r } = t, s = e && r[0] != "^", i = r[r.length - 1] != "$";
  return !s && !i ? t : new RegExp(`${s ? "^" : ""}(?:${r})${i ? "$" : ""}`, (n = t.flags) !== null && n !== void 0 ? n : t.ignoreCase ? "i" : "");
}
const vm = /* @__PURE__ */ Vs.define();
function XT(t, e, n, r) {
  let { main: s } = t.selection, i = n - s.from, a = r - s.from;
  return Object.assign(Object.assign({}, t.changeByRange((o) => {
    if (o != s && n != r && t.sliceDoc(o.from + i, o.from + a) != t.sliceDoc(n, r))
      return { range: o };
    let l = t.toText(e);
    return {
      changes: { from: o.from + i, to: r == s.from ? o.to : o.from + a, insert: l },
      range: ne.cursor(o.from + i + l.length)
    };
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const tb = /* @__PURE__ */ new WeakMap();
function WT(t) {
  if (!Array.isArray(t))
    return t;
  let e = tb.get(t);
  return e || tb.set(t, e = pA(t)), e;
}
const Hc = /* @__PURE__ */ Ze.define(), No = /* @__PURE__ */ Ze.define();
class UT {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let n = 0; n < e.length; ) {
      let r = tr(e, n), s = ds(r);
      this.chars.push(r);
      let i = e.slice(n, n + s), a = i.toUpperCase();
      this.folded.push(tr(a == i ? i.toLowerCase() : a, 0)), n += s;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, n) {
    return this.score = e, this.matched = n, this;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return null;
    let { chars: n, folded: r, any: s, precise: i, byWord: a } = this;
    if (n.length == 1) {
      let $ = tr(e, 0), W = ds($), _ = W == e.length ? 0 : -100;
      if ($ != n[0]) if ($ == r[0])
        _ += -200;
      else
        return null;
      return this.ret(_, [0, W]);
    }
    let o = e.indexOf(this.pattern);
    if (o == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let l = n.length, u = 0;
    if (o < 0) {
      for (let $ = 0, W = Math.min(e.length, 200); $ < W && u < l; ) {
        let _ = tr(e, $);
        (_ == n[u] || _ == r[u]) && (s[u++] = $), $ += ds(_);
      }
      if (u < l)
        return null;
    }
    let h = 0, f = 0, m = !1, b = 0, v = -1, C = -1, S = /[a-z]/.test(e), B = !0;
    for (let $ = 0, W = Math.min(e.length, 200), _ = 0; $ < W && f < l; ) {
      let M = tr(e, $);
      o < 0 && (h < l && M == n[h] && (i[h++] = $), b < l && (M == n[b] || M == r[b] ? (b == 0 && (v = $), C = $ + 1, b++) : b = 0));
      let Z, N = M < 255 ? M >= 48 && M <= 57 || M >= 97 && M <= 122 ? 2 : M >= 65 && M <= 90 ? 1 : 0 : (Z = Yd(M)) != Z.toLowerCase() ? 1 : Z != Z.toUpperCase() ? 2 : 0;
      (!$ || N == 1 && S || _ == 0 && N != 0) && (n[f] == M || r[f] == M && (m = !0) ? a[f++] = $ : a.length && (B = !1)), _ = N, $ += ds(M);
    }
    return f == l && a[0] == 0 && B ? this.result(-100 + (m ? -200 : 0), a, e) : b == l && v == 0 ? this.ret(-200 - e.length + (C == e.length ? 0 : -100), [0, C]) : o > -1 ? this.ret(-700 - e.length, [o, o + this.pattern.length]) : b == l ? this.ret(-900 - e.length, [v, C]) : f == l ? this.result(-100 + (m ? -200 : 0) + -700 + (B ? 0 : -1100), a, e) : n.length == 2 ? null : this.result((s[0] ? -700 : 0) + -200 + -1100, s, e);
  }
  result(e, n, r) {
    let s = [], i = 0;
    for (let a of n) {
      let o = a + (this.astral ? ds(tr(r, a)) : 1);
      i && s[i - 1] == a ? s[i - 1] = o : (s[i++] = a, s[i++] = o);
    }
    return this.ret(e - r.length, s);
  }
}
class qT {
  constructor(e) {
    this.pattern = e, this.matched = [], this.score = 0, this.folded = e.toLowerCase();
  }
  match(e) {
    if (e.length < this.pattern.length)
      return null;
    let n = e.slice(0, this.pattern.length), r = n == this.pattern ? 0 : n.toLowerCase() == this.folded ? -200 : null;
    return r == null ? null : (this.matched = [0, n.length], this.score = r + (e.length == this.pattern.length ? 0 : -100), this);
  }
}
const On = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, {
      activateOnTyping: !0,
      activateOnCompletion: () => !1,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: GT,
      filterStrict: !1,
      compareCompletions: (e, n) => e.label.localeCompare(n.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, n) => e && n,
      closeOnBlur: (e, n) => e && n,
      icons: (e, n) => e && n,
      tooltipClass: (e, n) => (r) => nb(e(r), n(r)),
      optionClass: (e, n) => (r) => nb(e(r), n(r)),
      addToOptions: (e, n) => e.concat(n),
      filterStrict: (e, n) => e || n
    });
  }
});
function nb(t, e) {
  return t ? e ? t + " " + e : t : e;
}
function GT(t, e, n, r, s, i) {
  let a = t.textDirection == Et.RTL, o = a, l = !1, u = "top", h, f, m = e.left - s.left, b = s.right - e.right, v = r.right - r.left, C = r.bottom - r.top;
  if (o && m < Math.min(v, b) ? o = !1 : !o && b < Math.min(v, m) && (o = !0), v <= (o ? m : b))
    h = Math.max(s.top, Math.min(n.top, s.bottom - C)) - e.top, f = Math.min(400, o ? m : b);
  else {
    l = !0, f = Math.min(
      400,
      (a ? e.right : s.right - e.left) - 30
      /* Info.Margin */
    );
    let $ = s.bottom - e.bottom;
    $ >= C || $ > e.top ? h = n.bottom - e.top : (u = "bottom", h = e.bottom - n.top);
  }
  let S = (e.bottom - e.top) / i.offsetHeight, B = (e.right - e.left) / i.offsetWidth;
  return {
    style: `${u}: ${h / S}px; max-width: ${f / B}px`,
    class: "cm-completionInfo-" + (l ? a ? "left-narrow" : "right-narrow" : o ? "left" : "right")
  };
}
function zT(t) {
  let e = t.addToOptions.slice();
  return t.icons && e.push({
    render(n) {
      let r = document.createElement("div");
      return r.classList.add("cm-completionIcon"), n.type && r.classList.add(...n.type.split(/\s+/g).map((s) => "cm-completionIcon-" + s)), r.setAttribute("aria-hidden", "true"), r;
    },
    position: 20
  }), e.push({
    render(n, r, s, i) {
      let a = document.createElement("span");
      a.className = "cm-completionLabel";
      let o = n.displayLabel || n.label, l = 0;
      for (let u = 0; u < i.length; ) {
        let h = i[u++], f = i[u++];
        h > l && a.appendChild(document.createTextNode(o.slice(l, h)));
        let m = a.appendChild(document.createElement("span"));
        m.appendChild(document.createTextNode(o.slice(h, f))), m.className = "cm-completionMatchedText", l = f;
      }
      return l < o.length && a.appendChild(document.createTextNode(o.slice(l))), a;
    },
    position: 50
  }, {
    render(n) {
      if (!n.detail)
        return null;
      let r = document.createElement("span");
      return r.className = "cm-completionDetail", r.textContent = n.detail, r;
    },
    position: 80
  }), e.sort((n, r) => n.position - r.position).map((n) => n.render);
}
function pp(t, e, n) {
  if (t <= n)
    return { from: 0, to: t };
  if (e < 0 && (e = 0), e <= t >> 1) {
    let s = Math.floor(e / n);
    return { from: s * n, to: (s + 1) * n };
  }
  let r = Math.floor((t - e) / n);
  return { from: t - (r + 1) * n, to: t - r * n };
}
class YT {
  constructor(e, n, r) {
    this.view = e, this.stateField = n, this.applyCompletion = r, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (l) => this.placeInfo(l),
      key: this
    }, this.space = null, this.currentClass = "";
    let s = e.state.field(n), { options: i, selected: a } = s.open, o = e.state.facet(On);
    this.optionContent = zT(o), this.optionClass = o.optionClass, this.tooltipClass = o.tooltipClass, this.range = pp(i.length, a, o.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (l) => {
      let { options: u } = e.state.field(n).open;
      for (let h = l.target, f; h && h != this.dom; h = h.parentNode)
        if (h.nodeName == "LI" && (f = /-(\d+)$/.exec(h.id)) && +f[1] < u.length) {
          this.applyCompletion(e, u[+f[1]]), l.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (l) => {
      let u = e.state.field(this.stateField, !1);
      u && u.tooltip && e.state.facet(On).closeOnBlur && l.relatedTarget != e.contentDOM && e.dispatch({ effects: No.of(null) });
    }), this.showOptions(i, s.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, n) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, n, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var n;
    let r = e.state.field(this.stateField), s = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), r != s) {
      let { options: i, selected: a, disabled: o } = r.open;
      (!s.open || s.open.options != i) && (this.range = pp(i.length, a, e.state.facet(On).maxRenderedOptions), this.showOptions(i, r.id)), this.updateSel(), o != ((n = s.open) === null || n === void 0 ? void 0 : n.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!o);
    }
  }
  updateTooltipClass(e) {
    let n = this.tooltipClass(e);
    if (n != this.currentClass) {
      for (let r of this.currentClass.split(" "))
        r && this.dom.classList.remove(r);
      for (let r of n.split(" "))
        r && this.dom.classList.add(r);
      this.currentClass = n;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), n = e.open;
    if ((n.selected > -1 && n.selected < this.range.from || n.selected >= this.range.to) && (this.range = pp(n.options.length, n.selected, this.view.state.facet(On).maxRenderedOptions), this.showOptions(n.options, e.id)), this.updateSelectedOption(n.selected)) {
      this.destroyInfo();
      let { completion: r } = n.options[n.selected], { info: s } = r;
      if (!s)
        return;
      let i = typeof s == "string" ? document.createTextNode(s) : s(r);
      if (!i)
        return;
      "then" in i ? i.then((a) => {
        a && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(a, r);
      }).catch((a) => rr(this.view.state, a, "completion info")) : this.addInfoPane(i, r);
    }
  }
  addInfoPane(e, n) {
    this.destroyInfo();
    let r = this.info = document.createElement("div");
    if (r.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      r.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: s, destroy: i } = e;
      r.appendChild(s), this.infoDestroy = i || null;
    }
    this.dom.appendChild(r), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let n = null;
    for (let r = this.list.firstChild, s = this.range.from; r; r = r.nextSibling, s++)
      r.nodeName != "LI" || !r.id ? s-- : s == e ? r.hasAttribute("aria-selected") || (r.setAttribute("aria-selected", "true"), n = r) : r.hasAttribute("aria-selected") && r.removeAttribute("aria-selected");
    return n && KT(this.list, n), n;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let n = this.dom.getBoundingClientRect(), r = this.info.getBoundingClientRect(), s = e.getBoundingClientRect(), i = this.space;
    if (!i) {
      let a = this.dom.ownerDocument.defaultView || window;
      i = { left: 0, top: 0, right: a.innerWidth, bottom: a.innerHeight };
    }
    return s.top > Math.min(i.bottom, n.bottom) - 10 || s.bottom < Math.max(i.top, n.top) + 10 ? null : this.view.state.facet(On).positionInfo(this.view, n, s, r, i, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, n, r) {
    const s = document.createElement("ul");
    s.id = n, s.setAttribute("role", "listbox"), s.setAttribute("aria-expanded", "true"), s.setAttribute("aria-label", this.view.state.phrase("Completions"));
    let i = null;
    for (let a = r.from; a < r.to; a++) {
      let { completion: o, match: l } = e[a], { section: u } = o;
      if (u) {
        let m = typeof u == "string" ? u : u.name;
        if (m != i && (a > r.from || r.from == 0))
          if (i = m, typeof u != "string" && u.header)
            s.appendChild(u.header(u));
          else {
            let b = s.appendChild(document.createElement("completion-section"));
            b.textContent = m;
          }
      }
      const h = s.appendChild(document.createElement("li"));
      h.id = n + "-" + a, h.setAttribute("role", "option");
      let f = this.optionClass(o);
      f && (h.className = f);
      for (let m of this.optionContent) {
        let b = m(o, this.view.state, this.view, l);
        b && h.appendChild(b);
      }
    }
    return r.from && s.classList.add("cm-completionListIncompleteTop"), r.to < e.length && s.classList.add("cm-completionListIncompleteBottom"), s;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function HT(t, e) {
  return (n) => new YT(n, t, e);
}
function KT(t, e) {
  let n = t.getBoundingClientRect(), r = e.getBoundingClientRect(), s = n.height / t.offsetHeight;
  r.top < n.top ? t.scrollTop -= (n.top - r.top) / s : r.bottom > n.bottom && (t.scrollTop += (r.bottom - n.bottom) / s);
}
function rb(t) {
  return (t.boost || 0) * 100 + (t.apply ? 10 : 0) + (t.info ? 5 : 0) + (t.type ? 1 : 0);
}
function JT(t, e) {
  let n = [], r = null, s = (u) => {
    n.push(u);
    let { section: h } = u.completion;
    if (h) {
      r || (r = []);
      let f = typeof h == "string" ? h : h.name;
      r.some((m) => m.name == f) || r.push(typeof h == "string" ? { name: f } : h);
    }
  }, i = e.facet(On);
  for (let u of t)
    if (u.hasResult()) {
      let h = u.result.getMatch;
      if (u.result.filter === !1)
        for (let f of u.result.options)
          s(new eb(f, u.source, h ? h(f) : [], 1e9 - n.length));
      else {
        let f = e.sliceDoc(u.from, u.to), m, b = i.filterStrict ? new qT(f) : new UT(f);
        for (let v of u.result.options)
          if (m = b.match(v.label)) {
            let C = v.displayLabel ? h ? h(v, m.matched) : [] : m.matched;
            s(new eb(v, u.source, C, m.score + (v.boost || 0)));
          }
      }
    }
  if (r) {
    let u = /* @__PURE__ */ Object.create(null), h = 0, f = (m, b) => {
      var v, C;
      return ((v = m.rank) !== null && v !== void 0 ? v : 1e9) - ((C = b.rank) !== null && C !== void 0 ? C : 1e9) || (m.name < b.name ? -1 : 1);
    };
    for (let m of r.sort(f))
      h -= 1e5, u[m.name] = h;
    for (let m of n) {
      let { section: b } = m.completion;
      b && (m.score += u[typeof b == "string" ? b : b.name]);
    }
  }
  let a = [], o = null, l = i.compareCompletions;
  for (let u of n.sort((h, f) => f.score - h.score || l(h.completion, f.completion))) {
    let h = u.completion;
    !o || o.label != h.label || o.detail != h.detail || o.type != null && h.type != null && o.type != h.type || o.apply != h.apply || o.boost != h.boost ? a.push(u) : rb(u.completion) > rb(o) && (a[a.length - 1] = u), o = u.completion;
  }
  return a;
}
class aa {
  constructor(e, n, r, s, i, a) {
    this.options = e, this.attrs = n, this.tooltip = r, this.timestamp = s, this.selected = i, this.disabled = a;
  }
  setSelected(e, n) {
    return e == this.selected || e >= this.options.length ? this : new aa(this.options, sb(n, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, n, r, s, i, a) {
    if (s && !a && e.some((u) => u.isPending))
      return s.setDisabled();
    let o = JT(e, n);
    if (!o.length)
      return s && e.some((u) => u.isPending) ? s.setDisabled() : null;
    let l = n.facet(On).selectOnOpen ? 0 : -1;
    if (s && s.selected != l && s.selected != -1) {
      let u = s.options[s.selected].completion;
      for (let h = 0; h < o.length; h++)
        if (o[h].completion == u) {
          l = h;
          break;
        }
    }
    return new aa(o, sb(r, l), {
      pos: e.reduce((u, h) => h.hasResult() ? Math.min(u, h.from) : u, 1e8),
      create: iQ,
      above: i.aboveCursor
    }, s ? s.timestamp : Date.now(), l, !1);
  }
  map(e) {
    return new aa(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
  setDisabled() {
    return new aa(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, !0);
  }
}
class Kc {
  constructor(e, n, r) {
    this.active = e, this.id = n, this.open = r;
  }
  static start() {
    return new Kc(rQ, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: n } = e, r = n.facet(On), i = (r.override || n.languageDataAt("autocomplete", _i(n)).map(WT)).map((l) => (this.active.find((h) => h.source == l) || new Mr(
      l,
      this.active.some(
        (h) => h.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, r));
    i.length == this.active.length && i.every((l, u) => l == this.active[u]) && (i = this.active);
    let a = this.open, o = e.effects.some((l) => l.is(xm));
    a && e.docChanged && (a = a.map(e.changes)), e.selection || i.some((l) => l.hasResult() && e.changes.touchesRange(l.from, l.to)) || !eQ(i, this.active) || o ? a = aa.build(i, n, this.id, a, r, o) : a && a.disabled && !i.some((l) => l.isPending) && (a = null), !a && i.every((l) => !l.isPending) && i.some((l) => l.hasResult()) && (i = i.map((l) => l.hasResult() ? new Mr(
      l.source,
      0
      /* State.Inactive */
    ) : l));
    for (let l of e.effects)
      l.is(mA) && (a = a && a.setSelected(l.value, this.id));
    return i == this.active && a == this.open ? this : new Kc(i, this.id, a);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : this.active.length ? tQ : nQ;
  }
}
function eQ(t, e) {
  if (t == e)
    return !0;
  for (let n = 0, r = 0; ; ) {
    for (; n < t.length && !t[n].hasResult(); )
      n++;
    for (; r < e.length && !e[r].hasResult(); )
      r++;
    let s = n == t.length, i = r == e.length;
    if (s || i)
      return s == i;
    if (t[n++].result != e[r++].result)
      return !1;
  }
}
const tQ = {
  "aria-autocomplete": "list"
}, nQ = {};
function sb(t, e) {
  let n = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": t
  };
  return e > -1 && (n["aria-activedescendant"] = t + "-" + e), n;
}
const rQ = [];
function dA(t, e) {
  if (t.isUserEvent("input.complete")) {
    let r = t.annotation(vm);
    if (r && e.activateOnCompletion(r))
      return 12;
  }
  let n = t.isUserEvent("input.type");
  return n && e.activateOnTyping ? 5 : n ? 1 : t.isUserEvent("delete.backward") ? 2 : t.selection ? 8 : t.docChanged ? 16 : 0;
}
class Mr {
  constructor(e, n, r = !1) {
    this.source = e, this.state = n, this.explicit = r;
  }
  hasResult() {
    return !1;
  }
  get isPending() {
    return this.state == 1;
  }
  update(e, n) {
    let r = dA(e, n), s = this;
    (r & 8 || r & 16 && this.touches(e)) && (s = new Mr(
      s.source,
      0
      /* State.Inactive */
    )), r & 4 && s.state == 0 && (s = new Mr(
      this.source,
      1
      /* State.Pending */
    )), s = s.updateFor(e, r);
    for (let i of e.effects)
      if (i.is(Hc))
        s = new Mr(s.source, 1, i.value);
      else if (i.is(No))
        s = new Mr(
          s.source,
          0
          /* State.Inactive */
        );
      else if (i.is(xm))
        for (let a of i.value)
          a.source == s.source && (s = a);
    return s;
  }
  updateFor(e, n) {
    return this.map(e.changes);
  }
  map(e) {
    return this;
  }
  touches(e) {
    return e.changes.touchesRange(_i(e.state));
  }
}
class da extends Mr {
  constructor(e, n, r, s, i, a) {
    super(e, 3, n), this.limit = r, this.result = s, this.from = i, this.to = a;
  }
  hasResult() {
    return !0;
  }
  updateFor(e, n) {
    var r;
    if (!(n & 3))
      return this.map(e.changes);
    let s = this.result;
    s.map && !e.changes.empty && (s = s.map(s, e.changes));
    let i = e.changes.mapPos(this.from), a = e.changes.mapPos(this.to, 1), o = _i(e.state);
    if (o > a || !s || n & 2 && (_i(e.startState) == this.from || o < this.limit))
      return new Mr(
        this.source,
        n & 4 ? 1 : 0
        /* State.Inactive */
      );
    let l = e.changes.mapPos(this.limit);
    return sQ(s.validFor, e.state, i, a) ? new da(this.source, this.explicit, l, s, i, a) : s.update && (s = s.update(s, i, a, new hA(e.state, o, !1))) ? new da(this.source, this.explicit, l, s, s.from, (r = s.to) !== null && r !== void 0 ? r : _i(e.state)) : new Mr(this.source, 1, this.explicit);
  }
  map(e) {
    return e.empty ? this : (this.result.map ? this.result.map(this.result, e) : this.result) ? new da(this.source, this.explicit, e.mapPos(this.limit), this.result, e.mapPos(this.from), e.mapPos(this.to, 1)) : new Mr(
      this.source,
      0
      /* State.Inactive */
    );
  }
  touches(e) {
    return e.changes.touchesRange(this.from, this.to);
  }
}
function sQ(t, e, n, r) {
  if (!t)
    return !1;
  let s = e.sliceDoc(n, r);
  return typeof t == "function" ? t(s, n, r, e) : fA(t, !0).test(s);
}
const xm = /* @__PURE__ */ Ze.define({
  map(t, e) {
    return t.map((n) => n.map(e));
  }
}), mA = /* @__PURE__ */ Ze.define(), $n = /* @__PURE__ */ Vt.define({
  create() {
    return Kc.start();
  },
  update(t, e) {
    return t.update(e);
  },
  provide: (t) => [
    hm.from(t, (e) => e.tooltip),
    ye.contentAttributes.from(t, (e) => e.attrs)
  ]
});
function wm(t, e) {
  const n = e.completion.apply || e.completion.label;
  let r = t.state.field($n).active.find((s) => s.source == e.source);
  return r instanceof da ? (typeof n == "string" ? t.dispatch(Object.assign(Object.assign({}, XT(t.state, n, r.from, r.to)), { annotations: vm.of(e.completion) })) : n(t, e.completion, r.from, r.to), !0) : !1;
}
const iQ = /* @__PURE__ */ HT($n, wm);
function ii(t, e = "option") {
  return (n) => {
    let r = n.state.field($n, !1);
    if (!r || !r.open || r.open.disabled || Date.now() - r.open.timestamp < n.state.facet(On).interactionDelay)
      return !1;
    let s = 1, i;
    e == "page" && (i = MS(n, r.open.tooltip)) && (s = Math.max(2, Math.floor(i.dom.offsetHeight / i.dom.querySelector("li").offsetHeight) - 1));
    let { length: a } = r.open.options, o = r.open.selected > -1 ? r.open.selected + s * (t ? 1 : -1) : t ? 0 : a - 1;
    return o < 0 ? o = e == "page" ? 0 : a - 1 : o >= a && (o = e == "page" ? a - 1 : 0), n.dispatch({ effects: mA.of(o) }), !0;
  };
}
const Ef = (t) => {
  let e = t.state.field($n, !1);
  return t.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < t.state.facet(On).interactionDelay ? !1 : wm(t, e.open.options[e.open.selected]);
}, Ff = (t) => t.state.field($n, !1) ? (t.dispatch({ effects: Hc.of(!0) }), !0) : !1, gA = (t) => {
  let e = t.state.field($n, !1);
  return !e || !e.active.some(
    (n) => n.state != 0
    /* State.Inactive */
  ) ? !1 : (t.dispatch({ effects: No.of(null) }), !0);
};
class aQ {
  constructor(e, n) {
    this.active = e, this.context = n, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const oQ = 50, lQ = 1e3, cQ = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.view = t, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of t.state.field($n).active)
      e.isPending && this.startQuery(e);
  }
  update(t) {
    let e = t.state.field($n), n = t.state.facet(On);
    if (!t.selectionSet && !t.docChanged && t.startState.field($n) == e)
      return;
    let r = t.transactions.some((i) => {
      let a = dA(i, n);
      return a & 8 || (i.selection || i.docChanged) && !(a & 3);
    });
    for (let i = 0; i < this.running.length; i++) {
      let a = this.running[i];
      if (r || a.context.abortOnDocChange && t.docChanged || a.updates.length + t.transactions.length > oQ && Date.now() - a.time > lQ) {
        for (let o of a.context.abortListeners)
          try {
            o();
          } catch (l) {
            rr(this.view.state, l);
          }
        a.context.abortListeners = null, this.running.splice(i--, 1);
      } else
        a.updates.push(...t.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), t.transactions.some((i) => i.effects.some((a) => a.is(Hc))) && (this.pendingStart = !0);
    let s = this.pendingStart ? 50 : n.activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((i) => i.isPending && !this.running.some((a) => a.active.source == i.source)) ? setTimeout(() => this.startUpdate(), s) : -1, this.composing != 0)
      for (let i of t.transactions)
        i.isUserEvent("input.type") ? this.composing = 2 : this.composing == 2 && i.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: t } = this.view, e = t.field($n);
    for (let n of e.active)
      n.isPending && !this.running.some((r) => r.active.source == n.source) && this.startQuery(n);
    this.running.length && e.open && e.open.disabled && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(On).updateSyncTime));
  }
  startQuery(t) {
    let { state: e } = this.view, n = _i(e), r = new hA(e, n, t.explicit, this.view), s = new aQ(t, r);
    this.running.push(s), Promise.resolve(t.source(r)).then((i) => {
      s.context.aborted || (s.done = i || null, this.scheduleAccept());
    }, (i) => {
      this.view.dispatch({ effects: No.of(null) }), rr(this.view.state, i);
    });
  }
  scheduleAccept() {
    this.running.every((t) => t.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(On).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var t;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], n = this.view.state.facet(On), r = this.view.state.field($n);
    for (let s = 0; s < this.running.length; s++) {
      let i = this.running[s];
      if (i.done === void 0)
        continue;
      if (this.running.splice(s--, 1), i.done) {
        let o = _i(i.updates.length ? i.updates[0].startState : this.view.state), l = Math.min(o, i.done.from + (i.active.explicit ? 0 : 1)), u = new da(i.active.source, i.active.explicit, l, i.done, i.done.from, (t = i.done.to) !== null && t !== void 0 ? t : o);
        for (let h of i.updates)
          u = u.update(h, n);
        if (u.hasResult()) {
          e.push(u);
          continue;
        }
      }
      let a = r.active.find((o) => o.source == i.active.source);
      if (a && a.isPending)
        if (i.done == null) {
          let o = new Mr(
            i.active.source,
            0
            /* State.Inactive */
          );
          for (let l of i.updates)
            o = o.update(l, n);
          o.isPending || e.push(o);
        } else
          this.startQuery(a);
    }
    (e.length || r.open && r.open.disabled) && this.view.dispatch({ effects: xm.of(e) });
  }
}, {
  eventHandlers: {
    blur(t) {
      let e = this.view.state.field($n, !1);
      if (e && e.tooltip && this.view.state.facet(On).closeOnBlur) {
        let n = e.open && MS(this.view, e.open.tooltip);
        (!n || !n.dom.contains(t.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: No.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: Hc.of(!1) }), 20), this.composing = 0;
    }
  }
}), uQ = typeof navigator == "object" && /* @__PURE__ */ /Win/.test(navigator.platform), hQ = /* @__PURE__ */ lr.highest(/* @__PURE__ */ ye.domEventHandlers({
  keydown(t, e) {
    let n = e.state.field($n, !1);
    if (!n || !n.open || n.open.disabled || n.open.selected < 0 || t.key.length > 1 || t.ctrlKey && !(uQ && t.altKey) || t.metaKey)
      return !1;
    let r = n.open.options[n.open.selected], s = n.active.find((a) => a.source == r.source), i = r.completion.commitCharacters || s.result.commitCharacters;
    return i && i.indexOf(t.key) > -1 && wm(e, r), !1;
  }
})), bA = /* @__PURE__ */ ye.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box",
    whiteSpace: "pre-line"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
});
class pQ {
  constructor(e, n, r, s) {
    this.field = e, this.line = n, this.from = r, this.to = s;
  }
}
class km {
  constructor(e, n, r) {
    this.field = e, this.from = n, this.to = r;
  }
  map(e) {
    let n = e.mapPos(this.from, -1, an.TrackDel), r = e.mapPos(this.to, 1, an.TrackDel);
    return n == null || r == null ? null : new km(this.field, n, r);
  }
}
class Cm {
  constructor(e, n) {
    this.lines = e, this.fieldPositions = n;
  }
  instantiate(e, n) {
    let r = [], s = [n], i = e.doc.lineAt(n), a = /^\s*/.exec(i.text)[0];
    for (let l of this.lines) {
      if (r.length) {
        let u = a, h = /^\t*/.exec(l)[0].length;
        for (let f = 0; f < h; f++)
          u += e.facet(Fa);
        s.push(n + u.length - h), l = u + l.slice(h);
      }
      r.push(l), n += l.length + 1;
    }
    let o = this.fieldPositions.map((l) => new km(l.field, s[l.line] + l.from, s[l.line] + l.to));
    return { text: r, ranges: o };
  }
  static parse(e) {
    let n = [], r = [], s = [], i;
    for (let a of e.split(/\r\n?|\n/)) {
      for (; i = /[#$]\{(?:(\d+)(?::([^}]*))?|((?:\\[{}]|[^}])*))\}/.exec(a); ) {
        let o = i[1] ? +i[1] : null, l = i[2] || i[3] || "", u = -1, h = l.replace(/\\[{}]/g, (f) => f[1]);
        for (let f = 0; f < n.length; f++)
          (o != null ? n[f].seq == o : h && n[f].name == h) && (u = f);
        if (u < 0) {
          let f = 0;
          for (; f < n.length && (o == null || n[f].seq != null && n[f].seq < o); )
            f++;
          n.splice(f, 0, { seq: o, name: h }), u = f;
          for (let m of s)
            m.field >= u && m.field++;
        }
        s.push(new pQ(u, r.length, i.index, i.index + h.length)), a = a.slice(0, i.index) + l + a.slice(i.index + i[0].length);
      }
      a = a.replace(/\\([{}])/g, (o, l, u) => {
        for (let h of s)
          h.line == r.length && h.from > u && (h.from--, h.to--);
        return l;
      }), r.push(a);
    }
    return new Cm(r, s);
  }
}
let fQ = /* @__PURE__ */ Be.widget({ widget: /* @__PURE__ */ new class extends ns {
  toDOM() {
    let t = document.createElement("span");
    return t.className = "cm-snippetFieldPosition", t;
  }
  ignoreEvent() {
    return !1;
  }
}() }), dQ = /* @__PURE__ */ Be.mark({ class: "cm-snippetField" });
class Ia {
  constructor(e, n) {
    this.ranges = e, this.active = n, this.deco = Be.set(e.map((r) => (r.from == r.to ? fQ : dQ).range(r.from, r.to)));
  }
  map(e) {
    let n = [];
    for (let r of this.ranges) {
      let s = r.map(e);
      if (!s)
        return null;
      n.push(s);
    }
    return new Ia(n, this.active);
  }
  selectionInsideField(e) {
    return e.ranges.every((n) => this.ranges.some((r) => r.field == this.active && r.from <= n.from && r.to >= n.to));
  }
}
const pl = /* @__PURE__ */ Ze.define({
  map(t, e) {
    return t && t.map(e);
  }
}), mQ = /* @__PURE__ */ Ze.define(), Vo = /* @__PURE__ */ Vt.define({
  create() {
    return null;
  },
  update(t, e) {
    for (let n of e.effects) {
      if (n.is(pl))
        return n.value;
      if (n.is(mQ) && t)
        return new Ia(t.ranges, n.value);
    }
    return t && e.docChanged && (t = t.map(e.changes)), t && e.selection && !t.selectionInsideField(e.selection) && (t = null), t;
  },
  provide: (t) => ye.decorations.from(t, (e) => e ? e.deco : Be.none)
});
function Sm(t, e) {
  return ne.create(t.filter((n) => n.field == e).map((n) => ne.range(n.from, n.to)));
}
function gQ(t) {
  let e = Cm.parse(t);
  return (n, r, s, i) => {
    let { text: a, ranges: o } = e.instantiate(n.state, s), { main: l } = n.state.selection, u = {
      changes: { from: s, to: i == l.from ? l.to : i, insert: ht.of(a) },
      scrollIntoView: !0,
      annotations: r ? [vm.of(r), on.userEvent.of("input.complete")] : void 0
    };
    if (o.length && (u.selection = Sm(o, 0)), o.some((h) => h.field > 0)) {
      let h = new Ia(o, 0), f = u.effects = [pl.of(h)];
      n.state.field(Vo, !1) === void 0 && f.push(Ze.appendConfig.of([Vo, xQ, wQ, bA]));
    }
    n.dispatch(n.state.update(u));
  };
}
function yA(t) {
  return ({ state: e, dispatch: n }) => {
    let r = e.field(Vo, !1);
    if (!r || t < 0 && r.active == 0)
      return !1;
    let s = r.active + t, i = t > 0 && !r.ranges.some((a) => a.field == s + t);
    return n(e.update({
      selection: Sm(r.ranges, s),
      effects: pl.of(i ? null : new Ia(r.ranges, s)),
      scrollIntoView: !0
    })), !0;
  };
}
const bQ = ({ state: t, dispatch: e }) => t.field(Vo, !1) ? (e(t.update({ effects: pl.of(null) })), !0) : !1, yQ = /* @__PURE__ */ yA(1), OQ = /* @__PURE__ */ yA(-1), vQ = [
  { key: "Tab", run: yQ, shift: OQ },
  { key: "Escape", run: bQ }
], ib = /* @__PURE__ */ Ae.define({
  combine(t) {
    return t.length ? t[0] : vQ;
  }
}), xQ = /* @__PURE__ */ lr.highest(/* @__PURE__ */ Ws.compute([ib], (t) => t.facet(ib)));
function Gn(t, e) {
  return Object.assign(Object.assign({}, e), { apply: gQ(t) });
}
const wQ = /* @__PURE__ */ ye.domEventHandlers({
  mousedown(t, e) {
    let n = e.state.field(Vo, !1), r;
    if (!n || (r = e.posAtCoords({ x: t.clientX, y: t.clientY })) == null)
      return !1;
    let s = n.ranges.find((i) => i.from <= r && i.to >= r);
    return !s || s.field == n.active ? !1 : (e.dispatch({
      selection: Sm(n.ranges, s.field),
      effects: pl.of(n.ranges.some((i) => i.field > s.field) ? new Ia(n.ranges, s.field) : null),
      scrollIntoView: !0
    }), !0);
  }
}), Xo = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, Mi = /* @__PURE__ */ Ze.define({
  map(t, e) {
    let n = e.mapPos(t, -1, an.TrackAfter);
    return n ?? void 0;
  }
}), Am = /* @__PURE__ */ new class extends Li {
}();
Am.startSide = 1;
Am.endSide = -1;
const OA = /* @__PURE__ */ Vt.define({
  create() {
    return mt.empty;
  },
  update(t, e) {
    if (t = t.map(e.changes), e.selection) {
      let n = e.state.doc.lineAt(e.selection.main.head);
      t = t.update({ filter: (r) => r >= n.from && r <= n.to });
    }
    for (let n of e.effects)
      n.is(Mi) && (t = t.update({ add: [Am.range(n.value, n.value + 1)] }));
    return t;
  }
});
function kQ() {
  return [SQ, OA];
}
const fp = "()[]{}<>";
function vA(t) {
  for (let e = 0; e < fp.length; e += 2)
    if (fp.charCodeAt(e) == t)
      return fp.charAt(e + 1);
  return Yd(t < 128 ? t : t + 1);
}
function xA(t, e) {
  return t.languageDataAt("closeBrackets", e)[0] || Xo;
}
const CQ = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), SQ = /* @__PURE__ */ ye.inputHandler.of((t, e, n, r) => {
  if ((CQ ? t.composing : t.compositionStarted) || t.state.readOnly)
    return !1;
  let s = t.state.selection.main;
  if (r.length > 2 || r.length == 2 && ds(tr(r, 0)) == 1 || e != s.from || n != s.to)
    return !1;
  let i = PQ(t.state, r);
  return i ? (t.dispatch(i), !0) : !1;
}), wA = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let r = xA(t, t.selection.main.head).brackets || Xo.brackets, s = null, i = t.changeByRange((a) => {
    if (a.empty) {
      let o = DQ(t.doc, a.head);
      for (let l of r)
        if (l == o && zu(t.doc, a.head) == vA(tr(l, 0)))
          return {
            changes: { from: a.head - l.length, to: a.head + l.length },
            range: ne.cursor(a.head - l.length)
          };
    }
    return { range: s = a };
  });
  return s || e(t.update(i, { scrollIntoView: !0, userEvent: "delete.backward" })), !s;
}, AQ = [
  { key: "Backspace", run: wA }
];
function PQ(t, e) {
  let n = xA(t, t.selection.main.head), r = n.brackets || Xo.brackets;
  for (let s of r) {
    let i = vA(tr(s, 0));
    if (e == s)
      return i == s ? BQ(t, s, r.indexOf(s + s + s) > -1, n) : EQ(t, s, i, n.before || Xo.before);
    if (e == i && kA(t, t.selection.main.from))
      return FQ(t, s, i);
  }
  return null;
}
function kA(t, e) {
  let n = !1;
  return t.field(OA).between(0, t.doc.length, (r) => {
    r == e && (n = !0);
  }), n;
}
function zu(t, e) {
  let n = t.sliceString(e, e + 2);
  return n.slice(0, ds(tr(n, 0)));
}
function DQ(t, e) {
  let n = t.sliceString(e - 2, e);
  return ds(tr(n, 0)) == n.length ? n : n.slice(1);
}
function EQ(t, e, n, r) {
  let s = null, i = t.changeByRange((a) => {
    if (!a.empty)
      return {
        changes: [{ insert: e, from: a.from }, { insert: n, from: a.to }],
        effects: Mi.of(a.to + e.length),
        range: ne.range(a.anchor + e.length, a.head + e.length)
      };
    let o = zu(t.doc, a.head);
    return !o || /\s/.test(o) || r.indexOf(o) > -1 ? {
      changes: { insert: e + n, from: a.head },
      effects: Mi.of(a.head + e.length),
      range: ne.cursor(a.head + e.length)
    } : { range: s = a };
  });
  return s ? null : t.update(i, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function FQ(t, e, n) {
  let r = null, s = t.changeByRange((i) => i.empty && zu(t.doc, i.head) == n ? {
    changes: { from: i.head, to: i.head + n.length, insert: n },
    range: ne.cursor(i.head + n.length)
  } : r = { range: i });
  return r ? null : t.update(s, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function BQ(t, e, n, r) {
  let s = r.stringPrefixes || Xo.stringPrefixes, i = null, a = t.changeByRange((o) => {
    if (!o.empty)
      return {
        changes: [{ insert: e, from: o.from }, { insert: e, from: o.to }],
        effects: Mi.of(o.to + e.length),
        range: ne.range(o.anchor + e.length, o.head + e.length)
      };
    let l = o.head, u = zu(t.doc, l), h;
    if (u == e) {
      if (ab(t, l))
        return {
          changes: { insert: e + e, from: l },
          effects: Mi.of(l + e.length),
          range: ne.cursor(l + e.length)
        };
      if (kA(t, l)) {
        let m = n && t.sliceDoc(l, l + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: l, to: l + m.length, insert: m },
          range: ne.cursor(l + m.length)
        };
      }
    } else {
      if (n && t.sliceDoc(l - 2 * e.length, l) == e + e && (h = ob(t, l - 2 * e.length, s)) > -1 && ab(t, h))
        return {
          changes: { insert: e + e + e + e, from: l },
          effects: Mi.of(l + e.length),
          range: ne.cursor(l + e.length)
        };
      if (t.charCategorizer(l)(u) != ln.Word && ob(t, l, s) > -1 && !MQ(t, l, e, s))
        return {
          changes: { insert: e + e, from: l },
          effects: Mi.of(l + e.length),
          range: ne.cursor(l + e.length)
        };
    }
    return { range: i = o };
  });
  return i ? null : t.update(a, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function ab(t, e) {
  let n = Cn(t).resolveInner(e + 1);
  return n.parent && n.from == e;
}
function MQ(t, e, n, r) {
  let s = Cn(t).resolveInner(e, -1), i = r.reduce((a, o) => Math.max(a, o.length), 0);
  for (let a = 0; a < 5; a++) {
    let o = t.sliceDoc(s.from, Math.min(s.to, s.from + n.length + i)), l = o.indexOf(n);
    if (!l || l > -1 && r.indexOf(o.slice(0, l)) > -1) {
      let h = s.firstChild;
      for (; h && h.from == s.from && h.to - h.from > n.length + l; ) {
        if (t.sliceDoc(h.to - n.length, h.to) == n)
          return !1;
        h = h.firstChild;
      }
      return !0;
    }
    let u = s.to == e && s.parent;
    if (!u)
      break;
    s = u;
  }
  return !1;
}
function ob(t, e, n) {
  let r = t.charCategorizer(e);
  if (r(t.sliceDoc(e - 1, e)) != ln.Word)
    return e;
  for (let s of n) {
    let i = e - s.length;
    if (t.sliceDoc(i, e) == s && r(t.sliceDoc(i - 1, i)) != ln.Word)
      return i;
  }
  return -1;
}
function TQ(t = {}) {
  return [
    hQ,
    $n,
    On.of(t),
    cQ,
    jQ,
    bA
  ];
}
const QQ = [
  { key: "Ctrl-Space", run: Ff },
  { mac: "Alt-`", run: Ff },
  { key: "Escape", run: gA },
  { key: "ArrowDown", run: /* @__PURE__ */ ii(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ ii(!1) },
  { key: "PageDown", run: /* @__PURE__ */ ii(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ ii(!1, "page") },
  { key: "Enter", run: Ef }
], jQ = /* @__PURE__ */ lr.highest(/* @__PURE__ */ Ws.computeN([On], (t) => t.facet(On).defaultKeymap ? [QQ] : []));
function _Q(t) {
  let e = t.field($n, !1);
  return e && e.active.some((n) => n.isPending) ? "pending" : e && e.active.some(
    (n) => n.state != 0
    /* State.Inactive */
  ) ? "active" : null;
}
const Yu = (t) => {
  let { state: e } = t, n = e.doc.lineAt(e.selection.main.from), r = Dm(t.state, n.from);
  return r.line ? CA(t) : r.block ? SA(t) : !1;
};
function fl(t, e) {
  return ({ state: n, dispatch: r }) => {
    if (n.readOnly)
      return !1;
    let s = t(e, n);
    return s ? (r(n.update(s)), !0) : !1;
  };
}
const CA = /* @__PURE__ */ fl(
  Em,
  0
  /* CommentOption.Toggle */
), RQ = /* @__PURE__ */ fl(
  Em,
  1
  /* CommentOption.Comment */
), ZQ = /* @__PURE__ */ fl(
  Em,
  2
  /* CommentOption.Uncomment */
), Pm = /* @__PURE__ */ fl(
  AA,
  0
  /* CommentOption.Toggle */
), SA = /* @__PURE__ */ fl(
  (t, e) => AA(t, e, LQ(e)),
  0
  /* CommentOption.Toggle */
);
function Dm(t, e) {
  let n = t.languageDataAt("commentTokens", e);
  return n.length ? n[0] : {};
}
const co = 50;
function $Q(t, { open: e, close: n }, r, s) {
  let i = t.sliceDoc(r - co, r), a = t.sliceDoc(s, s + co), o = /\s*$/.exec(i)[0].length, l = /^\s*/.exec(a)[0].length, u = i.length - o;
  if (i.slice(u - e.length, u) == e && a.slice(l, l + n.length) == n)
    return {
      open: { pos: r - o, margin: o && 1 },
      close: { pos: s + l, margin: l && 1 }
    };
  let h, f;
  s - r <= 2 * co ? h = f = t.sliceDoc(r, s) : (h = t.sliceDoc(r, r + co), f = t.sliceDoc(s - co, s));
  let m = /^\s*/.exec(h)[0].length, b = /\s*$/.exec(f)[0].length, v = f.length - b - n.length;
  return h.slice(m, m + e.length) == e && f.slice(v, v + n.length) == n ? {
    open: {
      pos: r + m + e.length,
      margin: /\s/.test(h.charAt(m + e.length)) ? 1 : 0
    },
    close: {
      pos: s - b - n.length,
      margin: /\s/.test(f.charAt(v - 1)) ? 1 : 0
    }
  } : null;
}
function LQ(t) {
  let e = [];
  for (let n of t.selection.ranges) {
    let r = t.doc.lineAt(n.from), s = n.to <= r.to ? r : t.doc.lineAt(n.to);
    s.from > r.from && s.from == n.to && (s = n.to == r.to + 1 ? r : t.doc.lineAt(n.to - 1));
    let i = e.length - 1;
    i >= 0 && e[i].to > r.from ? e[i].to = s.to : e.push({ from: r.from + /^\s*/.exec(r.text)[0].length, to: s.to });
  }
  return e;
}
function AA(t, e, n = e.selection.ranges) {
  let r = n.map((i) => Dm(e, i.from).block);
  if (!r.every((i) => i))
    return null;
  let s = n.map((i, a) => $Q(e, r[a], i.from, i.to));
  if (t != 2 && !s.every((i) => i))
    return { changes: e.changes(n.map((i, a) => s[a] ? [] : [{ from: i.from, insert: r[a].open + " " }, { from: i.to, insert: " " + r[a].close }])) };
  if (t != 1 && s.some((i) => i)) {
    let i = [];
    for (let a = 0, o; a < s.length; a++)
      if (o = s[a]) {
        let l = r[a], { open: u, close: h } = o;
        i.push({ from: u.pos - l.open.length, to: u.pos + u.margin }, { from: h.pos - h.margin, to: h.pos + l.close.length });
      }
    return { changes: i };
  }
  return null;
}
function Em(t, e, n = e.selection.ranges) {
  let r = [], s = -1;
  for (let { from: i, to: a } of n) {
    let o = r.length, l = 1e9, u = Dm(e, i).line;
    if (u) {
      for (let h = i; h <= a; ) {
        let f = e.doc.lineAt(h);
        if (f.from > s && (i == a || a > f.from)) {
          s = f.from;
          let m = /^\s*/.exec(f.text)[0].length, b = m == f.length, v = f.text.slice(m, m + u.length) == u ? m : -1;
          m < f.text.length && m < l && (l = m), r.push({ line: f, comment: v, token: u, indent: m, empty: b, single: !1 });
        }
        h = f.to + 1;
      }
      if (l < 1e9)
        for (let h = o; h < r.length; h++)
          r[h].indent < r[h].line.text.length && (r[h].indent = l);
      r.length == o + 1 && (r[o].single = !0);
    }
  }
  if (t != 2 && r.some((i) => i.comment < 0 && (!i.empty || i.single))) {
    let i = [];
    for (let { line: o, token: l, indent: u, empty: h, single: f } of r)
      (f || !h) && i.push({ from: o.from + u, insert: l + " " });
    let a = e.changes(i);
    return { changes: a, selection: e.selection.map(a, 1) };
  } else if (t != 1 && r.some((i) => i.comment >= 0)) {
    let i = [];
    for (let { line: a, comment: o, token: l } of r)
      if (o >= 0) {
        let u = a.from + o, h = u + l.length;
        a.text[h - a.from] == " " && h++, i.push({ from: u, to: h });
      }
    return { changes: i };
  }
  return null;
}
const Bf = /* @__PURE__ */ Vs.define(), IQ = /* @__PURE__ */ Vs.define(), NQ = /* @__PURE__ */ Ae.define(), PA = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, {
      minDepth: 100,
      newGroupDelay: 500,
      joinToEvent: (e, n) => n
    }, {
      minDepth: Math.max,
      newGroupDelay: Math.min,
      joinToEvent: (e, n) => (r, s) => e(r, s) || n(r, s)
    });
  }
}), DA = /* @__PURE__ */ Vt.define({
  create() {
    return bs.empty;
  },
  update(t, e) {
    let n = e.state.facet(PA), r = e.annotation(Bf);
    if (r) {
      let l = sr.fromTransaction(e, r.selection), u = r.side, h = u == 0 ? t.undone : t.done;
      return l ? h = Jc(h, h.length, n.minDepth, l) : h = MA(h, e.startState.selection), new bs(u == 0 ? r.rest : h, u == 0 ? h : r.rest);
    }
    let s = e.annotation(IQ);
    if ((s == "full" || s == "before") && (t = t.isolate()), e.annotation(on.addToHistory) === !1)
      return e.changes.empty ? t : t.addMapping(e.changes.desc);
    let i = sr.fromTransaction(e), a = e.annotation(on.time), o = e.annotation(on.userEvent);
    return i ? t = t.addChanges(i, a, o, n, e) : e.selection && (t = t.addSelection(e.startState.selection, a, o, n.newGroupDelay)), (s == "full" || s == "after") && (t = t.isolate()), t;
  },
  toJSON(t) {
    return { done: t.done.map((e) => e.toJSON()), undone: t.undone.map((e) => e.toJSON()) };
  },
  fromJSON(t) {
    return new bs(t.done.map(sr.fromJSON), t.undone.map(sr.fromJSON));
  }
});
function EA(t = {}) {
  return [
    DA,
    PA.of(t),
    ye.domEventHandlers({
      beforeinput(e, n) {
        let r = e.inputType == "historyUndo" ? Ku : e.inputType == "historyRedo" ? Ba : null;
        return r ? (e.preventDefault(), r(n)) : !1;
      }
    })
  ];
}
function Hu(t, e) {
  return function({ state: n, dispatch: r }) {
    if (!e && n.readOnly)
      return !1;
    let s = n.field(DA, !1);
    if (!s)
      return !1;
    let i = s.pop(t, n, e);
    return i ? (r(i), !0) : !1;
  };
}
const Ku = /* @__PURE__ */ Hu(0, !1), Ba = /* @__PURE__ */ Hu(1, !1), FA = /* @__PURE__ */ Hu(0, !0), VQ = /* @__PURE__ */ Hu(1, !0);
class sr {
  constructor(e, n, r, s, i) {
    this.changes = e, this.effects = n, this.mapped = r, this.startSelection = s, this.selectionsAfter = i;
  }
  setSelAfter(e) {
    return new sr(this.changes, this.effects, this.mapped, this.startSelection, e);
  }
  toJSON() {
    var e, n, r;
    return {
      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),
      mapped: (n = this.mapped) === null || n === void 0 ? void 0 : n.toJSON(),
      startSelection: (r = this.startSelection) === null || r === void 0 ? void 0 : r.toJSON(),
      selectionsAfter: this.selectionsAfter.map((s) => s.toJSON())
    };
  }
  static fromJSON(e) {
    return new sr(e.changes && pn.fromJSON(e.changes), [], e.mapped && Os.fromJSON(e.mapped), e.startSelection && ne.fromJSON(e.startSelection), e.selectionsAfter.map(ne.fromJSON));
  }
  // This does not check `addToHistory` and such, it assumes the
  // transaction needs to be converted to an item. Returns null when
  // there are no changes or effects in the transaction.
  static fromTransaction(e, n) {
    let r = Tr;
    for (let s of e.startState.facet(NQ)) {
      let i = s(e);
      i.length && (r = r.concat(i));
    }
    return !r.length && e.changes.empty ? null : new sr(e.changes.invert(e.startState.doc), r, void 0, n || e.startState.selection, Tr);
  }
  static selection(e) {
    return new sr(void 0, Tr, void 0, void 0, e);
  }
}
function Jc(t, e, n, r) {
  let s = e + 1 > n + 20 ? e - n - 1 : 0, i = t.slice(s, e);
  return i.push(r), i;
}
function XQ(t, e) {
  let n = [], r = !1;
  return t.iterChangedRanges((s, i) => n.push(s, i)), e.iterChangedRanges((s, i, a, o) => {
    for (let l = 0; l < n.length; ) {
      let u = n[l++], h = n[l++];
      o >= u && a <= h && (r = !0);
    }
  }), r;
}
function WQ(t, e) {
  return t.ranges.length == e.ranges.length && t.ranges.filter((n, r) => n.empty != e.ranges[r].empty).length === 0;
}
function BA(t, e) {
  return t.length ? e.length ? t.concat(e) : t : e;
}
const Tr = [], UQ = 200;
function MA(t, e) {
  if (t.length) {
    let n = t[t.length - 1], r = n.selectionsAfter.slice(Math.max(0, n.selectionsAfter.length - UQ));
    return r.length && r[r.length - 1].eq(e) ? t : (r.push(e), Jc(t, t.length - 1, 1e9, n.setSelAfter(r)));
  } else
    return [sr.selection([e])];
}
function qQ(t) {
  let e = t[t.length - 1], n = t.slice();
  return n[t.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), n;
}
function dp(t, e) {
  if (!t.length)
    return t;
  let n = t.length, r = Tr;
  for (; n; ) {
    let s = GQ(t[n - 1], e, r);
    if (s.changes && !s.changes.empty || s.effects.length) {
      let i = t.slice(0, n);
      return i[n - 1] = s, i;
    } else
      e = s.mapped, n--, r = s.selectionsAfter;
  }
  return r.length ? [sr.selection(r)] : Tr;
}
function GQ(t, e, n) {
  let r = BA(t.selectionsAfter.length ? t.selectionsAfter.map((o) => o.map(e)) : Tr, n);
  if (!t.changes)
    return sr.selection(r);
  let s = t.changes.map(e), i = e.mapDesc(t.changes, !0), a = t.mapped ? t.mapped.composeDesc(i) : i;
  return new sr(s, Ze.mapEffects(t.effects, e), a, t.startSelection.map(i), r);
}
const zQ = /^(input\.type|delete)($|\.)/;
class bs {
  constructor(e, n, r = 0, s = void 0) {
    this.done = e, this.undone = n, this.prevTime = r, this.prevUserEvent = s;
  }
  isolate() {
    return this.prevTime ? new bs(this.done, this.undone) : this;
  }
  addChanges(e, n, r, s, i) {
    let a = this.done, o = a[a.length - 1];
    return o && o.changes && !o.changes.empty && e.changes && (!r || zQ.test(r)) && (!o.selectionsAfter.length && n - this.prevTime < s.newGroupDelay && s.joinToEvent(i, XQ(o.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event
    r == "input.type.compose") ? a = Jc(a, a.length - 1, s.minDepth, new sr(e.changes.compose(o.changes), BA(Ze.mapEffects(e.effects, o.changes), o.effects), o.mapped, o.startSelection, Tr)) : a = Jc(a, a.length, s.minDepth, e), new bs(a, Tr, n, r);
  }
  addSelection(e, n, r, s) {
    let i = this.done.length ? this.done[this.done.length - 1].selectionsAfter : Tr;
    return i.length > 0 && n - this.prevTime < s && r == this.prevUserEvent && r && /^select($|\.)/.test(r) && WQ(i[i.length - 1], e) ? this : new bs(MA(this.done, e), this.undone, n, r);
  }
  addMapping(e) {
    return new bs(dp(this.done, e), dp(this.undone, e), this.prevTime, this.prevUserEvent);
  }
  pop(e, n, r) {
    let s = e == 0 ? this.done : this.undone;
    if (s.length == 0)
      return null;
    let i = s[s.length - 1], a = i.selectionsAfter[0] || n.selection;
    if (r && i.selectionsAfter.length)
      return n.update({
        selection: i.selectionsAfter[i.selectionsAfter.length - 1],
        annotations: Bf.of({ side: e, rest: qQ(s), selection: a }),
        userEvent: e == 0 ? "select.undo" : "select.redo",
        scrollIntoView: !0
      });
    if (i.changes) {
      let o = s.length == 1 ? Tr : s.slice(0, s.length - 1);
      return i.mapped && (o = dp(o, i.mapped)), n.update({
        changes: i.changes,
        selection: i.startSelection,
        effects: i.effects,
        annotations: Bf.of({ side: e, rest: o, selection: a }),
        filter: !1,
        userEvent: e == 0 ? "undo" : "redo",
        scrollIntoView: !0
      });
    } else
      return null;
  }
}
bs.empty = /* @__PURE__ */ new bs(Tr, Tr);
const TA = [
  { key: "Mod-z", run: Ku, preventDefault: !0 },
  { key: "Mod-y", mac: "Mod-Shift-z", run: Ba, preventDefault: !0 },
  { linux: "Ctrl-Shift-z", run: Ba, preventDefault: !0 },
  { key: "Mod-u", run: FA, preventDefault: !0 },
  { key: "Alt-u", mac: "Mod-Shift-u", run: VQ, preventDefault: !0 }
];
function Na(t, e) {
  return ne.create(t.ranges.map(e), t.mainIndex);
}
function Ss(t, e) {
  return t.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function rs({ state: t, dispatch: e }, n) {
  let r = Na(t.selection, n);
  return r.eq(t.selection, !0) ? !1 : (e(Ss(t, r)), !0);
}
function Ju(t, e) {
  return ne.cursor(e ? t.to : t.from);
}
function Fm(t, e) {
  return rs(t, (n) => n.empty ? t.moveByChar(n, e) : Ju(n, e));
}
function Mn(t) {
  return t.textDirectionAt(t.state.selection.main.head) == Et.LTR;
}
const Wo = (t) => Fm(t, !Mn(t)), eu = (t) => Fm(t, Mn(t)), YQ = (t) => Fm(t, !1);
function QA(t, e) {
  return rs(t, (n) => n.empty ? t.moveByGroup(n, e) : Ju(n, e));
}
const jA = (t) => QA(t, !Mn(t)), _A = (t) => QA(t, Mn(t));
function HQ(t, e, n) {
  if (e.type.prop(n))
    return !0;
  let r = e.to - e.from;
  return r && (r > 2 || /[^\s,.;:]/.test(t.sliceDoc(e.from, e.to))) || e.firstChild;
}
function eh(t, e, n) {
  let r = Cn(t).resolveInner(e.head), s = n ? nt.closedBy : nt.openedBy;
  for (let l = e.head; ; ) {
    let u = n ? r.childAfter(l) : r.childBefore(l);
    if (!u)
      break;
    HQ(t, u, s) ? r = u : l = n ? u.to : u.from;
  }
  let i = r.type.prop(s), a, o;
  return i && (a = n ? Br(t, r.from, 1) : Br(t, r.to, -1)) && a.matched ? o = n ? a.end.to : a.end.from : o = n ? r.to : r.from, ne.cursor(o, n ? -1 : 1);
}
const KQ = (t) => rs(t, (e) => eh(t.state, e, !Mn(t))), JQ = (t) => rs(t, (e) => eh(t.state, e, Mn(t)));
function RA(t, e) {
  return rs(t, (n) => {
    if (!n.empty)
      return Ju(n, e);
    let r = t.moveVertically(n, e);
    return r.head != n.head ? r : t.moveToLineBoundary(n, e);
  });
}
const tu = (t) => RA(t, !1), nu = (t) => RA(t, !0);
function ZA(t) {
  let e = t.scrollDOM.clientHeight < t.scrollDOM.scrollHeight - 2, n = 0, r = 0, s;
  if (e) {
    for (let i of t.state.facet(ye.scrollMargins)) {
      let a = i(t);
      a?.top && (n = Math.max(a?.top, n)), a?.bottom && (r = Math.max(a?.bottom, r));
    }
    s = t.scrollDOM.clientHeight - n - r;
  } else
    s = (t.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: n,
    marginBottom: r,
    selfScroll: e,
    height: Math.max(t.defaultLineHeight, s - 5)
  };
}
function $A(t, e) {
  let n = ZA(t), { state: r } = t, s = Na(r.selection, (a) => a.empty ? t.moveVertically(a, e, n.height) : Ju(a, e));
  if (s.eq(r.selection))
    return !1;
  let i;
  if (n.selfScroll) {
    let a = t.coordsAtPos(r.selection.main.head), o = t.scrollDOM.getBoundingClientRect(), l = o.top + n.marginTop, u = o.bottom - n.marginBottom;
    a && a.top > l && a.bottom < u && (i = ye.scrollIntoView(s.main.head, { y: "start", yMargin: a.top - l }));
  }
  return t.dispatch(Ss(r, s), { effects: i }), !0;
}
const Ao = (t) => $A(t, !1), ma = (t) => $A(t, !0);
function bi(t, e, n) {
  let r = t.lineBlockAt(e.head), s = t.moveToLineBoundary(e, n);
  if (s.head == e.head && s.head != (n ? r.to : r.from) && (s = t.moveToLineBoundary(e, n, !1)), !n && s.head == r.from && r.length) {
    let i = /^\s*/.exec(t.state.sliceDoc(r.from, Math.min(r.from + 100, r.to)))[0].length;
    i && e.head != r.from + i && (s = ne.cursor(r.from + i));
  }
  return s;
}
const ru = (t) => rs(t, (e) => bi(t, e, !0)), su = (t) => rs(t, (e) => bi(t, e, !1)), ej = (t) => rs(t, (e) => bi(t, e, !Mn(t))), tj = (t) => rs(t, (e) => bi(t, e, Mn(t))), LA = (t) => rs(t, (e) => ne.cursor(t.lineBlockAt(e.head).from, 1)), IA = (t) => rs(t, (e) => ne.cursor(t.lineBlockAt(e.head).to, -1));
function nj(t, e, n) {
  let r = !1, s = Na(t.selection, (i) => {
    let a = Br(t, i.head, -1) || Br(t, i.head, 1) || i.head > 0 && Br(t, i.head - 1, 1) || i.head < t.doc.length && Br(t, i.head + 1, -1);
    if (!a || !a.end)
      return i;
    r = !0;
    let o = a.start.from == i.head ? a.end.to : a.end.from;
    return ne.cursor(o);
  });
  return r ? (e(Ss(t, s)), !0) : !1;
}
const NA = ({ state: t, dispatch: e }) => nj(t, e);
function $r(t, e) {
  let n = Na(t.state.selection, (r) => {
    let s = e(r);
    return ne.range(r.anchor, s.head, s.goalColumn, s.bidiLevel || void 0);
  });
  return n.eq(t.state.selection) ? !1 : (t.dispatch(Ss(t.state, n)), !0);
}
function VA(t, e) {
  return $r(t, (n) => t.moveByChar(n, e));
}
const iu = (t) => VA(t, !Mn(t)), au = (t) => VA(t, Mn(t));
function XA(t, e) {
  return $r(t, (n) => t.moveByGroup(n, e));
}
const WA = (t) => XA(t, !Mn(t)), UA = (t) => XA(t, Mn(t)), rj = (t) => $r(t, (e) => eh(t.state, e, !Mn(t))), sj = (t) => $r(t, (e) => eh(t.state, e, Mn(t)));
function qA(t, e) {
  return $r(t, (n) => t.moveVertically(n, e));
}
const ou = (t) => qA(t, !1), lu = (t) => qA(t, !0);
function GA(t, e) {
  return $r(t, (n) => t.moveVertically(n, e, ZA(t).height));
}
const cu = (t) => GA(t, !1), uu = (t) => GA(t, !0), Mf = (t) => $r(t, (e) => bi(t, e, !0)), Tf = (t) => $r(t, (e) => bi(t, e, !1)), ij = (t) => $r(t, (e) => bi(t, e, !Mn(t))), aj = (t) => $r(t, (e) => bi(t, e, Mn(t))), zA = (t) => $r(t, (e) => ne.cursor(t.lineBlockAt(e.head).from)), YA = (t) => $r(t, (e) => ne.cursor(t.lineBlockAt(e.head).to)), hu = ({ state: t, dispatch: e }) => (e(Ss(t, { anchor: 0 })), !0), pu = ({ state: t, dispatch: e }) => (e(Ss(t, { anchor: t.doc.length })), !0), fu = ({ state: t, dispatch: e }) => (e(Ss(t, { anchor: t.selection.main.anchor, head: 0 })), !0), du = ({ state: t, dispatch: e }) => (e(Ss(t, { anchor: t.selection.main.anchor, head: t.doc.length })), !0), HA = ({ state: t, dispatch: e }) => (e(t.update({ selection: { anchor: 0, head: t.doc.length }, userEvent: "select" })), !0), KA = ({ state: t, dispatch: e }) => {
  let n = th(t).map(({ from: r, to: s }) => ne.range(r, Math.min(s + 1, t.doc.length)));
  return e(t.update({ selection: ne.create(n), userEvent: "select" })), !0;
}, oj = ({ state: t, dispatch: e }) => {
  let n = Na(t.selection, (r) => {
    let s = Cn(t), i = s.resolveStack(r.from, 1);
    if (r.empty) {
      let a = s.resolveStack(r.from, -1);
      a.node.from >= i.node.from && a.node.to <= i.node.to && (i = a);
    }
    for (let a = i; a; a = a.next) {
      let { node: o } = a;
      if ((o.from < r.from && o.to >= r.to || o.to > r.to && o.from <= r.from) && a.next)
        return ne.range(o.to, o.from);
    }
    return r;
  });
  return n.eq(t.selection) ? !1 : (e(Ss(t, n)), !0);
}, lj = ({ state: t, dispatch: e }) => {
  let n = t.selection, r = null;
  return n.ranges.length > 1 ? r = ne.create([n.main]) : n.main.empty || (r = ne.create([ne.cursor(n.main.head)])), r ? (e(Ss(t, r)), !0) : !1;
};
function Va(t, e) {
  if (t.state.readOnly)
    return !1;
  let n = "delete.selection", { state: r } = t, s = r.changeByRange((i) => {
    let { from: a, to: o } = i;
    if (a == o) {
      let l = e(i);
      l < a ? (n = "delete.backward", l = ic(t, l, !1)) : l > a && (n = "delete.forward", l = ic(t, l, !0)), a = Math.min(a, l), o = Math.max(o, l);
    } else
      a = ic(t, a, !1), o = ic(t, o, !0);
    return a == o ? { range: i } : { changes: { from: a, to: o }, range: ne.cursor(a, a < i.head ? -1 : 1) };
  });
  return s.changes.empty ? !1 : (t.dispatch(r.update(s, {
    scrollIntoView: !0,
    userEvent: n,
    effects: n == "delete.selection" ? ye.announce.of(r.phrase("Selection deleted")) : void 0
  })), !0);
}
function ic(t, e, n) {
  if (t instanceof ye)
    for (let r of t.state.facet(ye.atomicRanges).map((s) => s(t)))
      r.between(e, e, (s, i) => {
        s < e && i > e && (e = n ? i : s);
      });
  return e;
}
const JA = (t, e, n) => Va(t, (r) => {
  let s = r.from, { state: i } = t, a = i.doc.lineAt(s), o, l;
  if (n && !e && s > a.from && s < a.from + 200 && !/[^ \t]/.test(o = a.text.slice(0, s - a.from))) {
    if (o[o.length - 1] == "	")
      return s - 1;
    let u = La(o, i.tabSize), h = u % zc(i) || zc(i);
    for (let f = 0; f < h && o[o.length - 1 - f] == " "; f++)
      s--;
    l = s;
  } else
    l = kn(a.text, s - a.from, e, e) + a.from, l == s && a.number != (e ? i.doc.lines : 1) ? l += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(a.text.slice(l - a.from, s - a.from)) && (l = kn(a.text, l - a.from, !1, !1) + a.from);
  return l;
}), ga = (t) => JA(t, !1, !0), mu = (t) => JA(t, !0, !1), e5 = (t, e) => Va(t, (n) => {
  let r = n.head, { state: s } = t, i = s.doc.lineAt(r), a = s.charCategorizer(r);
  for (let o = null; ; ) {
    if (r == (e ? i.to : i.from)) {
      r == n.head && i.number != (e ? s.doc.lines : 1) && (r += e ? 1 : -1);
      break;
    }
    let l = kn(i.text, r - i.from, e) + i.from, u = i.text.slice(Math.min(r, l) - i.from, Math.max(r, l) - i.from), h = a(u);
    if (o != null && h != o)
      break;
    (u != " " || r != n.head) && (o = h), r = l;
  }
  return r;
}), gu = (t) => e5(t, !1), t5 = (t) => e5(t, !0), Qf = (t) => Va(t, (e) => {
  let n = t.lineBlockAt(e.head).to;
  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);
}), cj = (t) => Va(t, (e) => {
  let n = t.lineBlockAt(e.head).from;
  return e.head > n ? n : Math.max(0, e.head - 1);
}), uj = (t) => Va(t, (e) => {
  let n = t.moveToLineBoundary(e, !1).head;
  return e.head > n ? n : Math.max(0, e.head - 1);
}), hj = (t) => Va(t, (e) => {
  let n = t.moveToLineBoundary(e, !0).head;
  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);
}), Bm = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = t.changeByRange((r) => ({
    changes: { from: r.from, to: r.to, insert: ht.of(["", ""]) },
    range: ne.cursor(r.from)
  }));
  return e(t.update(n, { scrollIntoView: !0, userEvent: "input" })), !0;
}, n5 = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = t.changeByRange((r) => {
    if (!r.empty || r.from == 0 || r.from == t.doc.length)
      return { range: r };
    let s = r.from, i = t.doc.lineAt(s), a = s == i.from ? s - 1 : kn(i.text, s - i.from, !1) + i.from, o = s == i.to ? s + 1 : kn(i.text, s - i.from, !0) + i.from;
    return {
      changes: { from: a, to: o, insert: t.doc.slice(s, o).append(t.doc.slice(a, s)) },
      range: ne.cursor(o)
    };
  });
  return n.changes.empty ? !1 : (e(t.update(n, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function th(t) {
  let e = [], n = -1;
  for (let r of t.selection.ranges) {
    let s = t.doc.lineAt(r.from), i = t.doc.lineAt(r.to);
    if (!r.empty && r.to == i.from && (i = t.doc.lineAt(r.to - 1)), n >= s.number) {
      let a = e[e.length - 1];
      a.to = i.to, a.ranges.push(r);
    } else
      e.push({ from: s.from, to: i.to, ranges: [r] });
    n = i.number + 1;
  }
  return e;
}
function r5(t, e, n) {
  if (t.readOnly)
    return !1;
  let r = [], s = [];
  for (let i of th(t)) {
    if (n ? i.to == t.doc.length : i.from == 0)
      continue;
    let a = t.doc.lineAt(n ? i.to + 1 : i.from - 1), o = a.length + 1;
    if (n) {
      r.push({ from: i.to, to: a.to }, { from: i.from, insert: a.text + t.lineBreak });
      for (let l of i.ranges)
        s.push(ne.range(Math.min(t.doc.length, l.anchor + o), Math.min(t.doc.length, l.head + o)));
    } else {
      r.push({ from: a.from, to: i.from }, { from: i.to, insert: t.lineBreak + a.text });
      for (let l of i.ranges)
        s.push(ne.range(l.anchor - o, l.head - o));
    }
  }
  return r.length ? (e(t.update({
    changes: r,
    scrollIntoView: !0,
    selection: ne.create(s, t.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const s5 = ({ state: t, dispatch: e }) => r5(t, e, !1), i5 = ({ state: t, dispatch: e }) => r5(t, e, !0);
function a5(t, e, n) {
  if (t.readOnly)
    return !1;
  let r = [];
  for (let s of th(t))
    n ? r.push({ from: s.from, insert: t.doc.slice(s.from, s.to) + t.lineBreak }) : r.push({ from: s.to, insert: t.lineBreak + t.doc.slice(s.from, s.to) });
  return e(t.update({ changes: r, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const o5 = ({ state: t, dispatch: e }) => a5(t, e, !1), l5 = ({ state: t, dispatch: e }) => a5(t, e, !0), c5 = (t) => {
  if (t.state.readOnly)
    return !1;
  let { state: e } = t, n = e.changes(th(e).map(({ from: s, to: i }) => (s > 0 ? s-- : i < e.doc.length && i++, { from: s, to: i }))), r = Na(e.selection, (s) => {
    let i;
    if (t.lineWrapping) {
      let a = t.lineBlockAt(s.head), o = t.coordsAtPos(s.head, s.assoc || 1);
      o && (i = a.bottom + t.documentTop - o.bottom + t.defaultLineHeight / 2);
    }
    return t.moveVertically(s, !0, i);
  }).map(n);
  return t.dispatch({ changes: n, selection: r, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function pj(t, e) {
  if (/\(\)|\[\]|\{\}/.test(t.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let n = Cn(t).resolveInner(e), r = n.childBefore(e), s = n.childAfter(e), i;
  return r && s && r.to <= e && s.from >= e && (i = r.type.prop(nt.closedBy)) && i.indexOf(s.name) > -1 && t.doc.lineAt(r.to).from == t.doc.lineAt(s.from).from && !/\S/.test(t.sliceDoc(r.to, s.from)) ? { from: r.to, to: s.from } : null;
}
const Uo = /* @__PURE__ */ u5(!1), fj = /* @__PURE__ */ u5(!0);
function u5(t) {
  return ({ state: e, dispatch: n }) => {
    if (e.readOnly)
      return !1;
    let r = e.changeByRange((s) => {
      let { from: i, to: a } = s, o = e.doc.lineAt(i), l = !t && i == a && pj(e, i);
      t && (i = a = (a <= o.to ? o : e.doc.lineAt(a)).to);
      let u = new qu(e, { simulateBreak: i, simulateDoubleBreak: !!l }), h = US(u, i);
      for (h == null && (h = La(/^\s*/.exec(e.doc.lineAt(i).text)[0], e.tabSize)); a < o.to && /\s/.test(o.text[a - o.from]); )
        a++;
      l ? { from: i, to: a } = l : i > o.from && i < o.from + 100 && !/\S/.test(o.text.slice(0, i)) && (i = o.from);
      let f = ["", Yc(e, h)];
      return l && f.push(Yc(e, u.lineIndent(o.from, -1))), {
        changes: { from: i, to: a, insert: ht.of(f) },
        range: ne.cursor(i + 1 + f[1].length)
      };
    });
    return n(e.update(r, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function Mm(t, e) {
  let n = -1;
  return t.changeByRange((r) => {
    let s = [];
    for (let a = r.from; a <= r.to; ) {
      let o = t.doc.lineAt(a);
      o.number > n && (r.empty || r.to > o.from) && (e(o, s, r), n = o.number), a = o.to + 1;
    }
    let i = t.changes(s);
    return {
      changes: s,
      range: ne.range(i.mapPos(r.anchor, 1), i.mapPos(r.head, 1))
    };
  });
}
const h5 = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = /* @__PURE__ */ Object.create(null), r = new qu(t, { overrideIndentation: (i) => {
    let a = n[i];
    return a ?? -1;
  } }), s = Mm(t, (i, a, o) => {
    let l = US(r, i.from);
    if (l == null)
      return;
    /\S/.test(i.text) || (l = 0);
    let u = /^\s*/.exec(i.text)[0], h = Yc(t, l);
    (u != h || o.from < i.from + u.length) && (n[i.from] = l, a.push({ from: i.from, to: i.from + u.length, insert: h }));
  });
  return s.changes.empty || e(t.update(s, { userEvent: "indent" })), !0;
}, qo = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(Mm(t, (n, r) => {
  r.push({ from: n.from, insert: t.facet(Fa) });
}), { userEvent: "input.indent" })), !0), Go = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(Mm(t, (n, r) => {
  let s = /^\s*/.exec(n.text)[0];
  if (!s)
    return;
  let i = La(s, t.tabSize), a = 0, o = Yc(t, Math.max(0, i - zc(t)));
  for (; a < s.length && a < o.length && s.charCodeAt(a) == o.charCodeAt(a); )
    a++;
  r.push({ from: n.from + a, to: n.from + s.length, insert: o.slice(a) });
}), { userEvent: "delete.dedent" })), !0), dj = (t) => (t.setTabFocusMode(), !0), mj = [
  { key: "Ctrl-b", run: Wo, shift: iu, preventDefault: !0 },
  { key: "Ctrl-f", run: eu, shift: au },
  { key: "Ctrl-p", run: tu, shift: ou },
  { key: "Ctrl-n", run: nu, shift: lu },
  { key: "Ctrl-a", run: LA, shift: zA },
  { key: "Ctrl-e", run: IA, shift: YA },
  { key: "Ctrl-d", run: mu },
  { key: "Ctrl-h", run: ga },
  { key: "Ctrl-k", run: Qf },
  { key: "Ctrl-Alt-h", run: gu },
  { key: "Ctrl-o", run: Bm },
  { key: "Ctrl-t", run: n5 },
  { key: "Ctrl-v", run: ma }
], gj = /* @__PURE__ */ [
  { key: "ArrowLeft", run: Wo, shift: iu, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: jA, shift: WA, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: ej, shift: ij, preventDefault: !0 },
  { key: "ArrowRight", run: eu, shift: au, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: _A, shift: UA, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: tj, shift: aj, preventDefault: !0 },
  { key: "ArrowUp", run: tu, shift: ou, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: hu, shift: fu },
  { mac: "Ctrl-ArrowUp", run: Ao, shift: cu },
  { key: "ArrowDown", run: nu, shift: lu, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: pu, shift: du },
  { mac: "Ctrl-ArrowDown", run: ma, shift: uu },
  { key: "PageUp", run: Ao, shift: cu },
  { key: "PageDown", run: ma, shift: uu },
  { key: "Home", run: su, shift: Tf, preventDefault: !0 },
  { key: "Mod-Home", run: hu, shift: fu },
  { key: "End", run: ru, shift: Mf, preventDefault: !0 },
  { key: "Mod-End", run: pu, shift: du },
  { key: "Enter", run: Uo, shift: Uo },
  { key: "Mod-a", run: HA },
  { key: "Backspace", run: ga, shift: ga },
  { key: "Delete", run: mu },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: gu },
  { key: "Mod-Delete", mac: "Alt-Delete", run: t5 },
  { mac: "Mod-Backspace", run: uj },
  { mac: "Mod-Delete", run: hj }
].concat(/* @__PURE__ */ mj.map((t) => ({ mac: t.key, run: t.run, shift: t.shift }))), Tm = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: KQ, shift: rj },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: JQ, shift: sj },
  { key: "Alt-ArrowUp", run: s5 },
  { key: "Shift-Alt-ArrowUp", run: o5 },
  { key: "Alt-ArrowDown", run: i5 },
  { key: "Shift-Alt-ArrowDown", run: l5 },
  { key: "Escape", run: lj },
  { key: "Mod-Enter", run: fj },
  { key: "Alt-l", mac: "Ctrl-l", run: KA },
  { key: "Mod-i", run: oj, preventDefault: !0 },
  { key: "Mod-[", run: Go },
  { key: "Mod-]", run: qo },
  { key: "Mod-Alt-\\", run: h5 },
  { key: "Shift-Mod-k", run: c5 },
  { key: "Shift-Mod-\\", run: NA },
  { key: "Mod-/", run: Yu },
  { key: "Alt-A", run: Pm },
  { key: "Ctrl-m", mac: "Shift-Alt-m", run: dj }
].concat(gj), bj = { key: "Tab", run: qo, shift: Go };
class bu {
  /**
  @internal
  */
  constructor(e, n, r, s, i, a, o, l, u, h = 0, f) {
    this.p = e, this.stack = n, this.state = r, this.reducePos = s, this.pos = i, this.score = a, this.buffer = o, this.bufferBase = l, this.curContext = u, this.lookAhead = h, this.parent = f;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, n) => n % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, n, r = 0) {
    let s = e.parser.context;
    return new bu(e, [], n, r, r, 0, [], 0, s ? new lb(s, s.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, n) {
    this.stack.push(this.state, n, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var n;
    let r = e >> 19, s = e & 65535, { parser: i } = this.p, a = this.reducePos < this.pos - 25;
    a && this.setLookAhead(this.pos);
    let o = i.dynamicPrecedence(s);
    if (o && (this.score += o), r == 0) {
      this.pushState(i.getGoto(this.state, s, !0), this.reducePos), s < i.minRepeatTerm && this.storeNode(s, this.reducePos, this.reducePos, a ? 8 : 4, !0), this.reduceContext(s, this.reducePos);
      return;
    }
    let l = this.stack.length - (r - 1) * 3 - (e & 262144 ? 6 : 0), u = l ? this.stack[l - 2] : this.p.ranges[0].from, h = this.reducePos - u;
    h >= 2e3 && !(!((n = this.p.parser.nodeSet.types[s]) === null || n === void 0) && n.isAnonymous) && (u == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = h) : this.p.lastBigReductionSize < h && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = u, this.p.lastBigReductionSize = h));
    let f = l ? this.stack[l - 1] : 0, m = this.bufferBase + this.buffer.length - f;
    if (s < i.minRepeatTerm || e & 131072) {
      let b = i.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(s, u, b, m + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[l];
    else {
      let b = this.stack[l - 3];
      this.state = i.getGoto(b, s, !0);
    }
    for (; this.stack.length > l; )
      this.stack.pop();
    this.reduceContext(s, u);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, n, r, s = 4, i = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let a = this, o = this.buffer.length;
      if (o == 0 && a.parent && (o = a.bufferBase - a.parent.bufferBase, a = a.parent), o > 0 && a.buffer[o - 4] == 0 && a.buffer[o - 1] > -1) {
        if (n == r)
          return;
        if (a.buffer[o - 2] >= n) {
          a.buffer[o - 2] = r;
          return;
        }
      }
    }
    if (!i || this.pos == r)
      this.buffer.push(e, n, r, s);
    else {
      let a = this.buffer.length;
      if (a > 0 && this.buffer[a - 4] != 0) {
        let o = !1;
        for (let l = a; l > 0 && this.buffer[l - 2] > r; l -= 4)
          if (this.buffer[l - 1] >= 0) {
            o = !0;
            break;
          }
        if (o)
          for (; a > 0 && this.buffer[a - 2] > r; )
            this.buffer[a] = this.buffer[a - 4], this.buffer[a + 1] = this.buffer[a - 3], this.buffer[a + 2] = this.buffer[a - 2], this.buffer[a + 3] = this.buffer[a - 1], a -= 4, s > 4 && (s -= 4);
      }
      this.buffer[a] = e, this.buffer[a + 1] = n, this.buffer[a + 2] = r, this.buffer[a + 3] = s;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, n, r, s) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if (e & 262144)
      this.pos = s, this.shiftContext(n, r), n <= this.p.parser.maxNode && this.buffer.push(n, r, s, 4);
    else {
      let i = e, { parser: a } = this.p;
      (s > this.pos || n <= a.maxNode) && (this.pos = s, a.stateFlag(
        i,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = s)), this.pushState(i, r), this.shiftContext(n, r), n <= a.maxNode && this.buffer.push(n, r, s, 4);
    }
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, n, r, s) {
    e & 65536 ? this.reduce(e) : this.shift(e, n, r, s);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, n) {
    let r = this.p.reused.length - 1;
    (r < 0 || this.p.reused[r] != e) && (this.p.reused.push(e), r++);
    let s = this.pos;
    this.reducePos = this.pos = s + e.length, this.pushState(n, s), this.buffer.push(
      r,
      s,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, n = e.buffer.length;
    for (; n > 0 && e.buffer[n - 2] > e.reducePos; )
      n -= 4;
    let r = e.buffer.slice(n), s = e.bufferBase + n;
    for (; e && s == e.bufferBase; )
      e = e.parent;
    return new bu(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, r, s, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, n) {
    let r = e <= this.p.parser.maxNode;
    r && this.storeNode(e, this.pos, n, 4), this.storeNode(0, this.pos, n, r ? 8 : 4), this.pos = this.reducePos = n, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let n = new yj(this); ; ) {
      let r = this.p.parser.stateSlot(
        n.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(n.state, e);
      if (r == 0)
        return !1;
      if (!(r & 65536))
        return !0;
      n.reduce(r);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let n = this.p.parser.nextStates(this.state);
    if (n.length > 8 || this.stack.length >= 120) {
      let s = [];
      for (let i = 0, a; i < n.length; i += 2)
        (a = n[i + 1]) != this.state && this.p.parser.hasAction(a, e) && s.push(n[i], a);
      if (this.stack.length < 120)
        for (let i = 0; s.length < 8 && i < n.length; i += 2) {
          let a = n[i + 1];
          s.some((o, l) => l & 1 && o == a) || s.push(n[i], a);
        }
      n = s;
    }
    let r = [];
    for (let s = 0; s < n.length && r.length < 4; s += 2) {
      let i = n[s + 1];
      if (i == this.state)
        continue;
      let a = this.split();
      a.pushState(i, this.pos), a.storeNode(0, a.pos, a.pos, 4, !0), a.shiftContext(n[s], this.pos), a.reducePos = this.pos, a.score -= 200, r.push(a);
    }
    return r;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, n = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if (!(n & 65536))
      return !1;
    if (!e.validAction(this.state, n)) {
      let r = n >> 19, s = n & 65535, i = this.stack.length - r * 3;
      if (i < 0 || e.getGoto(this.stack[i], s, !1) < 0) {
        let a = this.findForcedReduction();
        if (a == null)
          return !1;
        n = a;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(n), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, n = [], r = (s, i) => {
      if (!n.includes(s))
        return n.push(s), e.allActions(s, (a) => {
          if (!(a & 393216)) if (a & 65536) {
            let o = (a >> 19) - i;
            if (o > 1) {
              let l = a & 65535, u = this.stack.length - o * 3;
              if (u >= 0 && e.getGoto(this.stack[u], l, !1) >= 0)
                return o << 19 | 65536 | l;
            }
          } else {
            let o = r(a, i + 1);
            if (o != null)
              return o;
          }
        });
    };
    return r(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let n = 0; n < this.stack.length; n += 3)
      if (this.stack[n] != e.stack[n])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, n) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(n)));
  }
  reduceContext(e, n) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(n)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let n = new lb(this.curContext.tracker, e);
      n.hash != this.curContext.hash && this.emitContext(), this.curContext = n;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
}
class lb {
  constructor(e, n) {
    this.tracker = e, this.context = n, this.hash = e.strict ? e.hash(n) : 0;
  }
}
class yj {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let n = e & 65535, r = e >> 19;
    r == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (r - 1) * 3;
    let s = this.start.p.parser.getGoto(this.stack[this.base - 3], n, !0);
    this.state = s;
  }
}
class yu {
  constructor(e, n, r) {
    this.stack = e, this.pos = n, this.index = r, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, n = e.bufferBase + e.buffer.length) {
    return new yu(e, n, n - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new yu(this.stack, this.pos, this.index);
  }
}
function yo(t, e = Uint16Array) {
  if (typeof t != "string")
    return t;
  let n = null;
  for (let r = 0, s = 0; r < t.length; ) {
    let i = 0;
    for (; ; ) {
      let a = t.charCodeAt(r++), o = !1;
      if (a == 126) {
        i = 65535;
        break;
      }
      a >= 92 && a--, a >= 34 && a--;
      let l = a - 32;
      if (l >= 46 && (l -= 46, o = !0), i += l, o)
        break;
      i *= 46;
    }
    n ? n[s++] = i : n = new e(i);
  }
  return n;
}
class kc {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const cb = new kc();
class Oj {
  /**
  @internal
  */
  constructor(e, n) {
    this.input = e, this.ranges = n, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = cb, this.rangeIndex = 0, this.pos = this.chunkPos = n[0].from, this.range = n[0], this.end = n[n.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, n) {
    let r = this.range, s = this.rangeIndex, i = this.pos + e;
    for (; i < r.from; ) {
      if (!s)
        return null;
      let a = this.ranges[--s];
      i -= r.from - a.to, r = a;
    }
    for (; n < 0 ? i > r.to : i >= r.to; ) {
      if (s == this.ranges.length - 1)
        return null;
      let a = this.ranges[++s];
      i += a.from - r.to, r = a;
    }
    return i;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let n of this.ranges)
      if (n.to > e)
        return Math.max(e, n.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let n = this.chunkOff + e, r, s;
    if (n >= 0 && n < this.chunk.length)
      r = this.pos + e, s = this.chunk.charCodeAt(n);
    else {
      let i = this.resolveOffset(e, 1);
      if (i == null)
        return -1;
      if (r = i, r >= this.chunk2Pos && r < this.chunk2Pos + this.chunk2.length)
        s = this.chunk2.charCodeAt(r - this.chunk2Pos);
      else {
        let a = this.rangeIndex, o = this.range;
        for (; o.to <= r; )
          o = this.ranges[++a];
        this.chunk2 = this.input.chunk(this.chunk2Pos = r), r + this.chunk2.length > o.to && (this.chunk2 = this.chunk2.slice(0, o.to - r)), s = this.chunk2.charCodeAt(0);
      }
    }
    return r >= this.token.lookAhead && (this.token.lookAhead = r + 1), s;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, n = 0) {
    let r = n ? this.resolveOffset(n, -1) : this.pos;
    if (r == null || r < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = r;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, n) {
    this.token.value = e, this.token.end = n;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: n } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = n, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), n = this.pos + e.length;
      this.chunk = n > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, n) {
    if (n ? (this.token = n, n.start = e, n.lookAhead = e + 1, n.value = n.extended = -1) : this.token = cb, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, n) {
    if (e >= this.chunkPos && n <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, n - this.chunkPos);
    if (e >= this.chunk2Pos && n <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, n - this.chunk2Pos);
    if (e >= this.range.from && n <= this.range.to)
      return this.input.read(e, n);
    let r = "";
    for (let s of this.ranges) {
      if (s.from >= n)
        break;
      s.to > e && (r += this.input.read(Math.max(s.from, e), Math.min(s.to, n)));
    }
    return r;
  }
}
class ba {
  constructor(e, n) {
    this.data = e, this.id = n;
  }
  token(e, n) {
    let { parser: r } = n.p;
    p5(this.data, e, n, this.id, r.data, r.tokenPrecTable);
  }
}
ba.prototype.contextual = ba.prototype.fallback = ba.prototype.extend = !1;
class jf {
  constructor(e, n, r) {
    this.precTable = n, this.elseToken = r, this.data = typeof e == "string" ? yo(e) : e;
  }
  token(e, n) {
    let r = e.pos, s = 0;
    for (; ; ) {
      let i = e.next < 0, a = e.resolveOffset(1, 1);
      if (p5(this.data, e, n, 0, this.data, this.precTable), e.token.value > -1)
        break;
      if (this.elseToken == null)
        return;
      if (i || s++, a == null)
        break;
      e.reset(a, e.token);
    }
    s && (e.reset(r, e.token), e.acceptToken(this.elseToken, s));
  }
}
jf.prototype.contextual = ba.prototype.fallback = ba.prototype.extend = !1;
class dl {
  /**
  Create a tokenizer. The first argument is the function that,
  given an input stream, scans for the types of tokens it
  recognizes at the stream's position, and calls
  [`acceptToken`](#lr.InputStream.acceptToken) when it finds
  one.
  */
  constructor(e, n = {}) {
    this.token = e, this.contextual = !!n.contextual, this.fallback = !!n.fallback, this.extend = !!n.extend;
  }
}
function p5(t, e, n, r, s, i) {
  let a = 0, o = 1 << r, { dialect: l } = n.p.parser;
  e: for (; o & t[a]; ) {
    let u = t[a + 1];
    for (let b = a + 3; b < u; b += 2)
      if ((t[b + 1] & o) > 0) {
        let v = t[b];
        if (l.allows(v) && (e.token.value == -1 || e.token.value == v || vj(v, e.token.value, s, i))) {
          e.acceptToken(v);
          break;
        }
      }
    let h = e.next, f = 0, m = t[a + 2];
    if (e.next < 0 && m > f && t[u + m * 3 - 3] == 65535) {
      a = t[u + m * 3 - 1];
      continue e;
    }
    for (; f < m; ) {
      let b = f + m >> 1, v = u + b + (b << 1), C = t[v], S = t[v + 1] || 65536;
      if (h < C)
        m = b;
      else if (h >= S)
        f = b + 1;
      else {
        a = t[v + 2], e.advance();
        continue e;
      }
    }
    break;
  }
}
function ub(t, e, n) {
  for (let r = e, s; (s = t[r]) != 65535; r++)
    if (s == n)
      return r - e;
  return -1;
}
function vj(t, e, n, r) {
  let s = ub(n, r, e);
  return s < 0 || ub(n, r, t) < s;
}
const hr = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let mp = null;
function hb(t, e, n) {
  let r = t.cursor(fn.IncludeAnonymous);
  for (r.moveTo(e); ; )
    if (!(n < 0 ? r.childBefore(e) : r.childAfter(e)))
      for (; ; ) {
        if ((n < 0 ? r.to < e : r.from > e) && !r.type.isError)
          return n < 0 ? Math.max(0, Math.min(
            r.to - 1,
            e - 25
            /* Lookahead.Margin */
          )) : Math.min(t.length, Math.max(
            r.from + 1,
            e + 25
            /* Lookahead.Margin */
          ));
        if (n < 0 ? r.prevSibling() : r.nextSibling())
          break;
        if (!r.parent())
          return n < 0 ? 0 : t.length;
      }
}
class xj {
  constructor(e, n) {
    this.fragments = e, this.nodeSet = n, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? hb(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? hb(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let n = this.trees.length - 1;
      if (n < 0)
        return this.nextFragment(), null;
      let r = this.trees[n], s = this.index[n];
      if (s == r.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let i = r.children[s], a = this.start[n] + r.positions[s];
      if (a > e)
        return this.nextStart = a, null;
      if (i instanceof cn) {
        if (a == e) {
          if (a < this.safeFrom)
            return null;
          let o = a + i.length;
          if (o <= this.safeTo) {
            let l = i.prop(nt.lookAhead);
            if (!l || o + l < this.fragment.to)
              return i;
          }
        }
        this.index[n]++, a + i.length >= Math.max(this.safeFrom, e) && (this.trees.push(i), this.start.push(a), this.index.push(0));
      } else
        this.index[n]++, this.nextStart = a + i.length;
    }
  }
}
class wj {
  constructor(e, n) {
    this.stream = n, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((r) => new kc());
  }
  getActions(e) {
    let n = 0, r = null, { parser: s } = e.p, { tokenizers: i } = s, a = s.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), o = e.curContext ? e.curContext.hash : 0, l = 0;
    for (let u = 0; u < i.length; u++) {
      if (!(1 << u & a))
        continue;
      let h = i[u], f = this.tokens[u];
      if (!(r && !h.fallback) && ((h.contextual || f.start != e.pos || f.mask != a || f.context != o) && (this.updateCachedToken(f, h, e), f.mask = a, f.context = o), f.lookAhead > f.end + 25 && (l = Math.max(f.lookAhead, l)), f.value != 0)) {
        let m = n;
        if (f.extended > -1 && (n = this.addActions(e, f.extended, f.end, n)), n = this.addActions(e, f.value, f.end, n), !h.extend && (r = f, n > m))
          break;
      }
    }
    for (; this.actions.length > n; )
      this.actions.pop();
    return l && e.setLookAhead(l), !r && e.pos == this.stream.end && (r = new kc(), r.value = e.p.parser.eofTerm, r.start = r.end = e.pos, n = this.addActions(e, r.value, r.end, n)), this.mainToken = r, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let n = new kc(), { pos: r, p: s } = e;
    return n.start = r, n.end = Math.min(r + 1, s.stream.end), n.value = r == s.stream.end ? s.parser.eofTerm : 0, n;
  }
  updateCachedToken(e, n, r) {
    let s = this.stream.clipPos(r.pos);
    if (n.token(this.stream.reset(s, e), r), e.value > -1) {
      let { parser: i } = r.p;
      for (let a = 0; a < i.specialized.length; a++)
        if (i.specialized[a] == e.value) {
          let o = i.specializers[a](this.stream.read(e.start, e.end), r);
          if (o >= 0 && r.p.parser.dialect.allows(o >> 1)) {
            o & 1 ? e.extended = o >> 1 : e.value = o >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(s + 1);
  }
  putAction(e, n, r, s) {
    for (let i = 0; i < s; i += 3)
      if (this.actions[i] == e)
        return s;
    return this.actions[s++] = e, this.actions[s++] = n, this.actions[s++] = r, s;
  }
  addActions(e, n, r, s) {
    let { state: i } = e, { parser: a } = e.p, { data: o } = a;
    for (let l = 0; l < 2; l++)
      for (let u = a.stateSlot(
        i,
        l ? 2 : 1
        /* ParseState.Actions */
      ); ; u += 3) {
        if (o[u] == 65535)
          if (o[u + 1] == 1)
            u = Bs(o, u + 2);
          else {
            s == 0 && o[u + 1] == 2 && (s = this.putAction(Bs(o, u + 2), n, r, s));
            break;
          }
        o[u] == n && (s = this.putAction(Bs(o, u + 1), n, r, s));
      }
    return s;
  }
}
class kj {
  constructor(e, n, r, s) {
    this.parser = e, this.input = n, this.ranges = s, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new Oj(n, s), this.tokens = new wj(e, this.stream), this.topTerm = e.top[1];
    let { from: i } = s[0];
    this.stacks = [bu.start(this, e.top[0], i)], this.fragments = r.length && this.stream.end - i > e.bufferLength * 4 ? new xj(r, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, n = this.minStackPos, r = this.stacks = [], s, i;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [a] = e;
      for (; a.forceReduce() && a.stack.length && a.stack[a.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let a = 0; a < e.length; a++) {
      let o = e[a];
      for (; ; ) {
        if (this.tokens.mainToken = null, o.pos > n)
          r.push(o);
        else {
          if (this.advanceStack(o, r, e))
            continue;
          {
            s || (s = [], i = []), s.push(o);
            let l = this.tokens.getMainToken(o);
            i.push(l.value, l.end);
          }
        }
        break;
      }
    }
    if (!r.length) {
      let a = s && Aj(s);
      if (a)
        return hr && console.log("Finish with " + this.stackID(a)), this.stackToTree(a);
      if (this.parser.strict)
        throw hr && s && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + n);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && s) {
      let a = this.stoppedAt != null && s[0].pos > this.stoppedAt ? s[0] : this.runRecovery(s, i, r);
      if (a)
        return hr && console.log("Force-finish " + this.stackID(a)), this.stackToTree(a.forceAll());
    }
    if (this.recovering) {
      let a = this.recovering == 1 ? 1 : this.recovering * 3;
      if (r.length > a)
        for (r.sort((o, l) => l.score - o.score); r.length > a; )
          r.pop();
      r.some((o) => o.reducePos > n) && this.recovering--;
    } else if (r.length > 1) {
      e: for (let a = 0; a < r.length - 1; a++) {
        let o = r[a];
        for (let l = a + 1; l < r.length; l++) {
          let u = r[l];
          if (o.sameState(u) || o.buffer.length > 500 && u.buffer.length > 500)
            if ((o.score - u.score || o.buffer.length - u.buffer.length) > 0)
              r.splice(l--, 1);
            else {
              r.splice(a--, 1);
              continue e;
            }
        }
      }
      r.length > 12 && r.splice(
        12,
        r.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = r[0].pos;
    for (let a = 1; a < r.length; a++)
      r[a].pos < this.minStackPos && (this.minStackPos = r[a].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, n, r) {
    let s = e.pos, { parser: i } = this, a = hr ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && s > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let u = e.curContext && e.curContext.tracker.strict, h = u ? e.curContext.hash : 0;
      for (let f = this.fragments.nodeAt(s); f; ) {
        let m = this.parser.nodeSet.types[f.type.id] == f.type ? i.getGoto(e.state, f.type.id) : -1;
        if (m > -1 && f.length && (!u || (f.prop(nt.contextHash) || 0) == h))
          return e.useNode(f, m), hr && console.log(a + this.stackID(e) + ` (via reuse of ${i.getName(f.type.id)})`), !0;
        if (!(f instanceof cn) || f.children.length == 0 || f.positions[0] > 0)
          break;
        let b = f.children[0];
        if (b instanceof cn && f.positions[0] == 0)
          f = b;
        else
          break;
      }
    }
    let o = i.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (o > 0)
      return e.reduce(o), hr && console.log(a + this.stackID(e) + ` (via always-reduce ${i.getName(
        o & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let l = this.tokens.getActions(e);
    for (let u = 0; u < l.length; ) {
      let h = l[u++], f = l[u++], m = l[u++], b = u == l.length || !r, v = b ? e : e.split(), C = this.tokens.mainToken;
      if (v.apply(h, f, C ? C.start : v.pos, m), hr && console.log(a + this.stackID(v) + ` (via ${h & 65536 ? `reduce of ${i.getName(
        h & 65535
        /* Action.ValueMask */
      )}` : "shift"} for ${i.getName(f)} @ ${s}${v == e ? "" : ", split"})`), b)
        return !0;
      v.pos > s ? n.push(v) : r.push(v);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, n) {
    let r = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > r)
        return pb(e, n), !0;
    }
  }
  runRecovery(e, n, r) {
    let s = null, i = !1;
    for (let a = 0; a < e.length; a++) {
      let o = e[a], l = n[a << 1], u = n[(a << 1) + 1], h = hr ? this.stackID(o) + " -> " : "";
      if (o.deadEnd && (i || (i = !0, o.restart(), hr && console.log(h + this.stackID(o) + " (restarted)"), this.advanceFully(o, r))))
        continue;
      let f = o.split(), m = h;
      for (let b = 0; f.forceReduce() && b < 10 && (hr && console.log(m + this.stackID(f) + " (via force-reduce)"), !this.advanceFully(f, r)); b++)
        hr && (m = this.stackID(f) + " -> ");
      for (let b of o.recoverByInsert(l))
        hr && console.log(h + this.stackID(b) + " (via recover-insert)"), this.advanceFully(b, r);
      this.stream.end > o.pos ? (u == o.pos && (u++, l = 0), o.recoverByDelete(l, u), hr && console.log(h + this.stackID(o) + ` (via recover-delete ${this.parser.getName(l)})`), pb(o, r)) : (!s || s.score < o.score) && (s = o);
    }
    return s;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), cn.build({
      buffer: yu.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let n = (mp || (mp = /* @__PURE__ */ new WeakMap())).get(e);
    return n || mp.set(e, n = String.fromCodePoint(this.nextStackID++)), n + e;
  }
}
function pb(t, e) {
  for (let n = 0; n < e.length; n++) {
    let r = e[n];
    if (r.pos == t.pos && r.sameState(t)) {
      e[n].score < t.score && (e[n] = t);
      return;
    }
  }
  e.push(t);
}
class Cj {
  constructor(e, n, r) {
    this.source = e, this.flags = n, this.disabled = r;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
const gp = (t) => t;
class Sj {
  /**
  Define a context tracker.
  */
  constructor(e) {
    this.start = e.start, this.shift = e.shift || gp, this.reduce = e.reduce || gp, this.reuse = e.reuse || gp, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;
  }
}
class Ou extends $S {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let n = e.nodeNames.split(" ");
    this.minRepeatTerm = n.length;
    for (let o = 0; o < e.repeatNodeCount; o++)
      n.push("");
    let r = Object.keys(e.topRules).map((o) => e.topRules[o][1]), s = [];
    for (let o = 0; o < n.length; o++)
      s.push([]);
    function i(o, l, u) {
      s[o].push([l, l.deserialize(String(u))]);
    }
    if (e.nodeProps)
      for (let o of e.nodeProps) {
        let l = o[0];
        typeof l == "string" && (l = nt[l]);
        for (let u = 1; u < o.length; ) {
          let h = o[u++];
          if (h >= 0)
            i(h, l, o[u++]);
          else {
            let f = o[u + -h];
            for (let m = -h; m > 0; m--)
              i(o[u++], l, f);
            u++;
          }
        }
      }
    this.nodeSet = new pm(n.map((o, l) => or.define({
      name: l >= this.minRepeatTerm ? void 0 : o,
      id: l,
      props: s[l],
      top: r.indexOf(l) > -1,
      error: l == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = jS;
    let a = yo(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let o = 0; o < this.specializerSpecs.length; o++)
      this.specialized[o] = this.specializerSpecs[o].term;
    this.specializers = this.specializerSpecs.map(fb), this.states = yo(e.states, Uint32Array), this.data = yo(e.stateData), this.goto = yo(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((o) => typeof o == "number" ? new ba(a, o) : o), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, n, r) {
    let s = new kj(this, e, n, r);
    for (let i of this.wrappers)
      s = i(s, e, n, r);
    return s;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, n, r = !1) {
    let s = this.goto;
    if (n >= s[0])
      return -1;
    for (let i = s[n + 1]; ; ) {
      let a = s[i++], o = a & 1, l = s[i++];
      if (o && r)
        return l;
      for (let u = i + (a >> 1); i < u; i++)
        if (s[i] == e)
          return l;
      if (o)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, n) {
    let r = this.data;
    for (let s = 0; s < 2; s++)
      for (let i = this.stateSlot(
        e,
        s ? 2 : 1
        /* ParseState.Actions */
      ), a; ; i += 3) {
        if ((a = r[i]) == 65535)
          if (r[i + 1] == 1)
            a = r[i = Bs(r, i + 2)];
          else {
            if (r[i + 1] == 2)
              return Bs(r, i + 2);
            break;
          }
        if (a == n || a == 0)
          return Bs(r, i + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, n) {
    return this.states[e * 6 + n];
  }
  /**
  @internal
  */
  stateFlag(e, n) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & n) > 0;
  }
  /**
  @internal
  */
  validAction(e, n) {
    return !!this.allActions(e, (r) => r == n ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, n) {
    let r = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), s = r ? n(r) : void 0;
    for (let i = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); s == null; i += 3) {
      if (this.data[i] == 65535)
        if (this.data[i + 1] == 1)
          i = Bs(this.data, i + 2);
        else
          break;
      s = n(Bs(this.data, i + 1));
    }
    return s;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let n = [];
    for (let r = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; r += 3) {
      if (this.data[r] == 65535)
        if (this.data[r + 1] == 1)
          r = Bs(this.data, r + 2);
        else
          break;
      if (!(this.data[r + 2] & 1)) {
        let s = this.data[r + 1];
        n.some((i, a) => a & 1 && i == s) || n.push(this.data[r], s);
      }
    }
    return n;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let n = Object.assign(Object.create(Ou.prototype), this);
    if (e.props && (n.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let r = this.topRules[e.top];
      if (!r)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      n.top = r;
    }
    return e.tokenizers && (n.tokenizers = this.tokenizers.map((r) => {
      let s = e.tokenizers.find((i) => i.from == r);
      return s ? s.to : r;
    })), e.specializers && (n.specializers = this.specializers.slice(), n.specializerSpecs = this.specializerSpecs.map((r, s) => {
      let i = e.specializers.find((o) => o.from == r.external);
      if (!i)
        return r;
      let a = Object.assign(Object.assign({}, r), { external: i.to });
      return n.specializers[s] = fb(a), a;
    })), e.contextTracker && (n.context = e.contextTracker), e.dialect && (n.dialect = this.parseDialect(e.dialect)), e.strict != null && (n.strict = e.strict), e.wrap && (n.wrappers = n.wrappers.concat(e.wrap)), e.bufferLength != null && (n.bufferLength = e.bufferLength), n;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let n = this.dynamicPrecedences;
    return n == null ? 0 : n[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let n = Object.keys(this.dialects), r = n.map(() => !1);
    if (e)
      for (let i of e.split(" ")) {
        let a = n.indexOf(i);
        a >= 0 && (r[a] = !0);
      }
    let s = null;
    for (let i = 0; i < n.length; i++)
      if (!r[i])
        for (let a = this.dialects[n[i]], o; (o = this.data[a++]) != 65535; )
          (s || (s = new Uint8Array(this.maxTerm + 1)))[o] = 1;
    return new Cj(e, r, s);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new Ou(e);
  }
}
function Bs(t, e) {
  return t[e] | t[e + 1] << 16;
}
function Aj(t) {
  let e = null;
  for (let n of t) {
    let r = n.p.stoppedAt;
    (n.pos == n.p.stream.end || r != null && n.pos > r) && n.p.parser.stateFlag(
      n.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < n.score) && (e = n);
  }
  return e;
}
function fb(t) {
  if (t.external) {
    let e = t.extend ? 1 : 0;
    return (n, r) => t.external(n, r) << 1 | e;
  }
  return t.get;
}
const Pj = 314, Dj = 315, db = 1, Ej = 2, Fj = 3, Bj = 4, Mj = 316, Tj = 318, Qj = 319, jj = 5, _j = 6, Rj = 0, _f = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], f5 = 125, Zj = 59, Rf = 47, $j = 42, Lj = 43, Ij = 45, Nj = 60, Vj = 44, Xj = 63, Wj = 46, Uj = 91, qj = new Sj({
  start: !1,
  shift(t, e) {
    return e == jj || e == _j || e == Tj ? t : e == Qj;
  },
  strict: !1
}), Gj = new dl((t, e) => {
  let { next: n } = t;
  (n == f5 || n == -1 || e.context) && t.acceptToken(Mj);
}, { contextual: !0, fallback: !0 }), zj = new dl((t, e) => {
  let { next: n } = t, r;
  _f.indexOf(n) > -1 || n == Rf && ((r = t.peek(1)) == Rf || r == $j) || n != f5 && n != Zj && n != -1 && !e.context && t.acceptToken(Pj);
}, { contextual: !0 }), Yj = new dl((t, e) => {
  t.next == Uj && !e.context && t.acceptToken(Dj);
}, { contextual: !0 }), Hj = new dl((t, e) => {
  let { next: n } = t;
  if (n == Lj || n == Ij) {
    if (t.advance(), n == t.next) {
      t.advance();
      let r = !e.context && e.canShift(db);
      t.acceptToken(r ? db : Ej);
    }
  } else n == Xj && t.peek(1) == Wj && (t.advance(), t.advance(), (t.next < 48 || t.next > 57) && t.acceptToken(Fj));
}, { contextual: !0 });
function bp(t, e) {
  return t >= 65 && t <= 90 || t >= 97 && t <= 122 || t == 95 || t >= 192 || !e && t >= 48 && t <= 57;
}
const Kj = new dl((t, e) => {
  if (t.next != Nj || !e.dialectEnabled(Rj) || (t.advance(), t.next == Rf)) return;
  let n = 0;
  for (; _f.indexOf(t.next) > -1; )
    t.advance(), n++;
  if (bp(t.next, !0)) {
    for (t.advance(), n++; bp(t.next, !1); )
      t.advance(), n++;
    for (; _f.indexOf(t.next) > -1; )
      t.advance(), n++;
    if (t.next == Vj) return;
    for (let r = 0; ; r++) {
      if (r == 7) {
        if (!bp(t.next, !0)) return;
        break;
      }
      if (t.next != "extends".charCodeAt(r)) break;
      t.advance(), n++;
    }
  }
  t.acceptToken(Bj, -n);
}), Jj = LS({
  "get set async static": c.modifier,
  "for while do if else switch try catch finally return throw break continue default case": c.controlKeyword,
  "in of await yield void typeof delete instanceof": c.operatorKeyword,
  "let var const using function class extends": c.definitionKeyword,
  "import export from": c.moduleKeyword,
  "with debugger as new": c.keyword,
  TemplateString: c.special(c.string),
  super: c.atom,
  BooleanLiteral: c.bool,
  this: c.self,
  null: c.null,
  Star: c.modifier,
  VariableName: c.variableName,
  "CallExpression/VariableName TaggedTemplateExpression/VariableName": c.function(c.variableName),
  VariableDefinition: c.definition(c.variableName),
  Label: c.labelName,
  PropertyName: c.propertyName,
  PrivatePropertyName: c.special(c.propertyName),
  "CallExpression/MemberExpression/PropertyName": c.function(c.propertyName),
  "FunctionDeclaration/VariableDefinition": c.function(c.definition(c.variableName)),
  "ClassDeclaration/VariableDefinition": c.definition(c.className),
  "NewExpression/VariableName": c.className,
  PropertyDefinition: c.definition(c.propertyName),
  PrivatePropertyDefinition: c.definition(c.special(c.propertyName)),
  UpdateOp: c.updateOperator,
  "LineComment Hashbang": c.lineComment,
  BlockComment: c.blockComment,
  Number: c.number,
  String: c.string,
  Escape: c.escape,
  ArithOp: c.arithmeticOperator,
  LogicOp: c.logicOperator,
  BitOp: c.bitwiseOperator,
  CompareOp: c.compareOperator,
  RegExp: c.regexp,
  Equals: c.definitionOperator,
  Arrow: c.function(c.punctuation),
  ": Spread": c.punctuation,
  "( )": c.paren,
  "[ ]": c.squareBracket,
  "{ }": c.brace,
  "InterpolationStart InterpolationEnd": c.special(c.brace),
  ".": c.derefOperator,
  ", ;": c.separator,
  "@": c.meta,
  TypeName: c.typeName,
  TypeDefinition: c.definition(c.typeName),
  "type enum interface implements namespace module declare": c.definitionKeyword,
  "abstract global Privacy readonly override": c.modifier,
  "is keyof unique infer asserts": c.operatorKeyword,
  JSXAttributeValue: c.attributeValue,
  JSXText: c.content,
  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": c.angleBracket,
  "JSXIdentifier JSXNameSpacedName": c.tagName,
  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": c.attributeName,
  "JSXBuiltin/JSXIdentifier": c.standard(c.tagName)
}), e_ = { __proto__: null, export: 20, as: 25, from: 33, default: 36, async: 41, function: 42, const: 52, extends: 56, this: 60, true: 68, false: 68, null: 80, void: 84, typeof: 88, super: 104, new: 138, delete: 150, yield: 159, await: 163, class: 168, public: 231, private: 231, protected: 231, readonly: 233, instanceof: 252, satisfies: 255, in: 256, import: 290, keyof: 347, unique: 351, infer: 357, asserts: 393, is: 395, abstract: 415, implements: 417, type: 419, let: 422, var: 424, using: 427, interface: 433, enum: 437, namespace: 443, module: 445, declare: 449, global: 453, for: 472, of: 481, while: 484, with: 488, do: 492, if: 496, else: 498, switch: 502, case: 508, try: 514, catch: 518, finally: 522, return: 526, throw: 530, break: 534, continue: 538, debugger: 542 }, t_ = { __proto__: null, async: 125, get: 127, set: 129, declare: 191, public: 193, private: 193, protected: 193, static: 195, abstract: 197, override: 199, readonly: 205, accessor: 207, new: 399 }, n_ = { __proto__: null, "<": 189 }, r_ = Ou.deserialize({
  version: 14,
  states: "$EOQ%TQlOOO%[QlOOO'_QpOOP(lO`OOO*zQ!0MxO'#CiO+RO#tO'#CjO+aO&jO'#CjO+oO#@ItO'#D_O.QQlO'#DeO.bQlO'#DpO%[QlO'#DxO0fQlO'#EQOOQ!0Lf'#EY'#EYO1PQ`O'#EVOOQO'#En'#EnOOQO'#Ij'#IjO1XQ`O'#GrO1dQ`O'#EmO1iQ`O'#EmO3hQ!0MxO'#JpO6[Q!0MxO'#JqO6uQ`O'#F[O6zQ,UO'#FsOOQ!0Lf'#Fe'#FeO7VO7dO'#FeO7eQMhO'#F{O9UQ`O'#FzOOQ!0Lf'#Jq'#JqOOQ!0Lb'#Jp'#JpO9ZQ`O'#GvOOQ['#K]'#K]O9fQ`O'#IWO9kQ!0LrO'#IXOOQ['#J^'#J^OOQ['#I]'#I]Q`QlOOQ`QlOOO9sQ!L^O'#DtO9zQlO'#D|O:RQlO'#EOO9aQ`O'#GrO:YQMhO'#CoO:hQ`O'#ElO:sQ`O'#EwO:xQMhO'#FdO;gQ`O'#GrOOQO'#K^'#K^O;lQ`O'#K^O;zQ`O'#GzO;zQ`O'#G{O;zQ`O'#G}O9aQ`O'#HQO<qQ`O'#HTO>YQ`O'#CeO>jQ`O'#HaO>rQ`O'#HgO>rQ`O'#HiO`QlO'#HkO>rQ`O'#HmO>rQ`O'#HpO>wQ`O'#HvO>|Q!0LsO'#H|O%[QlO'#IOO?XQ!0LsO'#IQO?dQ!0LsO'#ISO9kQ!0LrO'#IUO?oQ!0MxO'#CiO@qQpO'#DjQOQ`OOO%[QlO'#EOOAXQ`O'#ERO:YQMhO'#ElOAdQ`O'#ElOAoQ!bO'#FdOOQ['#Cg'#CgOOQ!0Lb'#Do'#DoOOQ!0Lb'#Jt'#JtO%[QlO'#JtOOQO'#Jw'#JwOOQO'#If'#IfOBoQpO'#EeOOQ!0Lb'#Ed'#EdOOQ!0Lb'#J{'#J{OCkQ!0MSO'#EeOCuQpO'#EUOOQO'#Jv'#JvODZQpO'#JwOEhQpO'#EUOCuQpO'#EePEuO&2DjO'#CbPOOO)CD{)CD{OOOO'#I^'#I^OFQO#tO,59UOOQ!0Lh,59U,59UOOOO'#I_'#I_OF`O&jO,59UOFnQ!L^O'#DaOOOO'#Ia'#IaOFuO#@ItO,59yOOQ!0Lf,59y,59yOGTQlO'#IbOGhQ`O'#JrOIgQ!fO'#JrO+}QlO'#JrOInQ`O,5:POJUQ`O'#EnOJcQ`O'#KROJnQ`O'#KQOJnQ`O'#KQOJvQ`O,5;[OJ{Q`O'#KPOOQ!0Ln,5:[,5:[OKSQlO,5:[OMQQ!0MxO,5:dOMqQ`O,5:lON[Q!0LrO'#KOONcQ`O'#J}O9ZQ`O'#J}ONwQ`O'#J}O! PQ`O,5;ZO! UQ`O'#J}O!#ZQ!fO'#JqOOQ!0Lh'#Ci'#CiO%[QlO'#EQO!#yQ!fO,5:qOOQS'#Jx'#JxOOQO-E<h-E<hO9aQ`O,5=^O!$aQ`O,5=^O!$fQlO,5;XO!&iQMhO'#EiO!(SQ`O,5;XO!(XQlO'#DwO!(cQpO,5;bO!(kQpO,5;bO%[QlO,5;bOOQ['#FS'#FSOOQ['#FU'#FUO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cOOQ['#FY'#FYO!(yQlO,5;sOOQ!0Lf,5;x,5;xOOQ!0Lf,5;y,5;yOOQ!0Lf,5;{,5;{O%[QlO'#InO!*|Q!0LrO,5<hO%[QlO,5;cO!&iQMhO,5;cO!+kQMhO,5;cO!-]QMhO'#E[O%[QlO,5;vOOQ!0Lf,5;z,5;zO!-dQ,UO'#FiO!.aQ,UO'#KVO!-{Q,UO'#KVO!.hQ,UO'#KVOOQO'#KV'#KVO!.|Q,UO,5<ROOOW,5<_,5<_O!/_QlO'#FuOOOW'#Im'#ImO7VO7dO,5<PO!/fQ,UO'#FwOOQ!0Lf,5<P,5<PO!0VQ$IUO'#CwOOQ!0Lh'#C{'#C{O!0jO#@ItO'#DPO!1WQMjO,5<dO!1_Q`O,5<gO!2zQ(CWO'#GWO!3XQ`O'#GXO!3^Q`O'#GXO!4|Q(CWO'#G]O!6RQpO'#GaOOQO'#Gm'#GmO!+rQMhO'#GlOOQO'#Go'#GoO!+rQMhO'#GnO!6tQ$IUO'#JjOOQ!0Lh'#Jj'#JjO!7OQ`O'#JiO!7^Q`O'#JhO!7fQ`O'#CuOOQ!0Lh'#Cy'#CyO!7qQ`O'#C{OOQ!0Lh'#DT'#DTOOQ!0Lh'#DV'#DVO1SQ`O'#DXO!+rQMhO'#GOO!+rQMhO'#GQO!7vQ`O'#GSO!7{Q`O'#GTO!3^Q`O'#GZO!+rQMhO'#G`O;zQ`O'#JiO!8QQ`O'#EoO!8oQ`O,5<fOOQ!0Lb'#Cr'#CrO!8wQ`O'#EpO!9qQpO'#EqOOQ!0Lb'#KP'#KPO!9xQ!0LrO'#K_O9kQ!0LrO,5=bO`QlO,5>rOOQ['#Jf'#JfOOQ[,5>s,5>sOOQ[-E<Z-E<ZO!;wQ!0MxO,5:`O!9lQpO,5:^O!>bQ!0MxO,5:hO%[QlO,5:hO!@xQ!0MxO,5:jOOQO,5@x,5@xO!AiQMhO,5=^O!AwQ!0LrO'#JgO9UQ`O'#JgO!BYQ!0LrO,59ZO!BeQpO,59ZO!BmQMhO,59ZO:YQMhO,59ZO!BxQ`O,5;XO!CQQ`O'#H`O!CfQ`O'#KbO%[QlO,5;|O!9lQpO,5<OO!CnQ`O,5=yO!CsQ`O,5=yO!CxQ`O,5=yO9kQ!0LrO,5=yO;zQ`O,5=iOOQO'#Cw'#CwO!DWQpO,5=fO!D`QMhO,5=gO!DkQ`O,5=iO!DpQ!bO,5=lO!DxQ`O'#K^O>wQ`O'#HVO9aQ`O'#HXO!D}Q`O'#HXO:YQMhO'#HZO!ESQ`O'#HZOOQ[,5=o,5=oO!EXQ`O'#H[O!EjQ`O'#CoO!EoQ`O,59PO!EyQ`O,59PO!HOQlO,59POOQ[,59P,59PO!H`Q!0LrO,59PO%[QlO,59PO!JkQlO'#HcOOQ['#Hd'#HdOOQ['#He'#HeO`QlO,5={O!KRQ`O,5={O`QlO,5>RO`QlO,5>TO!KWQ`O,5>VO`QlO,5>XO!K]Q`O,5>[O!KbQlO,5>bOOQ[,5>h,5>hO%[QlO,5>hO9kQ!0LrO,5>jOOQ[,5>l,5>lO# lQ`O,5>lOOQ[,5>n,5>nO# lQ`O,5>nOOQ[,5>p,5>pO#!YQpO'#D]O%[QlO'#JtO#!{QpO'#JtO##VQpO'#DkO##hQpO'#DkO#%yQlO'#DkO#&QQ`O'#JsO#&YQ`O,5:UO#&_Q`O'#ErO#&mQ`O'#KSO#&uQ`O,5;]O#&zQpO'#DkO#'XQpO'#ETOOQ!0Lf,5:m,5:mO%[QlO,5:mO#'`Q`O,5:mO>wQ`O,5;WO!BeQpO,5;WO!BmQMhO,5;WO:YQMhO,5;WO#'hQ`O,5@`O#'mQ07dO,5:qOOQO-E<d-E<dO#(sQ!0MSO,5;POCuQpO,5:pO#(}QpO,5:pOCuQpO,5;PO!BYQ!0LrO,5:pOOQ!0Lb'#Eh'#EhOOQO,5;P,5;PO%[QlO,5;PO#)[Q!0LrO,5;PO#)gQ!0LrO,5;PO!BeQpO,5:pOOQO,5;V,5;VO#)uQ!0LrO,5;PPOOO'#I['#I[P#*ZO&2DjO,58|POOO,58|,58|OOOO-E<[-E<[OOQ!0Lh1G.p1G.pOOOO-E<]-E<]OOOO,59{,59{O#*fQ!bO,59{OOOO-E<_-E<_OOQ!0Lf1G/e1G/eO#*kQ!fO,5>|O+}QlO,5>|OOQO,5?S,5?SO#*uQlO'#IbOOQO-E<`-E<`O#+SQ`O,5@^O#+[Q!fO,5@^O#+cQ`O,5@lOOQ!0Lf1G/k1G/kO%[QlO,5@mO#+kQ`O'#IhOOQO-E<f-E<fO#+cQ`O,5@lOOQ!0Lb1G0v1G0vOOQ!0Ln1G/v1G/vOOQ!0Ln1G0W1G0WO%[QlO,5@jO#,PQ!0LrO,5@jO#,bQ!0LrO,5@jO#,iQ`O,5@iO9ZQ`O,5@iO#,qQ`O,5@iO#-PQ`O'#IkO#,iQ`O,5@iOOQ!0Lb1G0u1G0uO!(cQpO,5:sO!(nQpO,5:sOOQS,5:u,5:uO#-qQdO,5:uO#-yQMhO1G2xO9aQ`O1G2xOOQ!0Lf1G0s1G0sO#.XQ!0MxO1G0sO#/^Q!0MvO,5;TOOQ!0Lh'#GV'#GVO#/zQ!0MzO'#JjO!$fQlO1G0sO#2VQ!fO'#JuO%[QlO'#JuO#2aQ`O,5:cOOQ!0Lh'#D]'#D]OOQ!0Lf1G0|1G0|O%[QlO1G0|OOQ!0Lf1G1e1G1eO#2fQ`O1G0|O#4zQ!0MxO1G0}O#5RQ!0MxO1G0}O#7iQ!0MxO1G0}O#7pQ!0MxO1G0}O#:WQ!0MxO1G0}O#<nQ!0MxO1G0}O#<uQ!0MxO1G0}O#<|Q!0MxO1G0}O#?dQ!0MxO1G0}O#?kQ!0MxO1G0}O#AxQ?MtO'#CiO#CsQ?MtO1G1_O#CzQ?MtO'#JqO#D_Q!0MxO,5?YOOQ!0Lb-E<l-E<lO#FlQ!0MxO1G0}O#GiQ!0MzO1G0}OOQ!0Lf1G0}1G0}O#HlQMjO'#JzO#HvQ`O,5:vO#H{Q!0MxO1G1bO#IoQ,UO,5<VO#IwQ,UO,5<WO#JPQ,UO'#FnO#JhQ`O'#FmOOQO'#KW'#KWOOQO'#Il'#IlO#JmQ,UO1G1mOOQ!0Lf1G1m1G1mOOOW1G1x1G1xO#KOQ?MtO'#JpO#KYQ`O,5<aO!(yQlO,5<aOOOW-E<k-E<kOOQ!0Lf1G1k1G1kO#K_QpO'#KVOOQ!0Lf,5<c,5<cO#KgQpO,5<cO#KlQMhO'#DROOOO'#I`'#I`O#KsO#@ItO,59kOOQ!0Lh,59k,59kO%[QlO1G2OO!7{Q`O'#IpO#LOQ`O,5<yOOQ!0Lh,5<v,5<vO!+rQMhO'#IsO#LlQMjO,5=WO!+rQMhO'#IuO#M_QMjO,5=YO!&iQMhO,5=[OOQO1G2R1G2RO#MiQ!dO'#CrO#M|Q(CWO'#EpO$ RQpO'#GaO$ iQ!dO,5<rO$ pQ`O'#KYO9ZQ`O'#KYO$!OQ`O,5<tO!+rQMhO,5<sO$!TQ`O'#GYO$!fQ`O,5<sO$!kQ!dO'#GVO$!xQ!dO'#KZO$#SQ`O'#KZO!&iQMhO'#KZO$#XQ`O,5<wO$#^QlO'#JtO$#hQpO'#GbO##hQpO'#GbO$#yQ`O'#GfO!3^Q`O'#GjO$$OQ!0LrO'#IrO$$ZQpO,5<{OOQ!0Lp,5<{,5<{O$$bQpO'#GbO$$oQpO'#GcO$%QQpO'#GcO$%VQMjO,5=WO$%gQMjO,5=YOOQ!0Lh,5=],5=]O!+rQMhO,5@TO!+rQMhO,5@TO$%wQ`O'#IwO$&VQ`O,5@SO$&_Q`O,59aOOQ!0Lh,59g,59gO$'UQ$IYO,59sOOQ!0Lh'#Jn'#JnO$'wQMjO,5<jO$(jQMjO,5<lO@iQ`O,5<nOOQ!0Lh,5<o,5<oO$(tQ`O,5<uO$(yQMjO,5<zO$)ZQ`O,5@TO$)iQ`O'#J}O!$fQlO1G2QO$)nQ`O1G2QO9ZQ`O'#KQO9ZQ`O'#ErO%[QlO'#ErO9ZQ`O'#IyO$)sQ!0LrO,5@yOOQ[1G2|1G2|OOQ[1G4^1G4^OOQ!0Lf1G/z1G/zOOQ!0Lf1G/x1G/xO$+uQ!0MxO1G0SOOQ[1G2x1G2xO!&iQMhO1G2xO%[QlO1G2xO#-|Q`O1G2xO$-yQMhO'#EiOOQ!0Lb,5@R,5@RO$.WQ!0LrO,5@ROOQ[1G.u1G.uO!BYQ!0LrO1G.uO!BeQpO1G.uO!BmQMhO1G.uO$.iQ`O1G0sO$.nQ`O'#CiO$.yQ`O'#KcO$/RQ`O,5=zO$/WQ`O'#KcO$/]Q`O'#KcO$/kQ`O'#JPO$/yQ`O,5@|O$0RQ!fO1G1hOOQ!0Lf1G1j1G1jO9aQ`O1G3eO@iQ`O1G3eO$0YQ`O1G3eO$0_Q`O1G3eOOQ[1G3e1G3eO!DkQ`O1G3TO!&iQMhO1G3QO$0dQ`O1G3QOOQ[1G3R1G3RO!&iQMhO1G3RO$0iQ`O1G3RO$0qQpO'#HPOOQ[1G3T1G3TO!5|QpO'#I{O!DpQ!bO1G3WOOQ[1G3W1G3WOOQ[,5=q,5=qO$0yQMhO,5=sO9aQ`O,5=sO$#yQ`O,5=uO9UQ`O,5=uO!BeQpO,5=uO!BmQMhO,5=uO:YQMhO,5=uO$1XQ`O'#KaO$1dQ`O,5=vOOQ[1G.k1G.kO$1iQ!0LrO1G.kO@iQ`O1G.kO$1tQ`O1G.kO9kQ!0LrO1G.kO$3|Q!fO,5AOO$4ZQ`O,5AOO9ZQ`O,5AOO$4fQlO,5=}O$4mQ`O,5=}OOQ[1G3g1G3gO`QlO1G3gOOQ[1G3m1G3mOOQ[1G3o1G3oO>rQ`O1G3qO$4rQlO1G3sO$8vQlO'#HrOOQ[1G3v1G3vO$9TQ`O'#HxO>wQ`O'#HzOOQ[1G3|1G3|O$9]QlO1G3|O9kQ!0LrO1G4SOOQ[1G4U1G4UOOQ!0Lb'#G^'#G^O9kQ!0LrO1G4WO9kQ!0LrO1G4YO$=dQ`O,5@`O!(yQlO,5;^O9ZQ`O,5;^O>wQ`O,5:VO!(yQlO,5:VO!BeQpO,5:VO$=iQ?MtO,5:VOOQO,5;^,5;^O$=sQpO'#IcO$>ZQ`O,5@_OOQ!0Lf1G/p1G/pO$>cQpO'#IiO$>mQ`O,5@nOOQ!0Lb1G0w1G0wO##hQpO,5:VOOQO'#Ie'#IeO$>uQpO,5:oOOQ!0Ln,5:o,5:oO#'cQ`O1G0XOOQ!0Lf1G0X1G0XO%[QlO1G0XOOQ!0Lf1G0r1G0rO>wQ`O1G0rO!BeQpO1G0rO!BmQMhO1G0rOOQ!0Lb1G5z1G5zO!BYQ!0LrO1G0[OOQO1G0k1G0kO%[QlO1G0kO$>|Q!0LrO1G0kO$?XQ!0LrO1G0kO!BeQpO1G0[OCuQpO1G0[O$?gQ!0LrO1G0kOOQO1G0[1G0[O$?{Q!0MxO1G0kPOOO-E<Y-E<YPOOO1G.h1G.hOOOO1G/g1G/gO$@VQ!bO,5<hO$@_Q!fO1G4hOOQO1G4n1G4nO%[QlO,5>|O$@iQ`O1G5xO$@qQ`O1G6WO$@yQ!fO1G6XO9ZQ`O,5?SO$ATQ!0MxO1G6UO%[QlO1G6UO$AeQ!0LrO1G6UO$AvQ`O1G6TO$AvQ`O1G6TO9ZQ`O1G6TO$BOQ`O,5?VO9ZQ`O,5?VOOQO,5?V,5?VO$BdQ`O,5?VO$)iQ`O,5?VOOQO-E<i-E<iOOQS1G0_1G0_OOQS1G0a1G0aO#-tQ`O1G0aOOQ[7+(d7+(dO!&iQMhO7+(dO%[QlO7+(dO$BrQ`O7+(dO$B}QMhO7+(dO$C]Q!0MzO,5=WO$EhQ!0MzO,5=YO$GsQ!0MzO,5=WO$JUQ!0MzO,5=YO$LgQ!0MzO,59sO$NlQ!0MzO,5<jO%!wQ!0MzO,5<lO%%SQ!0MzO,5<zOOQ!0Lf7+&_7+&_O%'eQ!0MxO7+&_O%(XQlO'#IdO%(fQ`O,5@aO%(nQ!fO,5@aOOQ!0Lf1G/}1G/}O%(xQ`O7+&hOOQ!0Lf7+&h7+&hO%(}Q?MtO,5:dO%[QlO7+&yO%)XQ?MtO,5:`O%)fQ?MtO,5:hO%)pQ?MtO,5:jO%)zQMhO'#IgO%*UQ`O,5@fOOQ!0Lh1G0b1G0bOOQO1G1q1G1qOOQO1G1r1G1rO%*^Q!jO,5<YO!(yQlO,5<XOOQO-E<j-E<jOOQ!0Lf7+'X7+'XOOOW7+'d7+'dOOOW1G1{1G1{O%*iQ`O1G1{OOQ!0Lf1G1}1G1}OOOO,59m,59mO%*nQ!dO,59mOOOO-E<^-E<^OOQ!0Lh1G/V1G/VO%*uQ!0MxO7+'jOOQ!0Lh,5?[,5?[O%+iQMhO1G2eP%+pQ`O'#IpPOQ!0Lh-E<n-E<nO%,^QMjO,5?_OOQ!0Lh-E<q-E<qO%-PQMjO,5?aOOQ!0Lh-E<s-E<sO%-ZQ!dO1G2vO%-bQ!dO'#CrO%-xQMhO'#KQO$#^QlO'#JtOOQ!0Lh1G2^1G2^O%.PQ`O'#IoO%.eQ`O,5@tO%.eQ`O,5@tO%.mQ`O,5@tO%.xQ`O,5@tOOQO1G2`1G2`O%/WQMjO1G2_O!+rQMhO1G2_O%/hQ(CWO'#IqO%/uQ`O,5@uO!&iQMhO,5@uO%/}Q!dO,5@uOOQ!0Lh1G2c1G2cO%2_Q!fO'#CiO%2iQ`O,5=OOOQ!0Lb,5<|,5<|O%2qQpO,5<|OOQ!0Lb,5<},5<}OCfQ`O,5<|O%2|QpO,5<|OOQ!0Lb,5=Q,5=QO$)iQ`O,5=UOOQO,5?^,5?^OOQO-E<p-E<pOOQ!0Lp1G2g1G2gO##hQpO,5<|O$#^QlO,5=OO%3[Q`O,5<}O%3gQpO,5<}O!+rQMhO'#IsO%4aQMjO1G2rO!+rQMhO'#IuO%5SQMjO1G2tO%5^QMjO1G5oO%5hQMjO1G5oOOQO,5?c,5?cOOQO-E<u-E<uOOQO1G.{1G.{O!9lQpO,59uO%[QlO,59uOOQ!0Lh,5<i,5<iO%5uQ`O1G2YO!+rQMhO1G2aO!+rQMhO1G5oO!+rQMhO1G5oO%5zQ!0MxO7+'lOOQ!0Lf7+'l7+'lO!$fQlO7+'lO%6nQ`O,5;^OOQ!0Lb,5?e,5?eOOQ!0Lb-E<w-E<wO%6sQ!dO'#K[O#'cQ`O7+(dO4UQ!fO7+(dO$BuQ`O7+(dO%6}Q!0MvO'#CiO%7nQ!0LrO,5=RO%8PQ!0MvO,5=RO%8dQ`O,5=ROOQ!0Lb1G5m1G5mOOQ[7+$a7+$aO!BYQ!0LrO7+$aO!BeQpO7+$aO!$fQlO7+&_O%8lQ`O'#JOO%9TQ`O,5@}OOQO1G3f1G3fO9aQ`O,5@}O%9TQ`O,5@}O%9]Q`O,5@}OOQO,5?k,5?kOOQO-E<}-E<}OOQ!0Lf7+'S7+'SO%9bQ`O7+)PO9kQ!0LrO7+)PO9aQ`O7+)PO@iQ`O7+)POOQ[7+(o7+(oO%9gQ!0MvO7+(lO!&iQMhO7+(lO!DfQ`O7+(mOOQ[7+(m7+(mO!&iQMhO7+(mO%9qQ`O'#K`O%9|Q`O,5=kOOQO,5?g,5?gOOQO-E<y-E<yOOQ[7+(r7+(rO%;`QpO'#HYOOQ[1G3_1G3_O!&iQMhO1G3_O%[QlO1G3_O%;gQ`O1G3_O%;rQMhO1G3_O9kQ!0LrO1G3aO$#yQ`O1G3aO9UQ`O1G3aO!BeQpO1G3aO!BmQMhO1G3aO%<QQ`O'#I}O%<fQ`O,5@{O%<nQpO,5@{OOQ!0Lb1G3b1G3bOOQ[7+$V7+$VO@iQ`O7+$VO9kQ!0LrO7+$VO%<yQ`O7+$VO%[QlO1G6jO%[QlO1G6kO%=OQ!0LrO1G6jO%=YQlO1G3iO%=aQ`O1G3iO%=fQlO1G3iOOQ[7+)R7+)RO9kQ!0LrO7+)]O`QlO7+)_OOQ['#Kf'#KfOOQ['#JQ'#JQO%=mQlO,5>^OOQ[,5>^,5>^O%[QlO'#HsO%=zQ`O'#HuOOQ[,5>d,5>dO9ZQ`O,5>dOOQ[,5>f,5>fOOQ[7+)h7+)hOOQ[7+)n7+)nOOQ[7+)r7+)rOOQ[7+)t7+)tO%>PQpO1G5zO%>kQ?MtO1G0xO%>uQ`O1G0xOOQO1G/q1G/qO%?QQ?MtO1G/qO>wQ`O1G/qO!(yQlO'#DkOOQO,5>},5>}OOQO-E<a-E<aOOQO,5?T,5?TOOQO-E<g-E<gO!BeQpO1G/qOOQO-E<c-E<cOOQ!0Ln1G0Z1G0ZOOQ!0Lf7+%s7+%sO#'cQ`O7+%sOOQ!0Lf7+&^7+&^O>wQ`O7+&^O!BeQpO7+&^OOQO7+%v7+%vO$?{Q!0MxO7+&VOOQO7+&V7+&VO%[QlO7+&VO%?[Q!0LrO7+&VO!BYQ!0LrO7+%vO!BeQpO7+%vO%?gQ!0LrO7+&VO%?uQ!0MxO7++pO%[QlO7++pO%@VQ`O7++oO%@VQ`O7++oOOQO1G4q1G4qO9ZQ`O1G4qO%@_Q`O1G4qOOQS7+%{7+%{O#'cQ`O<<LOO4UQ!fO<<LOO%@mQ`O<<LOOOQ[<<LO<<LOO!&iQMhO<<LOO%[QlO<<LOO%@uQ`O<<LOO%AQQ!0MzO,5?_O%C]Q!0MzO,5?aO%EhQ!0MzO1G2_O%GyQ!0MzO1G2rO%JUQ!0MzO1G2tO%LaQ!fO,5?OO%[QlO,5?OOOQO-E<b-E<bO%LkQ`O1G5{OOQ!0Lf<<JS<<JSO%LsQ?MtO1G0sO%NzQ?MtO1G0}O& RQ?MtO1G0}O&#SQ?MtO1G0}O&#ZQ?MtO1G0}O&%[Q?MtO1G0}O&']Q?MtO1G0}O&'dQ?MtO1G0}O&'kQ?MtO1G0}O&)lQ?MtO1G0}O&)sQ?MtO1G0}O&)zQ!0MxO<<JeO&+rQ?MtO1G0}O&,oQ?MvO1G0}O&-rQ?MvO'#JjO&/xQ?MtO1G1bO&0VQ?MtO1G0SO&0aQMjO,5?ROOQO-E<e-E<eO!(yQlO'#FpOOQO'#KX'#KXOOQO1G1t1G1tO&0kQ`O1G1sO&0pQ?MtO,5?YOOOW7+'g7+'gOOOO1G/X1G/XO&0zQ!dO1G4vOOQ!0Lh7+(P7+(PP!&iQMhO,5?[O!+rQMhO7+(bO&1RQ`O,5?ZO9ZQ`O,5?ZOOQO-E<m-E<mO&1aQ`O1G6`O&1aQ`O1G6`O&1iQ`O1G6`O&1tQMjO7+'yO&2UQ!dO,5?]O&2`Q`O,5?]O!&iQMhO,5?]OOQO-E<o-E<oO&2eQ!dO1G6aO&2oQ`O1G6aO&2wQ`O1G2jO!&iQMhO1G2jOOQ!0Lb1G2h1G2hOOQ!0Lb1G2i1G2iO%2qQpO1G2hO!BeQpO1G2hOCfQ`O1G2hOOQ!0Lb1G2p1G2pO&2|QpO1G2hO&3[Q`O1G2jO$)iQ`O1G2iOCfQ`O1G2iO$#^QlO1G2jO&3dQ`O1G2iO&4WQMjO,5?_OOQ!0Lh-E<r-E<rO&4yQMjO,5?aOOQ!0Lh-E<t-E<tO!+rQMhO7++ZOOQ!0Lh1G/a1G/aO&5TQ`O1G/aOOQ!0Lh7+'t7+'tO&5YQMjO7+'{O&5jQMjO7++ZO&5tQMjO7++ZO&6RQ!0MxO<<KWOOQ!0Lf<<KW<<KWO&6uQ`O1G0xO!&iQMhO'#IxO&6zQ`O,5@vO&8|Q!fO<<LOO!&iQMhO1G2mO&9TQ!0LrO1G2mOOQ[<<G{<<G{O!BYQ!0LrO<<G{O&9fQ!0MxO<<IyOOQ!0Lf<<Iy<<IyOOQO,5?j,5?jO&:YQ`O,5?jO&:_Q`O,5?jOOQO-E<|-E<|O&:mQ`O1G6iO&:mQ`O1G6iO9aQ`O1G6iO@iQ`O<<LkOOQ[<<Lk<<LkO&:uQ`O<<LkO9kQ!0LrO<<LkOOQ[<<LW<<LWO%9gQ!0MvO<<LWOOQ[<<LX<<LXO!DfQ`O<<LXO&:zQpO'#IzO&;VQ`O,5@zO!(yQlO,5@zOOQ[1G3V1G3VOOQO'#I|'#I|O9kQ!0LrO'#I|O&;_QpO,5=tOOQ[,5=t,5=tO&;fQpO'#EeO&;mQpO'#GdO&;rQ`O7+(yO&;wQ`O7+(yOOQ[7+(y7+(yO!&iQMhO7+(yO%[QlO7+(yO&<PQ`O7+(yOOQ[7+({7+({O9kQ!0LrO7+({O$#yQ`O7+({O9UQ`O7+({O!BeQpO7+({O&<[Q`O,5?iOOQO-E<{-E<{OOQO'#H]'#H]O&<gQ`O1G6gO9kQ!0LrO<<GqOOQ[<<Gq<<GqO@iQ`O<<GqO&<oQ`O7+,UO&<tQ`O7+,VO%[QlO7+,UO%[QlO7+,VOOQ[7+)T7+)TO&<yQ`O7+)TO&=OQlO7+)TO&=VQ`O7+)TOOQ[<<Lw<<LwOOQ[<<Ly<<LyOOQ[-E=O-E=OOOQ[1G3x1G3xO&=[Q`O,5>_OOQ[,5>a,5>aO&=aQ`O1G4OO9ZQ`O7+&dO!(yQlO7+&dOOQO7+%]7+%]O&=fQ?MtO1G6XO>wQ`O7+%]OOQ!0Lf<<I_<<I_OOQ!0Lf<<Ix<<IxO>wQ`O<<IxOOQO<<Iq<<IqO$?{Q!0MxO<<IqO%[QlO<<IqOOQO<<Ib<<IbO!BYQ!0LrO<<IbO&=pQ!0LrO<<IqO&={Q!0MxO<= [O&>]Q`O<= ZOOQO7+*]7+*]O9ZQ`O7+*]OOQ[ANAjANAjO&>eQ!fOANAjO!&iQMhOANAjO#'cQ`OANAjO4UQ!fOANAjO&>lQ`OANAjO%[QlOANAjO&>tQ!0MzO7+'yO&AVQ!0MzO,5?_O&CbQ!0MzO,5?aO&EmQ!0MzO7+'{O&HOQ!fO1G4jO&HYQ?MtO7+&_O&J^Q?MvO,5=WO&LeQ?MvO,5=YO&LuQ?MvO,5=WO&MVQ?MvO,5=YO&MgQ?MvO,59sO' mQ?MvO,5<jO'#pQ?MvO,5<lO'&UQ?MvO,5<zO''zQ?MtO7+'jO'(XQ?MtO7+'lO'(fQ`O,5<[OOQO7+'_7+'_OOQ!0Lh7+*b7+*bO'(kQMjO<<K|OOQO1G4u1G4uO'(rQ`O1G4uO'(}Q`O1G4uO')]Q`O7++zO')]Q`O7++zO!&iQMhO1G4wO')eQ!dO1G4wO')oQ`O7++{O')wQ`O7+(UO'*SQ!dO7+(UOOQ!0Lb7+(S7+(SOOQ!0Lb7+(T7+(TO!BeQpO7+(SOCfQ`O7+(SO'*^Q`O7+(UO!&iQMhO7+(UO$)iQ`O7+(TO'*cQ`O7+(UOCfQ`O7+(TO'*kQMjO<<NuOOQ!0Lh7+${7+${O!+rQMhO<<NuO'*uQ!dO,5?dOOQO-E<v-E<vO'+PQ!0MvO7+(XO!&iQMhO7+(XOOQ[AN=gAN=gO9aQ`O1G5UOOQO1G5U1G5UO'+aQ`O1G5UO'+fQ`O7+,TO'+fQ`O7+,TO9kQ!0LrOANBVO@iQ`OANBVOOQ[ANBVANBVOOQ[ANArANArOOQ[ANAsANAsO'+nQ`O,5?fOOQO-E<x-E<xO'+yQ?MtO1G6fOOQO,5?h,5?hOOQO-E<z-E<zOOQ[1G3`1G3`O',TQ`O,5=OOOQ[<<Le<<LeO!&iQMhO<<LeO&;rQ`O<<LeO',YQ`O<<LeO%[QlO<<LeOOQ[<<Lg<<LgO9kQ!0LrO<<LgO$#yQ`O<<LgO9UQ`O<<LgO',bQpO1G5TO',mQ`O7+,ROOQ[AN=]AN=]O9kQ!0LrOAN=]OOQ[<= p<= pOOQ[<= q<= qO',uQ`O<= pO',zQ`O<= qOOQ[<<Lo<<LoO'-PQ`O<<LoO'-UQlO<<LoOOQ[1G3y1G3yO>wQ`O7+)jO'-]Q`O<<JOO'-hQ?MtO<<JOOOQO<<Hw<<HwOOQ!0LfAN?dAN?dOOQOAN?]AN?]O$?{Q!0MxOAN?]OOQOAN>|AN>|O%[QlOAN?]OOQO<<Mw<<MwOOQ[G27UG27UO!&iQMhOG27UO#'cQ`OG27UO'-rQ!fOG27UO4UQ!fOG27UO'-yQ`OG27UO'.RQ?MtO<<JeO'.`Q?MvO1G2_O'0UQ?MvO,5?_O'2XQ?MvO,5?aO'4[Q?MvO1G2rO'6_Q?MvO1G2tO'8bQ?MtO<<KWO'8oQ?MtO<<IyOOQO1G1v1G1vO!+rQMhOANAhOOQO7+*a7+*aO'8|Q`O7+*aO'9XQ`O<= fO'9aQ!dO7+*cOOQ!0Lb<<Kp<<KpO$)iQ`O<<KpOCfQ`O<<KpO'9kQ`O<<KpO!&iQMhO<<KpOOQ!0Lb<<Kn<<KnO!BeQpO<<KnO'9vQ!dO<<KpOOQ!0Lb<<Ko<<KoO':QQ`O<<KpO!&iQMhO<<KpO$)iQ`O<<KoO':VQMjOANDaO':aQ!0MvO<<KsOOQO7+*p7+*pO9aQ`O7+*pO':qQ`O<= oOOQ[G27qG27qO9kQ!0LrOG27qO!(yQlO1G5QO':yQ`O7+,QO';RQ`O1G2jO&;rQ`OANBPOOQ[ANBPANBPO!&iQMhOANBPO';WQ`OANBPOOQ[ANBRANBRO9kQ!0LrOANBRO$#yQ`OANBROOQO'#H^'#H^OOQO7+*o7+*oOOQ[G22wG22wOOQ[ANE[ANE[OOQ[ANE]ANE]OOQ[ANBZANBZO';`Q`OANBZOOQ[<<MU<<MUO!(yQlOAN?jOOQOG24wG24wO$?{Q!0MxOG24wO#'cQ`OLD,pOOQ[LD,pLD,pO!&iQMhOLD,pO';eQ!fOLD,pO';lQ?MvO7+'yO'=bQ?MvO,5?_O'?eQ?MvO,5?aO'AhQ?MvO7+'{O'C^QMjOG27SOOQO<<M{<<M{OOQ!0LbANA[ANA[O$)iQ`OANA[OCfQ`OANA[O'CnQ!dOANA[OOQ!0LbANAYANAYO'CuQ`OANA[O!&iQMhOANA[O'DQQ!dOANA[OOQ!0LbANAZANAZOOQO<<N[<<N[OOQ[LD-]LD-]O'D[Q?MtO7+*lOOQO'#Ge'#GeOOQ[G27kG27kO&;rQ`OG27kO!&iQMhOG27kOOQ[G27mG27mO9kQ!0LrOG27mOOQ[G27uG27uO'DfQ?MtOG25UOOQOLD*cLD*cOOQ[!$(![!$(![O#'cQ`O!$(![O!&iQMhO!$(![O'DpQ!0MzOG27SOOQ!0LbG26vG26vO$)iQ`OG26vO'GRQ`OG26vOCfQ`OG26vO'G^Q!dOG26vO!&iQMhOG26vOOQ[LD-VLD-VO&;rQ`OLD-VOOQ[LD-XLD-XOOQ[!)9Ev!)9EvO#'cQ`O!)9EvOOQ!0LbLD,bLD,bO$)iQ`OLD,bOCfQ`OLD,bO'GeQ`OLD,bO'GpQ!dOLD,bOOQ[!$(!q!$(!qOOQ[!.K;b!.K;bO'GwQ?MvOG27SOOQ!0Lb!$( |!$( |O$)iQ`O!$( |OCfQ`O!$( |O'ImQ`O!$( |OOQ!0Lb!)9Eh!)9EhO$)iQ`O!)9EhOCfQ`O!)9EhOOQ!0Lb!.K;S!.K;SO$)iQ`O!.K;SOOQ!0Lb!4/0n!4/0nO!(yQlO'#DxO1PQ`O'#EVO'IxQ!fO'#JpO'JPQ!L^O'#DtO'JWQlO'#D|O'J_Q!fO'#CiO'LuQ!fO'#CiO!(yQlO'#EOO'MVQlO,5;XO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO'#InO( YQ`O,5<hO!(yQlO,5;cO( bQMhO,5;cO(!{QMhO,5;cO!(yQlO,5;vO!&iQMhO'#GlO( bQMhO'#GlO!&iQMhO'#GnO( bQMhO'#GnO1SQ`O'#DXO1SQ`O'#DXO!&iQMhO'#GOO( bQMhO'#GOO!&iQMhO'#GQO( bQMhO'#GQO!&iQMhO'#G`O( bQMhO'#G`O!(yQlO,5:hO(#SQpO'#D]O(#^QpO'#JtO!(yQlO,5@mO'MVQlO1G0sO(#hQ?MtO'#CiO!(yQlO1G2OO!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO(#rQ!dO'#CrO!&iQMhO,5<sO( bQMhO,5<sO'MVQlO1G2QO!(yQlO7+&yO!&iQMhO1G2_O( bQMhO1G2_O!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO!&iQMhO1G2aO( bQMhO1G2aO'MVQlO7+'lO'MVQlO7+&_O!&iQMhOANAhO( bQMhOANAhO($VQ`O'#EmO($[Q`O'#EmO($dQ`O'#F[O($iQ`O'#EwO($nQ`O'#KRO($yQ`O'#KPO(%UQ`O,5;XO(%ZQMjO,5<dO(%bQ`O'#GXO(%gQ`O'#GXO(%lQ`O,5<fO(%tQ`O,5;XO(%|Q?MtO1G1_O(&TQ`O,5<sO(&YQ`O,5<sO(&_Q`O,5<uO(&dQ`O,5<uO(&iQ`O1G2QO(&nQ`O1G0sO(&sQMjO<<K|O(&zQMjO<<K|O7eQMhO'#F{O9UQ`O'#FzOAdQ`O'#ElO!(yQlO,5;sO!3^Q`O'#GXO!3^Q`O'#GXO!3^Q`O'#GZO!3^Q`O'#GZO!+rQMhO7+(bO!+rQMhO7+(bO%-ZQ!dO1G2vO%-ZQ!dO1G2vO!&iQMhO,5=[O!&iQMhO,5=[",
  stateData: "((P~O'zOS'{OSTOS'|RQ~OPYOQYOSfOY!VOaqOdzOeyOj!POnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!swO!vxO!z]O$V|O$miO%g}O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO&U!WO&[!XO&^!YO&`!ZO&b![O&e!]O&k!^O&q!_O&s!`O&u!aO&w!bO&y!cO(RSO(TTO(WUO(_VO(m[O~OWtO~P`OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa!wOq!nO!Q!oO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!xO#U!pO#V!pO#Y!zO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O'|!{O~OP]XR]X[]Xa]Xp]X!O]X!Q]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X'x]X(_]X(p]X(w]X(x]X~O!e%QX~P(qO_!}O(T#PO(U!}O(V#PO~O_#QO(V#PO(W#PO(X#QO~Ov#SO!S#TO(`#TO(a#VO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R;{O(TTO(WUO(_VO(m[O~O!Y#ZO!Z#WO!W(fP!W(tP~P+}O![#cO~P`OPYOQYOSfOd!jOe!iOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(TTO(WUO(_VO(m[O~On#mO!Y#iO!z]O#g#lO#h#iO(R;|O!i(qP~P.iO!j#oO(R#nO~O!v#sO!z]O%g#tO~O#i#uO~O!e#vO#i#uO~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z$_O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa(dX'x(dX'u(dX!i(dX!W(dX!](dX%h(dX!e(dX~P1qO#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX!](eX%h(eX~Oa(eX'x(eX'u(eX!W(eX!i(eXt(eX!e(eX~P4UO#^$eO~O$[$hO$^$gO$e$mO~OSfO!]$nO$h$oO$j$qO~Oh%VOj%cOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R$sO(TTO(WUO(_$uO(w$}O(x%POg([P~O!j%dO~O!Q%gO!]%hO(R%fO~O!e%lO~Oa%mO'x%mO~O!O%qO~P%[O(S!lO~P%[O%m%uO~P%[Oh%VO!j%dO(R%fO(S!lO~Oe%|O!j%dO(R%fO~O#t$RO~O!O&RO!]&OO!j&QO%i&UO(R%fO(S!lO(TTO(WUO`)UP~O!v#sO~O%r&WO!Q)QX!])QX(R)QX~O(R&XO~Oj!PO!s&^O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO~Od&cOe&bO!v&`O%g&aO%z&_O~P<POd&fOeyOj!PO!]&eO!s&^O!vxO!z]O%g}O%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO~Ob&iO#^&lO%i&gO(S!lO~P=UO!j&mO!s&qO~O!j#oO~O!]XO~Oa%mO'v&yO'x%mO~Oa%mO'v&|O'x%mO~Oa%mO'v'OO'x%mO~O'u]X!W]Xt]X!i]X&Y]X!]]X%h]X!e]X~P(qO!`']O!a'UO!b'UO(S!lO(TTO(WUO~Oq'SO!Q'RO!Y'VO(c'QO![(gP![(vP~P@]Ol'`O!]'^O(R%fO~Oe'eO!j%dO(R%fO~O!O&RO!j&QO~Oq!nO!Q!oO!z;wO#R!pO#S!pO#U!pO#V!pO(S!lO(TTO(WUO(c!mO(m!sO~O!`'kO!a'jO!b'jO#T!pO#Y'lO#Z'lO~PAwOa%mOh%VO!e#vO!j%dO'x%mO(p'nO~O!n'rO#^'pO~PCVOq!nO!Q!oO(TTO(WUO(c!mO(m!sO~O!]XOq(kX!Q(kX!`(kX!a(kX!b(kX!z(kX#R(kX#S(kX#T(kX#U(kX#V(kX#Y(kX#Z(kX(S(kX(T(kX(W(kX(c(kX(m(kX~O!a'jO!b'jO(S!lO~PCuO'}'vO(O'vO(P'xO~O_!}O(T'zO(U!}O(V'zO~O_#QO(V'zO(W'zO(X#QO~Ot'|O~P%[Ov#SO!S#TO(`#TO(a(PO~O!Y(RO!W'UX!W'[X!Z'UX!Z'[X~P+}O!Z(TO!W(fX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z(TO!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~O!W(fX~PGpO!W(YO~O!W(sX!Z(sX!e(sX!i(sX(p(sX~O#^(sX#i#bX![(sX~PIsO#^(ZO!W(uX!Z(uX~O!Z([O!W(tX~O!W(_O~O#^$eO~PIsO![(`O~P`OR#zO!O#yO!Q#{O!j#xO(_VOP!la[!lap!la!Z!la!n!la#P!la#l!la#m!la#n!la#o!la#p!la#q!la#r!la#s!la#t!la#u!la#w!la#y!la#z!la(p!la(w!la(x!la~Oa!la'x!la'u!la!W!la!i!lat!la!]!la%h!la!e!la~PKZO!i(aO~O!e#vO#^(bO(p'nO!Z(rXa(rX'x(rX~O!i(rX~PMvO!Q%gO!]%hO!z]O#g(gO#h(fO(R%fO~O!Z(hO!i(qX~O!i(jO~O!Q%gO!]%hO#h(fO(R%fO~OP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O!e#vO!i(eX~P! dOR(lO!O(kO!j#xO#Q$dO!z!ya!Q!ya~O!v!ya%g!ya!]!ya#g!ya#h!ya(R!ya~P!#eO!v(pO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~O#i(vO~O!Y(xO!i(iP~P%[O(c(zO(m[O~O!Q(|O!j#xO(c(zO(m[O~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z$_Oa$pa'x$pa'u$pa!i$pa!W$pa!]$pa%h$pa!e$pa~Oj)bO~P!&iOh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Og(nP~P!+rO!O)gO!e)fO!]$]X$Y$]X$[$]X$^$]X$e$]X~O!e)fO!](yX$Y(yX$[(yX$^(yX$e(yX~O!O)gO~P!-{O!O)gO!](yX$Y(yX$[(yX$^(yX$e(yX~O!])iO$Y)mO$[)hO$^)hO$e)nO~O!Y)qO~P!(yO$[$hO$^$gO$e)uO~Ol$yX!O$yX#Q$yX'w$yX(w$yX(x$yX~OgkXg$yXlkX!ZkX#^kX~P!/qOv)wO(`)xO(a)zO~Ol*TO!O)|O'w)}O(w$}O(x%PO~Og){O~P!0uOg*UO~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q*WO!]*XO!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~O!Y*[O(R*VO!i(|P~P!1dO#i*^O~O!j*_O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R*aO(TTO(WUO(_$uO(w$}O(x%PO~O!Y*dO!W(}P~P!3cOp*pOq!nO!Q*fO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO(c!mO~O![*mO~P!5WO#Q$dOl(^X!O(^X'w(^X(w(^X(x(^X!Z(^X#^(^X~Og(^X#}(^X~P!6YOl*uO#^*tOg(]X!Z(]X~O!Z*vOg([X~Oj%cO(R&XOg([P~Oq*yO~O!j+OO~O(R(tO~On+TO!Q%gO!Y#iO!]%hO!z]O#g#lO#h#iO(R%fO!i(qP~O!e#vO#i+UO~O!Q%gO!Y+WO!Z([O!]%hO(R%fO!W(tP~Oq'YO!Q+YO!Y+XO(TTO(WUO(c(zO~O![(vP~P!9]O!Z+ZOa)RX'x)RX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa!ha!Z!ha'x!ha'u!ha!W!ha!i!hat!ha!]!ha%h!ha!e!ha~P!:TOR#zO!O#yO!Q#{O!j#xO(_VOP!pa[!pap!pa!Z!pa!n!pa#P!pa#l!pa#m!pa#n!pa#o!pa#p!pa#q!pa#r!pa#s!pa#t!pa#u!pa#w!pa#y!pa#z!pa(p!pa(w!pa(x!pa~Oa!pa'x!pa'u!pa!W!pa!i!pat!pa!]!pa%h!pa!e!pa~P!<kOR#zO!O#yO!Q#{O!j#xO(_VOP!ra[!rap!ra!Z!ra!n!ra#P!ra#l!ra#m!ra#n!ra#o!ra#p!ra#q!ra#r!ra#s!ra#t!ra#u!ra#w!ra#y!ra#z!ra(p!ra(w!ra(x!ra~Oa!ra'x!ra'u!ra!W!ra!i!rat!ra!]!ra%h!ra!e!ra~P!?ROh%VOl+dO!]'^O%h+cO~O!e+fOa(ZX!](ZX'x(ZX!Z(ZX~Oa%mO!]XO'x%mO~Oh%VO!j%dO~Oh%VO!j%dO(R%fO~O!e#vO#i(vO~Ob+qO%i+rO(R+nO(TTO(WUO![)VP~O!Z+sO`)UX~O[+wO~O`+xO~O!]&OO(R%fO(S!lO`)UP~Oh%VO#^+}O~Oh%VOl,QO!]$|O~O!],SO~O!O,UO!]XO~O%m%uO~O!v,ZO~Oe,`O~Ob,aO(R#nO(TTO(WUO![)TP~Oe%|O~O%i!QO(R&XO~P=UO[,fO`,eO~OPYOQYOSfOdzOeyOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!guO!jZO!mYO!nYO!oYO!qvO!vxO!z]O$miO%g}O(TTO(WUO(_VO(m[O~O!]!eO!s!gO$V!kO(R!dO~P!FRO`,eOa%mO'x%mO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa,kOj!OO!swO%k!OO%l!OO%m!OO~P!HkO!j&mO~O&[,qO~O!],sO~O&m,uO&o,vOP&jaQ&jaS&jaY&jaa&jad&jae&jaj&jan&jap&jaq&jar&jax&jaz&ja|&ja!Q&ja!U&ja!V&ja!]&ja!g&ja!j&ja!m&ja!n&ja!o&ja!q&ja!s&ja!v&ja!z&ja$V&ja$m&ja%g&ja%i&ja%k&ja%l&ja%m&ja%p&ja%r&ja%u&ja%v&ja%x&ja&U&ja&[&ja&^&ja&`&ja&b&ja&e&ja&k&ja&q&ja&s&ja&u&ja&w&ja&y&ja'u&ja(R&ja(T&ja(W&ja(_&ja(m&ja![&ja&c&jab&ja&h&ja~O(R,{O~Oh!cX!Z!PX![!PX!e!PX!e!cX!j!cX#^!PX~O!Z!cX![!cX~P# qO!e-QO#^-POh(hX!Z#fX![#fX!e(hX!j(hX~O!Z(hX![(hX~P#!dOh%VO!e-SO!j%dO!Z!_X![!_X~Oq!nO!Q!oO(TTO(WUO(c!mO~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(TTO(WUO(_VO(m[O~O(R<rO~P##yO!Z-WO![(gX~O![-YO~O!e-QO#^-PO!Z#fX![#fX~O!Z-ZO![(vX~O![-]O~O!a-^O!b-^O(S!lO~P##hO![-aO~P'_Ol-dO!]'^O~O!W-iO~Oq!ya!`!ya!a!ya!b!ya#R!ya#S!ya#T!ya#U!ya#V!ya#Y!ya#Z!ya(S!ya(T!ya(W!ya(c!ya(m!ya~P!#eO!n-nO#^-lO~PCVO!a-pO!b-pO(S!lO~PCuOa%mO#^-lO'x%mO~Oa%mO!e#vO#^-lO'x%mO~Oa%mO!e#vO!n-nO#^-lO'x%mO(p'nO~O'}'vO(O'vO(P-uO~Ot-vO~O!W'Ua!Z'Ua~P!:TO!Y-zO!W'UX!Z'UX~P%[O!Z(TO!W(fa~O!W(fa~PGpO!Z([O!W(ta~O!Q%gO!Y.OO!]%hO(R%fO!W'[X!Z'[X~O#^.QO!Z(ra!i(raa(ra'x(ra~O!e#vO~P#,PO!Z(hO!i(qa~O!Q%gO!]%hO#h.UO(R%fO~On.ZO!Q%gO!Y.WO!]%hO!z]O#g.YO#h.WO(R%fO!Z'_X!i'_X~OR._O!j#xO~Oh%VOl.bO!]'^O%h.aO~Oa#ai!Z#ai'x#ai'u#ai!W#ai!i#ait#ai!]#ai%h#ai!e#ai~P!:TOl=|O!O)|O'w)}O(w$}O(x%PO~O#i#]aa#]a#^#]a'x#]a!Z#]a!i#]a!]#]a!W#]a~P#.{O#i(^XP(^XR(^X[(^Xa(^Xp(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X'x(^X(_(^X(p(^X!i(^X!W(^X'u(^Xt(^X!](^X%h(^X!e(^X~P!6YO!Z.oO!i(iX~P!:TO!i.rO~O!W.tO~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kia#kip#ki!Z#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#l#ki~P#2kO#l$OO~P#2kOP$[OR#zOp$aO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO[#kia#ki!Z#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#p#ki~P#5YO#p$QO~P#5YOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO(_VOa#ki!Z#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#u#ki~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO(_VO(x#}Oa#ki!Z#ki#y#ki#z#ki'x#ki(p#ki(w#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#w$UO~P#:_O#w#ki~P#:_O#u$SO~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO(_VO(w#|O(x#}Oa#ki!Z#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#y#ki~P#=TO#y$WO~P#=TOP]XR]X[]Xp]X!O]X!Q]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X!Z]X![]X~O#}]X~P#?rOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO#y<XO#z<YO(_VO(p$YO(w#|O(x#}O~O#}.vO~P#BPO#Q$dO#^<`O$P<`O#}(eX![(eX~P! dOa'ba!Z'ba'x'ba'u'ba!i'ba!W'bat'ba!]'ba%h'ba!e'ba~P!:TO[#kia#kip#ki!Z#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO(w#ki(x#ki~P#EROl=|O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P#ERO!Z.zOg(nX~P!0uOg.|O~Oa$Oi!Z$Oi'x$Oi'u$Oi!W$Oi!i$Oit$Oi!]$Oi%h$Oi!e$Oi~P!:TO$[.}O$^.}O~O$[/OO$^/OO~O!e)fO#^/PO!]$bX$Y$bX$[$bX$^$bX$e$bX~O!Y/QO~O!])iO$Y/SO$[)hO$^)hO$e/TO~O!Z<ZO![(dX~P#BPO![/UO~O!e)fO$e(yX~O$e/WO~Ot/XO~P!&iOv)wO(`)xO(a/[O~O!Q/_O~O(w$}Ol%`a!O%`a'w%`a(x%`a!Z%`a#^%`a~Og%`a#}%`a~P#LTO(x%POl%ba!O%ba'w%ba(w%ba!Z%ba#^%ba~Og%ba#}%ba~P#LvO!ZfX!efX!ifX!i$yX(pfX~P!/qO!Y/hO!Z([O(R/gO!W(tP!W(}P~P!1dOp*pO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO~Oq<oO!Q/iO!Y+XO![*mO(c<nO![(vP~P#NaO!i/jO~P#.{O!Z/kO!e#vO(p'nO!i(|X~O!i/pO~O!Q%gO!Y*[O!]%hO(R%fO!i(|P~O#i/rO~O!W$yX!Z$yX!e%QX~P!/qO!Z/sO!W(}X~P#.{O!e/uO~O!W/wO~OnkO(R/xO~P.iOh%VOp/}O!e#vO!j%dO(p'nO~O!e+fO~Oa%mO!Z0RO'x%mO~O![0TO~P!5WO!a0UO!b0UO(S!lO~P##hOq!nO!Q0VO(TTO(WUO(c!mO~O#Y0XO~Og%`a!Z%`a#^%`a#}%`a~P!0uOg%ba!Z%ba#^%ba#}%ba~P!0uOj%cO(R&XOg'kX!Z'kX~O!Z*vOg([a~Og0bO~OR0cO!O0cO!Q0dO#Q$dOl{a'w{a(w{a(x{a!Z{a#^{a~Og{a#}{a~P$&dO!O)|O'w)}Ol$ra(w$ra(x$ra!Z$ra#^$ra~Og$ra#}$ra~P$'`O!O)|O'w)}Ol$ta(w$ta(x$ta!Z$ta#^$ta~Og$ta#}$ta~P$(RO#i0gO~Og%Sa!Z%Sa#^%Sa#}%Sa~P!0uOl0iO#^0hOg(]a!Z(]a~O!e#vO~O#i0lO~O!Z+ZOa)Ra'x)Ra~OR#zO!O#yO!Q#{O!j#xO(_VOP!pi[!pip!pi!Z!pi!n!pi#P!pi#l!pi#m!pi#n!pi#o!pi#p!pi#q!pi#r!pi#s!pi#t!pi#u!pi#w!pi#y!pi#z!pi(p!pi(w!pi(x!pi~Oa!pi'x!pi'u!pi!W!pi!i!pit!pi!]!pi%h!pi!e!pi~P$*OOh%VOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~On0vO%[0wO(R0tO~P$,fO!e+fOa(Za!](Za'x(Za!Z(Za~O#i0|O~O[]X!ZfX![fX~O!Z0}O![)VX~O![1PO~O[1QO~Ob1SO(R+nO(TTO(WUO~O!]&OO(R%fO`'sX!Z'sX~O!Z+sO`)Ua~O!i1VO~P!:TO[1YO~O`1ZO~O#^1^O~Ol1aO!]$|O~O(c(zO![)SP~Oh%VOl1jO!]1gO%h1iO~O[1tO!Z1rO![)TX~O![1uO~O`1wOa%mO'x%mO~O(R#nO(TTO(WUO~O#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O#t1zO&Y1{Oa(eX~P$2PO#^$eO#t1zO&Y1{O~Oa1}O~P%[Oa2PO~O&c2SOP&aiQ&aiS&aiY&aia&aid&aie&aij&ain&aip&aiq&air&aix&aiz&ai|&ai!Q&ai!U&ai!V&ai!]&ai!g&ai!j&ai!m&ai!n&ai!o&ai!q&ai!s&ai!v&ai!z&ai$V&ai$m&ai%g&ai%i&ai%k&ai%l&ai%m&ai%p&ai%r&ai%u&ai%v&ai%x&ai&U&ai&[&ai&^&ai&`&ai&b&ai&e&ai&k&ai&q&ai&s&ai&u&ai&w&ai&y&ai'u&ai(R&ai(T&ai(W&ai(_&ai(m&ai![&aib&ai&h&ai~Ob2YO![2WO&h2XO~P`O!]XO!j2[O~O&o,vOP&jiQ&jiS&jiY&jia&jid&jie&jij&jin&jip&jiq&jir&jix&jiz&ji|&ji!Q&ji!U&ji!V&ji!]&ji!g&ji!j&ji!m&ji!n&ji!o&ji!q&ji!s&ji!v&ji!z&ji$V&ji$m&ji%g&ji%i&ji%k&ji%l&ji%m&ji%p&ji%r&ji%u&ji%v&ji%x&ji&U&ji&[&ji&^&ji&`&ji&b&ji&e&ji&k&ji&q&ji&s&ji&u&ji&w&ji&y&ji'u&ji(R&ji(T&ji(W&ji(_&ji(m&ji![&ji&c&jib&ji&h&ji~O!W2bO~O!Z!_a![!_a~P#BPOq!nO!Q!oO!Y2hO(c!mO!Z'VX!['VX~P@]O!Z-WO![(ga~O!Z']X![']X~P!9]O!Z-ZO![(va~O![2oO~P'_Oa%mO#^2xO'x%mO~Oa%mO!e#vO#^2xO'x%mO~Oa%mO!e#vO!n2|O#^2xO'x%mO(p'nO~Oa%mO'x%mO~P!:TO!Z$_Ot$pa~O!W'Ui!Z'Ui~P!:TO!Z(TO!W(fi~O!Z([O!W(ti~O!W(ui!Z(ui~P!:TO!Z(ri!i(ria(ri'x(ri~P!:TO#^3OO!Z(ri!i(ria(ri'x(ri~O!Z(hO!i(qi~O!Q%gO!]%hO!z]O#g3TO#h3SO(R%fO~O!Q%gO!]%hO#h3SO(R%fO~Ol3[O!]'^O%h3ZO~Oh%VOl3[O!]'^O%h3ZO~O#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`at%`a!]%`a%h%`a!e%`a~P#LTO#i%baP%baR%ba[%baa%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%bat%ba!]%ba%h%ba!e%ba~P#LvO#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!Z%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`a#^%`at%`a!]%`a%h%`a!e%`a~P#.{O#i%baP%baR%ba[%baa%bap%ba!Q%ba!Z%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%ba#^%bat%ba!]%ba%h%ba!e%ba~P#.{O#i{aP{a[{aa{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a'x{a(_{a(p{a!i{a!W{a'u{at{a!]{a%h{a!e{a~P$&dO#i$raP$raR$ra[$raa$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra'x$ra(_$ra(p$ra!i$ra!W$ra'u$rat$ra!]$ra%h$ra!e$ra~P$'`O#i$taP$taR$ta[$taa$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta'x$ta(_$ta(p$ta!i$ta!W$ta'u$tat$ta!]$ta%h$ta!e$ta~P$(RO#i%SaP%SaR%Sa[%Saa%Sap%Sa!Q%Sa!Z%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa'x%Sa(_%Sa(p%Sa!i%Sa!W%Sa'u%Sa#^%Sat%Sa!]%Sa%h%Sa!e%Sa~P#.{Oa#aq!Z#aq'x#aq'u#aq!W#aq!i#aqt#aq!]#aq%h#aq!e#aq~P!:TO!Y3dO!Z'WX!i'WX~P%[O!Z.oO!i(ia~O!Z.oO!i(ia~P!:TO!W3gO~O#}!la![!la~PKZO#}!ha!Z!ha![!ha~P#BPO#}!pa![!pa~P!<kO#}!ra![!ra~P!?ROg'ZX!Z'ZX~P!+rO!Z.zOg(na~OSfO!]3{O$c3|O~O![4QO~Ot4RO~P#.{Oa$lq!Z$lq'x$lq'u$lq!W$lq!i$lqt$lq!]$lq%h$lq!e$lq~P!:TO!W4TO~P!&iO!Q4UO~O!O)|O'w)}O(x%POl'ga(w'ga!Z'ga#^'ga~Og'ga#}'ga~P%+uO!O)|O'w)}Ol'ia(w'ia(x'ia!Z'ia#^'ia~Og'ia#}'ia~P%,hO(p$YO~P#.{O!WfX!W$yX!ZfX!Z$yX!e%QX#^fX~P!/qO(R<xO~P!1dO!Q%gO!Y4XO!]%hO(R%fO!Z'cX!i'cX~O!Z/kO!i(|a~O!Z/kO!e#vO!i(|a~O!Z/kO!e#vO(p'nO!i(|a~Og${i!Z${i#^${i#}${i~P!0uO!Y4aO!W'eX!Z'eX~P!3cO!Z/sO!W(}a~O!Z/sO!W(}a~P#.{OP]XR]X[]Xp]X!O]X!Q]X!W]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!e%XX#t%XX~P%0XO!e#vO#t4fO~Oh%VO!e#vO!j%dO~Oh%VOp4kO!j%dO(p'nO~Op4pO!e#vO(p'nO~Oq!nO!Q4qO(TTO(WUO(c!mO~O(w$}Ol%`i!O%`i'w%`i(x%`i!Z%`i#^%`i~Og%`i#}%`i~P%3xO(x%POl%bi!O%bi'w%bi(w%bi!Z%bi#^%bi~Og%bi#}%bi~P%4kOg(]i!Z(]i~P!0uO#^4wOg(]i!Z(]i~P!0uO!i4zO~Oa$nq!Z$nq'x$nq'u$nq!W$nq!i$nqt$nq!]$nq%h$nq!e$nq~P!:TO!W5QO~O!Z5RO!])OX~P#.{Oa]Xa$yX!]]X!]$yX%]]X'x]X'x$yX!Z]X!Z$yX~P!/qO%]5UOa%Za!]%Za'x%Za!Z%Za~OlmX!OmX'wmX(wmX(xmX~P%7nOn5VO(R#nO~Ob5]O%i5^O(R+nO(TTO(WUO!Z'rX!['rX~O!Z0}O![)Va~O[5bO~O`5cO~Oa%mO'x%mO~P#.{O!Z5kO#^5mO![)SX~O![5nO~Op5tOq!nO!Q*fO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!pO#U!pO#V!pO#Y5sO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O![5rO~P%:ROl5yO!]1gO%h5xO~Oh%VOl5yO!]1gO%h5xO~Ob6QO(R#nO(TTO(WUO!Z'qX!['qX~O!Z1rO![)Ta~O(TTO(WUO(c6SO~O`6WO~O#t6ZO&Y6[O~PMvO!i6]O~P%[Oa6_O~Oa6_O~P%[Ob2YO![6dO&h2XO~P`O!e6fO~O!e6hOh(hi!Z(hi![(hi!e(hi!j(hip(hi(p(hi~O!Z#fi![#fi~P#BPO#^6iO!Z#fi![#fi~O!Z!_i![!_i~P#BPOa%mO#^6rO'x%mO~Oa%mO!e#vO#^6rO'x%mO~O!Z(rq!i(rqa(rq'x(rq~P!:TO!Z(hO!i(qq~O!Q%gO!]%hO#h6yO(R%fO~O!]'^O%h6|O~Ol7QO!]'^O%h6|O~O#i'gaP'gaR'ga['gaa'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga'x'ga(_'ga(p'ga!i'ga!W'ga'u'gat'ga!]'ga%h'ga!e'ga~P%+uO#i'iaP'iaR'ia['iaa'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia'x'ia(_'ia(p'ia!i'ia!W'ia'u'iat'ia!]'ia%h'ia!e'ia~P%,hO#i${iP${iR${i[${ia${ip${i!Q${i!Z${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i'x${i(_${i(p${i!i${i!W${i'u${i#^${it${i!]${i%h${i!e${i~P#.{O#i%`iP%`iR%`i[%`ia%`ip%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i'x%`i(_%`i(p%`i!i%`i!W%`i'u%`it%`i!]%`i%h%`i!e%`i~P%3xO#i%biP%biR%bi[%bia%bip%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi'x%bi(_%bi(p%bi!i%bi!W%bi'u%bit%bi!]%bi%h%bi!e%bi~P%4kO!Z'Wa!i'Wa~P!:TO!Z.oO!i(ii~O#}#ai!Z#ai![#ai~P#BPOP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kip#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#l#ki~P%MQO#l<PO~P%MQOP$[OR#zOp<]O!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO[#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#p#ki~P& YO#p<RO~P& YOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO(_VO#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#u#ki~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO(_VO(x#}O#y#ki#z#ki#}#ki(p#ki(w#ki!Z#ki![#ki~O#w<VO~P&%cO#w#ki~P&%cO#u<TO~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO(_VO(w#|O(x#}O#z#ki#}#ki(p#ki!Z#ki![#ki~O#y#ki~P&'rO#y<XO~P&'rOa#{y!Z#{y'x#{y'u#{y!W#{y!i#{yt#{y!]#{y%h#{y!e#{y~P!:TO[#kip#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki!Z#ki![#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO(w#ki(x#ki~P&*nOl=}O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P&*nO#Q$dOP(^XR(^X[(^Xl(^Xp(^X!O(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X#}(^X'w(^X(_(^X(p(^X(w(^X(x(^X!Z(^X![(^X~O#}$Oi!Z$Oi![$Oi~P#BPO#}!pi![!pi~P$*OOg'Za!Z'Za~P!0uO![7dO~O!Z'ba!['ba~P#BPO!W7eO~P#.{O!e#vO(p'nO!Z'ca!i'ca~O!Z/kO!i(|i~O!Z/kO!e#vO!i(|i~Og${q!Z${q#^${q#}${q~P!0uO!W'ea!Z'ea~P#.{O!e7lO~O!Z/sO!W(}i~P#.{O!Z/sO!W(}i~O!W7oO~Oh%VOp7tO!j%dO(p'nO~O!e#vO#t7vO~Op7yO!e#vO(p'nO~O!O)|O'w)}O(x%POl'ha(w'ha!Z'ha#^'ha~Og'ha#}'ha~P&3oO!O)|O'w)}Ol'ja(w'ja(x'ja!Z'ja#^'ja~Og'ja#}'ja~P&4bO!W7{O~Og$}q!Z$}q#^$}q#}$}q~P!0uOg(]q!Z(]q~P!0uO#^7|Og(]q!Z(]q~P!0uOa$ny!Z$ny'x$ny'u$ny!W$ny!i$nyt$ny!]$ny%h$ny!e$ny~P!:TO!e6hO~O!Z5RO!])Oa~O!]'^OP$SaR$Sa[$Sap$Sa!O$Sa!Q$Sa!Z$Sa!j$Sa!n$Sa#P$Sa#l$Sa#m$Sa#n$Sa#o$Sa#p$Sa#q$Sa#r$Sa#s$Sa#t$Sa#u$Sa#w$Sa#y$Sa#z$Sa(_$Sa(p$Sa(w$Sa(x$Sa~O%h6|O~P&7SO%]8QOa%Zi!]%Zi'x%Zi!Z%Zi~Oa#ay!Z#ay'x#ay'u#ay!W#ay!i#ayt#ay!]#ay%h#ay!e#ay~P!:TO[8SO~Ob8UO(R+nO(TTO(WUO~O!Z0}O![)Vi~O`8YO~O(c(zO!Z'nX!['nX~O!Z5kO![)Sa~O![8cO~P%:RO(m!sO~P$$oO#Y8dO~O!]1gO~O!]1gO%h8fO~Ol8iO!]1gO%h8fO~O[8nO!Z'qa!['qa~O!Z1rO![)Ti~O!i8rO~O!i8sO~O!i8vO~O!i8vO~P%[Oa8xO~O!e8yO~O!i8zO~O!Z(ui![(ui~P#BPOa%mO#^9SO'x%mO~O!Z(ry!i(rya(ry'x(ry~P!:TO!Z(hO!i(qy~O%h9VO~P&7SO!]'^O%h9VO~O#i${qP${qR${q[${qa${qp${q!Q${q!Z${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q'x${q(_${q(p${q!i${q!W${q'u${q#^${qt${q!]${q%h${q!e${q~P#.{O#i'haP'haR'ha['haa'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha'x'ha(_'ha(p'ha!i'ha!W'ha'u'hat'ha!]'ha%h'ha!e'ha~P&3oO#i'jaP'jaR'ja['jaa'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja'x'ja(_'ja(p'ja!i'ja!W'ja'u'jat'ja!]'ja%h'ja!e'ja~P&4bO#i$}qP$}qR$}q[$}qa$}qp$}q!Q$}q!Z$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q'x$}q(_$}q(p$}q!i$}q!W$}q'u$}q#^$}qt$}q!]$}q%h$}q!e$}q~P#.{O!Z'Wi!i'Wi~P!:TO#}#aq!Z#aq![#aq~P#BPO(w$}OP%`aR%`a[%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a#}%`a(_%`a(p%`a!Z%`a![%`a~Ol%`a!O%`a'w%`a(x%`a~P&HgO(x%POP%baR%ba[%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba#}%ba(_%ba(p%ba!Z%ba![%ba~Ol%ba!O%ba'w%ba(w%ba~P&JnOl=}O!O)|O'w)}O(x%PO~P&HgOl=}O!O)|O'w)}O(w$}O~P&JnOR0cO!O0cO!Q0dO#Q$dOP{a[{al{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a#}{a'w{a(_{a(p{a(w{a(x{a!Z{a![{a~O!O)|O'w)}OP$raR$ra[$ral$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra#}$ra(_$ra(p$ra(w$ra(x$ra!Z$ra![$ra~O!O)|O'w)}OP$taR$ta[$tal$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta#}$ta(_$ta(p$ta(w$ta(x$ta!Z$ta![$ta~Ol=}O!O)|O'w)}O(w$}O(x%PO~OP%SaR%Sa[%Sap%Sa!Q%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa#}%Sa(_%Sa(p%Sa!Z%Sa![%Sa~P'%sO#}$lq!Z$lq![$lq~P#BPO#}$nq!Z$nq![$nq~P#BPO![9dO~O#}9eO~P!0uO!e#vO!Z'ci!i'ci~O!e#vO(p'nO!Z'ci!i'ci~O!Z/kO!i(|q~O!W'ei!Z'ei~P#.{O!Z/sO!W(}q~Op9lO!e#vO(p'nO~O[9nO!W9mO~P#.{O!W9mO~O!e#vO#t9tO~Og(]y!Z(]y~P!0uO!Z'la!]'la~P#.{Oa%Zq!]%Zq'x%Zq!Z%Zq~P#.{O[9yO~O!Z0}O![)Vq~O#^9}O!Z'na!['na~O!Z5kO![)Si~P#BPO!Q:PO~O!]1gO%h:SO~O(TTO(WUO(c:XO~O!Z1rO![)Tq~O!i:[O~O!i:]O~O!i:^O~O!i:^O~P%[O#^:aO!Z#fy![#fy~O!Z#fy![#fy~P#BPO%h:fO~P&7SO!]'^O%h:fO~O#}#{y!Z#{y![#{y~P#BPOP${iR${i[${ip${i!Q${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i#}${i(_${i(p${i!Z${i![${i~P'%sO!O)|O'w)}O(x%POP'gaR'ga['gal'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga#}'ga(_'ga(p'ga(w'ga!Z'ga!['ga~O!O)|O'w)}OP'iaR'ia['ial'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia#}'ia(_'ia(p'ia(w'ia(x'ia!Z'ia!['ia~O(w$}OP%`iR%`i[%`il%`ip%`i!O%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i#}%`i'w%`i(_%`i(p%`i(x%`i!Z%`i![%`i~O(x%POP%biR%bi[%bil%bip%bi!O%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi#}%bi'w%bi(_%bi(p%bi(w%bi!Z%bi![%bi~O#}$ny!Z$ny![$ny~P#BPO#}#ay!Z#ay![#ay~P#BPO!e#vO!Z'cq!i'cq~O!Z/kO!i(|y~O!W'eq!Z'eq~P#.{Op:pO!e#vO(p'nO~O[:tO!W:sO~P#.{O!W:sO~Og(]!R!Z(]!R~P!0uOa%Zy!]%Zy'x%Zy!Z%Zy~P#.{O!Z0}O![)Vy~O!Z5kO![)Sq~O(R:zO~O!]1gO%h:}O~O!i;QO~O%h;VO~P&7SOP${qR${q[${qp${q!Q${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q#}${q(_${q(p${q!Z${q![${q~P'%sO!O)|O'w)}O(x%POP'haR'ha['hal'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha#}'ha(_'ha(p'ha(w'ha!Z'ha!['ha~O!O)|O'w)}OP'jaR'ja['jal'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja#}'ja(_'ja(p'ja(w'ja(x'ja!Z'ja!['ja~OP$}qR$}q[$}qp$}q!Q$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q#}$}q(_$}q(p$}q!Z$}q![$}q~P'%sOg%d!Z!Z%d!Z#^%d!Z#}%d!Z~P!0uO!W;ZO~P#.{Op;[O!e#vO(p'nO~O[;^O!W;ZO~P#.{O!Z'nq!['nq~P#BPO!Z#f!Z![#f!Z~P#BPO#i%d!ZP%d!ZR%d!Z[%d!Za%d!Zp%d!Z!Q%d!Z!Z%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z'x%d!Z(_%d!Z(p%d!Z!i%d!Z!W%d!Z'u%d!Z#^%d!Zt%d!Z!]%d!Z%h%d!Z!e%d!Z~P#.{Op;fO!e#vO(p'nO~O!W;gO~P#.{Op;nO!e#vO(p'nO~O!W;oO~P#.{OP%d!ZR%d!Z[%d!Zp%d!Z!Q%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z#}%d!Z(_%d!Z(p%d!Z!Z%d!Z![%d!Z~P'%sOp;rO!e#vO(p'nO~Ot(dX~P1qO!O%qO~P!(yO(S!lO~P!(yO!WfX!ZfX#^fX~P%0XOP]XR]X[]Xp]X!O]X!Q]X!Z]X!ZfX!j]X!n]X#P]X#Q]X#^]X#^fX#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!efX!i]X!ifX(pfX~P'JlOP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]XO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z<ZO![$pa~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<fO!Q${O!]$|O!g=wO!j$xO#h<lO$V%_O$s<hO$u<jO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Oj)bO~P( bOp!cX(p!cX~P# qOp(hX(p(hX~P#!dO![]X![fX~P'JlO!WfX!W$yX!ZfX!Z$yX#^fX~P!/qO#i<OO~O!e#vO#i<OO~O#^<`O~O#t<SO~O#^<pO!Z(uX![(uX~O#^<`O!Z(sX![(sX~O#i<qO~Og<sO~P!0uO#i<yO~O#i<zO~O!e#vO#i<{O~O!e#vO#i<qO~O#}<|O~P#BPO#i<}O~O#i=OO~O#i=TO~O#i=UO~O#i=VO~O#i=WO~O#}=XO~P!0uO#}=YO~P!0uO#Q#R#S#U#V#Y#g#h#s$m$s$u$x%[%]%g%h%i%p%r%u%v%x%z~'|T#m!V'z(S#nq#l#op!O'{$['{(R$^(c~",
  goto: "$8f)ZPPPPPP)[PP)_P)pP+Q/VPPPP6aPP6wPP<oP@cP@yP@yPPP@yPCRP@yP@yP@yPCVPC[PCyPHsPPPHwPPPPHwKzPPPLQLrPHwPHwPP! QHwPPPHwPHwP!#XHwP!&o!'t!'}P!(q!(u!(q!,SPPPPPPP!,s!'tPP!-T!.uP!2RHwHw!2W!5d!:Q!:Q!>PPPP!>XHwPPPPPPPPPP!AhP!BuPPHw!DWPHwPHwHwHwHwHwPHw!EjP!HtP!KzP!LO!LY!L^!L^P!HqP!Lb!LbP# hP# lHwPHw# r#$wCV@yP@yP@y@yP#&U@y@y#(h@y#+`@y#-l@y@y#.[#0p#0p#0u#1O#0p#1ZPP#0pP@y#1s@y#5r@y@y6aPPP#9wPPP#:b#:bP#:bP#:x#:bPP#;OP#:uP#:u#;c#:u#;}#<T#<W)_#<Z)_P#<b#<b#<bP)_P)_P)_P)_PP)_P#<h#<kP#<k)_P#<oP#<rP)_P)_P)_P)_P)_P)_)_PP#<x#=O#=Z#=a#=g#=m#=s#>R#>X#>c#>i#>s#>y#?Z#?a#@R#@e#@k#@q#AP#Af#CZ#Ci#Cp#E[#Ej#G[#Gj#Gp#Gv#G|#HW#H^#Hd#Hn#IQ#IWPPPPPPPPPPP#I^PPPPPPP#JR#MY#Nr#Ny$ RPPP$&mP$&v$)o$0Y$0]$0`$1_$1b$1i$1qP$1w$1zP$2h$2l$3d$4r$4w$5_PP$5d$5j$5n$5q$5u$5y$6u$7^$7u$7y$7|$8P$8V$8Y$8^$8bR!|RoqOXst!Z#d%l&p&r&s&u,n,s2S2VY!vQ'^-`1g5qQ%svQ%{yQ&S|Q&h!VS'U!e-WQ'd!iS'j!r!yU*h$|*X*lQ+l%|Q+y&UQ,_&bQ-^']Q-h'eQ-p'kQ0U*nQ1q,`R<m;z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9SS#q];w!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU*{%[<e<fQ+q&OQ,a&eQ,h&mQ0r+dQ0u+fQ1S+rQ1y,fQ3W.bQ5V0wQ5]0}Q6Q1rQ7O3[Q8U5^R9Y7Q'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s!S!nQ!r!v!y!z$|'U']'^'j'k'l*h*l*n*o-W-^-`-p0U0X1g5q5s%[$ti#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q&V|Q'S!eS'Y%h-ZQ+q&OQ,a&eQ0f+OQ1S+rQ1X+xQ1x,eQ1y,fQ5]0}Q5f1ZQ6Q1rQ6T1tQ6U1wQ8U5^Q8X5cQ8q6WQ9|8YQ:Y8nR<o*XrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR,c&i&z^OPXYstuvwz!Z!`!g!j!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=r=s[#]WZ#W#Z'V(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ%vxQ%zyS&P|&UQ&]!TQ'a!hQ'c!iQ(o#sS+k%{%|Q+o&OQ,Y&`Q,^&bS-g'd'eQ.d(pQ0{+lQ1R+rQ1T+sQ1W+wQ1l,ZS1p,_,`Q2t-hQ5[0}Q5`1QQ5e1YQ6P1qQ8T5^Q8W5bQ9x8SR:w9y!U$zi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y!^%xy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pQ+e%vQ,O&YQ,R&ZQ,]&bQ.c(oQ1k,YU1o,^,_,`Q3].dQ5z1lS6O1p1qQ8m6P#f=t#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o=u<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YW%Ti%V*v=pS&Y!Q&gQ&Z!RQ&[!SQ+S%cR+|&W%]%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}T)x$u)yV*{%[<e<fW'Y!e%h*X-ZS({#y#zQ+`%qQ+v&RS.](k(lQ1b,SQ4x0cR8^5k'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s$i$^c#Y#e%p%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.w.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gT#TV#U'RkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ'W!eR2i-W!W!nQ!e!r!v!y!z$|'U']'^'j'k'l*X*h*l*n*o-W-^-`-p0U0X1g5q5sR1d,UnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&w!^Q't!xS(q#u<OQ+i%yQ,W&]Q,X&_Q-e'bQ-r'mS.m(v<qS0k+U<{Q0y+jQ1f,VQ2Z,uQ2],vQ2e-RQ2r-fQ2u-jS5P0l=VQ5W0zS5Z0|=WQ6j2gQ6n2sQ6s2zQ8R5XQ8}6lQ9O6oQ9R6tR:`8z$d$]c#Y#e%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gS(m#p'gQ(}#zS+_%p.wS.^(l(nR3U._'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS#q];wQ&r!XQ&s!YQ&u![Q&v!]R2R,qQ'_!hQ+b%vQ-c'aS.`(o+eQ2p-bW3Y.c.d0q0sQ6m2qW6z3V3X3]5TU9U6{6}7PU:e9W9X9ZS;T:d:gQ;b;UR;j;cU!wQ'^-`T5o1g5q!Q_OXZ`st!V!Z#d#h%d%l&g&i&p&r&s&u(h,n,s.V2S2V]!pQ!r'^-`1g5qT#q];w%^{OPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS({#y#zS.](k(l!s=^$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU$fd)],hS(n#p'gU*s%R(u3vU0e*z.i7]Q5T0rQ6{3WQ9X7OR:g9Ym!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sQ'r!uS(d#g1|S-n'i'uQ/n*ZQ/{*gQ2|-qQ4]/oQ4i/}Q4j0OQ4o0WQ7h4WS7s4k4mS7w4p4rQ9g7iQ9k7oQ9p7tQ9u7yS:o9l9mS;Y:p:sS;e;Z;[S;m;f;gS;q;n;oR;t;rQ#wbQ'q!uS(c#g1|S(e#m+TQ+V%eQ+g%wQ+m%}U-m'i'r'uQ.R(dQ/m*ZQ/|*gQ0P*iQ0x+hQ1m,[S2y-n-qQ3R.ZS4[/n/oQ4e/yS4h/{0WQ4l0QQ5|1nQ6u2|Q7g4WQ7k4]U7r4i4o4rQ7u4nQ8k5}S9f7h7iQ9j7oQ9r7wQ9s7xQ:V8lQ:m9gS:n9k9mQ:v9uQ;P:WS;X:o:sS;d;Y;ZS;l;e;gS;p;m;oQ;s;qQ;u;tQ=a=[Q=l=eR=m=fV!wQ'^-`%^aOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS#wz!j!r=Z$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=a=r%^bOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SQ%ej!^%wy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pS%}z!jQ+h%xQ,[&bW1n,],^,_,`U5}1o1p1qS8l6O6PQ:W8m!r=[$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ=e=qR=f=r%QeOPXYstuvw!Z!`!g!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SY#bWZ#W#Z(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ,i&m!p=]$Z$n)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=`'VU'Z!e%h*XR2k-Z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9S!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ,h&mQ0r+dQ3W.bQ7O3[R9Y7Q!b$Tc#Y%p(Q(W(r(w)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!P<U)[)o-U.w2c2f3h3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!f$Vc#Y%p(Q(W(r(w)U)V)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!T<W)[)o-U.w2c2f3h3n3o3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!^$Zc#Y%p(Q(W(r(w)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;xQ4V/fz=s)[)o-U.w2c2f3h3w4P6k7W7a7b8`8|9[9b9c:y;R=gQ=x=zR=y={'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS$oh$pR3|/P'XgOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$kf$qQ$ifS)h$l)lR)t$qT$jf$qT)j$l)l'XhOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$oh$pQ$rhR)s$p%^jOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9S!s=q$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s#glOPXZst!Z!`!o#S#d#o#{$n%l&i&l&m&p&r&s&u&y'R'`(|)q*f+Y+d,k,n,s-d.b/Q/i0V0d1j1z1{1}2P2S2V2X3[3{4q5y6Z6[6_7Q8i8x!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}Q+P%`Q/^)|o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!U$yi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yQ*`$zU*i$|*X*lQ+Q%aQ0Q*j#f=c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n=d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YQ=h=tQ=i=uQ=j=vR=k=w!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YnoOXst!Z#d%l&p&r&s&u,n,s2S2VS*c${*WQ,|&|Q,}'OR4`/s%[%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q,P&ZQ1`,RQ5i1_R8]5jV*k$|*X*lU*k$|*X*lT5p1g5qS/y*f/iQ4n0VT7x4q:PQ+g%wQ0P*iQ0x+hQ1m,[Q5|1nQ8k5}Q:V8lR;P:W!U%Oi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yx*P$v)c*Q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=oS0Y*q0Z#f<a#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<b<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!d<t(s)a*Y*b.e.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={`<u3u7X7[7`9]:h:k;kS=P.g3aT=Q7Z9`!U%Qi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y|*R$v)c*S*q+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=oS0[*r0]#f<c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!h<v(s)a*Y*b.f.g.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={d<w3u7Y7Z7`9]9^:h:i:k;kS=R.h3bT=S7[9arnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ&d!UR,k&mrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR&d!UQ,T&[R1[+|snOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ1h,YS5w1k1lU8e5u5v5zS:R8g8hS:{:Q:TQ;_:|R;i;`Q&k!VR,d&gR6T1tR:Y8nS&P|&UR1T+sQ&p!WR,n&qR,t&vT2T,s2VR,x&wQ,w&wR2^,xQ'w!{R-t'wSsOtQ#dXT%os#dQ#OTR'y#OQ#RUR'{#RQ)y$uR/Z)yQ#UVR(O#UQ#XWU(U#X(V-{Q(V#YR-{(WQ-X'WR2j-XQ.p(wS3e.p3fR3f.qQ-`'^R2n-`Y!rQ'^-`1g5qR'h!rQ.{)cR3z.{U#_W%g*WU(]#_(^-|Q(^#`R-|(XQ-['ZR2l-[t`OXst!V!Z#d%l&g&i&p&r&s&u,n,s2S2VS#hZ%dU#r`#h.VR.V(hQ(i#jQ.S(eW.[(i.S3P6wQ3P.TR6w3QQ)l$lR/R)lQ$phR)r$pQ$`cU)_$`-w<[Q-w;xR<[)oQ/l*ZW4Y/l4Z7j9hU4Z/m/n/oS7j4[4]R9h7k$e*O$v(s)a)c*Y*b*q*r*|*}+R.g.h.j.k.l/Y/b/d/f/q/v0^0_0p1]3^3_3`3u3y4S4^4_4c4s4u4{4|4}5h7R7S7T7U7Z7[7^7_7`7f7m7p7z7}8P9]9^9_9i9q9v9w:h:i:j:k:l:q:u;W;];h;k=b=n=o=z={Q/t*bU4b/t4d7nQ4d/vR7n4cS*l$|*XR0S*lx*Q$v)c*q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=o!d.e(s)a*Y*b.g.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/c*Q.e7Xa7X3u7Z7[7`9]:h:k;kQ0Z*qQ3a.gU4t0Z3a9`R9`7Z|*S$v)c*q*r+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=o!h.f(s)a*Y*b.g.h.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/e*S.f7Ye7Y3u7Z7[7`9]9^:h:i:k;kQ0]*rQ3b.hU4v0]3b9aR9a7[Q*w%UR0a*wQ5S0pR8O5SQ+[%jR0o+[Q5l1bS8_5l:OR:O8`Q,V&]R1e,VQ5q1gR8b5qQ1s,aS6R1s8oR8o6TQ1O+oW5_1O5a8V9zQ5a1RQ8V5`R9z8WQ+t&PR1U+tQ2V,sR6c2VYrOXst#dQ&t!ZQ+^%lQ,m&pQ,o&rQ,p&sQ,r&uQ2Q,nS2T,s2VR6b2SQ%npQ&x!_Q&{!aQ&}!bQ'P!cQ'o!uQ+]%kQ+i%yQ+{&VQ,c&kQ,z&zW-k'i'q'r'uQ-r'mQ0R*kQ0y+jS1v,d,gQ2_,yQ2`,|Q2a,}Q2u-jW2w-m-n-q-sQ5W0zQ5d1XQ5g1]Q5{1mQ6V1xQ6a2RU6p2v2y2|Q6s2zQ8R5XQ8Z5fQ8[5hQ8a5pQ8j5|Q8p6US9P6q6uQ9R6tQ9{8XQ:U8kQ:Z8qQ:b9QQ:x9|Q;O:VQ;S:cR;a;PQ%yyQ'b!iQ'm!uU+j%z%{%|Q-R'TU-f'c'd'eS-j'i'sQ/z*gS0z+k+lQ2g-TS2s-g-hQ2z-oS4g/{0OQ5X0{Q6l2mQ6o2tQ6t2{U7q4i4j4mQ9o7sR:r9pS$wi=pR*x%VU%Ui%V=pR0`*vQ$viS(s#v+fS)a$b$cQ)c$dQ*Y$xS*b${*WQ*q%OQ*r%QQ*|%]Q*}%^Q+R%bQ.g<aQ.h<cQ.j<gQ.k<iQ.l<kQ/Y)wQ/b*PQ/d*RQ/f*TQ/q*^S/v*d/hQ0^*tQ0_*ul0p+c,Q.a1a1i3Z5x6|8f9V:S:f:};VQ1]+}Q3^<tQ3_<vQ3`<yS3u<^<_Q3y.zS4S/_4UQ4^/rQ4_/sQ4c/uQ4s0YQ4u0[Q4{0gQ4|0hQ4}0iQ5h1^Q7R<}Q7S=PQ7T=RQ7U=TQ7Z<bQ7[<dQ7^<hQ7_<jQ7`<lQ7f4VQ7m4aQ7p4fQ7z4wQ7}5RQ8P5UQ9]<zQ9^<uQ9_<wQ9i7lQ9q7vQ9v7|Q9w8QQ:h=OQ:i=QQ:j=SQ:k=UQ:l9eQ:q9nQ:u9tQ;W=XQ;]:tQ;h;^Q;k=YQ=b=pQ=n=xQ=o=yQ=z=|R={=}Q*z%[Q.i<eR7]<fnpOXst!Z#d%l&p&r&s&u,n,s2S2VQ!fPS#fZ#oQ&z!`W'f!o*f0V4qQ'}#SQ)O#{Q)p$nS,g&i&lQ,l&mQ,y&yS-O'R/iQ-b'`Q.s(|Q/V)qQ0m+YQ0s+dQ2O,kQ2q-dQ3X.bQ4O/QQ4y0dQ5v1jQ6X1zQ6Y1{Q6^1}Q6`2PQ6e2XQ7P3[Q7c3{Q8h5yQ8t6ZQ8u6[Q8w6_Q9Z7QQ:T8iR:_8x#[cOPXZst!Z!`!o#d#o#{%l&i&l&m&p&r&s&u&y'R'`(|*f+Y+d,k,n,s-d.b/i0V0d1j1z1{1}2P2S2V2X3[4q5y6Z6[6_7Q8i8xQ#YWQ#eYQ%puQ%rvS%tw!gS(Q#W(TQ(W#ZQ(r#uQ(w#xQ)P$OQ)Q$PQ)R$QQ)S$RQ)T$SQ)U$TQ)V$UQ)W$VQ)X$WQ)Y$XQ)[$ZQ)^$_Q)`$aQ)e$eW)o$n)q/Q3{Q+a%sQ+u&QS-U'V2hQ-s'pS-x(R-zQ-}(ZQ.P(bQ.n(vQ.q(xQ.u;vQ.w;yQ.x;zQ.y;}Q/]){Q0j+UQ2c-PQ2f-SQ2v-lQ2}.QQ3c.oQ3h<OQ3i<PQ3j<QQ3k<RQ3l<SQ3m<TQ3n<UQ3o<VQ3p<WQ3q<XQ3r<YQ3s.vQ3t<]Q3w<`Q3x<mQ4P<ZQ5O0lQ5Y0|Q6k<pQ6q2xQ6v3OQ7V3dQ7W<qQ7a<sQ7b<{Q8`5mQ8|6iQ9Q6rQ9[<|Q9b=VQ9c=WQ:c9SQ:y9}Q;R:aQ;x#SR=g=sR#[WR'X!el!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sS'T!e-WU*g$|*X*lS-T'U']S0O*h*nQ0W*oQ2m-^Q4m0UR4r0XR(y#xQ!fQT-_'^-`]!qQ!r'^-`1g5qQ#p]R'g;wR)d$dY!uQ'^-`1g5qQ'i!rS's!v!yS'u!z5sS-o'j'kQ-q'lR2{-pT#kZ%dS#jZ%dS%jm,jU(e#h#i#lS.T(f(gQ.X(hQ0n+ZQ3Q.UU3R.V.W.YS6x3S3TR9T6yd#^W#W#Z%g(R([*W+W.O/hr#gZm#h#i#l%d(f(g(h+Z.U.V.W.Y3S3T6yS*Z$x*_Q/o*[Q1|,jQ2d-QQ4W/kQ6g2[Q7i4XQ8{6hT=_'V+XV#aW%g*WU#`W%g*WS(S#W([U(X#Z+W/hS-V'V+XT-y(R.OV'[!e%h*XQ$lfR)v$qT)k$l)lR3}/PT*]$x*_T*e${*WQ0q+cQ1_,QQ3V.aQ5j1aQ5u1iQ6}3ZQ8g5xQ9W6|Q:Q8fQ:d9VQ:|:SQ;U:fQ;`:}R;c;VnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&j!VR,c&gtmOXst!U!V!Z#d%l&g&p&r&s&u,n,s2S2VR,j&mT%km,jR1c,SR,b&eQ&T|R+z&UR+p&OT&n!W&qT&o!W&qT2U,s2V",
  nodeNames: "⚠ ArithOp ArithOp ?. JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList const TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewTarget new NewExpression ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression TypeArgList CompareOp < declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression InstantiationExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast < ArrowFunction TypeParamList SequenceExpression InstantiationExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate asserts is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
  maxTerm: 378,
  context: qj,
  nodeProps: [
    ["isolate", -8, 5, 6, 14, 35, 37, 49, 51, 53, ""],
    ["group", -26, 9, 17, 19, 66, 206, 210, 214, 215, 217, 220, 223, 233, 235, 241, 243, 245, 247, 250, 256, 262, 264, 266, 268, 270, 272, 273, "Statement", -34, 13, 14, 30, 33, 34, 40, 49, 52, 53, 55, 60, 68, 70, 74, 78, 80, 82, 83, 108, 109, 118, 119, 135, 138, 140, 141, 142, 143, 144, 146, 147, 166, 168, 170, "Expression", -23, 29, 31, 35, 39, 41, 43, 172, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 200, 202, 204, 205, "Type", -3, 86, 101, 107, "ClassItem"],
    ["openedBy", 23, "<", 36, "InterpolationStart", 54, "[", 58, "{", 71, "(", 159, "JSXStartCloseTag"],
    ["closedBy", -2, 24, 167, ">", 38, "InterpolationEnd", 48, "]", 59, "}", 72, ")", 164, "JSXEndTag"]
  ],
  propSources: [Jj],
  skippedNodes: [0, 5, 6, 276],
  repeatNodeCount: 37,
  tokenData: "$Fq07[R!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#:O!R![#<_![!]#I_!]!^#Jk!^!_#Ku!_!`$![!`!a$$v!a!b$*T!b!c$,r!c!}Er!}#O$-|#O#P$/W#P#Q$4o#Q#R$5y#R#SEr#S#T$7W#T#o$8b#o#p$<r#p#q$=h#q#r$>x#r#s$@U#s$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$I|Er$I|$I}$Dk$I}$JO$Dk$JO$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr(n%d_$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z07[+rq$h&j(Up(X!b'z0/lOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z07[.ST(V#S$h&j'{0/lO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c07[.n_$h&j(Up(X!b'{0/lOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)3p/x`$h&j!n),Q(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW1V`#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW2d_#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At3l_(T':f$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$h&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$c`$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$c``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$c`$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(X!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$c`(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k%9[:hh$h&j(Up(X!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__WS$h&j(Up(X!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]WS$h&j(X!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXWS$h&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSWSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWWS(X!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]WS$h&j(UpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWWS(UpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYWS(Up(X!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S%9[C}i$h&j(m%1l(Up(X!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr%9[EoP;=`<%lCr07[FRk$h&j(Up(X!b$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$h&j(Up(X!b$[#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv07[JPP;=`<%lEr(KWJ_`$h&j(Up(X!b#n(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWKl_$h&j$P(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,#xLva(x+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWNW`$h&j#y(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At! c_(W';W$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$h&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$c`$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(UpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$c`(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b/5|!'t_!j/.^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&U!)O_!i!Lf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z-!n!*[b$h&j(Up(X!b(S%&f#o(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW!+o`$h&j(Up(X!b#l(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;x!,|`$h&j(Up(X!bp+4YOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,$U!.Z_!Z+Jf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!/ec$h&j(Up(X!b!O.2^OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!0ya$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!2Z_!Y!L^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!3eg$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!5Vg$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!6wc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!8_c$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!9uf$h&j(Up(X!b#m(ChOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcxz!;Zz{#-}{!P!;Z!P!Q#/d!Q!^!;Z!^!_#(i!_!`#7S!`!a#8i!a!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z?O!;fb$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z>^!<w`$h&j(X!b!V7`OY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eq!Q!^!<n!^!_!Gr!_!}!<n!}#O!KS#O#P!Dy#P#o!<n#o#p!Gr#p;'S!<n;'S;=`!L]<%lO!<n<z!>Q^$h&j!V7`OY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@c!_!}!=y!}#O!CW#O#P!Dy#P#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!?Td$h&j!V7`O!^&c!_#W&c#W#X!>|#X#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#k!>|#k#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&c7`!@hX!V7`OY!@cZ!P!@c!P!Q!AT!Q!}!@c!}#O!Ar#O#P!Bq#P;'S!@c;'S;=`!CQ<%lO!@c7`!AYW!V7`#W#X!AT#Z#[!AT#]#^!AT#a#b!AT#g#h!AT#i#j!AT#j#k!AT#m#n!AT7`!AuVOY!ArZ#O!Ar#O#P!B[#P#Q!@c#Q;'S!Ar;'S;=`!Bk<%lO!Ar7`!B_SOY!ArZ;'S!Ar;'S;=`!Bk<%lO!Ar7`!BnP;=`<%l!Ar7`!BtSOY!@cZ;'S!@c;'S;=`!CQ<%lO!@c7`!CTP;=`<%l!@c<z!C][$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#O!CW#O#P!DR#P#Q!=y#Q#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DWX$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DvP;=`<%l!CW<z!EOX$h&jOY!=yYZ&cZ!^!=y!^!_!@c!_#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!EnP;=`<%l!=y>^!Ezl$h&j(X!b!V7`OY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#W&}#W#X!Eq#X#Z&}#Z#[!Eq#[#]&}#]#^!Eq#^#a&}#a#b!Eq#b#g&}#g#h!Eq#h#i&}#i#j!Eq#j#k!Eq#k#m&}#m#n!Eq#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}8r!GyZ(X!b!V7`OY!GrZw!Grwx!@cx!P!Gr!P!Q!Hl!Q!}!Gr!}#O!JU#O#P!Bq#P;'S!Gr;'S;=`!J|<%lO!Gr8r!Hse(X!b!V7`OY'}Zw'}x#O'}#P#W'}#W#X!Hl#X#Z'}#Z#[!Hl#[#]'}#]#^!Hl#^#a'}#a#b!Hl#b#g'}#g#h!Hl#h#i'}#i#j!Hl#j#k!Hl#k#m'}#m#n!Hl#n;'S'};'S;=`(f<%lO'}8r!JZX(X!bOY!JUZw!JUwx!Arx#O!JU#O#P!B[#P#Q!Gr#Q;'S!JU;'S;=`!Jv<%lO!JU8r!JyP;=`<%l!JU8r!KPP;=`<%l!Gr>^!KZ^$h&j(X!bOY!KSYZ&cZw!KSwx!CWx!^!KS!^!_!JU!_#O!KS#O#P!DR#P#Q!<n#Q#o!KS#o#p!JU#p;'S!KS;'S;=`!LV<%lO!KS>^!LYP;=`<%l!KS>^!L`P;=`<%l!<n=l!Ll`$h&j(Up!V7`OY!LcYZ&cZr!Lcrs!=ys!P!Lc!P!Q!Mn!Q!^!Lc!^!_# o!_!}!Lc!}#O#%P#O#P!Dy#P#o!Lc#o#p# o#p;'S!Lc;'S;=`#&Y<%lO!Lc=l!Mwl$h&j(Up!V7`OY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#W(r#W#X!Mn#X#Z(r#Z#[!Mn#[#](r#]#^!Mn#^#a(r#a#b!Mn#b#g(r#g#h!Mn#h#i(r#i#j!Mn#j#k!Mn#k#m(r#m#n!Mn#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r8Q# vZ(Up!V7`OY# oZr# ors!@cs!P# o!P!Q#!i!Q!}# o!}#O#$R#O#P!Bq#P;'S# o;'S;=`#$y<%lO# o8Q#!pe(Up!V7`OY)rZr)rs#O)r#P#W)r#W#X#!i#X#Z)r#Z#[#!i#[#])r#]#^#!i#^#a)r#a#b#!i#b#g)r#g#h#!i#h#i)r#i#j#!i#j#k#!i#k#m)r#m#n#!i#n;'S)r;'S;=`*Z<%lO)r8Q#$WX(UpOY#$RZr#$Rrs!Ars#O#$R#O#P!B[#P#Q# o#Q;'S#$R;'S;=`#$s<%lO#$R8Q#$vP;=`<%l#$R8Q#$|P;=`<%l# o=l#%W^$h&j(UpOY#%PYZ&cZr#%Prs!CWs!^#%P!^!_#$R!_#O#%P#O#P!DR#P#Q!Lc#Q#o#%P#o#p#$R#p;'S#%P;'S;=`#&S<%lO#%P=l#&VP;=`<%l#%P=l#&]P;=`<%l!Lc?O#&kn$h&j(Up(X!b!V7`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#W%Z#W#X#&`#X#Z%Z#Z#[#&`#[#]%Z#]#^#&`#^#a%Z#a#b#&`#b#g%Z#g#h#&`#h#i%Z#i#j#&`#j#k#&`#k#m%Z#m#n#&`#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z9d#(r](Up(X!b!V7`OY#(iZr#(irs!Grsw#(iwx# ox!P#(i!P!Q#)k!Q!}#(i!}#O#+`#O#P!Bq#P;'S#(i;'S;=`#,`<%lO#(i9d#)th(Up(X!b!V7`OY*gZr*grs'}sw*gwx)rx#O*g#P#W*g#W#X#)k#X#Z*g#Z#[#)k#[#]*g#]#^#)k#^#a*g#a#b#)k#b#g*g#g#h#)k#h#i*g#i#j#)k#j#k#)k#k#m*g#m#n#)k#n;'S*g;'S;=`+Z<%lO*g9d#+gZ(Up(X!bOY#+`Zr#+`rs!JUsw#+`wx#$Rx#O#+`#O#P!B[#P#Q#(i#Q;'S#+`;'S;=`#,Y<%lO#+`9d#,]P;=`<%l#+`9d#,cP;=`<%l#(i?O#,o`$h&j(Up(X!bOY#,fYZ&cZr#,frs!KSsw#,fwx#%Px!^#,f!^!_#+`!_#O#,f#O#P!DR#P#Q!;Z#Q#o#,f#o#p#+`#p;'S#,f;'S;=`#-q<%lO#,f?O#-tP;=`<%l#,f?O#-zP;=`<%l!;Z07[#.[b$h&j(Up(X!b'|0/l!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z07[#/o_$h&j(Up(X!bT0/lOY#/dYZ&cZr#/drs#0nsw#/dwx#4Ox!^#/d!^!_#5}!_#O#/d#O#P#1p#P#o#/d#o#p#5}#p;'S#/d;'S;=`#6|<%lO#/d06j#0w]$h&j(X!bT0/lOY#0nYZ&cZw#0nwx#1px!^#0n!^!_#3R!_#O#0n#O#P#1p#P#o#0n#o#p#3R#p;'S#0n;'S;=`#3x<%lO#0n05W#1wX$h&jT0/lOY#1pYZ&cZ!^#1p!^!_#2d!_#o#1p#o#p#2d#p;'S#1p;'S;=`#2{<%lO#1p0/l#2iST0/lOY#2dZ;'S#2d;'S;=`#2u<%lO#2d0/l#2xP;=`<%l#2d05W#3OP;=`<%l#1p01O#3YW(X!bT0/lOY#3RZw#3Rwx#2dx#O#3R#O#P#2d#P;'S#3R;'S;=`#3r<%lO#3R01O#3uP;=`<%l#3R06j#3{P;=`<%l#0n05x#4X]$h&j(UpT0/lOY#4OYZ&cZr#4Ors#1ps!^#4O!^!_#5Q!_#O#4O#O#P#1p#P#o#4O#o#p#5Q#p;'S#4O;'S;=`#5w<%lO#4O00^#5XW(UpT0/lOY#5QZr#5Qrs#2ds#O#5Q#O#P#2d#P;'S#5Q;'S;=`#5q<%lO#5Q00^#5tP;=`<%l#5Q05x#5zP;=`<%l#4O01p#6WY(Up(X!bT0/lOY#5}Zr#5}rs#3Rsw#5}wx#5Qx#O#5}#O#P#2d#P;'S#5};'S;=`#6v<%lO#5}01p#6yP;=`<%l#5}07[#7PP;=`<%l#/d)3h#7ab$h&j$P(Ch(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;ZAt#8vb$Y#t$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z'Ad#:Zp$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#U%Z#U#V#?i#V#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#d#Bq#d#l%Z#l#m#Es#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#<jk$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#>j_$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#?rd$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#A]f$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Bzc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Dbe$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#E|g$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Gpi$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x#Il_!e$b$h&j#})Lv(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Jv_al$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f#LS^h#)`#P-<U(Up(X!b$m7`OY*gZr*grs'}sw*gwx)rx!P*g!P!Q#MO!Q!^*g!^!_#Mt!_!`$ f!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#MXX$j&j(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El#M}Z#p(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Np!`#O*g#P;'S*g;'S;=`+Z<%lO*g(El#NyX$P(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El$ oX#q(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g*)x$!ga#^*!Y$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$#l!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(K[$#w_#i(Cl$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x$%Vag!*r#q(Ch$e#|$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$&[!`!a$'f!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$&g_#q(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$'qa#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$(v!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$)R`#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(Kd$*`a(p(Ct$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!a%Z!a!b$+e!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$+p`$h&j#z(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`$,}_!z$Ip$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f$.X_!Q0,v$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/]Z$h&jO!^$0O!^!_$0f!_#i$0O#i#j$0k#j#l$0O#l#m$2^#m#o$0O#o#p$0f#p;'S$0O;'S;=`$4i<%lO$0O(n$0VT_#S$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0kO_#S(n$0p[$h&jO!Q&c!Q![$1f![!^&c!_!c&c!c!i$1f!i#T&c#T#Z$1f#Z#o&c#o#p$3|#p;'S&c;'S;=`&w<%lO&c(n$1kZ$h&jO!Q&c!Q![$2^![!^&c!_!c&c!c!i$2^!i#T&c#T#Z$2^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2cZ$h&jO!Q&c!Q![$3U![!^&c!_!c&c!c!i$3U!i#T&c#T#Z$3U#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3ZZ$h&jO!Q&c!Q![$0O![!^&c!_!c&c!c!i$0O!i#T&c#T#Z$0O#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$4PR!Q![$4Y!c!i$4Y#T#Z$4Y#S$4]S!Q![$4Y!c!i$4Y#T#Z$4Y#q#r$0f(n$4lP;=`<%l$0O#1[$4z_!W#)l$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$6U`#w(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;p$7c_$h&j(Up(X!b(_+4QOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$8qk$h&j(Up(X!b(R,2j$^#t(c$I[OY%ZYZ&cZr%Zrs&}st%Ztu$8buw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$8b![!^%Z!^!_*g!_!c%Z!c!}$8b!}#O%Z#O#P&c#P#R%Z#R#S$8b#S#T%Z#T#o$8b#o#p*g#p$g%Z$g;'S$8b;'S;=`$<l<%lO$8b+d$:qk$h&j(Up(X!b$^#tOY%ZYZ&cZr%Zrs&}st%Ztu$:fuw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$:f![!^%Z!^!_*g!_!c%Z!c!}$:f!}#O%Z#O#P&c#P#R%Z#R#S$:f#S#T%Z#T#o$:f#o#p*g#p$g%Z$g;'S$:f;'S;=`$<f<%lO$:f+d$<iP;=`<%l$:f07[$<oP;=`<%l$8b#Jf$<{X!]#Hb(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g,#x$=sa(w+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+e#q;'S%Z;'S;=`+a<%lO%Z)>v$?V_![(CdtBr$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z?O$@a_!o7`$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$Aq|$h&j(Up(X!b'z0/l$[#t(R,2j(c$I[OX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr07[$D|k$h&j(Up(X!b'{0/l$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr",
  tokenizers: [zj, Yj, Hj, Kj, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, Gj, new jf("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOv~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!S~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(a~~", 141, 338), new jf("j~RQYZXz{^~^O(O~~aP!P!Qd~iO(P~~", 25, 321)],
  topRules: { Script: [0, 7], SingleExpression: [1, 274], SingleClassItem: [2, 275] },
  dialects: { jsx: 0, ts: 15091 },
  dynamicPrecedences: { 78: 1, 80: 1, 92: 1, 168: 1, 198: 1 },
  specialized: [{ term: 325, get: (t) => e_[t] || -1 }, { term: 341, get: (t) => t_[t] || -1 }, { term: 93, get: (t) => n_[t] || -1 }],
  tokenPrec: 15116
}), d5 = [
  /* @__PURE__ */ Gn("function ${name}(${params}) {\n	${}\n}", {
    label: "function",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
    label: "for",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("for (let ${name} of ${collection}) {\n	${}\n}", {
    label: "for",
    detail: "of loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("do {\n	${}\n} while (${})", {
    label: "do",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("while (${}) {\n	${}\n}", {
    label: "while",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn(`try {
	\${}
} catch (\${error}) {
	\${}
}`, {
    label: "try",
    detail: "/ catch block",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("if (${}) {\n	${}\n}", {
    label: "if",
    detail: "block",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn(`if (\${}) {
	\${}
} else {
	\${}
}`, {
    label: "if",
    detail: "/ else block",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn(`class \${name} {
	constructor(\${params}) {
		\${}
	}
}`, {
    label: "class",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn('import {${names}} from "${module}"\n${}', {
    label: "import",
    detail: "named",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn('import ${name} from "${module}"\n${}', {
    label: "import",
    detail: "default",
    type: "keyword"
  })
], s_ = /* @__PURE__ */ d5.concat([
  /* @__PURE__ */ Gn("interface ${name} {\n	${}\n}", {
    label: "interface",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("type ${name} = ${type}", {
    label: "type",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Gn("enum ${name} {\n	${}\n}", {
    label: "enum",
    detail: "definition",
    type: "keyword"
  })
]), mb = /* @__PURE__ */ new U7(), m5 = /* @__PURE__ */ new Set([
  "Script",
  "Block",
  "FunctionExpression",
  "FunctionDeclaration",
  "ArrowFunction",
  "MethodDeclaration",
  "ForStatement"
]);
function uo(t) {
  return (e, n) => {
    let r = e.node.getChild("VariableDefinition");
    return r && n(r, t), !0;
  };
}
const i_ = ["FunctionDeclaration"], a_ = {
  FunctionDeclaration: /* @__PURE__ */ uo("function"),
  ClassDeclaration: /* @__PURE__ */ uo("class"),
  ClassExpression: () => !0,
  EnumDeclaration: /* @__PURE__ */ uo("constant"),
  TypeAliasDeclaration: /* @__PURE__ */ uo("type"),
  NamespaceDeclaration: /* @__PURE__ */ uo("namespace"),
  VariableDefinition(t, e) {
    t.matchContext(i_) || e(t, "variable");
  },
  TypeDefinition(t, e) {
    e(t, "type");
  },
  __proto__: null
};
function g5(t, e) {
  let n = mb.get(e);
  if (n)
    return n;
  let r = [], s = !0;
  function i(a, o) {
    let l = t.sliceString(a.from, a.to);
    r.push({ label: l, type: o });
  }
  return e.cursor(fn.IncludeAnonymous).iterate((a) => {
    if (s)
      s = !1;
    else if (a.name) {
      let o = a_[a.name];
      if (o && o(a, i) || m5.has(a.name))
        return !1;
    } else if (a.to - a.from > 8192) {
      for (let o of g5(t, a.node))
        r.push(o);
      return !1;
    }
  }), mb.set(e, r), r;
}
const gb = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/, b5 = [
  "TemplateString",
  "String",
  "RegExp",
  "LineComment",
  "BlockComment",
  "VariableDefinition",
  "TypeDefinition",
  "Label",
  "PropertyDefinition",
  "PropertyName",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  ".",
  "?."
];
function o_(t) {
  let e = Cn(t.state).resolveInner(t.pos, -1);
  if (b5.indexOf(e.name) > -1)
    return null;
  let n = e.name == "VariableName" || e.to - e.from < 20 && gb.test(t.state.sliceDoc(e.from, e.to));
  if (!n && !t.explicit)
    return null;
  let r = [];
  for (let s = e; s; s = s.parent)
    m5.has(s.name) && (r = r.concat(g5(t.state.doc, s)));
  return {
    options: r,
    from: n ? e.from : t.pos,
    validFor: gb
  };
}
const ai = /* @__PURE__ */ qc.define({
  name: "javascript",
  parser: /* @__PURE__ */ r_.configure({
    props: [
      /* @__PURE__ */ qS.add({
        IfStatement: /* @__PURE__ */ cp({ except: /^\s*({|else\b)/ }),
        TryStatement: /* @__PURE__ */ cp({ except: /^\s*({|catch\b|finally\b)/ }),
        LabeledStatement: fT,
        SwitchBody: (t) => {
          let e = t.textAfter, n = /^\s*\}/.test(e), r = /^\s*(case|default)\b/.test(e);
          return t.baseIndent + (n ? 0 : r ? 1 : 2) * t.unit;
        },
        Block: /* @__PURE__ */ pT({ closing: "}" }),
        ArrowFunction: (t) => t.baseIndent + t.unit,
        "TemplateString BlockComment": () => null,
        "Statement Property": /* @__PURE__ */ cp({ except: /^{/ }),
        JSXElement(t) {
          let e = /^\s*<\//.test(t.textAfter);
          return t.lineIndent(t.node.from) + (e ? 0 : t.unit);
        },
        JSXEscape(t) {
          let e = /\s*\}/.test(t.textAfter);
          return t.lineIndent(t.node.from) + (e ? 0 : t.unit);
        },
        "JSXOpenTag JSXSelfClosingTag"(t) {
          return t.column(t.node.from) + t.unit;
        }
      }),
      /* @__PURE__ */ YS.add({
        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": mT,
        BlockComment(t) {
          return { from: t.from + 2, to: t.to - 2 };
        }
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
    wordChars: "$"
  }
}), y5 = {
  test: (t) => /^JSX/.test(t.name),
  facet: /* @__PURE__ */ VS({ commentTokens: { block: { open: "{/*", close: "*/}" } } })
}, l_ = /* @__PURE__ */ ai.configure({ dialect: "ts" }, "typescript"), c_ = /* @__PURE__ */ ai.configure({
  dialect: "jsx",
  props: [/* @__PURE__ */ gm.add((t) => t.isTop ? [y5] : void 0)]
}), u_ = /* @__PURE__ */ ai.configure({
  dialect: "jsx ts",
  props: [/* @__PURE__ */ gm.add((t) => t.isTop ? [y5] : void 0)]
}, "typescript");
let O5 = (t) => ({ label: t, type: "keyword" });
const v5 = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(O5), h_ = /* @__PURE__ */ v5.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(O5));
function p_(t = {}) {
  let e = t.jsx ? t.typescript ? u_ : c_ : t.typescript ? l_ : ai, n = t.typescript ? s_.concat(h_) : d5.concat(v5);
  return new sT(e, [
    ai.data.of({
      autocomplete: VT(b5, pA(n))
    }),
    ai.data.of({
      autocomplete: o_
    }),
    t.jsx ? m_ : []
  ]);
}
function f_(t) {
  for (; ; ) {
    if (t.name == "JSXOpenTag" || t.name == "JSXSelfClosingTag" || t.name == "JSXFragmentTag")
      return t;
    if (t.name == "JSXEscape" || !t.parent)
      return null;
    t = t.parent;
  }
}
function bb(t, e, n = t.length) {
  for (let r = e?.firstChild; r; r = r.nextSibling)
    if (r.name == "JSXIdentifier" || r.name == "JSXBuiltin" || r.name == "JSXNamespacedName" || r.name == "JSXMemberExpression")
      return t.sliceString(r.from, Math.min(r.to, n));
  return "";
}
const d_ = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), m_ = /* @__PURE__ */ ye.inputHandler.of((t, e, n, r, s) => {
  if ((d_ ? t.composing : t.compositionStarted) || t.state.readOnly || e != n || r != ">" && r != "/" || !ai.isActiveAt(t.state, e, -1))
    return !1;
  let i = s(), { state: a } = i, o = a.changeByRange((l) => {
    var u;
    let { head: h } = l, f = Cn(a).resolveInner(h - 1, -1), m;
    if (f.name == "JSXStartTag" && (f = f.parent), !(a.doc.sliceString(h - 1, h) != r || f.name == "JSXAttributeValue" && f.to > h)) {
      if (r == ">" && f.name == "JSXFragmentTag")
        return { range: l, changes: { from: h, insert: "</>" } };
      if (r == "/" && f.name == "JSXStartCloseTag") {
        let b = f.parent, v = b.parent;
        if (v && b.from == h - 2 && ((m = bb(a.doc, v.firstChild, h)) || ((u = v.firstChild) === null || u === void 0 ? void 0 : u.name) == "JSXFragmentTag")) {
          let C = `${m}>`;
          return { range: ne.cursor(h + C.length, -1), changes: { from: h, insert: C } };
        }
      } else if (r == ">") {
        let b = f_(f);
        if (b && b.name == "JSXOpenTag" && !/^\/?>|^<\//.test(a.doc.sliceString(h, h + 2)) && (m = bb(a.doc, b, h)))
          return { range: l, changes: { from: h, insert: `</${m}>` } };
      }
    }
    return { range: l };
  });
  return o.changes.empty ? !1 : (t.dispatch([
    i,
    a.update(o, { userEvent: "input.complete", scrollIntoView: !0 })
  ]), !0);
}), g_ = /* @__PURE__ */ JSON.parse(`[{"comment":"/**\\n * Overrides the css of highlighted events. Make sure to use single quotes!\\n * @name markcss\\n * @example\\n * note(\\"c a f e\\")\\n * .markcss('text-decoration:underline')\\n */","meta":{"filename":"codemirror.mjs","lineno":374,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror","code":{}},"description":"<p>Overrides the css of highlighted events. Make sure to use single quotes!</p>","name":"markcss","examples":["note(\\"c a f e\\")\\n.markcss('text-decoration:underline')"],"longname":"markcss","kind":"member","scope":"global"},{"comment":"/**\\n * Displays a slider widget to allow the user manipulate a value\\n *\\n * @name slider\\n * @param {number} value Initial value\\n * @param {number} min Minimum value - optional, defaults to 0\\n * @param {number} max Maximum value - optional, defaults to 1\\n * @param {number} step Step size - optional\\n */","meta":{"filename":"slider.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror","code":{}},"description":"<p>Displays a slider widget to allow the user manipulate a value</p>","name":"slider","params":[{"type":{"names":["number"]},"description":"<p>Initial value</p>","name":"value"},{"type":{"names":["number"]},"description":"<p>Minimum value - optional, defaults to 0</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>Maximum value - optional, defaults to 1</p>","name":"max"},{"type":{"names":["number"]},"description":"<p>Step size - optional</p>","name":"step"}],"longname":"slider","kind":"member","scope":"global"},{"comment":"/**\\n * Select a sound / sample by name. When using mininotation, you can also optionally supply 'n' and 'gain' parameters\\n * separated by ':'.\\n *\\n * @name s\\n * @param {string | Pattern} sound The sound / pattern of sounds to pick\\n * @synonyms sound\\n * @example\\n * s(\\"bd hh\\")\\n * @example\\n * s(\\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Select a sound / sample by name. When using mininotation, you can also optionally supply 'n' and 'gain' parameters\\nseparated by ':'.</p>","name":"s","params":[{"type":{"names":["string","Pattern"]},"description":"<p>The sound / pattern of sounds to pick</p>","name":"sound"}],"synonyms_text":"sound","synonyms":["sound"],"examples":["s(\\"bd hh\\")","s(\\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\\")"],"longname":"s","kind":"member","scope":"global"},{"comment":"/**\\n * Define a custom webaudio node to use as a sound source.\\n *\\n * @name source\\n * @param {function} getSource\\n * @synonyms src\\n *\\n */","meta":{"filename":"controls.mjs","lineno":90,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Define a custom webaudio node to use as a sound source.</p>","name":"source","params":[{"type":{"names":["function"]},"name":"getSource"}],"synonyms_text":"src","synonyms":["src"],"longname":"source","kind":"member","scope":"global"},{"comment":"/**\\n * Selects the given index from the sample map.\\n * Numbers too high will wrap around.\\n * \`n\` can also be used to play midi numbers, but it is recommended to use \`note\` instead.\\n *\\n * @name n\\n * @param {number | Pattern} value sample index starting from 0\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*6\\").n(\\"<0 1>\\")\\n */","meta":{"filename":"controls.mjs","lineno":99,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Selects the given index from the sample map.\\nNumbers too high will wrap around.\\n<code>n</code> can also be used to play midi numbers, but it is recommended to use <code>note</code> instead.</p>","name":"n","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sample index starting from 0</p>","name":"value"}],"examples":["s(\\"bd sd [~ bd] sd,hh*6\\").n(\\"<0 1>\\")"],"longname":"n","kind":"member","scope":"global"},{"comment":"/**\\n * Plays the given note name or midi number. A note name consists of\\n *\\n * - a letter (a-g or A-G)\\n * - optional accidentals (b or #)\\n * - optional octave number (0-9). Defaults to 3\\n *\\n * Examples of valid note names: \`c\`, \`bb\`, \`Bb\`, \`f#\`, \`c3\`, \`A4\`, \`Eb2\`, \`c#5\`\\n *\\n * You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.\\n *\\n * @name note\\n * @example\\n * note(\\"c a f e\\")\\n * @example\\n * note(\\"c4 a4 f4 e4\\")\\n * @example\\n * note(\\"60 69 65 64\\")\\n */","meta":{"filename":"controls.mjs","lineno":111,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Plays the given note name or midi number. A note name consists of</p>\\n<ul>\\n<li>a letter (a-g or A-G)</li>\\n<li>optional accidentals (b or #)</li>\\n<li>optional octave number (0-9). Defaults to 3</li>\\n</ul>\\n<p>Examples of valid note names: <code>c</code>, <code>bb</code>, <code>Bb</code>, <code>f#</code>, <code>c3</code>, <code>A4</code>, <code>Eb2</code>, <code>c#5</code></p>\\n<p>You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.</p>","name":"note","examples":["note(\\"c a f e\\")","note(\\"c4 a4 f4 e4\\")","note(\\"60 69 65 64\\")"],"longname":"note","kind":"member","scope":"global"},{"comment":"/**\\n * A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.\\n *\\n * @name accelerate\\n * @param {number | Pattern} amount acceleration.\\n * @superdirtOnly\\n * @example\\n * s(\\"sax\\").accelerate(\\"<0 1 2 4 8 16>\\").slow(2).osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":132,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.</p>","name":"accelerate","params":[{"type":{"names":["number","Pattern"]},"description":"<p>acceleration.</p>","name":"amount"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\"sax\\").accelerate(\\"<0 1 2 4 8 16>\\").slow(2).osc()"],"longname":"accelerate","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * Sets the velocity from 0 to 1. Is multiplied together with gain.\\n * @name velocity\\n * @example\\n * s(\\"hh*8\\")\\n * .gain(\\".4!2 1 .4!2 1 .4 1\\")\\n * .velocity(\\".4 1\\")\\n */","meta":{"filename":"controls.mjs","lineno":143,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the velocity from 0 to 1. Is multiplied together with gain.</p>","name":"velocity","examples":["s(\\"hh*8\\")\\n.gain(\\".4!2 1 .4!2 1 .4 1\\")\\n.velocity(\\".4 1\\")"],"longname":"velocity","kind":"member","scope":"global"},{"comment":"/**\\n * Controls the gain by an exponential amount.\\n *\\n * @name gain\\n * @param {number | Pattern} amount gain.\\n * @example\\n * s(\\"hh*8\\").gain(\\".4!2 1 .4!2 1 .4 1\\").fast(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":153,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the gain by an exponential amount.</p>","name":"gain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>gain.</p>","name":"amount"}],"examples":["s(\\"hh*8\\").gain(\\".4!2 1 .4!2 1 .4 1\\").fast(2)"],"longname":"gain","kind":"member","scope":"global"},{"comment":"/**\\n * Gain applied after all effects have been processed.\\n *\\n * @name postgain\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\")\\n * .compressor(\\"-20:20:10:.002:.02\\").postgain(1.5)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":163,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Gain applied after all effects have been processed.</p>","name":"postgain","examples":["s(\\"bd sd [~ bd] sd,hh*8\\")\\n.compressor(\\"-20:20:10:.002:.02\\").postgain(1.5)"],"longname":"postgain","kind":"member","scope":"global"},{"comment":"/**\\n * Like \`gain\`, but linear.\\n *\\n * @name amp\\n * @param {number | Pattern} amount gain.\\n * @superdirtOnly\\n * @example\\n * s(\\"bd*8\\").amp(\\".1*2 .5 .1*2 .5 .1 .5\\").osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":173,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>gain</code>, but linear.</p>","name":"amp","params":[{"type":{"names":["number","Pattern"]},"description":"<p>gain.</p>","name":"amount"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\"bd*8\\").amp(\\".1*2 .5 .1*2 .5 .1 .5\\").osc()"],"longname":"amp","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.\\n *\\n * @name attack\\n * @param {number | Pattern} attack time in seconds.\\n * @synonyms att\\n * @example\\n * note(\\"c3 e3 f3 g3\\").attack(\\"<0 .1 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":184,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.</p>","name":"attack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds.</p>","name":"attack"}],"synonyms_text":"att","synonyms":["att"],"examples":["note(\\"c3 e3 f3 g3\\").attack(\\"<0 .1 .5>\\")"],"longname":"attack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the Frequency Modulation Harmonicity Ratio.\\n * Controls the timbre of the sound.\\n * Whole numbers and simple ratios sound more natural,\\n * while decimal numbers and complex ratios sound metallic.\\n *\\n * @name fmh\\n * @param {number | Pattern} harmonicity\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmh(\\"<1 2 1.5 1.61>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":196,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the Frequency Modulation Harmonicity Ratio.\\nControls the timbre of the sound.\\nWhole numbers and simple ratios sound more natural,\\nwhile decimal numbers and complex ratios sound metallic.</p>","name":"fmh","params":[{"type":{"names":["number","Pattern"]},"name":"harmonicity"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmh(\\"<1 2 1.5 1.61>\\")\\n._scope()"],"longname":"fmh","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the Frequency Modulation of the synth.\\n * Controls the modulation index, which defines the brightness of the sound.\\n *\\n * @name fm\\n * @param {number | Pattern} brightness modulation index\\n * @synonyms fmi\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(\\"<0 1 2 8 32>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":212,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the Frequency Modulation of the synth.\\nControls the modulation index, which defines the brightness of the sound.</p>","name":"fm","params":[{"type":{"names":["number","Pattern"]},"description":"<p>modulation index</p>","name":"brightness"}],"synonyms_text":"fmi","synonyms":["fmi"],"examples":["note(\\"c e g b g e\\")\\n.fm(\\"<0 1 2 8 32>\\")\\n._scope()"],"longname":"fm","kind":"member","scope":"global"},{"comment":"/**\\n * Ramp type of fm envelope. Exp might be a bit broken..\\n *\\n * @name fmenv\\n * @param {number | Pattern} type lin | exp\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmdecay(.2)\\n * .fmsustain(0)\\n * .fmenv(\\"<exp lin>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":227,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Ramp type of fm envelope. Exp might be a bit broken..</p>","name":"fmenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>lin | exp</p>","name":"type"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmdecay(.2)\\n.fmsustain(0)\\n.fmenv(\\"<exp lin>\\")\\n._scope()"],"longname":"fmenv","kind":"member","scope":"global"},{"comment":"/**\\n * Attack time for the FM envelope: time it takes to reach maximum modulation\\n *\\n * @name fmattack\\n * @param {number | Pattern} time attack time\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmattack(\\"<0 .05 .1 .2>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":242,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Attack time for the FM envelope: time it takes to reach maximum modulation</p>","name":"fmattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>attack time</p>","name":"time"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmattack(\\"<0 .05 .1 .2>\\")\\n._scope()"],"longname":"fmattack","kind":"member","scope":"global"},{"comment":"/**\\n * waveform of the fm modulator\\n *\\n * @name fmwave\\n * @param {number | Pattern} wave waveform\\n * @example\\n * n(\\"0 1 2 3\\".fast(4)).scale(\\"d:minor\\").s(\\"sine\\").fmwave(\\"<sine square sawtooth crackle>\\").fm(4).fmh(2.01)\\n * @example\\n * n(\\"0 1 2 3\\".fast(4)).chord(\\"<Dm Am F G>\\").voicing().s(\\"sawtooth\\").fmwave(\\"brown\\").fm(.6)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":256,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>waveform of the fm modulator</p>","name":"fmwave","params":[{"type":{"names":["number","Pattern"]},"description":"<p>waveform</p>","name":"wave"}],"examples":["n(\\"0 1 2 3\\".fast(4)).scale(\\"d:minor\\").s(\\"sine\\").fmwave(\\"<sine square sawtooth crackle>\\").fm(4).fmh(2.01)","n(\\"0 1 2 3\\".fast(4)).chord(\\"<Dm Am F G>\\").voicing().s(\\"sawtooth\\").fmwave(\\"brown\\").fm(.6)"],"longname":"fmwave","kind":"member","scope":"global"},{"comment":"/**\\n * Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.\\n *\\n * @name fmdecay\\n * @param {number | Pattern} time decay time\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmdecay(\\"<.01 .05 .1 .2>\\")\\n * .fmsustain(.4)\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":269,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.</p>","name":"fmdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>decay time</p>","name":"time"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmdecay(\\"<.01 .05 .1 .2>\\")\\n.fmsustain(.4)\\n._scope()"],"longname":"fmdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sustain level for the FM envelope: how much modulation is applied after the decay phase\\n *\\n * @name fmsustain\\n * @param {number | Pattern} level sustain level\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmdecay(.1)\\n * .fmsustain(\\"<1 .75 .5 0>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":283,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sustain level for the FM envelope: how much modulation is applied after the decay phase</p>","name":"fmsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sustain level</p>","name":"level"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmdecay(.1)\\n.fmsustain(\\"<1 .75 .5 0>\\")\\n._scope()"],"longname":"fmsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Select the sound bank to use. To be used together with \`s\`. The bank name (+ \\"_\\") will be prepended to the value of \`s\`.\\n *\\n * @name bank\\n * @param {string | Pattern} bank the name of the bank\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").bank('RolandTR909') // = s(\\"RolandTR909_bd RolandTR909_sd\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":301,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Select the sound bank to use. To be used together with <code>s</code>. The bank name (+ &quot;_&quot;) will be prepended to the value of <code>s</code>.</p>","name":"bank","params":[{"type":{"names":["string","Pattern"]},"description":"<p>the name of the bank</p>","name":"bank"}],"examples":["s(\\"bd sd [~ bd] sd\\").bank('RolandTR909') // = s(\\"RolandTR909_bd RolandTR909_sd\\")"],"longname":"bank","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\\n * Note that the decay is only audible if the sustain value is lower than 1.\\n *\\n * @name decay\\n * @param {number | Pattern} time decay time in seconds\\n * @synonyms dec\\n * @example\\n * note(\\"c3 e3 f3 g3\\").decay(\\"<.1 .2 .3 .4>\\").sustain(0)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":317,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\\nNote that the decay is only audible if the sustain value is lower than 1.</p>","name":"decay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>decay time in seconds</p>","name":"time"}],"synonyms_text":"dec","synonyms":["dec"],"examples":["note(\\"c3 e3 f3 g3\\").decay(\\"<.1 .2 .3 .4>\\").sustain(0)"],"longname":"decay","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.\\n *\\n * @name sustain\\n * @param {number | Pattern} gain sustain level between 0 and 1\\n * @synonyms sus\\n * @example\\n * note(\\"c3 e3 f3 g3\\").decay(.2).sustain(\\"<0 .1 .4 .6 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":329,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.</p>","name":"sustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sustain level between 0 and 1</p>","name":"gain"}],"synonyms_text":"sus","synonyms":["sus"],"examples":["note(\\"c3 e3 f3 g3\\").decay(.2).sustain(\\"<0 .1 .4 .6 1>\\")"],"longname":"sustain","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.\\n *\\n * @name release\\n * @param {number | Pattern} time release time in seconds\\n * @synonyms rel\\n * @example\\n * note(\\"c3 e3 g3 c4\\").release(\\"<0 .1 .4 .6 1>/2\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":340,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.</p>","name":"release","params":[{"type":{"names":["number","Pattern"]},"description":"<p>release time in seconds</p>","name":"time"}],"synonyms_text":"rel","synonyms":["rel"],"examples":["note(\\"c3 e3 g3 c4\\").release(\\"<0 .1 .4 .6 1>/2\\")"],"longname":"release","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the center frequency of the **b**and-**p**ass **f**ilter. When using mininotation, you\\n * can also optionally supply the 'bpq' parameter separated by ':'.\\n *\\n * @name bpf\\n * @param {number | Pattern} frequency center frequency\\n * @synonyms bandf, bp\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*6\\").bpf(\\"<1000 2000 4000 8000>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":353,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the center frequency of the <strong>b</strong>and-<strong>p</strong>ass <strong>f</strong>ilter. When using mininotation, you\\ncan also optionally supply the 'bpq' parameter separated by ':'.</p>","name":"bpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>center frequency</p>","name":"frequency"}],"synonyms_text":"bandf, bp","synonyms":["bandf","bp"],"examples":["s(\\"bd sd [~ bd] sd,hh*6\\").bpf(\\"<1000 2000 4000 8000>\\")"],"longname":"bpf","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the **b**and-**p**ass **q**-factor (resonance).\\n *\\n * @name bpq\\n * @param {number | Pattern} q q factor\\n * @synonyms bandq\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").bpf(500).bpq(\\"<0 1 2 3>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":366,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the <strong>b</strong>and-<strong>p</strong>ass <strong>q</strong>-factor (resonance).</p>","name":"bpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>q factor</p>","name":"q"}],"synonyms_text":"bandq","synonyms":["bandq"],"examples":["s(\\"bd sd [~ bd] sd\\").bpf(500).bpq(\\"<0 1 2 3>\\")"],"longname":"bpq","kind":"member","scope":"global"},{"comment":"/**\\n * a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. \`0.25\` to cut off the first quarter from each sample.\\n *\\n * @memberof Pattern\\n * @name begin\\n * @param {number | Pattern} amount between 0 and 1, where 1 is the length of the sample\\n * @example\\n * samples({ rave: 'rave/AREUREADY.wav' }, 'github:tidalcycles/dirt-samples')\\n * s(\\"rave\\").begin(\\"<0 .25 .5 .75>\\").fast(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":379,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. <code>0.25</code> to cut off the first quarter from each sample.</p>","memberof":"Pattern","name":"begin","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"amount"}],"examples":["samples({ rave: 'rave/AREUREADY.wav' }, 'github:tidalcycles/dirt-samples')\\ns(\\"rave\\").begin(\\"<0 .25 .5 .75>\\").fast(2)"],"scope":"static","longname":"Pattern.begin","kind":"member"},{"comment":"/**\\n * The same as .begin, but cuts off the end off each sample.\\n *\\n * @memberof Pattern\\n * @name end\\n * @param {number | Pattern} length 1 = whole sample, .5 = half sample, .25 = quarter sample etc..\\n * @example\\n * s(\\"bd*2,oh*4\\").end(\\"<.1 .2 .5 1>\\").fast(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":391,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The same as .begin, but cuts off the end off each sample.</p>","memberof":"Pattern","name":"end","params":[{"type":{"names":["number","Pattern"]},"description":"<p>1 = whole sample, .5 = half sample, .25 = quarter sample etc..</p>","name":"length"}],"examples":["s(\\"bd*2,oh*4\\").end(\\"<.1 .2 .5 1>\\").fast(2)"],"scope":"static","longname":"Pattern.end","kind":"member"},{"comment":"/**\\n * Loops the sample.\\n * Note that the tempo of the loop is not synced with the cycle tempo.\\n * To change the loop region, use loopBegin / loopEnd.\\n *\\n * @name loop\\n * @param {number | Pattern} on If 1, the sample is looped\\n * @example\\n * s(\\"casio\\").loop(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":402,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Loops the sample.\\nNote that the tempo of the loop is not synced with the cycle tempo.\\nTo change the loop region, use loopBegin / loopEnd.</p>","name":"loop","params":[{"type":{"names":["number","Pattern"]},"description":"<p>If 1, the sample is looped</p>","name":"on"}],"examples":["s(\\"casio\\").loop(1)"],"longname":"loop","kind":"member","scope":"global"},{"comment":"/**\\n * Begin to loop at a specific point in the sample (inbetween \`begin\` and \`end\`).\\n * Note that the loop point must be inbetween \`begin\` and \`end\`, and before \`loopEnd\`!\\n * Note: Samples starting with wt_ will automatically loop! (wt = wavetable)\\n *\\n * @name loopBegin\\n * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\\n * @synonyms loopb\\n * @example\\n * s(\\"space\\").loop(1)\\n * .loopBegin(\\"<0 .125 .25>\\")._scope()\\n */","meta":{"filename":"controls.mjs","lineno":414,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Begin to loop at a specific point in the sample (inbetween <code>begin</code> and <code>end</code>).\\nNote that the loop point must be inbetween <code>begin</code> and <code>end</code>, and before <code>loopEnd</code>!\\nNote: Samples starting with wt_ will automatically loop! (wt = wavetable)</p>","name":"loopBegin","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"time"}],"synonyms_text":"loopb","synonyms":["loopb"],"examples":["s(\\"space\\").loop(1)\\n.loopBegin(\\"<0 .125 .25>\\")._scope()"],"longname":"loopBegin","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * End the looping section at a specific point in the sample (inbetween \`begin\` and \`end\`).\\n * Note that the loop point must be inbetween \`begin\` and \`end\`, and after \`loopBegin\`!\\n *\\n * @name loopEnd\\n * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\\n * @synonyms loope\\n * @example\\n * s(\\"space\\").loop(1)\\n * .loopEnd(\\"<1 .75 .5 .25>\\")._scope()\\n */","meta":{"filename":"controls.mjs","lineno":427,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>End the looping section at a specific point in the sample (inbetween <code>begin</code> and <code>end</code>).\\nNote that the loop point must be inbetween <code>begin</code> and <code>end</code>, and after <code>loopBegin</code>!</p>","name":"loopEnd","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"time"}],"synonyms_text":"loope","synonyms":["loope"],"examples":["s(\\"space\\").loop(1)\\n.loopEnd(\\"<1 .75 .5 .25>\\")._scope()"],"longname":"loopEnd","kind":"member","scope":"global"},{"comment":"/**\\n * bit crusher effect.\\n *\\n * @name crush\\n * @param {number | Pattern} depth between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).\\n * @example\\n * s(\\"<bd sd>,hh*3\\").fast(2).crush(\\"<16 8 7 6 5 4 3 2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":440,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>bit crusher effect.</p>","name":"crush","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).</p>","name":"depth"}],"examples":["s(\\"<bd sd>,hh*3\\").fast(2).crush(\\"<16 8 7 6 5 4 3 2>\\")"],"longname":"crush","kind":"member","scope":"global"},{"comment":"/**\\n * fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers\\n *\\n * @name coarse\\n * @param {number | Pattern} factor 1 for original 2 for half, 3 for a third and so on.\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").coarse(\\"<1 4 8 16 32>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":451,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers</p>","name":"coarse","params":[{"type":{"names":["number","Pattern"]},"description":"<p>1 for original 2 for half, 3 for a third and so on.</p>","name":"factor"}],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").coarse(\\"<1 4 8 16 32>\\")"],"longname":"coarse","kind":"member","scope":"global"},{"comment":"/**\\n * modulate the amplitude of a sound with a continuous waveform\\n *\\n * @name tremolo\\n * @synonyms trem\\n * @param {number | Pattern} speed modulation speed in HZ\\n * @example\\n * note(\\"d d d# d\\".fast(4)).s(\\"supersaw\\").tremolo(\\"<3 2 100> \\").tremoloskew(\\"<.5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":462,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>modulate the amplitude of a sound with a continuous waveform</p>","name":"tremolo","synonyms_text":"trem","synonyms":["trem"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>modulation speed in HZ</p>","name":"speed"}],"examples":["note(\\"d d d# d\\".fast(4)).s(\\"supersaw\\").tremolo(\\"<3 2 100> \\").tremoloskew(\\"<.5>\\")"],"longname":"tremolo","kind":"member","scope":"global"},{"comment":"/**\\n * modulate the amplitude of a sound with a continuous waveform\\n *\\n * @name tremolosync\\n * @synonyms tremsync\\n * @param {number | Pattern} cycles modulation speed in cycles\\n * @example\\n * note(\\"d d d# d\\".fast(4)).s(\\"supersaw\\").tremolosync(\\"4\\").tremoloskew(\\"<1 .5 0>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":474,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>modulate the amplitude of a sound with a continuous waveform</p>","name":"tremolosync","synonyms_text":"tremsync","synonyms":["tremsync"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>modulation speed in cycles</p>","name":"cycles"}],"examples":["note(\\"d d d# d\\".fast(4)).s(\\"supersaw\\").tremolosync(\\"4\\").tremoloskew(\\"<1 .5 0>\\")"],"longname":"tremolosync","kind":"member","scope":"global"},{"comment":"/**\\n * depth of amplitude modulation\\n *\\n * @name tremolodepth\\n * @synonyms tremdepth\\n * @param {number | Pattern} depth\\n * @example\\n * note(\\"a1 a1 a#1 a1\\".fast(4)).s(\\"pulse\\").tremsync(4).tremolodepth(\\"<1 2 .7>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":489,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>depth of amplitude modulation</p>","name":"tremolodepth","synonyms_text":"tremdepth","synonyms":["tremdepth"],"params":[{"type":{"names":["number","Pattern"]},"name":"depth"}],"examples":["note(\\"a1 a1 a#1 a1\\".fast(4)).s(\\"pulse\\").tremsync(4).tremolodepth(\\"<1 2 .7>\\")"],"longname":"tremolodepth","kind":"member","scope":"global"},{"comment":"/**\\n * alter the shape of the modulation waveform\\n *\\n * @name tremoloskew\\n * @synonyms tremskew\\n * @param {number | Pattern} amount between 0 & 1, the shape of the waveform\\n * @example\\n * note(\\"{f a c e}%16\\").s(\\"sawtooth\\").tremsync(4).tremoloskew(\\"<.5 0 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":500,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>alter the shape of the modulation waveform</p>","name":"tremoloskew","synonyms_text":"tremskew","synonyms":["tremskew"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 &amp; 1, the shape of the waveform</p>","name":"amount"}],"examples":["note(\\"{f a c e}%16\\").s(\\"sawtooth\\").tremsync(4).tremoloskew(\\"<.5 0 1>\\")"],"longname":"tremoloskew","kind":"member","scope":"global"},{"comment":"/**\\n * alter the phase of the modulation waveform\\n *\\n * @name tremolophase\\n * @synonyms tremphase\\n * @param {number | Pattern} offset the offset in cycles of the modulation\\n * @example\\n * note(\\"{f a c e}%16\\").s(\\"sawtooth\\").tremsync(4).tremolophase(\\"<0 .25 .66>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":512,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>alter the phase of the modulation waveform</p>","name":"tremolophase","synonyms_text":"tremphase","synonyms":["tremphase"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>the offset in cycles of the modulation</p>","name":"offset"}],"examples":["note(\\"{f a c e}%16\\").s(\\"sawtooth\\").tremsync(4).tremolophase(\\"<0 .25 .66>\\")"],"longname":"tremolophase","kind":"member","scope":"global"},{"comment":"/**\\n * shape of amplitude modulation\\n *\\n * @name tremoloshape\\n * @param {number | Pattern} shape tri | square | sine | saw | ramp\\n * @example\\n * note(\\"{f g c d}%16\\").tremsync(4).tremoloshape(\\"<sine tri square>\\").s(\\"sawtooth\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":524,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>shape of amplitude modulation</p>","name":"tremoloshape","params":[{"type":{"names":["number","Pattern"]},"description":"<p>tri | square | sine | saw | ramp</p>","name":"shape"}],"examples":["note(\\"{f g c d}%16\\").tremsync(4).tremoloshape(\\"<sine tri square>\\").s(\\"sawtooth\\")"],"longname":"tremoloshape","kind":"member","scope":"global"},{"comment":"/**\\n * filter overdrive for supported filter types\\n *\\n * @name drive\\n * @param {number | Pattern} amount\\n * @example\\n * note(\\"{f g g c d a a#}%16\\".sub(17)).s(\\"supersaw\\").lpenv(8).lpf(150).lpq(.8).ftype('ladder').drive(\\"<.5 4>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":534,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>filter overdrive for supported filter types</p>","name":"drive","params":[{"type":{"names":["number","Pattern"]},"name":"amount"}],"examples":["note(\\"{f g g c d a a#}%16\\".sub(17)).s(\\"supersaw\\").lpenv(8).lpf(150).lpq(.8).ftype('ladder').drive(\\"<.5 4>\\")"],"longname":"drive","kind":"member","scope":"global"},{"comment":"/**\\n * modulate the amplitude of an orbit to create a \\"sidechain\\" like effect\\n *\\n * @name duckorbit\\n * @param {number | Pattern} orbit target orbit\\n * @example\\n * $: n(run(16)).scale(\\"c:minor:pentatonic\\").s(\\"sawtooth\\").delay(.7).orbit(2)\\n * $: s(\\"bd:4!4\\").beat(\\"0,4,8,11,14\\",16).duckorbit(2).duckattack(0.2).duckdepth(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":544,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>modulate the amplitude of an orbit to create a &quot;sidechain&quot; like effect</p>","name":"duckorbit","params":[{"type":{"names":["number","Pattern"]},"description":"<p>target orbit</p>","name":"orbit"}],"examples":["$: n(run(16)).scale(\\"c:minor:pentatonic\\").s(\\"sawtooth\\").delay(.7).orbit(2)\\n$: s(\\"bd:4!4\\").beat(\\"0,4,8,11,14\\",16).duckorbit(2).duckattack(0.2).duckdepth(1)"],"longname":"duckorbit","kind":"member","scope":"global"},{"comment":"/**\\n *  the amount of ducking applied to target orbit\\n *\\n * @name duckdepth\\n * @param {number | Pattern} depth depth of modulation from 0 to 1\\n * @example\\n * stack( n(run(8)).scale(\\"c:minor\\").s(\\"sawtooth\\").delay(.7).orbit(2), s(\\"bd:4!4\\").beat(\\"0,4,8,11,14\\",16).duckorbit(2).duckattack(0.2).duckdepth(\\"<1 .9 .6 0>\\"))\\n *\\n */","meta":{"filename":"controls.mjs","lineno":556,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>the amount of ducking applied to target orbit</p>","name":"duckdepth","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of modulation from 0 to 1</p>","name":"depth"}],"examples":["stack( n(run(8)).scale(\\"c:minor\\").s(\\"sawtooth\\").delay(.7).orbit(2), s(\\"bd:4!4\\").beat(\\"0,4,8,11,14\\",16).duckorbit(2).duckattack(0.2).duckdepth(\\"<1 .9 .6 0>\\"))"],"longname":"duckdepth","kind":"member","scope":"global"},{"comment":"/**\\n *  the attack time of the duck effect\\n *\\n * @name duckattack\\n * @param {number | Pattern} time\\n * @example\\n * stack( n(run(8)).scale(\\"c:minor\\").s(\\"sawtooth\\").delay(.7).orbit(2), s(\\"bd:4!4\\").beat(\\"0,4,8,11,14\\",16).duckorbit(2).duckattack(\\"<0.2 0 0.4>\\").duckdepth(1))\\n *\\n */","meta":{"filename":"controls.mjs","lineno":568,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>the attack time of the duck effect</p>","name":"duckattack","params":[{"type":{"names":["number","Pattern"]},"name":"time"}],"examples":["stack( n(run(8)).scale(\\"c:minor\\").s(\\"sawtooth\\").delay(.7).orbit(2), s(\\"bd:4!4\\").beat(\\"0,4,8,11,14\\",16).duckorbit(2).duckattack(\\"<0.2 0 0.4>\\").duckdepth(1))"],"longname":"duckattack","kind":"member","scope":"global"},{"comment":"/**\\n * Create byte beats with custom expressions\\n *\\n * @name byteBeatExpression\\n * @synonyms bbexpr\\n *\\n * @param {number | Pattern} byteBeatExpression bitwise expression for creating bytebeat\\n * @example\\n * s(\\"bytebeat\\").bbexpr('t*(t>>15^t>>66)')\\n *\\n */","meta":{"filename":"controls.mjs","lineno":581,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Create byte beats with custom expressions</p>","name":"byteBeatExpression","synonyms_text":"bbexpr","synonyms":["bbexpr"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>bitwise expression for creating bytebeat</p>","name":"byteBeatExpression"}],"examples":["s(\\"bytebeat\\").bbexpr('t*(t>>15^t>>66)')"],"longname":"byteBeatExpression","kind":"member","scope":"global"},{"comment":"/**\\n * Create byte beats with custom expressions\\n *\\n * @name byteBeatStartTime\\n * @synonyms bbst\\n *\\n * @param {number | Pattern} byteBeatStartTime in samples (t)\\n * @example\\n * note(\\"c3!8\\".add(\\"{0 0 12 0 7 5 3}%8\\")).s(\\"bytebeat:5\\").bbst(\\"<3 1>\\".mul(10000))._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":594,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Create byte beats with custom expressions</p>","name":"byteBeatStartTime","synonyms_text":"bbst","synonyms":["bbst"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>in samples (t)</p>","name":"byteBeatStartTime"}],"examples":["note(\\"c3!8\\".add(\\"{0 0 12 0 7 5 3}%8\\")).s(\\"bytebeat:5\\").bbst(\\"<3 1>\\".mul(10000))._scope()"],"longname":"byteBeatStartTime","kind":"member","scope":"global"},{"comment":"/**\\n * Allows you to set the output channels on the interface\\n *\\n * @name channels\\n * @synonyms ch\\n *\\n * @param {number | Pattern} channels pattern the output channels\\n * @example\\n * note(\\"e a d b g\\").channels(\\"3:4\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":607,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows you to set the output channels on the interface</p>","name":"channels","synonyms_text":"ch","synonyms":["ch"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>pattern the output channels</p>","name":"channels"}],"examples":["note(\\"e a d b g\\").channels(\\"3:4\\")"],"longname":"channels","kind":"member","scope":"global"},{"comment":"/**\\n * controls the pulsewidth of the pulse oscillator\\n *\\n * @name pw\\n * @param {number | Pattern} pulsewidth\\n * @example\\n * note(\\"{f a c e}%16\\").s(\\"pulse\\").pw(\\".8:1:.2\\")\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"pulse\\").pw(\\"0 .75 .5 1\\")\\n */","meta":{"filename":"controls.mjs","lineno":620,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>controls the pulsewidth of the pulse oscillator</p>","name":"pw","params":[{"type":{"names":["number","Pattern"]},"name":"pulsewidth"}],"examples":["note(\\"{f a c e}%16\\").s(\\"pulse\\").pw(\\".8:1:.2\\")","n(run(8)).scale(\\"D:pentatonic\\").s(\\"pulse\\").pw(\\"0 .75 .5 1\\")"],"longname":"pw","kind":"member","scope":"global"},{"comment":"/**\\n * controls the lfo rate for the pulsewidth of the pulse oscillator\\n *\\n * @name pwrate\\n * @param {number | Pattern} rate\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"pulse\\").pw(\\"0.5\\").pwrate(\\"<5 .1 25>\\").pwsweep(\\"<0.3 .8>\\")\\n\\n *\\n */","meta":{"filename":"controls.mjs","lineno":632,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>controls the lfo rate for the pulsewidth of the pulse oscillator</p>","name":"pwrate","params":[{"type":{"names":["number","Pattern"]},"name":"rate"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"pulse\\").pw(\\"0.5\\").pwrate(\\"<5 .1 25>\\").pwsweep(\\"<0.3 .8>\\")"],"longname":"pwrate","kind":"member","scope":"global"},{"comment":"/**\\n * controls the lfo sweep for the pulsewidth of the pulse oscillator\\n *\\n * @name pwsweep\\n * @param {number | Pattern} sweep\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"pulse\\").pw(\\"0.5\\").pwrate(\\"<5 .1 25>\\").pwsweep(\\"<0.3 .8>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":644,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>controls the lfo sweep for the pulsewidth of the pulse oscillator</p>","name":"pwsweep","params":[{"type":{"names":["number","Pattern"]},"name":"sweep"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"pulse\\").pw(\\"0.5\\").pwrate(\\"<5 .1 25>\\").pwsweep(\\"<0.3 .8>\\")"],"longname":"pwsweep","kind":"member","scope":"global"},{"comment":"/**\\n * Phaser audio effect that approximates popular guitar pedals.\\n *\\n * @name phaser\\n * @synonyms ph\\n * @param {number | Pattern} speed speed of modulation\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(\\"<1 2 4 8>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":655,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Phaser audio effect that approximates popular guitar pedals.</p>","name":"phaser","synonyms_text":"ph","synonyms":["ph"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>speed of modulation</p>","name":"speed"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(\\"<1 2 4 8>\\")"],"longname":"phaser","kind":"member","scope":"global"},{"comment":"/**\\n * The frequency sweep range of the lfo for the phaser effect. Defaults to 2000\\n *\\n * @name phasersweep\\n * @synonyms phs\\n * @param {number | Pattern} phasersweep most useful values are between 0 and 4000\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(2).phasersweep(\\"<800 2000 4000>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":672,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The frequency sweep range of the lfo for the phaser effect. Defaults to 2000</p>","name":"phasersweep","synonyms_text":"phs","synonyms":["phs"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>most useful values are between 0 and 4000</p>","name":"phasersweep"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(2).phasersweep(\\"<800 2000 4000>\\")"],"longname":"phasersweep","kind":"member","scope":"global"},{"comment":"/**\\n *  The center frequency of the phaser in HZ. Defaults to 1000\\n *\\n * @name phasercenter\\n * @synonyms phc\\n * @param {number | Pattern} centerfrequency in HZ\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(2).phasercenter(\\"<800 2000 4000>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":685,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The center frequency of the phaser in HZ. Defaults to 1000</p>","name":"phasercenter","synonyms_text":"phc","synonyms":["phc"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>in HZ</p>","name":"centerfrequency"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(2).phasercenter(\\"<800 2000 4000>\\")"],"longname":"phasercenter","kind":"member","scope":"global"},{"comment":"/**\\n * The amount the signal is affected by the phaser effect. Defaults to 0.75\\n *\\n * @name phaserdepth\\n * @synonyms phd\\n * @param {number | Pattern} depth number between 0 and 1\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(2).phaserdepth(\\"<0 .5 .75 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":699,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The amount the signal is affected by the phaser effect. Defaults to 0.75</p>","name":"phaserdepth","synonyms_text":"phd","synonyms":["phd"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>number between 0 and 1</p>","name":"depth"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(2).phaserdepth(\\"<0 .5 .75 1>\\")"],"longname":"phaserdepth","kind":"member","scope":"global"},{"comment":"/**\\n * choose the channel the pattern is sent to in superdirt\\n *\\n * @name channel\\n * @param {number | Pattern} channel channel number\\n *\\n */","meta":{"filename":"controls.mjs","lineno":713,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>choose the channel the pattern is sent to in superdirt</p>","name":"channel","params":[{"type":{"names":["number","Pattern"]},"description":"<p>channel number</p>","name":"channel"}],"longname":"channel","kind":"member","scope":"global"},{"comment":"/**\\n * In the style of classic drum-machines, \`cut\` will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.\\n *\\n * @name cut\\n * @param {number | Pattern} group cut group number\\n * @example\\n * s(\\"[oh hh]*4\\").cut(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":721,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>In the style of classic drum-machines, <code>cut</code> will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.</p>","name":"cut","params":[{"type":{"names":["number","Pattern"]},"description":"<p>cut group number</p>","name":"group"}],"examples":["s(\\"[oh hh]*4\\").cut(1)"],"longname":"cut","kind":"member","scope":"global"},{"comment":"/**\\n * Applies the cutoff frequency of the **l**ow-**p**ass **f**ilter.\\n *\\n * When using mininotation, you can also optionally add the 'lpq' parameter, separated by ':'.\\n *\\n * @name lpf\\n * @param {number | Pattern} frequency audible between 0 and 20000\\n * @synonyms cutoff, ctf, lp\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*6\\").lpf(\\"<4000 2000 1000 500 200 100>\\")\\n * @example\\n * s(\\"bd*16\\").lpf(\\"1000:0 1000:10 1000:20 1000:30\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":731,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the cutoff frequency of the <strong>l</strong>ow-<strong>p</strong>ass <strong>f</strong>ilter.</p>\\n<p>When using mininotation, you can also optionally add the 'lpq' parameter, separated by ':'.</p>","name":"lpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>audible between 0 and 20000</p>","name":"frequency"}],"synonyms_text":"cutoff, ctf, lp","synonyms":["cutoff","ctf","lp"],"examples":["s(\\"bd sd [~ bd] sd,hh*6\\").lpf(\\"<4000 2000 1000 500 200 100>\\")","s(\\"bd*16\\").lpf(\\"1000:0 1000:10 1000:20 1000:30\\")"],"longname":"lpf","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the lowpass filter envelope modulation depth.\\n * @name lpenv\\n * @param {number | Pattern} modulation depth of the lowpass filter envelope between 0 and _n_\\n * @synonyms lpe\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpa(.5)\\n * .lpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")\\n */","meta":{"filename":"controls.mjs","lineno":747,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the lowpass filter envelope modulation depth.</p>","name":"lpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the lowpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"lpe","synonyms":["lpe"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpa(.5)\\n.lpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")"],"longname":"lpenv","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the highpass filter envelope modulation depth.\\n * @name hpenv\\n * @param {number | Pattern} modulation depth of the highpass filter envelope between 0 and _n_\\n * @synonyms hpe\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpa(.5)\\n * .hpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")\\n */","meta":{"filename":"controls.mjs","lineno":760,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the highpass filter envelope modulation depth.</p>","name":"hpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the highpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"hpe","synonyms":["hpe"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpa(.5)\\n.hpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")"],"longname":"hpenv","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the bandpass filter envelope modulation depth.\\n * @name bpenv\\n * @param {number | Pattern} modulation depth of the bandpass filter envelope between 0 and _n_\\n * @synonyms bpe\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpa(.5)\\n * .bpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")\\n */","meta":{"filename":"controls.mjs","lineno":773,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the bandpass filter envelope modulation depth.</p>","name":"bpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the bandpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"bpe","synonyms":["bpe"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpa(.5)\\n.bpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")"],"longname":"bpenv","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the attack duration for the lowpass filter envelope.\\n * @name lpattack\\n * @param {number | Pattern} attack time of the filter envelope\\n * @synonyms lpa\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpa(\\"<.5 .25 .1 .01>/4\\")\\n * .lpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":786,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the lowpass filter envelope.</p>","name":"lpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"attack"}],"synonyms_text":"lpa","synonyms":["lpa"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpa(\\"<.5 .25 .1 .01>/4\\")\\n.lpenv(4)"],"longname":"lpattack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the attack duration for the highpass filter envelope.\\n * @name hpattack\\n * @param {number | Pattern} attack time of the highpass filter envelope\\n * @synonyms hpa\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpa(\\"<.5 .25 .1 .01>/4\\")\\n * .hpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":799,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the highpass filter envelope.</p>","name":"hpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"attack"}],"synonyms_text":"hpa","synonyms":["hpa"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpa(\\"<.5 .25 .1 .01>/4\\")\\n.hpenv(4)"],"longname":"hpattack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the attack duration for the bandpass filter envelope.\\n * @name bpattack\\n * @param {number | Pattern} attack time of the bandpass filter envelope\\n * @synonyms bpa\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpa(\\"<.5 .25 .1 .01>/4\\")\\n * .bpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":812,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the bandpass filter envelope.</p>","name":"bpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"attack"}],"synonyms_text":"bpa","synonyms":["bpa"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpa(\\"<.5 .25 .1 .01>/4\\")\\n.bpenv(4)"],"longname":"bpattack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the decay duration for the lowpass filter envelope.\\n * @name lpdecay\\n * @param {number | Pattern} decay time of the filter envelope\\n * @synonyms lpd\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpd(\\"<.5 .25 .1 0>/4\\")\\n * .lpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":825,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the lowpass filter envelope.</p>","name":"lpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"decay"}],"synonyms_text":"lpd","synonyms":["lpd"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpd(\\"<.5 .25 .1 0>/4\\")\\n.lpenv(4)"],"longname":"lpdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the decay duration for the highpass filter envelope.\\n * @name hpdecay\\n * @param {number | Pattern} decay time of the highpass filter envelope\\n * @synonyms hpd\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpd(\\"<.5 .25 .1 0>/4\\")\\n * .hps(0.2)\\n * .hpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":838,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the highpass filter envelope.</p>","name":"hpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"decay"}],"synonyms_text":"hpd","synonyms":["hpd"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpd(\\"<.5 .25 .1 0>/4\\")\\n.hps(0.2)\\n.hpenv(4)"],"longname":"hpdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the decay duration for the bandpass filter envelope.\\n * @name bpdecay\\n * @param {number | Pattern} decay time of the bandpass filter envelope\\n * @synonyms bpd\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpd(\\"<.5 .25 .1 0>/4\\")\\n * .bps(0.2)\\n * .bpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":852,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the bandpass filter envelope.</p>","name":"bpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"decay"}],"synonyms_text":"bpd","synonyms":["bpd"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpd(\\"<.5 .25 .1 0>/4\\")\\n.bps(0.2)\\n.bpenv(4)"],"longname":"bpdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sustain amplitude for the lowpass filter envelope.\\n * @name lpsustain\\n * @param {number | Pattern} sustain amplitude of the lowpass filter envelope\\n * @synonyms lps\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpd(.5)\\n * .lps(\\"<0 .25 .5 1>/4\\")\\n * .lpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":866,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the lowpass filter envelope.</p>","name":"lpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the lowpass filter envelope</p>","name":"sustain"}],"synonyms_text":"lps","synonyms":["lps"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpd(.5)\\n.lps(\\"<0 .25 .5 1>/4\\")\\n.lpenv(4)"],"longname":"lpsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sustain amplitude for the highpass filter envelope.\\n * @name hpsustain\\n * @param {number | Pattern} sustain amplitude of the highpass filter envelope\\n * @synonyms hps\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpd(.5)\\n * .hps(\\"<0 .25 .5 1>/4\\")\\n * .hpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":880,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the highpass filter envelope.</p>","name":"hpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the highpass filter envelope</p>","name":"sustain"}],"synonyms_text":"hps","synonyms":["hps"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpd(.5)\\n.hps(\\"<0 .25 .5 1>/4\\")\\n.hpenv(4)"],"longname":"hpsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sustain amplitude for the bandpass filter envelope.\\n * @name bpsustain\\n * @param {number | Pattern} sustain amplitude of the bandpass filter envelope\\n * @synonyms bps\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpd(.5)\\n * .bps(\\"<0 .25 .5 1>/4\\")\\n * .bpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":894,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the bandpass filter envelope.</p>","name":"bpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the bandpass filter envelope</p>","name":"sustain"}],"synonyms_text":"bps","synonyms":["bps"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpd(.5)\\n.bps(\\"<0 .25 .5 1>/4\\")\\n.bpenv(4)"],"longname":"bpsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the release time for the lowpass filter envelope.\\n * @name lprelease\\n * @param {number | Pattern} release time of the filter envelope\\n * @synonyms lpr\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .clip(.5)\\n * .lpf(300)\\n * .lpenv(4)\\n * .lpr(\\"<.5 .25 .1 0>/4\\")\\n * .release(.5)\\n */","meta":{"filename":"controls.mjs","lineno":908,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the lowpass filter envelope.</p>","name":"lprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"release"}],"synonyms_text":"lpr","synonyms":["lpr"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.clip(.5)\\n.lpf(300)\\n.lpenv(4)\\n.lpr(\\"<.5 .25 .1 0>/4\\")\\n.release(.5)"],"longname":"lprelease","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the release time for the highpass filter envelope.\\n * @name hprelease\\n * @param {number | Pattern} release time of the highpass filter envelope\\n * @synonyms hpr\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .clip(.5)\\n * .hpf(500)\\n * .hpenv(4)\\n * .hpr(\\"<.5 .25 .1 0>/4\\")\\n * .release(.5)\\n */","meta":{"filename":"controls.mjs","lineno":923,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the highpass filter envelope.</p>","name":"hprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"release"}],"synonyms_text":"hpr","synonyms":["hpr"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.clip(.5)\\n.hpf(500)\\n.hpenv(4)\\n.hpr(\\"<.5 .25 .1 0>/4\\")\\n.release(.5)"],"longname":"hprelease","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the release time for the bandpass filter envelope.\\n * @name bprelease\\n * @param {number | Pattern} release time of the bandpass filter envelope\\n * @synonyms bpr\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .clip(.5)\\n * .bpf(500)\\n * .bpenv(4)\\n * .bpr(\\"<.5 .25 .1 0>/4\\")\\n * .release(.5)\\n */","meta":{"filename":"controls.mjs","lineno":938,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the bandpass filter envelope.</p>","name":"bprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"release"}],"synonyms_text":"bpr","synonyms":["bpr"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.clip(.5)\\n.bpf(500)\\n.bpenv(4)\\n.bpr(\\"<.5 .25 .1 0>/4\\")\\n.release(.5)"],"longname":"bprelease","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the filter type. The ladder filter is more aggressive. More types might be added in the future.\\n * @name ftype\\n * @param {number | Pattern} type 12db (0), ladder (1), or 24db (2)\\n * @example\\n * note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpenv(4).lpf(500).ftype(\\"<0 1 2>\\").lpq(1)\\n * @example\\n * note(\\"c f g g a c d4\\").fast(2)\\n * .sound('sawtooth')\\n * .lpf(200).fanchor(0)\\n * .lpenv(3).lpq(1)\\n * .ftype(\\"<ladder 12db 24db>\\")\\n */","meta":{"filename":"controls.mjs","lineno":953,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the filter type. The ladder filter is more aggressive. More types might be added in the future.</p>","name":"ftype","params":[{"type":{"names":["number","Pattern"]},"description":"<p>12db (0), ladder (1), or 24db (2)</p>","name":"type"}],"examples":["note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpenv(4).lpf(500).ftype(\\"<0 1 2>\\").lpq(1)","note(\\"c f g g a c d4\\").fast(2)\\n.sound('sawtooth')\\n.lpf(200).fanchor(0)\\n.lpenv(3).lpq(1)\\n.ftype(\\"<ladder 12db 24db>\\")"],"longname":"ftype","kind":"member","scope":"global"},{"comment":"/**\\n * controls the center of the filter envelope. 0 is unipolar positive, .5 is bipolar, 1 is unipolar negative\\n * @name fanchor\\n * @param {number | Pattern} center 0 to 1\\n * @example\\n * note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpf(\\"{1000}%2\\")\\n * .lpenv(8).fanchor(\\"<0 .5 1>\\")\\n */","meta":{"filename":"controls.mjs","lineno":968,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>controls the center of the filter envelope. 0 is unipolar positive, .5 is bipolar, 1 is unipolar negative</p>","name":"fanchor","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 to 1</p>","name":"center"}],"examples":["note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpf(\\"{1000}%2\\")\\n.lpenv(8).fanchor(\\"<0 .5 1>\\")"],"longname":"fanchor","kind":"member","scope":"global"},{"comment":"/**\\n * Applies the cutoff frequency of the **h**igh-**p**ass **f**ilter.\\n *\\n * When using mininotation, you can also optionally add the 'hpq' parameter, separated by ':'.\\n *\\n * @name hpf\\n * @param {number | Pattern} frequency audible between 0 and 20000\\n * @synonyms hp, hcutoff\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<4000 2000 1000 500 200 100>\\")\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<2000 2000:25>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":977,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the cutoff frequency of the <strong>h</strong>igh-<strong>p</strong>ass <strong>f</strong>ilter.</p>\\n<p>When using mininotation, you can also optionally add the 'hpq' parameter, separated by ':'.</p>","name":"hpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>audible between 0 and 20000</p>","name":"frequency"}],"synonyms_text":"hp, hcutoff","synonyms":["hp","hcutoff"],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<4000 2000 1000 500 200 100>\\")","s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<2000 2000:25>\\")"],"longname":"hpf","kind":"member","scope":"global"},{"comment":"/**\\n * Applies a vibrato to the frequency of the oscillator.\\n *\\n * @name vib\\n * @synonyms vibrato, v\\n * @param {number | Pattern} frequency of the vibrato in hertz\\n * @example\\n * note(\\"a e\\")\\n * .vib(\\"<.5 1 2 4 8 16>\\")\\n * ._scope()\\n * @example\\n * // change the modulation depth with \\":\\"\\n * note(\\"a e\\")\\n * .vib(\\"<.5 1 2 4 8 16>:12\\")\\n * ._scope()\\n */","meta":{"filename":"controls.mjs","lineno":993,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies a vibrato to the frequency of the oscillator.</p>","name":"vib","synonyms_text":"vibrato, v","synonyms":["vibrato","v"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>of the vibrato in hertz</p>","name":"frequency"}],"examples":["note(\\"a e\\")\\n.vib(\\"<.5 1 2 4 8 16>\\")\\n._scope()","// change the modulation depth with \\":\\"\\nnote(\\"a e\\")\\n.vib(\\"<.5 1 2 4 8 16>:12\\")\\n._scope()"],"longname":"vib","kind":"member","scope":"global"},{"comment":"/**\\n * Adds pink noise to the mix\\n *\\n * @name noise\\n * @param {number | Pattern} wet wet amount\\n * @example\\n * sound(\\"<white pink brown>/2\\")\\n */","meta":{"filename":"controls.mjs","lineno":1010,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Adds pink noise to the mix</p>","name":"noise","params":[{"type":{"names":["number","Pattern"]},"description":"<p>wet amount</p>","name":"wet"}],"examples":["sound(\\"<white pink brown>/2\\")"],"longname":"noise","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the vibrato depth in semitones. Only has an effect if \`vibrato\` | \`vib\` | \`v\` is is also set\\n *\\n * @name vibmod\\n * @synonyms vmod\\n * @param {number | Pattern} depth of vibrato (in semitones)\\n * @example\\n * note(\\"a e\\").vib(4)\\n * .vibmod(\\"<.25 .5 1 2 12>\\")\\n * ._scope()\\n * @example\\n * // change the vibrato frequency with \\":\\"\\n * note(\\"a e\\")\\n * .vibmod(\\"<.25 .5 1 2 12>:8\\")\\n * ._scope()\\n */","meta":{"filename":"controls.mjs","lineno":1019,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the vibrato depth in semitones. Only has an effect if <code>vibrato</code> | <code>vib</code> | <code>v</code> is is also set</p>","name":"vibmod","synonyms_text":"vmod","synonyms":["vmod"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>of vibrato (in semitones)</p>","name":"depth"}],"examples":["note(\\"a e\\").vib(4)\\n.vibmod(\\"<.25 .5 1 2 12>\\")\\n._scope()","// change the vibrato frequency with \\":\\"\\nnote(\\"a e\\")\\n.vibmod(\\"<.25 .5 1 2 12>:8\\")\\n._scope()"],"longname":"vibmod","kind":"member","scope":"global"},{"comment":"/**\\n * Controls the **h**igh-**p**ass **q**-value.\\n *\\n * @name hpq\\n * @param {number | Pattern} q resonance factor between 0 and 50\\n * @synonyms hresonance\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").hpf(2000).hpq(\\"<0 10 20 30>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1037,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the <strong>h</strong>igh-<strong>p</strong>ass <strong>q</strong>-value.</p>","name":"hpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>resonance factor between 0 and 50</p>","name":"q"}],"synonyms_text":"hresonance","synonyms":["hresonance"],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").hpf(2000).hpq(\\"<0 10 20 30>\\")"],"longname":"hpq","kind":"member","scope":"global"},{"comment":"/**\\n * Controls the **l**ow-**p**ass **q**-value.\\n *\\n * @name lpq\\n * @param {number | Pattern} q resonance factor between 0 and 50\\n * @synonyms resonance\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").lpf(2000).lpq(\\"<0 10 20 30>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1048,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the <strong>l</strong>ow-<strong>p</strong>ass <strong>q</strong>-value.</p>","name":"lpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>resonance factor between 0 and 50</p>","name":"q"}],"synonyms_text":"resonance","synonyms":["resonance"],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").lpf(2000).lpq(\\"<0 10 20 30>\\")"],"longname":"lpq","kind":"member","scope":"global"},{"comment":"/**\\n * DJ filter, below 0.5 is low pass filter, above is high pass filter.\\n *\\n * @name djf\\n * @param {number | Pattern} cutoff below 0.5 is low pass filter, above is high pass filter\\n * @example\\n * n(\\"0 3 7 [10,24]\\").s('superzow').octave(3).djf(\\"<.5 .25 .5 .75>\\").osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1060,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>DJ filter, below 0.5 is low pass filter, above is high pass filter.</p>","name":"djf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>below 0.5 is low pass filter, above is high pass filter</p>","name":"cutoff"}],"examples":["n(\\"0 3 7 [10,24]\\").s('superzow').octave(3).djf(\\"<.5 .25 .5 .75>\\").osc()"],"longname":"djf","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the level of the delay signal.\\n *\\n * When using mininotation, you can also optionally add the 'delaytime' and 'delayfeedback' parameter,\\n * separated by ':'.\\n *\\n *\\n * @name delay\\n * @param {number | Pattern} level between 0 and 1\\n * @example\\n * s(\\"bd bd\\").delay(\\"<0 .25 .5 1>\\")\\n * @example\\n * s(\\"bd bd\\").delay(\\"0.65:0.25:0.9 0.65:0.125:0.7\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1072,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of the delay signal.</p>\\n<p>When using mininotation, you can also optionally add the 'delaytime' and 'delayfeedback' parameter,\\nseparated by ':'.</p>","name":"delay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"level"}],"examples":["s(\\"bd bd\\").delay(\\"<0 .25 .5 1>\\")","s(\\"bd bd\\").delay(\\"0.65:0.25:0.9 0.65:0.125:0.7\\")"],"longname":"delay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the level of the signal that is fed back into the delay.\\n * Caution: Values >= 1 will result in a signal that gets louder and louder! Don't do it\\n *\\n * @name delayfeedback\\n * @param {number | Pattern} feedback between 0 and 1\\n * @synonyms delayfb, dfb\\n * @example\\n * s(\\"bd\\").delay(.25).delayfeedback(\\"<.25 .5 .75 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1088,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of the signal that is fed back into the delay.\\nCaution: Values &gt;= 1 will result in a signal that gets louder and louder! Don't do it</p>","name":"delayfeedback","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"feedback"}],"synonyms_text":"delayfb, dfb","synonyms":["delayfb","dfb"],"examples":["s(\\"bd\\").delay(.25).delayfeedback(\\"<.25 .5 .75 1>\\")"],"longname":"delayfeedback","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the time of the delay effect.\\n *\\n * @name delaytime\\n * @param {number | Pattern} seconds between 0 and Infinity\\n * @synonyms delayt, dt\\n * @example\\n * s(\\"bd bd\\").delay(.25).delaytime(\\"<.125 .25 .5 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1100,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the time of the delay effect.</p>","name":"delaytime","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and Infinity</p>","name":"seconds"}],"synonyms_text":"delayt, dt","synonyms":["delayt","dt"],"examples":["s(\\"bd bd\\").delay(.25).delaytime(\\"<.125 .25 .5 1>\\")"],"longname":"delaytime","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the time of the delay effect in cycles.\\n *\\n * @name delaysync\\n * @param {number | Pattern} cycles delay length in cycles\\n * @synonyms delayt, dt\\n * @example\\n * s(\\"bd bd\\").delay(.25).delaysync(\\"<1 2 3 5>\\".div(8))\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1112,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the time of the delay effect in cycles.</p>","name":"delaysync","params":[{"type":{"names":["number","Pattern"]},"description":"<p>delay length in cycles</p>","name":"cycles"}],"synonyms_text":"delayt, dt","synonyms":["delayt","dt"],"examples":["s(\\"bd bd\\").delay(.25).delaysync(\\"<1 2 3 5>\\".div(8))"],"longname":"delaysync","kind":"member","scope":"global"},{"comment":"/**\\n * Specifies whether delaytime is calculated relative to cps.\\n *\\n * @name lock\\n * @param {number | Pattern} enable When set to 1, delaytime is a direct multiple of a cycle.\\n * @superdirtOnly\\n * @example\\n * s(\\"sd\\").delay().lock(1).osc()\\n *\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1124,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Specifies whether delaytime is calculated relative to cps.</p>","name":"lock","params":[{"type":{"names":["number","Pattern"]},"description":"<p>When set to 1, delaytime is a direct multiple of a cycle.</p>","name":"enable"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\"sd\\").delay().lock(1).osc()"],"longname":"lock","kind":"member","scope":"global"},{"comment":"/**\\n * Set detune for stacked voices of supported oscillators\\n *\\n * @name detune\\n * @param {number | Pattern} amount\\n * @synonyms det\\n * @example\\n * note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").detune(\\"<.1 .2 .5 24.1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1137,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set detune for stacked voices of supported oscillators</p>","name":"detune","params":[{"type":{"names":["number","Pattern"]},"name":"amount"}],"synonyms_text":"det","synonyms":["det"],"examples":["note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").detune(\\"<.1 .2 .5 24.1>\\")"],"longname":"detune","kind":"member","scope":"global"},{"comment":"/**\\n * Set number of stacked voices for supported oscillators\\n *\\n * @name unison\\n * @param {number | Pattern} numvoices\\n * @example\\n * note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").unison(\\"<1 2 7>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1148,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set number of stacked voices for supported oscillators</p>","name":"unison","params":[{"type":{"names":["number","Pattern"]},"name":"numvoices"}],"examples":["note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").unison(\\"<1 2 7>\\")"],"longname":"unison","kind":"member","scope":"global"},{"comment":"/**\\n * Set the stereo pan spread for supported oscillators\\n *\\n * @name spread\\n * @param {number | Pattern} spread between 0 and 1\\n * @example\\n * note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").spread(\\"<0 .3 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1159,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set the stereo pan spread for supported oscillators</p>","name":"spread","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"spread"}],"examples":["note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").spread(\\"<0 .3 1>\\")"],"longname":"spread","kind":"member","scope":"global"},{"comment":"/**\\n * Set dryness of reverb. See \`room\` and \`size\` for more information about reverb.\\n *\\n * @name dry\\n * @param {number | Pattern} dry 0 = wet, 1 = dry\\n * @example\\n * n(\\"[0,3,7](3,8)\\").s(\\"superpiano\\").room(.7).dry(\\"<0 .5 .75 1>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1169,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set dryness of reverb. See <code>room</code> and <code>size</code> for more information about reverb.</p>","name":"dry","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 = wet, 1 = dry</p>","name":"dry"}],"examples":["n(\\"[0,3,7](3,8)\\").s(\\"superpiano\\").room(.7).dry(\\"<0 .5 .75 1>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"dry","kind":"member","scope":"global"},{"comment":"/**\\n * Set frequency of sound.\\n *\\n * @name freq\\n * @param {number | Pattern} frequency in Hz. the audible range is between 20 and 20000 Hz\\n * @example\\n * freq(\\"220 110 440 110\\").s(\\"superzow\\").osc()\\n * @example\\n * freq(\\"110\\".mul.out(\\".5 1.5 .6 [2 3]\\")).s(\\"superzow\\").osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1193,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set frequency of sound.</p>","name":"freq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>in Hz. the audible range is between 20 and 20000 Hz</p>","name":"frequency"}],"examples":["freq(\\"220 110 440 110\\").s(\\"superzow\\").osc()","freq(\\"110\\".mul.out(\\".5 1.5 .6 [2 3]\\")).s(\\"superzow\\").osc()"],"longname":"freq","kind":"member","scope":"global"},{"comment":"/**\\n * Attack time of pitch envelope.\\n *\\n * @name pattack\\n * @synonyms patt\\n * @param {number | Pattern} time time in seconds\\n * @example\\n * note(\\"c eb g bb\\").pattack(\\"0 .1 .25 .5\\").slow(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1206,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Attack time of pitch envelope.</p>","name":"pattack","synonyms_text":"patt","synonyms":["patt"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\"c eb g bb\\").pattack(\\"0 .1 .25 .5\\").slow(2)"],"longname":"pattack","kind":"member","scope":"global"},{"comment":"/**\\n * Decay time of pitch envelope.\\n *\\n * @name pdecay\\n * @synonyms pdec\\n * @param {number | Pattern} time time in seconds\\n * @example\\n * note(\\"<c eb g bb>\\").pdecay(\\"<0 .1 .25 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1217,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Decay time of pitch envelope.</p>","name":"pdecay","synonyms_text":"pdec","synonyms":["pdec"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\"<c eb g bb>\\").pdecay(\\"<0 .1 .25 .5>\\")"],"longname":"pdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Release time of pitch envelope\\n *\\n * @name prelease\\n * @synonyms prel\\n * @param {number | Pattern} time time in seconds\\n * @example\\n * note(\\"<c eb g bb> ~\\")\\n * .release(.5) // to hear the pitch release\\n * .prelease(\\"<0 .1 .25 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1230,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Release time of pitch envelope</p>","name":"prelease","synonyms_text":"prel","synonyms":["prel"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\"<c eb g bb> ~\\")\\n.release(.5) // to hear the pitch release\\n.prelease(\\"<0 .1 .25 .5>\\")"],"longname":"prelease","kind":"member","scope":"global"},{"comment":"/**\\n * Amount of pitch envelope. Negative values will flip the envelope.\\n * If you don't set other pitch envelope controls, \`pattack:.2\` will be the default.\\n *\\n * @name penv\\n * @param {number | Pattern} semitones change in semitones\\n * @example\\n * note(\\"c\\")\\n * .penv(\\"<12 7 1 .5 0 -1 -7 -12>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1243,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amount of pitch envelope. Negative values will flip the envelope.\\nIf you don't set other pitch envelope controls, <code>pattack:.2</code> will be the default.</p>","name":"penv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>change in semitones</p>","name":"semitones"}],"examples":["note(\\"c\\")\\n.penv(\\"<12 7 1 .5 0 -1 -7 -12>\\")"],"longname":"penv","kind":"member","scope":"global"},{"comment":"/**\\n * Curve of envelope. Defaults to linear. exponential is good for kicks\\n *\\n * @name pcurve\\n * @param {number | Pattern} type 0 = linear, 1 = exponential\\n * @example\\n * note(\\"g1*4\\")\\n * .s(\\"sine\\").pdec(.5)\\n * .penv(32)\\n * .pcurve(\\"<0 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1255,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Curve of envelope. Defaults to linear. exponential is good for kicks</p>","name":"pcurve","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 = linear, 1 = exponential</p>","name":"type"}],"examples":["note(\\"g1*4\\")\\n.s(\\"sine\\").pdec(.5)\\n.penv(32)\\n.pcurve(\\"<0 1>\\")"],"longname":"pcurve","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the range anchor of the envelope:\\n * - anchor 0: range = [note, note + penv]\\n * - anchor 1: range = [note - penv, note]\\n * If you don't set an anchor, the value will default to the psustain value.\\n *\\n * @name panchor\\n * @param {number | Pattern} anchor anchor offset\\n * @example\\n * note(\\"c c4\\").penv(12).panchor(\\"<0 .5 1 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1268,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the range anchor of the envelope:</p>\\n<ul>\\n<li>anchor 0: range = [note, note + penv]</li>\\n<li>anchor 1: range = [note - penv, note]\\nIf you don't set an anchor, the value will default to the psustain value.</li>\\n</ul>","name":"panchor","params":[{"type":{"names":["number","Pattern"]},"description":"<p>anchor offset</p>","name":"anchor"}],"examples":["note(\\"c c4\\").penv(12).panchor(\\"<0 .5 1 .5>\\")"],"longname":"panchor","kind":"member","scope":"global"},{"comment":"/**\\n * Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.\\n *\\n * @name leslie\\n * @param {number | Pattern} wet between 0 and 1\\n * @example\\n * n(\\"0,4,7\\").s(\\"supersquare\\").leslie(\\"<0 .4 .6 1>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1292,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.</p>","name":"leslie","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"wet"}],"examples":["n(\\"0,4,7\\").s(\\"supersquare\\").leslie(\\"<0 .4 .6 1>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"leslie","kind":"member","scope":"global"},{"comment":"/**\\n * Rate of modulation / rotation for leslie effect\\n *\\n * @name lrate\\n * @param {number | Pattern} rate 6.7 for fast, 0.7 for slow\\n * @example\\n * n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(\\"<1 2 4 8>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1303,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Rate of modulation / rotation for leslie effect</p>","name":"lrate","params":[{"type":{"names":["number","Pattern"]},"description":"<p>6.7 for fast, 0.7 for slow</p>","name":"rate"}],"examples":["n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(\\"<1 2 4 8>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"lrate","kind":"member","scope":"global"},{"comment":"/**\\n * Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)\\n *\\n * @name lsize\\n * @param {number | Pattern} meters somewhere between 0 and 1\\n * @example\\n * n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(2).lsize(\\"<.1 .5 1>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1315,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)</p>","name":"lsize","params":[{"type":{"names":["number","Pattern"]},"description":"<p>somewhere between 0 and 1</p>","name":"meters"}],"examples":["n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(2).lsize(\\"<.1 .5 1>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"lsize","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the displayed text for an event on the pianoroll\\n *\\n * @name label\\n * @param {string} label text to display\\n */","meta":{"filename":"controls.mjs","lineno":1326,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the displayed text for an event on the pianoroll</p>","name":"label","params":[{"type":{"names":["string"]},"description":"<p>text to display</p>","name":"label"}],"longname":"label","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the default octave of a synth.\\n *\\n * @name octave\\n * @param {number | Pattern} octave octave number\\n * @example\\n * n(\\"0,4,7\\").s('supersquare').octave(\\"<3 4 5 6>\\").osc()\\n * @superDirtOnly\\n */","meta":{"filename":"controls.mjs","lineno":1362,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the default octave of a synth.</p>","name":"octave","params":[{"type":{"names":["number","Pattern"]},"description":"<p>octave number</p>","name":"octave"}],"examples":["n(\\"0,4,7\\").s('supersquare').octave(\\"<3 4 5 6>\\").osc()"],"tags":[{"originalTitle":"superDirtOnly","title":"superdirtonly","text":""}],"longname":"octave","kind":"member","scope":"global"},{"comment":"/**\\n * An \`orbit\` is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.\\n *\\n * @name orbit\\n * @param {number | Pattern} number\\n * @example\\n * stack(\\n *   s(\\"hh*6\\").delay(.5).delaytime(.25).orbit(1),\\n *   s(\\"~ sd ~ sd\\").delay(.5).delaytime(.125).orbit(2)\\n * )\\n */","meta":{"filename":"controls.mjs","lineno":1375,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>An <code>orbit</code> is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.</p>","name":"orbit","params":[{"type":{"names":["number","Pattern"]},"name":"number"}],"examples":["stack(\\n  s(\\"hh*6\\").delay(.5).delaytime(.25).orbit(1),\\n  s(\\"~ sd ~ sd\\").delay(.5).delaytime(.125).orbit(2)\\n)"],"longname":"orbit","kind":"member","scope":"global"},{"comment":"/**\\n * Sets position in stereo.\\n *\\n * @name pan\\n * @param {number | Pattern} pan between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)\\n * @example\\n * s(\\"[bd hh]*2\\").pan(\\"<.5 1 .5 0>\\")\\n * @example\\n * s(\\"bd rim sd rim bd ~ cp rim\\").pan(sine.slow(2))\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1391,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets position in stereo.</p>","name":"pan","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)</p>","name":"pan"}],"examples":["s(\\"[bd hh]*2\\").pan(\\"<.5 1 .5 0>\\")","s(\\"bd rim sd rim bd ~ cp rim\\").pan(sine.slow(2))"],"longname":"pan","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the level of reverb.\\n *\\n * When using mininotation, you can also optionally add the 'size' parameter, separated by ':'.\\n *\\n * @name room\\n * @param {number | Pattern} level between 0 and 1\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(\\"<0 .2 .4 .6 .8 1>\\")\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(\\"<0.9:1 0.9:4>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1454,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of reverb.</p>\\n<p>When using mininotation, you can also optionally add the 'size' parameter, separated by ':'.</p>","name":"room","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"level"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(\\"<0 .2 .4 .6 .8 1>\\")","s(\\"bd sd [~ bd] sd\\").room(\\"<0.9:1 0.9:4>\\")"],"longname":"room","kind":"member","scope":"global"},{"comment":"/**\\n * Reverb lowpass starting frequency (in hertz).\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomlp\\n * @synonyms rlp\\n * @param {number} frequency between 0 and 20000hz\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000)\\n */","meta":{"filename":"controls.mjs","lineno":1468,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb lowpass starting frequency (in hertz).\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomlp","synonyms_text":"rlp","synonyms":["rlp"],"params":[{"type":{"names":["number"]},"description":"<p>between 0 and 20000hz</p>","name":"frequency"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000)","s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000)"],"longname":"roomlp","kind":"member","scope":"global"},{"comment":"/**\\n * Reverb lowpass frequency at -60dB (in hertz).\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomdim\\n * @synonyms rdim\\n * @param {number} frequency between 0 and 20000hz\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rdim(8000)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rdim(400)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1481,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb lowpass frequency at -60dB (in hertz).\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomdim","synonyms_text":"rdim","synonyms":["rdim"],"params":[{"type":{"names":["number"]},"description":"<p>between 0 and 20000hz</p>","name":"frequency"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rdim(8000)","s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rdim(400)"],"longname":"roomdim","kind":"member","scope":"global"},{"comment":"/**\\n * Reverb fade time (in seconds).\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomfade\\n * @synonyms rfade\\n * @param {number} seconds for the reverb to fade\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rfade(0.5)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rfade(4)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1495,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb fade time (in seconds).\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomfade","synonyms_text":"rfade","synonyms":["rfade"],"params":[{"type":{"names":["number"]},"description":"<p>for the reverb to fade</p>","name":"seconds"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rfade(0.5)","s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rfade(4)"],"longname":"roomfade","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sample to use as an impulse response for the reverb.\\n * @name iresponse\\n * @param {string | Pattern} sample to use as an impulse response\\n * @synonyms ir\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(.8).ir(\\"<shaker_large:0 shaker_large:2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1509,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sample to use as an impulse response for the reverb.</p>","name":"iresponse","params":[{"type":{"names":["string","Pattern"]},"description":"<p>to use as an impulse response</p>","name":"sample"}],"synonyms_text":"ir","synonyms":["ir"],"examples":["s(\\"bd sd [~ bd] sd\\").room(.8).ir(\\"<shaker_large:0 shaker_large:2>\\")"],"longname":"iresponse","kind":"member","scope":"global"},{"comment":"/**\\n * Sets speed of the sample for the impulse response.\\n * @name irspeed\\n * @param {string | Pattern} speed\\n * @example\\n * samples('github:switchangel/pad')\\n * $: s(\\"brk/2\\").fit().scrub(irand(16).div(16).seg(8)).ir(\\"swpad:4\\").room(.2).irspeed(\\"<2 1 .5>/2\\").irbegin(.5).roomsize(.5)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1520,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets speed of the sample for the impulse response.</p>","name":"irspeed","params":[{"type":{"names":["string","Pattern"]},"name":"speed"}],"examples":["samples('github:switchangel/pad')\\n$: s(\\"brk/2\\").fit().scrub(irand(16).div(16).seg(8)).ir(\\"swpad:4\\").room(.2).irspeed(\\"<2 1 .5>/2\\").irbegin(.5).roomsize(.5)"],"longname":"irspeed","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the beginning of the IR response sample\\n * @name irbegin\\n * @param {string | Pattern} begin between 0 and 1\\n * @synonyms ir\\n * @example\\n * samples('github:switchangel/pad')\\n * $: s(\\"brk/2\\").fit().scrub(irand(16).div(16).seg(8)).ir(\\"swpad:4\\").room(.65).irspeed(\\"-2\\").irbegin(\\"<0 .5 .75>/2\\").roomsize(.6)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1531,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the beginning of the IR response sample</p>","name":"irbegin","params":[{"type":{"names":["string","Pattern"]},"description":"<p>between 0 and 1</p>","name":"begin"}],"synonyms_text":"ir","synonyms":["ir"],"examples":["samples('github:switchangel/pad')\\n$: s(\\"brk/2\\").fit().scrub(irand(16).div(16).seg(8)).ir(\\"swpad:4\\").room(.65).irspeed(\\"-2\\").irbegin(\\"<0 .5 .75>/2\\").roomsize(.6)"],"longname":"irbegin","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the room size of the reverb, see \`room\`.\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomsize\\n * @param {number | Pattern} size between 0 and 10\\n * @synonyms rsize, sz, size\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(.8).rsize(1)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(.8).rsize(4)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1542,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the room size of the reverb, see <code>room</code>.\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomsize","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 10</p>","name":"size"}],"synonyms_text":"rsize, sz, size","synonyms":["rsize","sz","size"],"examples":["s(\\"bd sd [~ bd] sd\\").room(.8).rsize(1)","s(\\"bd sd [~ bd] sd\\").room(.8).rsize(4)"],"longname":"roomsize","kind":"member","scope":"global"},{"comment":"/**\\n * (Deprecated) Wave shaping distortion. WARNING: can suddenly get unpredictably loud.\\n * Please use distort instead, which has a more predictable response curve\\n * second option in optional array syntax (ex: \\".9:.5\\") applies a postgain to the output\\n *\\n *\\n * @name shape\\n * @param {number | Pattern} distortion between 0 and 1\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").shape(\\"<0 .2 .4 .6 .8>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1563,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>(Deprecated) Wave shaping distortion. WARNING: can suddenly get unpredictably loud.\\nPlease use distort instead, which has a more predictable response curve\\nsecond option in optional array syntax (ex: &quot;.9:.5&quot;) applies a postgain to the output</p>","name":"shape","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"distortion"}],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").shape(\\"<0 .2 .4 .6 .8>\\")"],"longname":"shape","kind":"member","scope":"global"},{"comment":"/**\\n * Wave shaping distortion. CAUTION: it can get loud.\\n * Second option in optional array syntax (ex: \\".9:.5\\") applies a postgain to the output.\\n * Most useful values are usually between 0 and 10 (depending on source gain). If you are feeling adventurous, you can turn it up to 11 and beyond ;)\\n *\\n * @name distort\\n * @synonyms dist\\n * @param {number | Pattern} distortion\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").distort(\\"<0 2 3 10:.5>\\")\\n * @example\\n * note(\\"d1!8\\").s(\\"sine\\").penv(36).pdecay(.12).decay(.23).distort(\\"8:.4\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1576,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Wave shaping distortion. CAUTION: it can get loud.\\nSecond option in optional array syntax (ex: &quot;.9:.5&quot;) applies a postgain to the output.\\nMost useful values are usually between 0 and 10 (depending on source gain). If you are feeling adventurous, you can turn it up to 11 and beyond ;)</p>","name":"distort","synonyms_text":"dist","synonyms":["dist"],"params":[{"type":{"names":["number","Pattern"]},"name":"distortion"}],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").distort(\\"<0 2 3 10:.5>\\")","note(\\"d1!8\\").s(\\"sine\\").penv(36).pdecay(.12).decay(.23).distort(\\"8:.4\\")"],"longname":"distort","kind":"member","scope":"global"},{"comment":"/**\\n * Dynamics Compressor. The params are \`compressor(\\"threshold:ratio:knee:attack:release\\")\`\\n * More info [here](https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties)\\n *\\n * @name compressor\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\")\\n * .compressor(\\"-20:20:10:.002:.02\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1591,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Dynamics Compressor. The params are <code>compressor(&quot;threshold:ratio:knee:attack:release&quot;)</code>\\nMore info <a href=\\"https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties\\">here</a></p>","name":"compressor","examples":["s(\\"bd sd [~ bd] sd,hh*8\\")\\n.compressor(\\"-20:20:10:.002:.02\\")"],"longname":"compressor","kind":"member","scope":"global"},{"comment":"/**\\n * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\\n *\\n * @name speed\\n * @param {number | Pattern} speed -inf to inf, negative numbers play the sample backwards.\\n * @example\\n * s(\\"bd*6\\").speed(\\"1 2 4 1 -2 -4\\")\\n * @example\\n * speed(\\"1 1.5*2 [2 1.1]\\").s(\\"piano\\").clip(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1612,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the speed of sample playback, i.e. a cheap way of changing pitch.</p>","name":"speed","params":[{"type":{"names":["number","Pattern"]},"description":"<p>inf to inf, negative numbers play the sample backwards.</p>","name":"speed"}],"examples":["s(\\"bd*6\\").speed(\\"1 2 4 1 -2 -4\\")","speed(\\"1 1.5*2 [2 1.1]\\").s(\\"piano\\").clip(1)"],"longname":"speed","kind":"member","scope":"global"},{"comment":"/**\\n * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\\n *\\n * @name stretch\\n * @param {number | Pattern} factor -inf to inf, negative numbers play the sample backwards.\\n * @example\\n * s(\\"gm_flute\\").stretch(\\"1 2 .5\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1625,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the speed of sample playback, i.e. a cheap way of changing pitch.</p>","name":"stretch","params":[{"type":{"names":["number","Pattern"]},"description":"<p>inf to inf, negative numbers play the sample backwards.</p>","name":"factor"}],"examples":["s(\\"gm_flute\\").stretch(\\"1 2 .5\\")"],"longname":"stretch","kind":"member","scope":"global"},{"comment":"/**\\n * Used in conjunction with \`speed\`, accepts values of \\"r\\" (rate, default behavior), \\"c\\" (cycles), or \\"s\\" (seconds). Using \`unit \\"c\\"\` means \`speed\` will be interpreted in units of cycles, e.g. \`speed \\"1\\"\` means samples will be stretched to fill a cycle. Using \`unit \\"s\\"\` means the playback speed will be adjusted so that the duration is the number of seconds specified by \`speed\`.\\n *\\n * @name unit\\n * @param {number | string | Pattern} unit see description above\\n * @example\\n * speed(\\"1 2 .5 3\\").s(\\"bd\\").unit(\\"c\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1635,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Used in conjunction with <code>speed</code>, accepts values of &quot;r&quot; (rate, default behavior), &quot;c&quot; (cycles), or &quot;s&quot; (seconds). Using <code>unit &quot;c&quot;</code> means <code>speed</code> will be interpreted in units of cycles, e.g. <code>speed &quot;1&quot;</code> means samples will be stretched to fill a cycle. Using <code>unit &quot;s&quot;</code> means the playback speed will be adjusted so that the duration is the number of seconds specified by <code>speed</code>.</p>","name":"unit","params":[{"type":{"names":["number","string","Pattern"]},"description":"<p>see description above</p>","name":"unit"}],"examples":["speed(\\"1 2 .5 3\\").s(\\"bd\\").unit(\\"c\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"unit","kind":"member","scope":"global"},{"comment":"/**\\n * Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:\\n *\\n * \\"A simplistic pitch-raising algorithm. It's not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.\\"\\n *\\n * @name squiz\\n * @param {number | Pattern} squiz Try passing multiples of 2 to it - 2, 4, 8 etc.\\n * @example\\n * squiz(\\"2 4/2 6 [8 16]\\").s(\\"bd\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1647,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:</p>\\n<p>&quot;A simplistic pitch-raising algorithm. It's not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.&quot;</p>","name":"squiz","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Try passing multiples of 2 to it - 2, 4, 8 etc.</p>","name":"squiz"}],"examples":["squiz(\\"2 4/2 6 [8 16]\\").s(\\"bd\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"squiz","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * Formant filter to make things sound like vowels.\\n *\\n * @name vowel\\n * @param {string | Pattern} vowel You can use a e i o u ae aa oe ue y uh un en an on, corresponding to [a] [e] [i] [o] [u] [æ] [ɑ] [ø] [y] [ɯ] [ʌ] [œ̃] [ɛ̃] [ɑ̃] [ɔ̃]. Aliases: aa = å = ɑ, oe = ø = ö, y = ı, ae = æ.\\n * @example\\n * note(\\"[c2 <eb2 <g2 g1>>]*2\\").s('sawtooth')\\n * .vowel(\\"<a e i <o u>>\\")\\n * @example\\n * s(\\"bd sd mt ht bd [~ cp] ht lt\\").vowel(\\"[a|e|i|o|u]\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1672,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Formant filter to make things sound like vowels.</p>","name":"vowel","params":[{"type":{"names":["string","Pattern"]},"description":"<p>You can use a e i o u ae aa oe ue y uh un en an on, corresponding to [a] [e] [i] [o] [u] [æ] [ɑ] [ø] [y] [ɯ] [ʌ] [œ̃] [ɛ̃] [ɑ̃] [ɔ̃]. Aliases: aa = å = ɑ, oe = ø = ö, y = ı, ae = æ.</p>","name":"vowel"}],"examples":["note(\\"[c2 <eb2 <g2 g1>>]*2\\").s('sawtooth')\\n.vowel(\\"<a e i <o u>>\\")","s(\\"bd sd mt ht bd [~ cp] ht lt\\").vowel(\\"[a|e|i|o|u]\\")"],"longname":"vowel","kind":"member","scope":"global"},{"comment":"/**\\n * Noise crackle density\\n *\\n * @name density\\n * @param {number | Pattern} density between 0 and x\\n * @example\\n * s(\\"crackle*4\\").density(\\"<0.01 0.04 0.2 0.5>\\".slow(4))\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1697,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Noise crackle density</p>","name":"density","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and x</p>","name":"density"}],"examples":["s(\\"crackle*4\\").density(\\"<0.01 0.04 0.2 0.5>\\".slow(4))"],"longname":"density","kind":"member","scope":"global"},{"comment":"/**\\n * Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.\\n *\\n * @name clip\\n * @synonyms legato\\n * @param {number | Pattern} factor >= 0\\n * @example\\n * note(\\"c a f e\\").s(\\"piano\\").clip(\\"<.5 1 2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1747,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.</p>","name":"clip","synonyms_text":"legato","synonyms":["legato"],"params":[{"type":{"names":["number","Pattern"]},"description":"<blockquote>\\n<p>= 0</p>\\n</blockquote>","name":"factor"}],"examples":["note(\\"c a f e\\").s(\\"piano\\").clip(\\"<.5 1 2>\\")"],"longname":"clip","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the duration of the event in cycles. Similar to clip / legato, it also cuts samples off at the end if they exceed the duration.\\n *\\n * @name duration\\n * @synonyms dur\\n * @param {number | Pattern} seconds >= 0\\n * @example\\n * note(\\"c a f e\\").s(\\"piano\\").dur(\\"<.5 1 2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1759,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the duration of the event in cycles. Similar to clip / legato, it also cuts samples off at the end if they exceed the duration.</p>","name":"duration","synonyms_text":"dur","synonyms":["dur"],"params":[{"type":{"names":["number","Pattern"]},"description":"<blockquote>\\n<p>= 0</p>\\n</blockquote>","name":"seconds"}],"examples":["note(\\"c a f e\\").s(\\"piano\\").dur(\\"<.5 1 2>\\")"],"longname":"duration","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the color of the hap in visualizations like pianoroll or highlighting.\\n * @name color\\n * @synonyms colour\\n * @param {string} color Hexadecimal or CSS color name\\n */","meta":{"filename":"controls.mjs","lineno":1788,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the color of the hap in visualizations like pianoroll or highlighting.</p>","name":"color","synonyms_text":"colour","synonyms":["colour"],"params":[{"type":{"names":["string"]},"description":"<p>Hexadecimal or CSS color name</p>","name":"color"}],"longname":"color","kind":"member","scope":"global"},{"comment":"/**\\n * ADSR envelope: Combination of Attack, Decay, Sustain, and Release.\\n *\\n * @name adsr\\n * @param {number | Pattern} time attack time in seconds\\n * @param {number | Pattern} time decay time in seconds\\n * @param {number | Pattern} gain sustain level (0 to 1)\\n * @param {number | Pattern} time release time in seconds\\n * @example\\n * note(\\"[c3 bb2 f3 eb3]*2\\").sound(\\"sawtooth\\").lpf(600).adsr(\\".1:.1:.5:.2\\")\\n */","meta":{"filename":"controls.mjs","lineno":1801,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>ADSR envelope: Combination of Attack, Decay, Sustain, and Release.</p>","name":"adsr","params":[{"type":{"names":["number","Pattern"]},"description":"<p>attack time in seconds</p>","name":"time"},{"type":{"names":["number","Pattern"]},"description":"<p>decay time in seconds</p>","name":"time"},{"type":{"names":["number","Pattern"]},"description":"<p>sustain level (0 to 1)</p>","name":"gain"},{"type":{"names":["number","Pattern"]},"description":"<p>release time in seconds</p>","name":"time"}],"examples":["note(\\"[c3 bb2 f3 eb3]*2\\").sound(\\"sawtooth\\").lpf(600).adsr(\\".1:.1:.5:.2\\")"],"longname":"adsr","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI channel: Sets the MIDI channel for the event.\\n *\\n * @name midichan\\n * @param {number | Pattern} channel MIDI channel number (0-15)\\n * @example\\n * note(\\"c4\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1835,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI channel: Sets the MIDI channel for the event.</p>","name":"midichan","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI channel number (0-15)</p>","name":"channel"}],"examples":["note(\\"c4\\").midichan(1).midi()"],"longname":"midichan","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI port: Sets the MIDI port for the event.\\n *\\n * @name midiport\\n * @param {number | Pattern} port MIDI port\\n * @example\\n * note(\\"c a f e\\").midiport(\\"<0 1 2 3>\\").midi()\\n */","meta":{"filename":"controls.mjs","lineno":1847,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI port: Sets the MIDI port for the event.</p>","name":"midiport","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI port</p>","name":"port"}],"examples":["note(\\"c a f e\\").midiport(\\"<0 1 2 3>\\").midi()"],"longname":"midiport","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI command: Sends a MIDI command message.\\n *\\n * @name midicmd\\n * @param {number | Pattern} command MIDI command\\n * @example\\n * midicmd(\\"clock*48,<start stop>/2\\").midi()\\n */","meta":{"filename":"controls.mjs","lineno":1857,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI command: Sends a MIDI command message.</p>","name":"midicmd","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI command</p>","name":"command"}],"examples":["midicmd(\\"clock*48,<start stop>/2\\").midi()"],"longname":"midicmd","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI control: Sends a MIDI control change message.\\n *\\n * @name control\\n * @param {number | Pattern}  MIDI control number (0-127)\\n * @param {number | Pattern}  MIDI controller value (0-127)\\n */","meta":{"filename":"controls.mjs","lineno":1867,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control: Sends a MIDI control change message.</p>","name":"control","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control number (0-127)</p>","name":"MIDI"},{"type":{"names":["number","Pattern"]},"description":"<p>controller value (0-127)</p>","name":"MIDI"}],"longname":"control","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI control number: Sends a MIDI control change message.\\n *\\n * @name ccn\\n * @param {number | Pattern}  MIDI control number (0-127)\\n */","meta":{"filename":"controls.mjs","lineno":1882,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control number: Sends a MIDI control change message.</p>","name":"ccn","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control number (0-127)</p>","name":"MIDI"}],"longname":"ccn","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI control value: Sends a MIDI control change message.\\n *\\n * @name ccv\\n * @param {number | Pattern}  MIDI control value (0-127)\\n */","meta":{"filename":"controls.mjs","lineno":1889,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control value: Sends a MIDI control change message.</p>","name":"ccv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control value (0-127)</p>","name":"MIDI"}],"longname":"ccv","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI NRPN non-registered parameter number: Sends a MIDI NRPN non-registered parameter number message.\\n * @name nrpnn\\n * @param {number | Pattern} nrpnn MIDI NRPN non-registered parameter number (0-127)\\n * @example\\n * note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1899,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI NRPN non-registered parameter number: Sends a MIDI NRPN non-registered parameter number message.</p>","name":"nrpnn","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI NRPN non-registered parameter number (0-127)</p>","name":"nrpnn"}],"examples":["note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()"],"longname":"nrpnn","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI NRPN non-registered parameter value: Sends a MIDI NRPN non-registered parameter value message.\\n * @name nrpv\\n * @param {number | Pattern} nrpv MIDI NRPN non-registered parameter value (0-127)\\n * @example\\n * note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1907,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI NRPN non-registered parameter value: Sends a MIDI NRPN non-registered parameter value message.</p>","name":"nrpv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI NRPN non-registered parameter value (0-127)</p>","name":"nrpv"}],"examples":["note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()"],"longname":"nrpv","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI program number: Sends a MIDI program change message.\\n *\\n * @name progNum\\n * @param {number | Pattern} program MIDI program number (0-127)\\n * @example\\n * note(\\"c4\\").progNum(10).midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1916,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI program number: Sends a MIDI program change message.</p>","name":"progNum","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI program number (0-127)</p>","name":"program"}],"examples":["note(\\"c4\\").progNum(10).midichan(1).midi()"],"longname":"progNum","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI sysex: Sends a MIDI sysex message.\\n * @name sysex\\n * @param {number | Pattern} id Sysex ID\\n * @param {number | Pattern} data Sysex data\\n * @example\\n * note(\\"c4\\").sysex([\\"0x77\\", \\"0x01:0x02:0x03:0x04\\"]).midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1926,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex: Sends a MIDI sysex message.</p>","name":"sysex","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex ID</p>","name":"id"},{"type":{"names":["number","Pattern"]},"description":"<p>Sysex data</p>","name":"data"}],"examples":["note(\\"c4\\").sysex([\\"0x77\\", \\"0x01:0x02:0x03:0x04\\"]).midichan(1).midi()"],"longname":"sysex","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI sysex ID: Sends a MIDI sysex identifier message.\\n * @name sysexid\\n * @param {number | Pattern} id Sysex ID\\n * @example\\n * note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1941,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex ID: Sends a MIDI sysex identifier message.</p>","name":"sysexid","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex ID</p>","name":"id"}],"examples":["note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()"],"longname":"sysexid","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI sysex data: Sends a MIDI sysex message.\\n * @name sysexdata\\n * @param {number | Pattern} data Sysex data\\n * @example\\n * note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1949,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex data: Sends a MIDI sysex message.</p>","name":"sysexdata","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex data</p>","name":"data"}],"examples":["note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()"],"longname":"sysexdata","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI pitch bend: Sends a MIDI pitch bend message.\\n * @name midibend\\n * @param {number | Pattern} midibend MIDI pitch bend (-1 - 1)\\n * @example\\n * note(\\"c4\\").midibend(sine.slow(4).range(-0.4,0.4)).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1958,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI pitch bend: Sends a MIDI pitch bend message.</p>","name":"midibend","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI pitch bend (-1 - 1)</p>","name":"midibend"}],"examples":["note(\\"c4\\").midibend(sine.slow(4).range(-0.4,0.4)).midi()"],"longname":"midibend","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI key after touch: Sends a MIDI key after touch message.\\n * @name miditouch\\n * @param {number | Pattern} miditouch MIDI key after touch (0-1)\\n * @example\\n * note(\\"c4\\").miditouch(sine.slow(4).range(0,1)).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1966,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI key after touch: Sends a MIDI key after touch message.</p>","name":"miditouch","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI key after touch (0-1)</p>","name":"miditouch"}],"examples":["note(\\"c4\\").miditouch(sine.slow(4).range(0,1)).midi()"],"longname":"miditouch","kind":"member","scope":"global"},{"comment":"/**\\n * Sets properties in a batch.\\n *\\n * @name as\\n * @param {String | Array} mapping the control names that are set\\n * @example\\n * \\"c:.5 a:1 f:.25 e:.8\\".as(\\"note:clip\\")\\n * @example\\n * \\"{0@2 0.25 0 0.5 .3 .5}%8\\".as(\\"begin\\").s(\\"sax_vib\\").clip(1)\\n */","meta":{"filename":"controls.mjs","lineno":1985,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets properties in a batch.</p>","name":"as","params":[{"type":{"names":["String","Array"]},"description":"<p>the control names that are set</p>","name":"mapping"}],"examples":["\\"c:.5 a:1 f:.25 e:.8\\".as(\\"note:clip\\")","\\"{0@2 0.25 0 0.5 .3 .5}%8\\".as(\\"begin\\").s(\\"sax_vib\\").clip(1)"],"longname":"as","kind":"member","scope":"global"},{"comment":"/**\\n * Allows you to scrub an audio file like a tape loop by passing values that represents the position in the audio file\\n * in the optional array syntax ex: \\"0.5:2\\", the second value controls the speed of playback\\n * @name scrub\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples('github:switchangel/pad')\\n * s(\\"swpad:0\\").scrub(\\"{0.1!2 .25@3 0.7!2 <0.8:1.5>}%8\\")\\n * @example\\n * samples('github:yaxu/clean-breaks/main');\\n * s(\\"amen/4\\").fit().scrub(\\"{0@3 0@2 4@3}%8\\".div(16))\\n */","meta":{"filename":"controls.mjs","lineno":2004,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows you to scrub an audio file like a tape loop by passing values that represents the position in the audio file\\nin the optional array syntax ex: &quot;0.5:2&quot;, the second value controls the speed of playback</p>","name":"scrub","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples('github:switchangel/pad')\\ns(\\"swpad:0\\").scrub(\\"{0.1!2 .25@3 0.7!2 <0.8:1.5>}%8\\")","samples('github:yaxu/clean-breaks/main');\\ns(\\"amen/4\\").fit().scrub(\\"{0@3 0@2 4@3}%8\\".div(16))"],"scope":"static","longname":"Pattern.scrub","kind":"member"},{"comment":"/**\\n * Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\\n * Should only be used with single characters as values, otherwise the character slots will be messed up.\\n * Character legend:\\n *\\n * - \\"|\\" cycle separator\\n * - \\"-\\" hold previous value\\n * - \\".\\" silence\\n *\\n * @param {Pattern} pattern the pattern to use\\n * @param {number} chars max number of characters (approximately)\\n * @returns string\\n * @example\\n * const line = drawLine(\\"0 [1 2 3]\\", 10); // |0--123|0--123\\n * console.log(line);\\n * silence;\\n */","meta":{"range":[1426,2796],"filename":"drawLine.mjs","lineno":26,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100019901","name":"drawLine","type":"FunctionDeclaration","paramnames":["pat","chars"]},"vars":{"cycle":"drawLine~cycle","pos":"drawLine~pos","lines":"drawLine~lines","emptyLine":"drawLine~emptyLine","haps":"drawLine~haps","durations":"drawLine~durations","":null,"charFraction":"drawLine~charFraction","totalSlots":"drawLine~totalSlots","i":"drawLine~i","undefined":null,"matches":"drawLine~matches","missingLines":"drawLine~missingLines"}},"description":"<p>Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\\nShould only be used with single characters as values, otherwise the character slots will be messed up.\\nCharacter legend:</p>\\n<ul>\\n<li>&quot;|&quot; cycle separator</li>\\n<li>&quot;-&quot; hold previous value</li>\\n<li>&quot;.&quot; silence</li>\\n</ul>","params":[{"type":{"names":["Pattern"]},"description":"<p>the pattern to use</p>","name":"pattern"},{"type":{"names":["number"]},"description":"<p>max number of characters (approximately)</p>","name":"chars"}],"returns":[{"description":"<p>string</p>"}],"examples":["const line = drawLine(\\"0 [1 2 3]\\", 10); // |0--123|0--123\\nconsole.log(line);\\nsilence;"],"name":"drawLine","longname":"drawLine","kind":"function","scope":"global"},{"comment":"/**\\n * Changes the structure of the pattern to form an Euclidean rhythm.\\n * Euclidean rhythms are rhythms obtained using the greatest common\\n * divisor of two numbers.  They were described in 2004 by Godfried\\n * Toussaint, a Canadian computer scientist.  Euclidean rhythms are\\n * really useful for computer/algorithmic music because they can\\n * describe a large number of rhythms with a couple of numbers.\\n *\\n * @memberof Pattern\\n * @name euclid\\n * @param {number} pulses the number of onsets/beats\\n * @param {number} steps the number of steps to fill\\n * @returns Pattern\\n * @example\\n * // The Cuban tresillo pattern.\\n * note(\\"c3\\").euclid(3,8)\\n */","meta":{"filename":"euclid.mjs","lineno":54,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the structure of the pattern to form an Euclidean rhythm.\\nEuclidean rhythms are rhythms obtained using the greatest common\\ndivisor of two numbers.  They were described in 2004 by Godfried\\nToussaint, a Canadian computer scientist.  Euclidean rhythms are\\nreally useful for computer/algorithmic music because they can\\ndescribe a large number of rhythms with a couple of numbers.</p>","memberof":"Pattern","name":"euclid","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets/beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["// The Cuban tresillo pattern.\\nnote(\\"c3\\").euclid(3,8)"],"scope":"static","longname":"Pattern.euclid","kind":"member"},{"comment":"/**\\n * Like \`euclid\`, but has an additional parameter for 'rotating' the resulting sequence.\\n * @memberof Pattern\\n * @name euclidRot\\n * @param {number} pulses the number of onsets/beats\\n * @param {number} steps the number of steps to fill\\n * @param {number} rotation offset in steps\\n * @returns Pattern\\n * @example\\n * // A Samba rhythm necklace from Brazil\\n * note(\\"c3\\").euclidRot(3,16,14)\\n */","meta":{"filename":"euclid.mjs","lineno":72,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>euclid</code>, but has an additional parameter for 'rotating' the resulting sequence.</p>","memberof":"Pattern","name":"euclidRot","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets/beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>offset in steps</p>","name":"rotation"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["// A Samba rhythm necklace from Brazil\\nnote(\\"c3\\").euclidRot(3,16,14)"],"scope":"static","longname":"Pattern.euclidRot","kind":"member"},{"comment":"/**\\n * @example // A thirteenth-century Persian rhythm called Khafif-e-ramal.\\n * note(\\"c3\\").euclid(2,5)\\n * @example // The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\\n * note(\\"c3\\").euclid(3,4)\\n * @example // Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\\n * note(\\"c3\\").euclidRot(3,5,2)\\n * @example // A Ruchenitza rhythm used in a Bulgarian folk dance.\\n * note(\\"c3\\").euclid(3,7)\\n * @example // The Cuban tresillo pattern.\\n * note(\\"c3\\").euclid(3,8)\\n * @example // Another Ruchenitza Bulgarian folk-dance rhythm.\\n * note(\\"c3\\").euclid(4,7)\\n * @example // The Aksak rhythm of Turkey.\\n * note(\\"c3\\").euclid(4,9)\\n * @example // The metric pattern used by Frank Zappa in his piece titled Outside Now.\\n * note(\\"c3\\").euclid(4,11)\\n * @example // Yields the York-Samai pattern, a popular Arab rhythm.\\n * note(\\"c3\\").euclid(5,6)\\n * @example // The Nawakhat pattern, another popular Arab rhythm.\\n * note(\\"c3\\").euclid(5,7)\\n * @example // The Cuban cinquillo pattern.\\n * note(\\"c3\\").euclid(5,8)\\n * @example // A popular Arab rhythm called Agsag-Samai.\\n * note(\\"c3\\").euclid(5,9)\\n * @example // The metric pattern used by Moussorgsky in Pictures at an Exhibition.\\n * note(\\"c3\\").euclid(5,11)\\n * @example // The Venda clapping pattern of a South African children’s song.\\n * note(\\"c3\\").euclid(5,12)\\n * @example // The Bossa-Nova rhythm necklace of Brazil.\\n * note(\\"c3\\").euclid(5,16)\\n * @example // A typical rhythm played on the Bendir (frame drum).\\n * note(\\"c3\\").euclid(7,8)\\n * @example // A common West African bell pattern.\\n * note(\\"c3\\").euclid(7,12)\\n * @example // A Samba rhythm necklace from Brazil.\\n * note(\\"c3\\").euclidRot(7,16,14)\\n * @example // A rhythm necklace used in the Central African Republic.\\n * note(\\"c3\\").euclid(9,16)\\n * @example // A rhythm necklace of the Aka Pygmies of Central Africa.\\n * note(\\"c3\\").euclidRot(11,24,14)\\n * @example // Another rhythm necklace of the Aka Pygmies of the upper Sangha.\\n * note(\\"c3\\").euclidRot(13,24,5)\\n */","meta":{"range":[5307,5459],"filename":"euclid.mjs","lineno":130,"columnno":6,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100020406","name":"_euclidRot","type":"FunctionExpression"},"vars":{"b":"_euclidRot~b"}},"examples":["// A thirteenth-century Persian rhythm called Khafif-e-ramal.\\nnote(\\"c3\\").euclid(2,5)","// The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\\nnote(\\"c3\\").euclid(3,4)","// Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\\nnote(\\"c3\\").euclidRot(3,5,2)","// A Ruchenitza rhythm used in a Bulgarian folk dance.\\nnote(\\"c3\\").euclid(3,7)","// The Cuban tresillo pattern.\\nnote(\\"c3\\").euclid(3,8)","// Another Ruchenitza Bulgarian folk-dance rhythm.\\nnote(\\"c3\\").euclid(4,7)","// The Aksak rhythm of Turkey.\\nnote(\\"c3\\").euclid(4,9)","// The metric pattern used by Frank Zappa in his piece titled Outside Now.\\nnote(\\"c3\\").euclid(4,11)","// Yields the York-Samai pattern, a popular Arab rhythm.\\nnote(\\"c3\\").euclid(5,6)","// The Nawakhat pattern, another popular Arab rhythm.\\nnote(\\"c3\\").euclid(5,7)","// The Cuban cinquillo pattern.\\nnote(\\"c3\\").euclid(5,8)","// A popular Arab rhythm called Agsag-Samai.\\nnote(\\"c3\\").euclid(5,9)","// The metric pattern used by Moussorgsky in Pictures at an Exhibition.\\nnote(\\"c3\\").euclid(5,11)","// The Venda clapping pattern of a South African children’s song.\\nnote(\\"c3\\").euclid(5,12)","// The Bossa-Nova rhythm necklace of Brazil.\\nnote(\\"c3\\").euclid(5,16)","// A typical rhythm played on the Bendir (frame drum).\\nnote(\\"c3\\").euclid(7,8)","// A common West African bell pattern.\\nnote(\\"c3\\").euclid(7,12)","// A Samba rhythm necklace from Brazil.\\nnote(\\"c3\\").euclidRot(7,16,14)","// A rhythm necklace used in the Central African Republic.\\nnote(\\"c3\\").euclid(9,16)","// A rhythm necklace of the Aka Pygmies of Central Africa.\\nnote(\\"c3\\").euclidRot(11,24,14)","// Another rhythm necklace of the Aka Pygmies of the upper Sangha.\\nnote(\\"c3\\").euclidRot(13,24,5)"],"name":"_euclidRot","longname":"_euclidRot","kind":"function","scope":"global","params":[]},{"comment":"/**\\n * Similar to \`euclid\`, but each pulse is held until the next pulse,\\n * so there will be no gaps.\\n * @name euclidLegato\\n * @memberof Pattern\\n * @param {number} pulses the number of onsets/beats\\n * @param {number} steps the number of steps to fill\\n * @param rotation offset in steps\\n * @param pat\\n * @example\\n * note(\\"c3\\").euclidLegato(3,8)\\n */","meta":{"filename":"euclid.mjs","lineno":154,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Similar to <code>euclid</code>, but each pulse is held until the next pulse,\\nso there will be no gaps.</p>","name":"euclidLegato","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets/beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"description":"<p>offset in steps</p>","name":"rotation"},{"name":"pat"}],"examples":["note(\\"c3\\").euclidLegato(3,8)"],"scope":"static","longname":"Pattern.euclidLegato","kind":"member"},{"comment":"/**\\n * Similar to \`euclid\`, but each pulse is held until the next pulse,\\n * so there will be no gaps, and has an additional parameter for 'rotating'\\n * the resulting sequence\\n * @name euclidLegatoRot\\n * @memberof Pattern\\n * @param {number} pulses the number of onsets/beats\\n * @param {number} steps the number of steps to fill\\n * @param {number} rotation offset in steps\\n * @example\\n * note(\\"c3\\").euclidLegatoRot(3,5,2)\\n */","meta":{"filename":"euclid.mjs","lineno":184,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Similar to <code>euclid</code>, but each pulse is held until the next pulse,\\nso there will be no gaps, and has an additional parameter for 'rotating'\\nthe resulting sequence</p>","name":"euclidLegatoRot","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets/beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>offset in steps</p>","name":"rotation"}],"examples":["note(\\"c3\\").euclidLegatoRot(3,5,2)"],"scope":"static","longname":"Pattern.euclidLegatoRot","kind":"member"},{"comment":"/**\\n * A 'euclid' variant with an additional parameter that morphs the resulting\\n * rhythm from 0 (no morphing) to 1 (completely 'even'). For example\\n * \`sound(\\"bd\\").euclidish(3,8,0)\` would be the same as\\n * \`sound(\\"bd\\").euclid(3,8)\`, and \`sound(\\"bd\\").euclidish(3,8,1)\` would be the\\n * same as \`sound(\\"bd bd bd\\")\`. \`sound(\\"bd\\").euclidish(3,8,0.5)\` would have a\\n * groove somewhere between.\\n * Inspired by the work of Malcom Braff.\\n * @name euclidish\\n * @synonyms eish\\n * @memberof Pattern\\n * @param {number} pulses the number of onsets\\n * @param {number} steps the number of steps to fill\\n * @param {number} groove exists between the extremes of 0 (straight euclidian) and 1 (straight pulse)\\n * @example\\n * sound(\\"hh\\").euclidish(7,12,sine.slow(8))\\n * .pan(sine.slow(8))\\n */","meta":{"filename":"euclid.mjs","lineno":200,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A 'euclid' variant with an additional parameter that morphs the resulting\\nrhythm from 0 (no morphing) to 1 (completely 'even'). For example\\n<code>sound(&quot;bd&quot;).euclidish(3,8,0)</code> would be the same as\\n<code>sound(&quot;bd&quot;).euclid(3,8)</code>, and <code>sound(&quot;bd&quot;).euclidish(3,8,1)</code> would be the\\nsame as <code>sound(&quot;bd bd bd&quot;)</code>. <code>sound(&quot;bd&quot;).euclidish(3,8,0.5)</code> would have a\\ngroove somewhere between.\\nInspired by the work of Malcom Braff.</p>","name":"euclidish","synonyms_text":"eish","synonyms":["eish"],"memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>exists between the extremes of 0 (straight euclidian) and 1 (straight pulse)</p>","name":"groove"}],"examples":["sound(\\"hh\\").euclidish(7,12,sine.slow(8))\\n.pan(sine.slow(8))"],"scope":"static","longname":"Pattern.euclidish","kind":"member"},{"comment":"/** @class Class representing a pattern. */","meta":{"range":[1701,27939],"filename":"pattern.mjs","lineno":44,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022983","name":"exports.Pattern","type":"ClassDeclaration"}},"name":"Pattern","longname":"Pattern","kind":"class","classdesc":"<p>Class representing a pattern.</p>","scope":"global","description":"<p>Create a pattern. As an end user, you will most likely not create a Pattern directly.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"memberof":"Pattern","params":[{"type":{"names":["function"]},"description":"<p>The function that maps a <code>State</code> to an array of <code>Hap</code>.</p>","name":"query"}]},{"comment":"/**\\n   * Returns a new pattern, with the function applied to the value of\\n   * each hap. It has the alias \`fmap\`.\\n   * @synonyms fmap\\n   * @param {Function} func to to apply to the value\\n   * @returns Pattern\\n   * @example\\n   * \\"0 1 2\\".withValue(v => v + 10).log()\\n   */","meta":{"range":[3008,3177],"filename":"pattern.mjs","lineno":93,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023091","name":"Pattern#withValue","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern, with the function applied to the value of\\neach hap. It has the alias <code>fmap</code>.</p>","synonyms_text":"fmap","synonyms":["fmap"],"params":[{"type":{"names":["function"]},"description":"<p>to to apply to the value</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"0 1 2\\".withValue(v => v + 10).log()"],"name":"withValue","longname":"Pattern#withValue","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * see \`withValue\`\\n   * @noAutocomplete\\n   */","meta":{"range":[3380,3429],"filename":"pattern.mjs","lineno":111,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023148","name":"Pattern#fmap","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>see <code>withValue</code></p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"fmap","longname":"Pattern#fmap","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Assumes 'this' is a pattern of functions, and given a function to\\n   * resolve wholes, applies a given pattern of values to that\\n   * pattern of functions.\\n   * @param {Function} whole_func\\n   * @param {Function} func\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[3711,4453],"filename":"pattern.mjs","lineno":124,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023159","name":"Pattern#appWhole","type":"MethodDefinition","paramnames":["whole_func","pat_val"]},"vars":{"":null}},"description":"<p>Assumes 'this' is a pattern of functions, and given a function to\\nresolve wholes, applies a given pattern of values to that\\npattern of functions.</p>","params":[{"type":{"names":["function"]},"name":"whole_func"},{"type":{"names":["function"]},"name":"func"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appWhole","longname":"Pattern#appWhole","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * When this method is called on a pattern of functions, it matches its haps\\n   * with those in the given pattern of values.  A new pattern is returned, with\\n   * each matching value applied to the corresponding function.\\n   *\\n   * In this \`_appBoth\` variant, where timespans of the function and value haps\\n   * are not the same but do intersect, the resulting hap has a timespan of the\\n   * intersection. This applies to both the part and the whole timespan.\\n   * @param {Pattern} pat_val\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[5004,5428],"filename":"pattern.mjs","lineno":160,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023266","name":"Pattern#appBoth","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>When this method is called on a pattern of functions, it matches its haps\\nwith those in the given pattern of values.  A new pattern is returned, with\\neach matching value applied to the corresponding function.</p>\\n<p>In this <code>_appBoth</code> variant, where timespans of the function and value haps\\nare not the same but do intersect, the resulting hap has a timespan of the\\nintersection. This applies to both the part and the whole timespan.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appBoth","longname":"Pattern#appBoth","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`appBoth\`, but the \`whole\` timespan is not the intersection,\\n   * but the timespan from the function of patterns that this method is called\\n   * on. In practice, this means that the pattern structure, including onsets,\\n   * are preserved from the pattern of functions (often referred to as the left\\n   * hand or inner pattern).\\n   * @param {Pattern} pat_val\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[5858,6662],"filename":"pattern.mjs","lineno":187,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023326","name":"Pattern#appLeft","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>As with <code>appBoth</code>, but the <code>whole</code> timespan is not the intersection,\\nbut the timespan from the function of patterns that this method is called\\non. In practice, this means that the pattern structure, including onsets,\\nare preserved from the pattern of functions (often referred to as the left\\nhand or inner pattern).</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appLeft","longname":"Pattern#appLeft","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`appLeft\`, but \`whole\` timespans are instead taken from the\\n   * pattern of values, i.e. structure is preserved from the right hand/outer\\n   * pattern.\\n   * @param {Pattern} pat_val\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[6916,7724],"filename":"pattern.mjs","lineno":220,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023448","name":"Pattern#appRight","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>As with <code>appLeft</code>, but <code>whole</code> timespans are instead taken from the\\npattern of values, i.e. structure is preserved from the right hand/outer\\npattern.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appRight","longname":"Pattern#appRight","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Query haps inside the given time span.\\n   *\\n   * @param {Fraction | number} begin from time\\n   * @param {Fraction | number} end to time\\n   * @returns Hap[]\\n   * @example\\n   * const pattern = sequence('a', ['b', 'c'])\\n   * const haps = pattern.queryArc(0, 1)\\n   * console.log(haps)\\n   * silence\\n   * @noAutocomplete\\n   */","meta":{"range":[13360,13576],"filename":"pattern.mjs","lineno":416,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024128","name":"Pattern#queryArc","type":"MethodDefinition","paramnames":["begin","end","controls"]},"vars":{"":null}},"description":"<p>Query haps inside the given time span.</p>","params":[{"type":{"names":["Fraction","number"]},"description":"<p>from time</p>","name":"begin"},{"type":{"names":["Fraction","number"]},"description":"<p>to time</p>","name":"end"}],"returns":[{"description":"<p>Hap[]</p>"}],"examples":["const pattern = sequence('a', ['b', 'c'])\\nconst haps = pattern.queryArc(0, 1)\\nconsole.log(haps)\\nsilence"],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"queryArc","longname":"Pattern#queryArc","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern, with queries split at cycle boundaries. This makes\\n   * some calculations easier to express, as all haps are then constrained to\\n   * happen within a cycle.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[13820,14020],"filename":"pattern.mjs","lineno":432,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024164","name":"Pattern#splitQueries","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with queries split at cycle boundaries. This makes\\nsome calculations easier to express, as all haps are then constrained to\\nhappen within a cycle.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"splitQueries","longname":"Pattern#splitQueries","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, where the given function is applied to the query\\n   * timespan before passing it to the original pattern.\\n   * @param {Function} func the function to apply\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[14263,14357],"filename":"pattern.mjs","lineno":447,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024204","name":"Pattern#withQuerySpan","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern, where the given function is applied to the query\\ntimespan before passing it to the original pattern.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withQuerySpan","longname":"Pattern#withQuerySpan","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`withQuerySpan\`, but the function is applied to both the\\n   * begin and end time of the query timespan.\\n   * @param {Function} func the function to apply\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[14817,14936],"filename":"pattern.mjs","lineno":469,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024260","name":"Pattern#withQueryTime","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withQuerySpan</code>, but the function is applied to both the\\nbegin and end time of the query timespan.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withQueryTime","longname":"Pattern#withQueryTime","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Similar to \`withQuerySpan\`, but the function is applied to the timespans\\n   * of all haps returned by pattern queries (both \`part\` timespans, and where\\n   * present, \`whole\` timespans).\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[15214,15324],"filename":"pattern.mjs","lineno":481,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024285","name":"Pattern#withHapSpan","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Similar to <code>withQuerySpan</code>, but the function is applied to the timespans\\nof all haps returned by pattern queries (both <code>part</code> timespans, and where\\npresent, <code>whole</code> timespans).</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHapSpan","longname":"Pattern#withHapSpan","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`withHapSpan\`, but the function is applied to both the\\n   * begin and end time of the hap timespans.\\n   * @param {Function} func the function to apply\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[15547,15630],"filename":"pattern.mjs","lineno":492,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024310","name":"Pattern#withHapTime","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withHapSpan</code>, but the function is applied to both the\\nbegin and end time of the hap timespans.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHapTime","longname":"Pattern#withHapTime","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the given function applied to the list of haps returned by every query.\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[15821,15968],"filename":"pattern.mjs","lineno":502,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024327","name":"Pattern#withHaps","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given function applied to the list of haps returned by every query.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHaps","longname":"Pattern#withHaps","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`withHaps\`, but applies the function to every hap, rather than every list of haps.\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[16151,16222],"filename":"pattern.mjs","lineno":514,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024357","name":"Pattern#withHap","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withHaps</code>, but applies the function to every hap, rather than every list of haps.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHap","longname":"Pattern#withHap","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the context field set to every hap set to the given value.\\n   * @param {*} context\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[16396,16480],"filename":"pattern.mjs","lineno":524,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024374","name":"Pattern#setContext","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the context field set to every hap set to the given value.</p>","params":[{"type":{"names":["*"]},"name":"context"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"setContext","longname":"Pattern#setContext","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the given function applied to the context field of every hap.\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[16661,16901],"filename":"pattern.mjs","lineno":534,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024391","name":"Pattern#withContext","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given function applied to the context field of every hap.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withContext","longname":"Pattern#withContext","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the context field of every hap set to an empty object.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[17047,17121],"filename":"pattern.mjs","lineno":548,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024439","name":"Pattern#stripContext","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern with the context field of every hap set to an empty object.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"stripContext","longname":"Pattern#stripContext","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern with the given location information added to the\\n   * context of every hap.\\n   * @param {Number} start start offset\\n   * @param {Number} end end offset\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[17359,17726],"filename":"pattern.mjs","lineno":560,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024455","name":"Pattern#withLoc","type":"MethodDefinition","paramnames":["start","end"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given location information added to the\\ncontext of every hap.</p>","params":[{"type":{"names":["Number"]},"description":"<p>start offset</p>","name":"start"},{"type":{"names":["Number"]},"description":"<p>end offset</p>","name":"end"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withLoc","longname":"Pattern#withLoc","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new Pattern, which only returns haps that meet the given test.\\n   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[17968,18065],"filename":"pattern.mjs","lineno":582,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024519","name":"Pattern#filterHaps","type":"MethodDefinition","paramnames":["hap_test"]},"vars":{"":null}},"description":"<p>Returns a new Pattern, which only returns haps that meet the given test.</p>","params":[{"type":{"names":["function"]},"description":"<p>a function which returns false for haps to be removed from the pattern</p>","name":"hap_test"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"filterHaps","longname":"Pattern#filterHaps","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`filterHaps\`, but the function is applied to values\\n   * inside haps.\\n   * @param {Function} value_test\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[18241,18386],"filename":"pattern.mjs","lineno":593,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024538","name":"Pattern#filterValues","type":"MethodDefinition","paramnames":["value_test"]},"vars":{"":null}},"description":"<p>As with <code>filterHaps</code>, but the function is applied to values\\ninside haps.</p>","params":[{"type":{"names":["function"]},"name":"value_test"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"filterValues","longname":"Pattern#filterValues","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern, with haps containing undefined values removed from\\n   * query results.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[18544,18625],"filename":"pattern.mjs","lineno":603,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024569","name":"Pattern#removeUndefineds","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with haps containing undefined values removed from\\nquery results.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"removeUndefineds","longname":"Pattern#removeUndefineds","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, with all haps without onsets filtered out. A hap\\n   * with an onset is one with a \`whole\` timespan that begins at the same time\\n   * as its \`part\` timespan.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[18869,19134],"filename":"pattern.mjs","lineno":614,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024583","name":"Pattern#onsetsOnly","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with all haps without onsets filtered out. A hap\\nwith an onset is one with a <code>whole</code> timespan that begins at the same time\\nas its <code>part</code> timespan.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"onsetsOnly","longname":"Pattern#onsetsOnly","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, with 'continuous' haps (those without 'whole'\\n   * timespans) removed from query results.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[19311,19445],"filename":"pattern.mjs","lineno":627,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024598","name":"Pattern#discreteOnly","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with 'continuous' haps (those without 'whole'\\ntimespans) removed from query results.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"discreteOnly","longname":"Pattern#discreteOnly","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Combines adjacent haps with the same value and whole.  Only\\n   * intended for use in tests.\\n   * @noAutocomplete\\n   */","meta":{"range":[19579,21024],"filename":"pattern.mjs","lineno":637,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024612","name":"Pattern#defragmentHaps","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Combines adjacent haps with the same value and whole.  Only\\nintended for use in tests.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"defragmentHaps","longname":"Pattern#defragmentHaps","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Queries the pattern for the first cycle, returning Haps. Mainly of use when\\n   * debugging a pattern.\\n   * @param {Boolean} with_context - set to true, otherwise the context field\\n   * will be stripped from the resulting haps.\\n   * @returns [Hap]\\n   * @noAutocomplete\\n   */","meta":{"range":[21313,21511],"filename":"pattern.mjs","lineno":692,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024843","name":"Pattern#firstCycle","type":"MethodDefinition","paramnames":["with_context"]},"vars":{"":null}},"description":"<p>Queries the pattern for the first cycle, returning Haps. Mainly of use when\\ndebugging a pattern.</p>","params":[{"type":{"names":["Boolean"]},"description":"<p>set to true, otherwise the context field\\nwill be stripped from the resulting haps.</p>","name":"with_context","defaultvalue":false}],"returns":[{"description":"<p>[Hap]</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"firstCycle","longname":"Pattern#firstCycle","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Accessor for a list of values returned by querying the first cycle.\\n   * @noAutocomplete\\n   */","meta":{"range":[21621,21703],"filename":"pattern.mjs","lineno":704,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024880","name":"Pattern#firstCycleValues","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Accessor for a list of values returned by querying the first cycle.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"firstCycleValues","longname":"Pattern#firstCycleValues","kind":"member","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * More human-readable version of the \`firstCycleValues\` accessor.\\n   * @noAutocomplete\\n   */","meta":{"range":[21809,21972],"filename":"pattern.mjs","lineno":712,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024897","name":"Pattern#showFirstCycle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>More human-readable version of the <code>firstCycleValues</code> accessor.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"showFirstCycle","longname":"Pattern#showFirstCycle","kind":"member","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, which returns haps sorted in temporal order. Mainly\\n   * of use when comparing two patterns for equality, in tests.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[22175,22448],"filename":"pattern.mjs","lineno":724,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024935","name":"Pattern#sortHapsByPart","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, which returns haps sorted in temporal order. Mainly\\nof use when comparing two patterns for equality, in tests.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"sortHapsByPart","longname":"Pattern#sortHapsByPart","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Layers the result of the given function(s). Like \`superimpose\`, but without the original pattern:\\n   * @name layer\\n   * @memberof Pattern\\n   * @synonyms apply\\n   * @returns Pattern\\n   * @example\\n   * \\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n   *   .layer(x=>x.add(\\"0,2\\"))\\n   *   .scale('C minor').note()\\n   */","meta":{"filename":"pattern.mjs","lineno":782,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Layers the result of the given function(s). Like <code>superimpose</code>, but without the original pattern:</p>","name":"layer","memberof":"Pattern","synonyms_text":"apply","synonyms":["apply"],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n  .layer(x=>x.add(\\"0,2\\"))\\n  .scale('C minor').note()"],"scope":"static","longname":"Pattern.layer","kind":"member"},{"comment":"/**\\n   * Superimposes the result of the given function(s) on top of the original pattern:\\n   * @name superimpose\\n   * @memberof Pattern\\n   * @returns Pattern\\n   * @example\\n   * \\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n   *   .superimpose(x=>x.add(2))\\n   *   .scale('C minor').note()\\n   */","meta":{"filename":"pattern.mjs","lineno":797,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimposes the result of the given function(s) on top of the original pattern:</p>","name":"superimpose","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n  .superimpose(x=>x.add(2))\\n  .scale('C minor').note()"],"scope":"static","longname":"Pattern.superimpose","kind":"member"},{"comment":"/**\\n   * Writes the content of the current event to the console (visible in the side menu).\\n   * @name log\\n   * @memberof Pattern\\n   * @example\\n   * s(\\"bd sd\\").log()\\n   */","meta":{"filename":"pattern.mjs","lineno":857,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Writes the content of the current event to the console (visible in the side menu).</p>","name":"log","memberof":"Pattern","examples":["s(\\"bd sd\\").log()"],"scope":"static","longname":"Pattern.log","kind":"member"},{"comment":"/**\\n   * A simplified version of \`log\` which writes all \\"values\\" (various configurable parameters)\\n   * within the event to the console (visible in the side menu).\\n   * @name logValues\\n   * @memberof Pattern\\n   * @example\\n   * s(\\"bd sd\\").gain(\\"0.25 0.5 1\\").n(\\"2 1 0\\").logValues()\\n   */","meta":{"filename":"pattern.mjs","lineno":870,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A simplified version of <code>log</code> which writes all &quot;values&quot; (various configurable parameters)\\nwithin the event to the console (visible in the side menu).</p>","name":"logValues","memberof":"Pattern","examples":["s(\\"bd sd\\").gain(\\"0.25 0.5 1\\").n(\\"2 1 0\\").logValues()"],"scope":"static","longname":"Pattern.logValues","kind":"member"},{"comment":"/**\\n   * Breaks a pattern into pieces according to the structure of a given pattern.\\n   * True values in the given pattern cause the corresponding subcycle of the\\n   * source pattern to be looped, and for an (optional) given function to be\\n   * applied. False values result in the corresponding part of the source pattern\\n   * to be played unchanged.\\n   * @name into\\n   * @memberof Pattern\\n   * @example\\n   * sound(\\"bd sd ht lt\\").into(\\"1 0\\", hurry(2))\\n   */","meta":{"filename":"pattern.mjs","lineno":900,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Breaks a pattern into pieces according to the structure of a given pattern.\\nTrue values in the given pattern cause the corresponding subcycle of the\\nsource pattern to be looped, and for an (optional) given function to be\\napplied. False values result in the corresponding part of the source pattern\\nto be played unchanged.</p>","name":"into","memberof":"Pattern","examples":["sound(\\"bd sd ht lt\\").into(\\"1 0\\", hurry(2))"],"scope":"static","longname":"Pattern.into","kind":"member"},{"comment":"/**\\n * Selects indices in in stacked notes.\\n * @example\\n * note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n * .arpWith(haps => haps[2])\\n * */","meta":{"range":[28909,29139],"filename":"pattern.mjs","lineno":949,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025649","name":"exports.arpWith","type":"VariableDeclaration"}},"description":"<p>Selects indices in in stacked notes.</p>","examples":["note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n.arpWith(haps => haps[2])"],"name":"arpWith","longname":"arpWith","kind":"constant","scope":"global"},{"comment":"/**\\n * Selects indices in in stacked notes.\\n * @example\\n * note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n * .arp(\\"0 [0,2] 1 [0,2]\\")\\n * */","meta":{"range":[29272,29415],"filename":"pattern.mjs","lineno":963,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025703","name":"exports.arp","type":"VariableDeclaration"}},"description":"<p>Selects indices in in stacked notes.</p>","examples":["note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n.arp(\\"0 [0,2] 1 [0,2]\\")"],"name":"arp","longname":"arp","kind":"constant","scope":"global"},{"comment":"/**\\n     *\\n     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.\\n     * @name add\\n     * @memberof Pattern\\n     * @example\\n     * // Here, the triad 0, 2, 4 is shifted by different amounts\\n     * n(\\"0 2 4\\".add(\\"<0 3 4 0>\\")).scale(\\"C:major\\")\\n     * // Without add, the equivalent would be:\\n     * // n(\\"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\\").scale(\\"C:major\\")\\n     * @example\\n     * // You can also use add with notes:\\n     * note(\\"c3 e3 g3\\".add(\\"<0 5 7 0>\\"))\\n     * // Behind the scenes, the notes are converted to midi numbers:\\n     * // note(\\"48 52 55\\".add(\\"<0 5 7 0>\\"))\\n     */","meta":{"filename":"pattern.mjs","lineno":1026,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a pattern of numbers. Adds the given number to each item in the pattern.</p>","name":"add","memberof":"Pattern","examples":["// Here, the triad 0, 2, 4 is shifted by different amounts\\nn(\\"0 2 4\\".add(\\"<0 3 4 0>\\")).scale(\\"C:major\\")\\n// Without add, the equivalent would be:\\n// n(\\"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\\").scale(\\"C:major\\")","// You can also use add with notes:\\nnote(\\"c3 e3 g3\\".add(\\"<0 5 7 0>\\"))\\n// Behind the scenes, the notes are converted to midi numbers:\\n// note(\\"48 52 55\\".add(\\"<0 5 7 0>\\"))"],"scope":"static","longname":"Pattern.add","kind":"member"},{"comment":"/**\\n     *\\n     * Like add, but the given numbers are subtracted.\\n     * @name sub\\n     * @memberof Pattern\\n     * @example\\n     * n(\\"0 2 4\\".sub(\\"<0 1 2 3>\\")).scale(\\"C4:minor\\")\\n     * // See add for more information.\\n     */","meta":{"filename":"pattern.mjs","lineno":1043,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like add, but the given numbers are subtracted.</p>","name":"sub","memberof":"Pattern","examples":["n(\\"0 2 4\\".sub(\\"<0 1 2 3>\\")).scale(\\"C4:minor\\")\\n// See add for more information."],"scope":"static","longname":"Pattern.sub","kind":"member"},{"comment":"/**\\n     *\\n     * Multiplies each number by the given factor.\\n     * @name mul\\n     * @memberof Pattern\\n     * @example\\n     * \\"<1 1.5 [1.66, <2 2.33>]>*4\\".mul(150).freq()\\n     */","meta":{"filename":"pattern.mjs","lineno":1053,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Multiplies each number by the given factor.</p>","name":"mul","memberof":"Pattern","examples":["\\"<1 1.5 [1.66, <2 2.33>]>*4\\".mul(150).freq()"],"scope":"static","longname":"Pattern.mul","kind":"member"},{"comment":"/**\\n     *\\n     * Divides each number by the given factor.\\n     * @name div\\n     * @memberof Pattern\\n     */","meta":{"filename":"pattern.mjs","lineno":1062,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides each number by the given factor.</p>","name":"div","memberof":"Pattern","scope":"static","longname":"Pattern.div","kind":"member"},{"comment":"/**\\n   * Applies the given structure to the pattern:\\n   *\\n   * @example\\n   * note(\\"c,eb,g\\")\\n   *   .struct(\\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\\")\\n   *   .slow(2)\\n   */","meta":{"range":[35283,35371],"filename":"pattern.mjs","lineno":1158,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026243","name":"Pattern.prototype.struct","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Applies the given structure to the pattern:</p>","examples":["note(\\"c,eb,g\\")\\n  .struct(\\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\\")\\n  .slow(2)"],"name":"struct","longname":"Pattern#struct","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns silence when mask is 0 or \\"~\\"\\n   *\\n   * @example\\n   * note(\\"c [eb,g] d [eb,g]\\").mask(\\"<1 [0 1]>\\")\\n   */","meta":{"range":[35591,35676],"filename":"pattern.mjs","lineno":1170,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026283","name":"Pattern.prototype.mask","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Returns silence when mask is 0 or &quot;~&quot;</p>","examples":["note(\\"c [eb,g] d [eb,g]\\").mask(\\"<1 [0 1]>\\")"],"name":"mask","longname":"Pattern#mask","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Resets the pattern to the start of the cycle for each onset of the reset pattern.\\n   *\\n   * @example\\n   * s(\\"[<bd lt> sd]*2, hh*8\\").reset(\\"<x@3 x(5,8)>\\")\\n   */","meta":{"range":[35941,36030],"filename":"pattern.mjs","lineno":1182,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026323","name":"Pattern.prototype.reset","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Resets the pattern to the start of the cycle for each onset of the reset pattern.</p>","examples":["s(\\"[<bd lt> sd]*2, hh*8\\").reset(\\"<x@3 x(5,8)>\\")"],"name":"reset","longname":"Pattern#reset","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Restarts the pattern for each onset of the restart pattern.\\n   * While reset will only reset the current cycle, restart will start from cycle 0.\\n   *\\n   * @example\\n   * s(\\"[<bd lt> sd]*2, hh*8\\").restart(\\"<x@3 x(5,8)>\\")\\n   */","meta":{"range":[36364,36457],"filename":"pattern.mjs","lineno":1195,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026363","name":"Pattern.prototype.restart","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Restarts the pattern for each onset of the restart pattern.\\nWhile reset will only reset the current cycle, restart will start from cycle 0.</p>","examples":["s(\\"[<bd lt> sd]*2, hh*8\\").restart(\\"<x@3 x(5,8)>\\")"],"name":"restart","longname":"Pattern#restart","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Does absolutely nothing, but with a given metrical 'steps'\\n * @name gap\\n * @param  {number} steps\\n * @example\\n * gap(3) // \\"~@3\\"\\n */","meta":{"filename":"pattern.mjs","lineno":1229,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Does absolutely nothing, but with a given metrical 'steps'</p>","name":"gap","params":[{"type":{"names":["number"]},"name":"steps"}],"examples":["gap(3) // \\"~@3\\""],"longname":"gap","kind":"member","scope":"global"},{"comment":"/**\\n * Does absolutely nothing..\\n * @name silence\\n * @example\\n * silence // \\"~\\"\\n */","meta":{"filename":"pattern.mjs","lineno":1238,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Does absolutely nothing..</p>","name":"silence","examples":["silence // \\"~\\""],"longname":"silence","kind":"member","scope":"global"},{"comment":"/** A discrete value that repeats once per cycle.\\n *\\n * @returns {Pattern}\\n * @example\\n * pure('e4') // \\"e4\\"\\n * @noAutocomplete\\n */","meta":{"range":[37705,37962],"filename":"pattern.mjs","lineno":1256,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026442","name":"exports.pure","type":"FunctionDeclaration","paramnames":["value"]}},"description":"<p>A discrete value that repeats once per cycle.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["pure('e4') // \\"e4\\""],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"pure","longname":"pure","kind":"function","scope":"global"},{"comment":"/** Takes a list of patterns, and returns a pattern of lists.\\n */","meta":{"range":[38967,39147],"filename":"pattern.mjs","lineno":1294,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026532","name":"exports.sequenceP","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Takes a list of patterns, and returns a pattern of lists.</p>","name":"sequenceP","longname":"sequenceP","kind":"function","scope":"global"},{"comment":"/** The given items are played at the same time at the same length.\\n *\\n * @return {Pattern}\\n * @synonyms polyrhythm, pr\\n * @example\\n * stack(\\"g3\\", \\"b3\\", [\\"e4\\", \\"d4\\"]).note()\\n * // \\"g3,b3,[e4 d4]\\".note()\\n *\\n * @example\\n * // As a chained function:\\n * s(\\"hh*4\\").stack(\\n *   note(\\"c4(5,8)\\")\\n * )\\n */","meta":{"range":[39446,39824],"filename":"pattern.mjs","lineno":1316,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026572","name":"exports.stack","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>The given items are played at the same time at the same length.</p>","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"polyrhythm, pr","synonyms":["polyrhythm","pr"],"examples":["stack(\\"g3\\", \\"b3\\", [\\"e4\\", \\"d4\\"]).note()\\n// \\"g3,b3,[e4 d4]\\".note()","// As a chained function:\\ns(\\"hh*4\\").stack(\\n  note(\\"c4(5,8)\\")\\n)"],"name":"stack","longname":"stack","kind":"function","scope":"global"},{"comment":"/** Concatenation: combines a list of patterns, switching between them successively, one per cycle:\\n *\\n * synonyms: \`cat\`\\n *\\n * @return {Pattern}\\n * @example\\n * slowcat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"])\\n *\\n */","meta":{"range":[41494,42544],"filename":"pattern.mjs","lineno":1394,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026936","name":"exports.slowcat","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Concatenation: combines a list of patterns, switching between them successively, one per cycle:</p>\\n<p>synonyms: <code>cat</code></p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["slowcat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"])"],"name":"slowcat","longname":"slowcat","kind":"function","scope":"global"},{"comment":"/** Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.\\n * @param {...any} items - The items to concatenate\\n * @return {Pattern}\\n */","meta":{"range":[42770,43143],"filename":"pattern.mjs","lineno":1424,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027096","name":"exports.slowcatPrime","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>The items to concatenate</p>","name":"items"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"slowcatPrime","longname":"slowcatPrime","kind":"function","scope":"global"},{"comment":"/** The given items are con**cat**enated, where each one takes one cycle.\\n *\\n * @param {...any} items - The items to concatenate\\n * @synonyms slowcat\\n * @return {Pattern}\\n * @example\\n * cat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n * // \\"<e5 b4 [d5 c5]>\\".note()\\n *\\n * @example\\n * // As a chained function:\\n * s(\\"hh*4\\").cat(\\n *    note(\\"c4(5,8)\\")\\n * )\\n */","meta":{"range":[43492,43551],"filename":"pattern.mjs","lineno":1449,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027149","name":"exports.cat","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>The given items are con<strong>cat</strong>enated, where each one takes one cycle.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>The items to concatenate</p>","name":"items"}],"synonyms_text":"slowcat","synonyms":["slowcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["cat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n// \\"<e5 b4 [d5 c5]>\\".note()","// As a chained function:\\ns(\\"hh*4\\").cat(\\n   note(\\"c4(5,8)\\")\\n)"],"name":"cat","longname":"cat","kind":"function","scope":"global"},{"comment":"/**\\n * Allows to arrange multiple patterns together over multiple cycles.\\n * Takes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.\\n *\\n * @return {Pattern}\\n * @example\\n * arrange(\\n *   [4, \\"<c a f e>(3,8)\\"],\\n *   [2, \\"<g a>(5,8)\\"]\\n * ).note()\\n */","meta":{"range":[43853,44087],"filename":"pattern.mjs","lineno":1464,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027160","name":"exports.arrange","type":"FunctionDeclaration","paramnames":["sections"]}},"description":"<p>Allows to arrange multiple patterns together over multiple cycles.\\nTakes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["arrange(\\n  [4, \\"<c a f e>(3,8)\\"],\\n  [2, \\"<g a>(5,8)\\"]\\n).note()"],"name":"arrange","longname":"arrange","kind":"function","scope":"global"},{"comment":"/**\\n * Similarly to \`arrange\`, allows you to arrange multiple patterns together over multiple cycles.\\n * Unlike \`arrange\`, you specify a start and stop time for each pattern rather than duration, which\\n * means that patterns can overlap.\\n * @return {Pattern}\\n * @example\\nseqPLoop([0, 2, \\"bd(3,8)\\"],\\n         [1, 3, \\"cp(3,8)\\"]\\n        )\\n  .sound()\\n */","meta":{"range":[44440,44864],"filename":"pattern.mjs","lineno":1481,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027205","name":"exports.seqPLoop","type":"FunctionDeclaration","paramnames":["parts"]}},"description":"<p>Similarly to <code>arrange</code>, allows you to arrange multiple patterns together over multiple cycles.\\nUnlike <code>arrange</code>, you specify a start and stop time for each pattern rather than duration, which\\nmeans that patterns can overlap.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["seqPLoop([0, 2, \\"bd(3,8)\\"],\\n         [1, 3, \\"cp(3,8)\\"]\\n        )\\n  .sound()"],"name":"seqPLoop","longname":"seqPLoop","kind":"function","scope":"global"},{"comment":"/** See \`fastcat\` */","meta":{"range":[45167,45231],"filename":"pattern.mjs","lineno":1513,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027348","name":"exports.sequence","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>See <code>fastcat</code></p>","name":"sequence","longname":"sequence","kind":"function","scope":"global"},{"comment":"/** Like **cat**, but the items are crammed into one cycle.\\n * @synonyms sequence, fastcat\\n * @example\\n * seq(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n * // \\"e5 b4 [d5 c5]\\".note()\\n *\\n * @example\\n * // As a chained function:\\n * s(\\"hh*4\\").seq(\\n *   note(\\"c4(5,8)\\")\\n * )\\n */","meta":{"range":[45498,45557],"filename":"pattern.mjs","lineno":1530,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027359","name":"exports.seq","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Like <strong>cat</strong>, but the items are crammed into one cycle.</p>","synonyms_text":"sequence, fastcat","synonyms":["sequence","fastcat"],"examples":["seq(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n// \\"e5 b4 [d5 c5]\\".note()","// As a chained function:\\ns(\\"hh*4\\").seq(\\n  note(\\"c4(5,8)\\")\\n)"],"name":"seq","longname":"seq","kind":"function","scope":"global"},{"comment":"/**\\n * Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.\\n *\\n * @param {string | string[]} name name of the function, or an array of names to be used as synonyms\\n * @param {function} func function with 1 or more params, where last is the current pattern\\n * @noAutocomplete\\n *\\n */","meta":{"range":[48187,50863],"filename":"pattern.mjs","lineno":1594,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027991","name":"exports.register","type":"FunctionDeclaration","paramnames":["name","func","patternify","preserveSteps","join"]}},"description":"<p>Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.</p>","params":[{"type":{"names":["string","Array.<string>"]},"description":"<p>name of the function, or an array of names to be used as synonyms</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>function with 1 or more params, where last is the current pattern</p>","name":"func"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"register","longname":"register","kind":"function","scope":"global"},{"comment":"/**\\n * Assumes a numerical pattern. Returns a new pattern with all values rounded\\n * to the nearest integer.\\n * @name round\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * n(\\"0.5 1.5 2.5\\".round()).scale(\\"C:major\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1687,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values rounded\\nto the nearest integer.</p>","name":"round","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\"0.5 1.5 2.5\\".round()).scale(\\"C:major\\")"],"scope":"static","longname":"Pattern.round","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern. Returns a new pattern with all values set to\\n * their mathematical floor. E.g. \`3.7\` replaced with to \`3\`, and \`-4.2\`\\n * replaced with \`-5\`.\\n * @name floor\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"42 42.1 42.5 43\\".floor())\\n */","meta":{"filename":"pattern.mjs","lineno":1700,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values set to\\ntheir mathematical floor. E.g. <code>3.7</code> replaced with to <code>3</code>, and <code>-4.2</code>\\nreplaced with <code>-5</code>.</p>","name":"floor","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"42 42.1 42.5 43\\".floor())"],"scope":"static","longname":"Pattern.floor","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern. Returns a new pattern with all values set to\\n * their mathematical ceiling. E.g. \`3.2\` replaced with \`4\`, and \`-4.2\`\\n * replaced with \`-4\`.\\n * @name ceil\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"42 42.1 42.5 43\\".ceil())\\n */","meta":{"filename":"pattern.mjs","lineno":1714,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values set to\\ntheir mathematical ceiling. E.g. <code>3.2</code> replaced with <code>4</code>, and <code>-4.2</code>\\nreplaced with <code>-4</code>.</p>","name":"ceil","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"42 42.1 42.5 43\\".ceil())"],"scope":"static","longname":"Pattern.ceil","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern, containing unipolar values in the range 0 ..\\n * 1. Returns a new pattern with values scaled to the bipolar range -1 .. 1\\n * @returns Pattern\\n * @noAutocomplete\\n */","meta":{"range":[52508,52612],"filename":"pattern.mjs","lineno":1733,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028507","name":"exports.toBipolar","type":"VariableDeclaration"}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 ..</p>\\n<ol>\\n<li>Returns a new pattern with values scaled to the bipolar range -1 .. 1</li>\\n</ol>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"toBipolar","longname":"toBipolar","kind":"constant","scope":"global"},{"comment":"/**\\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\n * Returns a new pattern with values scaled to the unipolar range 0 .. 1\\n * @returns Pattern\\n * @noAutocomplete\\n */","meta":{"range":[52813,52923],"filename":"pattern.mjs","lineno":1743,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028529","name":"exports.fromBipolar","type":"VariableDeclaration"}},"description":"<p>Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\nReturns a new pattern with values scaled to the unipolar range 0 .. 1</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"fromBipolar","longname":"fromBipolar","kind":"constant","scope":"global"},{"comment":"/**\\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\\n * Returns a new pattern with values scaled to the given min/max range.\\n * Most useful in combination with continuous patterns.\\n * @name range\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"[bd sd]*2,hh*8\\")\\n * .cutoff(sine.range(500,4000))\\n */","meta":{"filename":"pattern.mjs","lineno":1747,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\\nReturns a new pattern with values scaled to the given min/max range.\\nMost useful in combination with continuous patterns.</p>","name":"range","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"[bd sd]*2,hh*8\\")\\n.cutoff(sine.range(500,4000))"],"scope":"static","longname":"Pattern.range","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\\n * Returns a new pattern with values scaled to the given min/max range,\\n * following an exponential curve.\\n * @name rangex\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"[bd sd]*2,hh*8\\")\\n * .cutoff(sine.rangex(500,4000))\\n */","meta":{"filename":"pattern.mjs","lineno":1762,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\\nReturns a new pattern with values scaled to the given min/max range,\\nfollowing an exponential curve.</p>","name":"rangex","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"[bd sd]*2,hh*8\\")\\n.cutoff(sine.rangex(500,4000))"],"scope":"static","longname":"Pattern.rangex","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\n * Returns a new pattern with values scaled to the given min/max range.\\n * @name range2\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"[bd sd]*2,hh*8\\")\\n * .cutoff(sine2.range2(500,4000))\\n */","meta":{"filename":"pattern.mjs","lineno":1777,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\nReturns a new pattern with values scaled to the given min/max range.</p>","name":"range2","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"[bd sd]*2,hh*8\\")\\n.cutoff(sine2.range2(500,4000))"],"scope":"static","longname":"Pattern.range2","kind":"member"},{"comment":"/**\\n * Allows dividing numbers via list notation using \\":\\".\\n * Returns a new pattern with just numbers.\\n * @name ratio\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * ratio(\\"1, 5:4, 3:2\\").mul(110)\\n * .freq().s(\\"piano\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1791,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows dividing numbers via list notation using &quot;:&quot;.\\nReturns a new pattern with just numbers.</p>","name":"ratio","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["ratio(\\"1, 5:4, 3:2\\").mul(110)\\n.freq().s(\\"piano\\")"],"scope":"static","longname":"Pattern.ratio","kind":"member"},{"comment":"/** Compress each cycle into the given timespan, leaving a gap\\n * @example\\n * cat(\\n *   s(\\"bd sd\\").compress(.25,.75),\\n *   s(\\"~ bd sd ~\\")\\n * )\\n */","meta":{"range":[54916,55169],"filename":"pattern.mjs","lineno":1820,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028674","name":"exports.compress","type":"VariableDeclaration"}},"description":"<p>Compress each cycle into the given timespan, leaving a gap</p>","examples":["cat(\\n  s(\\"bd sd\\").compress(.25,.75),\\n  s(\\"~ bd sd ~\\")\\n)"],"name":"compress","longname":"compress","kind":"constant","scope":"global"},{"comment":"/**\\n * speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern \\"bd sn\\" only once but compressed into the first half of the cycle, i.e. twice as fast.\\n * @name fastGap\\n * @synonyms fastgap\\n * @example\\n * s(\\"bd sd\\").fastGap(2)\\n */","meta":{"filename":"pattern.mjs","lineno":1833,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern &quot;bd sn&quot; only once but compressed into the first half of the cycle, i.e. twice as fast.</p>","name":"fastGap","synonyms_text":"fastgap","synonyms":["fastgap"],"examples":["s(\\"bd sd\\").fastGap(2)"],"longname":"fastGap","kind":"member","scope":"global"},{"comment":"/**\\n * Similar to \`compress\`, but doesn't leave gaps, and the 'focus' can be bigger than a cycle\\n * @example\\n * s(\\"bd hh sd hh\\").focus(1/4, 3/4)\\n */","meta":{"range":[57060,57250],"filename":"pattern.mjs","lineno":1875,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029016","name":"exports.focus","type":"VariableDeclaration"}},"description":"<p>Similar to <code>compress</code>, but doesn't leave gaps, and the 'focus' can be bigger than a cycle</p>","examples":["s(\\"bd hh sd hh\\").focus(1/4, 3/4)"],"name":"focus","longname":"focus","kind":"constant","scope":"global"},{"comment":"/** The ply function repeats each event the given number of times.\\n * @example\\n * s(\\"bd ~ sd cp\\").ply(\\"<1 2 3>\\")\\n */","meta":{"range":[57517,57748],"filename":"pattern.mjs","lineno":1892,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029095","name":"exports.ply","type":"VariableDeclaration"}},"description":"<p>The ply function repeats each event the given number of times.</p>","examples":["s(\\"bd ~ sd cp\\").ply(\\"<1 2 3>\\")"],"name":"ply","longname":"ply","kind":"constant","scope":"global"},{"comment":"/**\\n * Speed up a pattern by the given factor. Used by \\"*\\" in mini notation.\\n *\\n * @name fast\\n * @synonyms density\\n * @memberof Pattern\\n * @param {number | Pattern} factor speed up factor\\n * @returns Pattern\\n * @example\\n * s(\\"bd hh sd hh\\").fast(2) // s(\\"[bd hh sd hh]*2\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1900,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Speed up a pattern by the given factor. Used by &quot;*&quot; in mini notation.</p>","name":"fast","synonyms_text":"density","synonyms":["density"],"memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>speed up factor</p>","name":"factor"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd hh sd hh\\").fast(2) // s(\\"[bd hh sd hh]*2\\")"],"scope":"static","longname":"Pattern.fast","kind":"member"},{"comment":"/**\\n * Both speeds up the pattern (like 'fast') and the sample playback (like 'speed').\\n * @example\\n * s(\\"bd sd:2\\").hurry(\\"<1 2 4 3>\\").slow(1.5)\\n */","meta":{"range":[58516,58625],"filename":"pattern.mjs","lineno":1930,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029208","name":"exports.hurry","type":"VariableDeclaration"}},"description":"<p>Both speeds up the pattern (like 'fast') and the sample playback (like 'speed').</p>","examples":["s(\\"bd sd:2\\").hurry(\\"<1 2 4 3>\\").slow(1.5)"],"name":"hurry","longname":"hurry","kind":"constant","scope":"global"},{"comment":"/**\\n * Slow down a pattern over the given number of cycles. Like the \\"/\\" operator in mini notation.\\n *\\n * @name slow\\n * @synonyms sparsity\\n * @memberof Pattern\\n * @param {number | Pattern} factor slow down factor\\n * @returns Pattern\\n * @example\\n * s(\\"bd hh sd hh\\").slow(2) // s(\\"[bd hh sd hh]/2\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1934,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slow down a pattern over the given number of cycles. Like the &quot;/&quot; operator in mini notation.</p>","name":"slow","synonyms_text":"sparsity","synonyms":["sparsity"],"memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>slow down factor</p>","name":"factor"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd hh sd hh\\").slow(2) // s(\\"[bd hh sd hh]/2\\")"],"scope":"static","longname":"Pattern.slow","kind":"member"},{"comment":"/**\\n * Carries out an operation 'inside' a cycle.\\n * @example\\n * \\"0 1 2 3 4 3 2 1\\".inside(4, rev).scale('C major').note()\\n * // \\"0 1 2 3 4 3 2 1\\".slow(4).rev().fast(4).scale('C major').note()\\n */","meta":{"range":[59310,59427],"filename":"pattern.mjs","lineno":1958,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029269","name":"exports.inside","type":"VariableDeclaration"}},"description":"<p>Carries out an operation 'inside' a cycle.</p>","examples":["\\"0 1 2 3 4 3 2 1\\".inside(4, rev).scale('C major').note()\\n// \\"0 1 2 3 4 3 2 1\\".slow(4).rev().fast(4).scale('C major').note()"],"name":"inside","longname":"inside","kind":"constant","scope":"global"},{"comment":"/**\\n * Carries out an operation 'outside' a cycle.\\n * @example\\n * \\"<[0 1] 2 [3 4] 5>\\".outside(4, rev).scale('C major').note()\\n * // \\"<[0 1] 2 [3 4] 5>\\".fast(4).rev().slow(4).scale('C major').note()\\n */","meta":{"range":[59631,59750],"filename":"pattern.mjs","lineno":1968,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029293","name":"exports.outside","type":"VariableDeclaration"}},"description":"<p>Carries out an operation 'outside' a cycle.</p>","examples":["\\"<[0 1] 2 [3 4] 5>\\".outside(4, rev).scale('C major').note()\\n// \\"<[0 1] 2 [3 4] 5>\\".fast(4).rev().slow(4).scale('C major').note()"],"name":"outside","longname":"outside","kind":"constant","scope":"global"},{"comment":"/**\\n * Applies the given function every n cycles, starting from the last cycle.\\n * @name lastOf\\n * @memberof Pattern\\n * @param {number} n how many cycles\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * note(\\"c3 d3 e3 g3\\").lastOf(4, x=>x.rev())\\n */","meta":{"filename":"pattern.mjs","lineno":1972,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function every n cycles, starting from the last cycle.</p>","name":"lastOf","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c3 d3 e3 g3\\").lastOf(4, x=>x.rev())"],"scope":"static","longname":"Pattern.lastOf","kind":"member"},{"comment":"/**\\n * Applies the given function every n cycles, starting from the first cycle.\\n * @name firstOf\\n * @memberof Pattern\\n * @param {number} n how many cycles\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * note(\\"c3 d3 e3 g3\\").firstOf(4, x=>x.rev())\\n */","meta":{"filename":"pattern.mjs","lineno":1988,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function every n cycles, starting from the first cycle.</p>","name":"firstOf","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c3 d3 e3 g3\\").firstOf(4, x=>x.rev())"],"scope":"static","longname":"Pattern.firstOf","kind":"member"},{"comment":"/**\\n * An alias for \`firstOf\`\\n * @name every\\n * @memberof Pattern\\n * @param {number} n how many cycles\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * note(\\"c3 d3 e3 g3\\").every(4, x=>x.rev())\\n */","meta":{"filename":"pattern.mjs","lineno":1999,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>An alias for <code>firstOf</code></p>","name":"every","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c3 d3 e3 g3\\").every(4, x=>x.rev())"],"scope":"static","longname":"Pattern.every","kind":"member"},{"comment":"/**\\n * Like layer, but with a single function:\\n * @name apply\\n * @memberof Pattern\\n * @example\\n * \\"<c3 eb3 g3>\\".scale('C minor').apply(scaleTranspose(\\"0,2,4\\")).note()\\n */","meta":{"filename":"pattern.mjs","lineno":2015,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like layer, but with a single function:</p>","name":"apply","memberof":"Pattern","examples":["\\"<c3 eb3 g3>\\".scale('C minor').apply(scaleTranspose(\\"0,2,4\\")).note()"],"scope":"static","longname":"Pattern.apply","kind":"member"},{"comment":"/**\\n * Plays the pattern at the given cycles per minute.\\n * @deprecated\\n * @example\\n * s(\\"<bd sd>,hh*2\\").cpm(90) // = 90 bpm\\n */","meta":{"range":[61394,61488],"filename":"pattern.mjs","lineno":2034,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029412","name":"exports.cpm","type":"VariableDeclaration"}},"description":"<p>Plays the pattern at the given cycles per minute.</p>","deprecated":true,"examples":["s(\\"<bd sd>,hh*2\\").cpm(90) // = 90 bpm"],"name":"cpm","longname":"cpm","kind":"constant","scope":"global"},{"comment":"/**\\n * Nudge a pattern to start earlier in time. Equivalent of Tidal's <~ operator\\n *\\n * @name early\\n * @memberof Pattern\\n * @param {number | Pattern} cycles number of cycles to nudge left\\n * @returns Pattern\\n * @example\\n * \\"bd ~\\".stack(\\"hh ~\\".early(.1)).s()\\n */","meta":{"filename":"pattern.mjs","lineno":2038,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Nudge a pattern to start earlier in time. Equivalent of Tidal's &lt;~ operator</p>","name":"early","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>number of cycles to nudge left</p>","name":"cycles"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"bd ~\\".stack(\\"hh ~\\".early(.1)).s()"],"scope":"static","longname":"Pattern.early","kind":"member"},{"comment":"/**\\n * Nudge a pattern to start later in time. Equivalent of Tidal's ~> operator\\n *\\n * @name late\\n * @memberof Pattern\\n * @param {number | Pattern} cycles number of cycles to nudge right\\n * @returns Pattern\\n * @example\\n * \\"bd ~\\".stack(\\"hh ~\\".late(.1)).s()\\n */","meta":{"filename":"pattern.mjs","lineno":2058,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Nudge a pattern to start later in time. Equivalent of Tidal's ~&gt; operator</p>","name":"late","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>number of cycles to nudge right</p>","name":"cycles"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"bd ~\\".stack(\\"hh ~\\".late(.1)).s()"],"scope":"static","longname":"Pattern.late","kind":"member"},{"comment":"/**\\n * Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:\\n *\\n * @example\\n * s(\\"bd*2 hh*3 [sd bd]*2 perc\\").zoom(0.25, 0.75)\\n * // s(\\"hh*3 [sd bd]*2\\") // equivalent\\n */","meta":{"range":[62674,63093],"filename":"pattern.mjs","lineno":2085,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029505","name":"exports.zoom","type":"VariableDeclaration"}},"description":"<p>Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:</p>","examples":["s(\\"bd*2 hh*3 [sd bd]*2 perc\\").zoom(0.25, 0.75)\\n// s(\\"hh*3 [sd bd]*2\\") // equivalent"],"name":"zoom","longname":"zoom","kind":"constant","scope":"global"},{"comment":"/**\\n * Splits a pattern into the given number of slices, and plays them according to a pattern of slice numbers.\\n * Similar to \`slice\`, but slices up patterns rather than sound samples.\\n * @param {number} number of slices\\n * @param {number} slices to play\\n * @example\\n * note(\\"0 1 2 3 4 5 6 7\\".scale('c:mixolydian'))\\n *.bite(4, \\"3 2 1 0\\")\\n * @example\\n * sound(\\"bd - bd bd*2, - sd:6 - sd:5 sd:1 - [- sd:2] -, hh [- cp:7]\\")\\n  .bank(\\"RolandTR909\\").speed(1.2)\\n  .bite(4, \\"0 0 [1 2] <3 2> 0 0 [2 1] 3\\")\\n */","meta":{"range":[63726,64024],"filename":"pattern.mjs","lineno":2117,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029630","name":"exports.bite","type":"VariableDeclaration"}},"description":"<p>Splits a pattern into the given number of slices, and plays them according to a pattern of slice numbers.\\nSimilar to <code>slice</code>, but slices up patterns rather than sound samples.</p>","params":[{"type":{"names":["number"]},"description":"<p>of slices</p>","name":"number"},{"type":{"names":["number"]},"description":"<p>to play</p>","name":"slices"}],"examples":["note(\\"0 1 2 3 4 5 6 7\\".scale('c:mixolydian'))\\n.bite(4, \\"3 2 1 0\\")","sound(\\"bd - bd bd*2, - sd:6 - sd:5 sd:1 - [- sd:2] -, hh [- cp:7]\\")\\n  .bank(\\"RolandTR909\\").speed(1.2)\\n  .bite(4, \\"0 0 [1 2] <3 2> 0 0 [2 1] 3\\")"],"name":"bite","longname":"bite","kind":"constant","scope":"global"},{"comment":"/**\\n * Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.\\n * @param {number} fraction fraction to select\\n * @example\\n * s(\\"lt ht mt cp, [hh oh]*2\\").linger(\\"<1 .5 .25 .125>\\")\\n */","meta":{"range":[64253,64495],"filename":"pattern.mjs","lineno":2138,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029695","name":"exports.linger","type":"VariableDeclaration"}},"description":"<p>Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.</p>","params":[{"type":{"names":["number"]},"description":"<p>fraction to select</p>","name":"fraction"}],"examples":["s(\\"lt ht mt cp, [hh oh]*2\\").linger(\\"<1 .5 .25 .125>\\")"],"name":"linger","longname":"linger","kind":"constant","scope":"global"},{"comment":"/**\\n * Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.\\n * @name segment\\n * @synonyms seg\\n * @param {number} segments number of segments per cycle\\n * @example\\n * note(saw.range(40,52).segment(24))\\n */","meta":{"filename":"pattern.mjs","lineno":2152,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.</p>","name":"segment","synonyms_text":"seg","synonyms":["seg"],"params":[{"type":{"names":["number"]},"description":"<p>number of segments per cycle</p>","name":"segments"}],"examples":["note(saw.range(40,52).segment(24))"],"longname":"segment","kind":"member","scope":"global"},{"comment":"/**\\n * The function \`swingBy x n\` breaks each cycle into \`n\` slices, and then delays events in the second half of each slice by the amount \`x\`, which is relative to the size of the (half) slice. So if \`x\` is 0 it does nothing, \`0.5\` delays for half the note duration, and 1 will wrap around to doing nothing again. The end result is a shuffle or swing-like rhythm\\n * @param {number} subdivision\\n * @param {number} offset\\n * @example\\n * s(\\"hh*8\\").swingBy(1/3, 4)\\n */","meta":{"range":[65378,65480],"filename":"pattern.mjs","lineno":2171,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029779","name":"exports.swingBy","type":"VariableDeclaration"}},"description":"<p>The function <code>swingBy x n</code> breaks each cycle into <code>n</code> slices, and then delays events in the second half of each slice by the amount <code>x</code>, which is relative to the size of the (half) slice. So if <code>x</code> is 0 it does nothing, <code>0.5</code> delays for half the note duration, and 1 will wrap around to doing nothing again. The end result is a shuffle or swing-like rhythm</p>","params":[{"type":{"names":["number"]},"name":"subdivision"},{"type":{"names":["number"]},"name":"offset"}],"examples":["s(\\"hh*8\\").swingBy(1/3, 4)"],"name":"swingBy","longname":"swingBy","kind":"constant","scope":"global"},{"comment":"/**\\n * Shorthand for swingBy with 1/3:\\n * @param {number} subdivision\\n * @example\\n * s(\\"hh*8\\").swing(4)\\n * // s(\\"hh*8\\").swingBy(1/3, 4)\\n */","meta":{"range":[65622,65696],"filename":"pattern.mjs","lineno":2180,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029803","name":"exports.swing","type":"VariableDeclaration"}},"description":"<p>Shorthand for swingBy with 1/3:</p>","params":[{"type":{"names":["number"]},"name":"subdivision"}],"examples":["s(\\"hh*8\\").swing(4)\\n// s(\\"hh*8\\").swingBy(1/3, 4)"],"name":"swing","longname":"swing","kind":"constant","scope":"global"},{"comment":"/**\\n * Swaps 1s and 0s in a binary pattern.\\n * @name invert\\n * @synonyms inv\\n * @example\\n * s(\\"bd\\").struct(\\"1 0 0 1 0 0 1 0\\".lastOf(4, invert))\\n */","meta":{"filename":"pattern.mjs","lineno":2182,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Swaps 1s and 0s in a binary pattern.</p>","name":"invert","synonyms_text":"inv","synonyms":["inv"],"examples":["s(\\"bd\\").struct(\\"1 0 0 1 0 0 1 0\\".lastOf(4, invert))"],"longname":"invert","kind":"member","scope":"global"},{"comment":"/**\\n * Applies the given function whenever the given pattern is in a true state.\\n * @name when\\n * @memberof Pattern\\n * @param {Pattern} binary_pat\\n * @param {function} func\\n * @returns Pattern\\n * @example\\n * \\"c3 eb3 g3\\".when(\\"<0 1>/2\\", x=>x.sub(\\"5\\")).note()\\n */","meta":{"filename":"pattern.mjs","lineno":2199,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function whenever the given pattern is in a true state.</p>","name":"when","memberof":"Pattern","params":[{"type":{"names":["Pattern"]},"name":"binary_pat"},{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"c3 eb3 g3\\".when(\\"<0 1>/2\\", x=>x.sub(\\"5\\")).note()"],"scope":"static","longname":"Pattern.when","kind":"member"},{"comment":"/**\\n * Superimposes the function result on top of the original pattern, delayed by the given time.\\n * @name off\\n * @memberof Pattern\\n * @param {Pattern | number} time offset time\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * \\"c3 eb3 g3\\".off(1/8, x=>x.add(7)).note()\\n */","meta":{"filename":"pattern.mjs","lineno":2213,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimposes the function result on top of the original pattern, delayed by the given time.</p>","name":"off","memberof":"Pattern","params":[{"type":{"names":["Pattern","number"]},"description":"<p>offset time</p>","name":"time"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"c3 eb3 g3\\".off(1/8, x=>x.add(7)).note()"],"scope":"static","longname":"Pattern.off","kind":"member"},{"comment":"/**\\n * Returns a new pattern where every other cycle is played once, twice as\\n * fast, and offset in time by one quarter of a cycle. Creates a kind of\\n * breakbeat feel.\\n * @returns Pattern\\n */","meta":{"range":[67006,67144],"filename":"pattern.mjs","lineno":2233,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029890","name":"exports.brak","type":"VariableDeclaration"}},"description":"<p>Returns a new pattern where every other cycle is played once, twice as\\nfast, and offset in time by one quarter of a cycle. Creates a kind of\\nbreakbeat feel.</p>","returns":[{"description":"<p>Pattern</p>"}],"name":"brak","longname":"brak","kind":"constant","scope":"global"},{"comment":"/**\\n * Reverse all haps in a pattern\\n *\\n * @name rev\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"c d e g\\").rev()\\n */","meta":{"filename":"pattern.mjs","lineno":2237,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverse all haps in a pattern</p>","name":"rev","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c d e g\\").rev()"],"scope":"static","longname":"Pattern.rev","kind":"member"},{"comment":"/** Like press, but allows you to specify the amount by which each\\n * event is shifted. pressBy(0.5) is the same as press, while\\n * pressBy(1/3) shifts each event by a third of its timespan.\\n * @example\\n * stack(s(\\"hh*4\\"),\\n *       s(\\"bd mt sd ht\\").pressBy(\\"<0 0.5 0.25>\\")\\n *      ).slow(2)\\n */","meta":{"range":[68352,68482],"filename":"pattern.mjs","lineno":2278,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030040","name":"exports.pressBy","type":"VariableDeclaration"}},"description":"<p>Like press, but allows you to specify the amount by which each\\nevent is shifted. pressBy(0.5) is the same as press, while\\npressBy(1/3) shifts each event by a third of its timespan.</p>","examples":["stack(s(\\"hh*4\\"),\\n      s(\\"bd mt sd ht\\").pressBy(\\"<0 0.5 0.25>\\")\\n     ).slow(2)"],"name":"pressBy","longname":"pressBy","kind":"constant","scope":"global"},{"comment":"/**\\n * Syncopates a rhythm, by shifting each event halfway into its timespan.\\n * @example\\n * stack(s(\\"hh*4\\"),\\n *       s(\\"bd mt sd ht\\").every(4, press)\\n *      ).slow(2)\\n */","meta":{"range":[68658,68745],"filename":"pattern.mjs","lineno":2289,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030069","name":"exports.press","type":"VariableDeclaration"}},"description":"<p>Syncopates a rhythm, by shifting each event halfway into its timespan.</p>","examples":["stack(s(\\"hh*4\\"),\\n      s(\\"bd mt sd ht\\").every(4, press)\\n     ).slow(2)"],"name":"press","longname":"press","kind":"constant","scope":"global"},{"comment":"/**\\n * Silences a pattern.\\n * @example\\n * stack(\\n *   s(\\"bd\\").hush(),\\n *   s(\\"hh*3\\")\\n * )\\n */","meta":{"range":[68841,68899],"filename":"pattern.mjs","lineno":2301,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030086","name":"Pattern.prototype.hush","type":"FunctionExpression","paramnames":[]}},"description":"<p>Silences a pattern.</p>","examples":["stack(\\n  s(\\"bd\\").hush(),\\n  s(\\"hh*3\\")\\n)"],"name":"hush","longname":"Pattern#hush","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Applies \`rev\` to a pattern every other cycle, so that the pattern alternates between forwards and backwards.\\n * @example\\n * note(\\"c d e g\\").palindrome()\\n */","meta":{"range":[69066,69191],"filename":"pattern.mjs","lineno":2310,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030096","name":"exports.palindrome","type":"VariableDeclaration"}},"description":"<p>Applies <code>rev</code> to a pattern every other cycle, so that the pattern alternates between forwards and backwards.</p>","examples":["note(\\"c d e g\\").palindrome()"],"name":"palindrome","longname":"palindrome","kind":"constant","scope":"global"},{"comment":"/**\\n * Jux with adjustable stereo width. 0 = mono, 1 = full stereo.\\n * @name juxBy\\n * @synonyms juxby\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").juxBy(\\"<0 .5 1>/2\\", rev)\\n */","meta":{"filename":"pattern.mjs","lineno":2319,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Jux with adjustable stereo width. 0 = mono, 1 = full stereo.</p>","name":"juxBy","synonyms_text":"juxby","synonyms":["juxby"],"examples":["s(\\"bd lt [~ ht] mt cp ~ bd hh\\").juxBy(\\"<0 .5 1>/2\\", rev)"],"longname":"juxBy","kind":"member","scope":"global"},{"comment":"/**\\n * The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(rev)\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(press)\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(iter(4))\\n */","meta":{"range":[70210,70306],"filename":"pattern.mjs","lineno":2349,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030225","name":"exports.jux","type":"VariableDeclaration"}},"description":"<p>The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.</p>","examples":["s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(rev)","s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(press)","s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(iter(4))"],"name":"jux","longname":"jux","kind":"constant","scope":"global"},{"comment":"/**\\n * Superimpose and offset multiple times, applying the given function each time.\\n * @name echoWith\\n * @synonyms echowith, stutWith, stutwith\\n * @param {number} times how many times to repeat\\n * @param {number} time cycle offset between iterations\\n * @param {function} func function to apply, given the pattern and the iteration index\\n * @example\\n * \\"<0 [2 4]>\\"\\n * .echoWith(4, 1/8, (p,n) => p.add(n*2))\\n * .scale(\\"C:minor\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2353,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimpose and offset multiple times, applying the given function each time.</p>","name":"echoWith","synonyms_text":"echowith, stutWith, stutwith","synonyms":["echowith","stutWith","stutwith"],"params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"},{"type":{"names":["function"]},"description":"<p>function to apply, given the pattern and the iteration index</p>","name":"func"}],"examples":["\\"<0 [2 4]>\\"\\n.echoWith(4, 1/8, (p,n) => p.add(n*2))\\n.scale(\\"C:minor\\").note()"],"longname":"echoWith","kind":"member","scope":"global"},{"comment":"/**\\n * Superimpose and offset multiple times, gradually decreasing the velocity\\n * @name echo\\n * @memberof Pattern\\n * @returns Pattern\\n * @param {number} times how many times to repeat\\n * @param {number} time cycle offset between iterations\\n * @param {number} feedback velocity multiplicator for each iteration\\n * @example\\n * s(\\"bd sd\\").echo(3, 1/6, .8)\\n */","meta":{"filename":"pattern.mjs","lineno":2372,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimpose and offset multiple times, gradually decreasing the velocity</p>","name":"echo","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"},{"type":{"names":["number"]},"description":"<p>velocity multiplicator for each iteration</p>","name":"feedback"}],"examples":["s(\\"bd sd\\").echo(3, 1/6, .8)"],"scope":"static","longname":"Pattern.echo","kind":"member"},{"comment":"/**\\n * Deprecated. Like echo, but the last 2 parameters are flipped.\\n * @name stut\\n * @param {number} times how many times to repeat\\n * @param {number} feedback velocity multiplicator for each iteration\\n * @param {number} time cycle offset between iterations\\n * @example\\n * s(\\"bd sd\\").stut(3, .8, 1/6)\\n */","meta":{"filename":"pattern.mjs","lineno":2387,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Deprecated. Like echo, but the last 2 parameters are flipped.</p>","name":"stut","params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>velocity multiplicator for each iteration</p>","name":"feedback"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"}],"examples":["s(\\"bd sd\\").stut(3, .8, 1/6)"],"longname":"stut","kind":"member","scope":"global"},{"comment":"/**\\n * Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.\\n * @name iter\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"0 1 2 3\\".scale('A minor')).iter(4)\\n */","meta":{"filename":"pattern.mjs","lineno":2400,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.</p>","name":"iter","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"0 1 2 3\\".scale('A minor')).iter(4)"],"scope":"static","longname":"Pattern.iter","kind":"member"},{"comment":"/**\\n * Like \`iter\`, but plays the subdivisions in reverse order. Known as iter' in tidalcycles\\n * @name iterBack\\n * @synonyms iterback\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"0 1 2 3\\".scale('A minor')).iterBack(4)\\n */","meta":{"filename":"pattern.mjs","lineno":2427,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>iter</code>, but plays the subdivisions in reverse order. Known as iter' in tidalcycles</p>","name":"iterBack","synonyms_text":"iterback","synonyms":["iterback"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"0 1 2 3\\".scale('A minor')).iterBack(4)"],"scope":"static","longname":"Pattern.iterBack","kind":"member"},{"comment":"/**\\n * Repeats each cycle the given number of times.\\n * @name repeatCycles\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(irand(12).add(34)).segment(4).repeatCycles(2).s(\\"gm_acoustic_guitar_nylon\\")\\n */","meta":{"filename":"pattern.mjs","lineno":2445,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Repeats each cycle the given number of times.</p>","name":"repeatCycles","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(irand(12).add(34)).segment(4).repeatCycles(2).s(\\"gm_acoustic_guitar_nylon\\")"],"scope":"static","longname":"Pattern.repeatCycles","kind":"member"},{"comment":"/**\\n * Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).\\n * @name chunk\\n * @synonyms slowChunk, slowchunk\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * \\"0 1 2 3\\".chunk(4, x=>x.add(7))\\n * .scale(\\"A:minor\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2468,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).</p>","name":"chunk","synonyms_text":"slowChunk, slowchunk","synonyms":["slowChunk","slowchunk"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"0 1 2 3\\".chunk(4, x=>x.add(7))\\n.scale(\\"A:minor\\").note()"],"scope":"static","longname":"Pattern.chunk","kind":"member"},{"comment":"/**\\n * Like \`chunk\`, but cycles through the parts in reverse order. Known as chunk' in tidalcycles\\n * @name chunkBack\\n * @synonyms chunkback\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * \\"0 1 2 3\\".chunkBack(4, x=>x.add(7))\\n * .scale(\\"A:minor\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2499,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but cycles through the parts in reverse order. Known as chunk' in tidalcycles</p>","name":"chunkBack","synonyms_text":"chunkback","synonyms":["chunkback"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"0 1 2 3\\".chunkBack(4, x=>x.add(7))\\n.scale(\\"A:minor\\").note()"],"scope":"static","longname":"Pattern.chunkBack","kind":"member"},{"comment":"/**\\n * Like \`chunk\`, but the cycles of the source pattern aren't repeated\\n * for each set of chunks.\\n * @name fastChunk\\n * @synonyms fastchunk\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * \\"<0 8> 1 2 3 4 5 6 7\\"\\n * .fastChunk(4, x => x.color('red')).slow(2)\\n * .scale(\\"C2:major\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2518,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but the cycles of the source pattern aren't repeated\\nfor each set of chunks.</p>","name":"fastChunk","synonyms_text":"fastchunk","synonyms":["fastchunk"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<0 8> 1 2 3 4 5 6 7\\"\\n.fastChunk(4, x => x.color('red')).slow(2)\\n.scale(\\"C2:major\\").note()"],"scope":"static","longname":"Pattern.fastChunk","kind":"member"},{"comment":"/**\\n * Like \`chunk\`, but the function is applied to a looped subcycle of the source pattern.\\n * @name chunkInto\\n * @synonyms chunkinto\\n * @memberof Pattern\\n * @example\\n * sound(\\"bd sd ht lt bd - cp lt\\").chunkInto(4, hurry(2))\\n *   .bank(\\"tr909\\")\\n */","meta":{"filename":"pattern.mjs","lineno":2539,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but the function is applied to a looped subcycle of the source pattern.</p>","name":"chunkInto","synonyms_text":"chunkinto","synonyms":["chunkinto"],"memberof":"Pattern","examples":["sound(\\"bd sd ht lt bd - cp lt\\").chunkInto(4, hurry(2))\\n  .bank(\\"tr909\\")"],"scope":"static","longname":"Pattern.chunkInto","kind":"member"},{"comment":"/**\\n * Like \`chunkInto\`, but moves backwards through the chunks.\\n * @name chunkBackInto\\n * @synonyms chunkbackinto\\n * @memberof Pattern\\n * @example\\n * sound(\\"bd sd ht lt bd - cp lt\\").chunkInto(4, hurry(2))\\n *   .bank(\\"tr909\\")\\n */","meta":{"filename":"pattern.mjs","lineno":2552,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunkInto</code>, but moves backwards through the chunks.</p>","name":"chunkBackInto","synonyms_text":"chunkbackinto","synonyms":["chunkbackinto"],"memberof":"Pattern","examples":["sound(\\"bd sd ht lt bd - cp lt\\").chunkInto(4, hurry(2))\\n  .bank(\\"tr909\\")"],"scope":"static","longname":"Pattern.chunkBackInto","kind":"member"},{"comment":"/**\\n * Loops the pattern inside an \`offset\` for \`cycles\`.\\n * If you think of the entire span of time in cycles as a ribbon, you can cut a single piece and loop it.\\n * @name ribbon\\n * @synonyms rib\\n * @param {number} offset start point of loop in cycles\\n * @param {number} cycles loop length in cycles\\n * @example\\n * note(\\"<c d e f>\\").ribbon(1, 2)\\n * @example\\n * // Looping a portion of randomness\\n * n(irand(8).segment(4)).scale(\\"c:pentatonic\\").ribbon(1337, 2)\\n * @example\\n * // rhythm generator\\n * s(\\"bd!16?\\").ribbon(29,.5)\\n */","meta":{"filename":"pattern.mjs","lineno":2581,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Loops the pattern inside an <code>offset</code> for <code>cycles</code>.\\nIf you think of the entire span of time in cycles as a ribbon, you can cut a single piece and loop it.</p>","name":"ribbon","synonyms_text":"rib","synonyms":["rib"],"params":[{"type":{"names":["number"]},"description":"<p>start point of loop in cycles</p>","name":"offset"},{"type":{"names":["number"]},"description":"<p>loop length in cycles</p>","name":"cycles"}],"examples":["note(\\"<c d e f>\\").ribbon(1, 2)","// Looping a portion of randomness\\nn(irand(8).segment(4)).scale(\\"c:pentatonic\\").ribbon(1337, 2)","// rhythm generator\\ns(\\"bd!16?\\").ribbon(29,.5)"],"longname":"ribbon","kind":"member","scope":"global"},{"comment":"/**\\n * Tags each Hap with an identifier. Good for filtering. The function populates Hap.context.tags (Array).\\n * @name tag\\n * @noAutocomplete\\n * @param {string} tag anything unique\\n */","meta":{"filename":"pattern.mjs","lineno":2609,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Tags each Hap with an identifier. Good for filtering. The function populates Hap.context.tags (Array).</p>","name":"tag","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>anything unique</p>","name":"tag"}],"longname":"tag","kind":"member","scope":"global"},{"comment":"/**\\n * Filters haps using the given function\\n * @name filter\\n * @param {Function} test function to test Hap\\n * @example\\n * s(\\"hh!7 oh\\").filter(hap => hap.value.s==='hh')\\n */","meta":{"filename":"pattern.mjs","lineno":2619,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Filters haps using the given function</p>","name":"filter","params":[{"type":{"names":["function"]},"description":"<p>function to test Hap</p>","name":"test"}],"examples":["s(\\"hh!7 oh\\").filter(hap => hap.value.s==='hh')"],"longname":"filter","kind":"member","scope":"global"},{"comment":"/**\\n * Filters haps by their begin time\\n * @name filterWhen\\n * @noAutocomplete\\n * @param {Function} test function to test Hap.whole.begin\\n */","meta":{"filename":"pattern.mjs","lineno":2628,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Filters haps by their begin time</p>","name":"filterWhen","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>function to test Hap.whole.begin</p>","name":"test"}],"longname":"filterWhen","kind":"member","scope":"global"},{"comment":"/**\\n * Use within to apply a function to only a part of a pattern.\\n * @name within\\n * @param {number} start start within cycle (0 - 1)\\n * @param {number} end end within cycle (0 - 1). Must be > start\\n * @param {Function} func function to be applied to the sub-pattern\\n */","meta":{"filename":"pattern.mjs","lineno":2636,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Use within to apply a function to only a part of a pattern.</p>","name":"within","params":[{"type":{"names":["number"]},"description":"<p>start within cycle (0 - 1)</p>","name":"start"},{"type":{"names":["number"]},"description":"<p>end within cycle (0 - 1). Must be &gt; start</p>","name":"end"},{"type":{"names":["function"]},"description":"<p>function to be applied to the sub-pattern</p>","name":"func"}],"longname":"within","kind":"member","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Speeds a pattern up or down, to fit to the given number of steps per cycle.\\n * @example\\n * sound(\\"bd sd cp\\").pace(4)\\n * // The same as sound(\\"{bd sd cp}%4\\") or sound(\\"<bd sd cp>*4\\")\\n */","meta":{"range":[81328,81623],"filename":"pattern.mjs","lineno":2717,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031428","name":"exports.pace","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Speeds a pattern up or down, to fit to the given number of steps per cycle.</p>","examples":["sound(\\"bd sd cp\\").pace(4)\\n// The same as sound(\\"{bd sd cp}%4\\") or sound(\\"<bd sd cp>*4\\")"],"name":"pace","longname":"pace","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Aligns the steps of the patterns, creating polymeters. The patterns are repeated until they all fit the cycle. For example, in the below the first pattern is repeated twice, and the second is repeated three times, to fit the lowest common multiple of six steps.\\n * @synonyms pm\\n * @example\\n * // The same as note(\\"{c eb g, c2 g2}%6\\")\\n * polymeter(\\"c eb g\\", \\"c2 g2\\").note()\\n *\\n */","meta":{"range":[82501,83009],"filename":"pattern.mjs","lineno":2760,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031581","name":"exports.polymeter","type":"FunctionDeclaration","paramnames":["args"]}},"description":"<p><em>Experimental</em></p>\\n<p>Aligns the steps of the patterns, creating polymeters. The patterns are repeated until they all fit the cycle. For example, in the below the first pattern is repeated twice, and the second is repeated three times, to fit the lowest common multiple of six steps.</p>","synonyms_text":"pm","synonyms":["pm"],"examples":["// The same as note(\\"{c eb g, c2 g2}%6\\")\\npolymeter(\\"c eb g\\", \\"c2 g2\\").note()"],"name":"polymeter","longname":"polymeter","kind":"function","scope":"global"},{"comment":"/** 'Concatenates' patterns like \`fastcat\`, but proportional to a number of steps per cycle.\\n * The steps can either be inferred from the pattern, or provided as a [length, pattern] pair.\\n * Has the alias \`timecat\`.\\n * @name stepcat\\n * @synonyms timeCat, timecat\\n * @return {Pattern}\\n * @example\\n * stepcat([3,\\"e3\\"],[1, \\"g3\\"]).note()\\n * // the same as \\"e3@3 g3\\".note()\\n * @example\\n * stepcat(\\"bd sd cp\\",\\"hh hh\\").sound()\\n * // the same as \\"bd sd cp hh hh\\".sound()\\n */","meta":{"filename":"pattern.mjs","lineno":2782,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>'Concatenates' patterns like <code>fastcat</code>, but proportional to a number of steps per cycle.\\nThe steps can either be inferred from the pattern, or provided as a [length, pattern] pair.\\nHas the alias <code>timecat</code>.</p>","name":"stepcat","synonyms_text":"timeCat, timecat","synonyms":["timeCat","timecat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["stepcat([3,\\"e3\\"],[1, \\"g3\\"]).note()\\n// the same as \\"e3@3 g3\\".note()","stepcat(\\"bd sd cp\\",\\"hh hh\\").sound()\\n// the same as \\"bd sd cp hh hh\\".sound()"],"longname":"stepcat","kind":"member","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Concatenates patterns stepwise, according to an inferred 'steps per cycle'.\\n * Similar to \`stepcat\`, but if an argument is a list, the whole pattern will alternate between the elements in the list.\\n *\\n * @return {Pattern}\\n * @example\\n * stepalt([\\"bd cp\\", \\"mt\\"], \\"bd\\").sound()\\n * // The same as \\"bd cp bd mt bd\\".sound()\\n */","meta":{"range":[85073,85620],"filename":"pattern.mjs","lineno":2848,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031952","name":"exports.stepalt","type":"FunctionDeclaration","paramnames":["groups"]}},"description":"<p><em>Experimental</em></p>\\n<p>Concatenates patterns stepwise, according to an inferred 'steps per cycle'.\\nSimilar to <code>stepcat</code>, but if an argument is a list, the whole pattern will alternate between the elements in the list.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["stepalt([\\"bd cp\\", \\"mt\\"], \\"bd\\").sound()\\n// The same as \\"bd cp bd mt bd\\".sound()"],"name":"stepalt","longname":"stepalt","kind":"function","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Takes the given number of steps from a pattern (dropping the rest).\\n * A positive number will take steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"bd cp ht mt\\".take(\\"2\\").sound()\\n * // The same as \\"bd cp\\".sound()\\n * @example\\n * \\"bd cp ht mt\\".take(\\"1 2 3\\").sound()\\n * // The same as \\"bd bd cp bd cp ht\\".sound()\\n * @example\\n * \\"bd cp ht mt\\".take(\\"-1 -2 -3\\").sound()\\n * // The same as \\"mt ht mt cp ht mt\\".sound()\\n */","meta":{"range":[86123,86615],"filename":"pattern.mjs","lineno":2880,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032093","name":"exports.take","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Takes the given number of steps from a pattern (dropping the rest).\\nA positive number will take steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"bd cp ht mt\\".take(\\"2\\").sound()\\n// The same as \\"bd cp\\".sound()","\\"bd cp ht mt\\".take(\\"1 2 3\\").sound()\\n// The same as \\"bd bd cp bd cp ht\\".sound()","\\"bd cp ht mt\\".take(\\"-1 -2 -3\\").sound()\\n// The same as \\"mt ht mt cp ht mt\\".sound()"],"name":"take","longname":"take","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Drops the given number of steps from a pattern.\\n * A positive number will drop steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"1\\").sound().bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"-1\\").sound().bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"0 1 2 3\\").sound().bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"0 -1 -2 -3\\").sound().bank(\\"mridangam\\")\\n */","meta":{"range":[87116,87363],"filename":"pattern.mjs","lineno":2923,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032205","name":"exports.drop","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Drops the given number of steps from a pattern.\\nA positive number will drop steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"tha dhi thom nam\\".drop(\\"1\\").sound().bank(\\"mridangam\\")","\\"tha dhi thom nam\\".drop(\\"-1\\").sound().bank(\\"mridangam\\")","\\"tha dhi thom nam\\".drop(\\"0 1 2 3\\").sound().bank(\\"mridangam\\")","\\"tha dhi thom nam\\".drop(\\"0 -1 -2 -3\\").sound().bank(\\"mridangam\\")"],"name":"drop","longname":"drop","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * \`extend\` is similar to \`fast\` in that it increases its density, but it also increases the step count\\n * accordingly. So \`stepcat(\\"a b\\".extend(2), \\"c d\\")\` would be the same as \`\\"a b a b c d\\"\`, whereas\\n * \`stepcat(\\"a b\\".fast(2), \\"c d\\")\` would be the same as \`\\"[a b] [a b] c d\\"\`.\\n * @example\\n * stepcat(\\n *   sound(\\"bd bd - cp\\").extend(2),\\n *   sound(\\"bd - sd -\\")\\n * ).pace(8)\\n */","meta":{"range":[87771,87886],"filename":"pattern.mjs","lineno":2947,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032267","name":"exports.extend","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p><code>extend</code> is similar to <code>fast</code> in that it increases its density, but it also increases the step count\\naccordingly. So <code>stepcat(&quot;a b&quot;.extend(2), &quot;c d&quot;)</code> would be the same as <code>&quot;a b a b c d&quot;</code>, whereas\\n<code>stepcat(&quot;a b&quot;.fast(2), &quot;c d&quot;)</code> would be the same as <code>&quot;[a b] [a b] c d&quot;</code>.</p>","examples":["stepcat(\\n  sound(\\"bd bd - cp\\").extend(2),\\n  sound(\\"bd - sd -\\")\\n).pace(8)"],"name":"extend","longname":"extend","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Expands the step size of the pattern by the given factor.\\n * @example\\n * sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").expand(\\"3 2 1 1 2 3\\").pace(8)\\n */","meta":{"range":[88067,88196],"filename":"pattern.mjs","lineno":2958,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032288","name":"exports.expand","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Expands the step size of the pattern by the given factor.</p>","examples":["sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").expand(\\"3 2 1 1 2 3\\").pace(8)"],"name":"expand","longname":"expand","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Contracts the step size of the pattern by the given factor. See also \`expand\`.\\n * @example\\n * sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").contract(\\"3 2 1 1 2 3\\").pace(8)\\n */","meta":{"range":[88400,88533],"filename":"pattern.mjs","lineno":2969,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032313","name":"exports.contract","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Contracts the step size of the pattern by the given factor. See also <code>expand</code>.</p>","examples":["sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").contract(\\"3 2 1 1 2 3\\").pace(8)"],"name":"contract","longname":"contract","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Progressively shrinks the pattern by 'n' steps until there's nothing left, or if a second value is given (using mininotation list syntax with \`:\`),\\n * that number of times.\\n * A positive number will progressively drop steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"tha dhi thom nam\\".shrink(\\"1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".shrink(\\"-1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".shrink(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)\\n * @example\\n * note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .shrink(\\"1 -1\\").pace(8)\\n\\n */","meta":{"range":[90182,90564],"filename":"pattern.mjs","lineno":3035,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032553","name":"exports.shrink","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Progressively shrinks the pattern by 'n' steps until there's nothing left, or if a second value is given (using mininotation list syntax with <code>:</code>),\\nthat number of times.\\nA positive number will progressively drop steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"tha dhi thom nam\\".shrink(\\"1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".shrink(\\"-1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".shrink(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)","note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .shrink(\\"1 -1\\").pace(8)"],"name":"shrink","longname":"shrink","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Progressively grows the pattern by 'n' steps until the full pattern is played, or if a second value is given (using mininotation list syntax with \`:\`),\\n * that number of times.\\n * A positive number will progressively grow steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"tha dhi thom nam\\".grow(\\"1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".grow(\\"-1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".grow(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)\\n * @example\\n * note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .grow(\\"1 -1\\").pace(8)\\n */","meta":{"range":[91244,91659],"filename":"pattern.mjs","lineno":3073,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032619","name":"exports.grow","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Progressively grows the pattern by 'n' steps until the full pattern is played, or if a second value is given (using mininotation list syntax with <code>:</code>),\\nthat number of times.\\nA positive number will progressively grow steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"tha dhi thom nam\\".grow(\\"1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".grow(\\"-1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".grow(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)","note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .grow(\\"1 -1\\").pace(8)"],"name":"grow","longname":"grow","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n * \\n * Inserts a pattern into a list of patterns. On the first repetition it will be inserted at the end of the list, then moved backwards through the list \\n * on successive repetitions. The patterns are added together stepwise, with all repetitions taking place over a single cycle. Using \`pace\` to set the \\n * number of steps per cycle is therefore usually recommended.\\n * \\n * @return {Pattern}\\n * @example\\n * \\"[c g]\\".tour(\\"e f\\", \\"e f g\\", \\"g f e c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)\\n */","meta":{"range":[92180,92256],"filename":"pattern.mjs","lineno":3105,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032696","name":"exports.tour","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Inserts a pattern into a list of patterns. On the first repetition it will be inserted at the end of the list, then moved backwards through the list\\non successive repetitions. The patterns are added together stepwise, with all repetitions taking place over a single cycle. Using <code>pace</code> to set the\\nnumber of steps per cycle is therefore usually recommended.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"[c g]\\".tour(\\"e f\\", \\"e f g\\", \\"g f e c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)"],"name":"tour","longname":"tour","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n * \\n * 'zips' together the steps of the provided patterns. This can create a long repetition, taking place over a single, dense cycle. \\n * Using \`pace\` to set the number of steps per cycle is therefore usually recommended.\\n * \\n * @returns {Pattern}\\n * @example\\n * zip(\\"e f\\", \\"e f g\\", \\"g [f e] a f4 c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)\\n */","meta":{"range":[92856,93111],"filename":"pattern.mjs","lineno":3131,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032765","name":"exports.zip","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>'zips' together the steps of the provided patterns. This can create a long repetition, taking place over a single, dense cycle.\\nUsing <code>pace</code> to set the number of steps per cycle is therefore usually recommended.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["zip(\\"e f\\", \\"e f g\\", \\"g [f e] a f4 c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)"],"name":"zip","longname":"zip","kind":"constant","scope":"global"},{"comment":"/** Aliases for \`stepcat\` */","meta":{"range":[93142,93173],"filename":"pattern.mjs","lineno":3139,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032829","name":"exports.timecat","type":"VariableDeclaration"}},"description":"<p>Aliases for <code>stepcat</code></p>","name":"timecat","longname":"timecat","kind":"constant","scope":"global"},{"comment":"/**\\n * Cuts each sample into the given number of parts, allowing you to explore a technique known as 'granular synthesis'.\\n * It turns a pattern of samples into a pattern of parts of samples.\\n * @name chop\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes\\")\\n *  .chop(4)\\n *  .rev() // reverse order of chops\\n *  .loopAt(2) // fit sample into 2 cycles\\n *\\n */","meta":{"filename":"pattern.mjs","lineno":3172,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cuts each sample into the given number of parts, allowing you to explore a technique known as 'granular synthesis'.\\nIt turns a pattern of samples into a pattern of parts of samples.</p>","name":"chop","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes\\")\\n .chop(4)\\n .rev() // reverse order of chops\\n .loopAt(2) // fit sample into 2 cycles"],"scope":"static","longname":"Pattern.chop","kind":"member"},{"comment":"/**\\n * Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.\\n * @name striate\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"numbers:0 numbers:1 numbers:2\\").striate(6).slow(3)\\n */","meta":{"filename":"pattern.mjs","lineno":3203,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.</p>","name":"striate","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"numbers:0 numbers:1 numbers:2\\").striate(6).slow(3)"],"scope":"static","longname":"Pattern.striate","kind":"member"},{"comment":"/**\\n * Makes the sample fit the given number of cycles by changing the speed.\\n * @name loopAt\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes\\").loopAt(2)\\n */","meta":{"filename":"pattern.mjs","lineno":3221,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit the given number of cycles by changing the speed.</p>","name":"loopAt","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes\\").loopAt(2)"],"scope":"static","longname":"Pattern.loopAt","kind":"member"},{"comment":"/**\\n * Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\\n * Instead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.\\n * @name slice\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples('github:tidalcycles/dirt-samples')\\n * s(\\"breaks165\\").slice(8, \\"0 1 <2 2*2> 3 [4 0] 5 6 7\\".every(3, rev)).slow(0.75)\\n * @example\\n * samples('github:tidalcycles/dirt-samples')\\n * s(\\"breaks125\\").fit().slice([0,.25,.5,.75], \\"0 1 1 <2 3>\\")\\n */","meta":{"filename":"pattern.mjs","lineno":3238,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\\nInstead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.</p>","name":"slice","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples('github:tidalcycles/dirt-samples')\\ns(\\"breaks165\\").slice(8, \\"0 1 <2 2*2> 3 [4 0] 5 6 7\\".every(3, rev)).slow(0.75)","samples('github:tidalcycles/dirt-samples')\\ns(\\"breaks125\\").fit().slice([0,.25,.5,.75], \\"0 1 1 <2 3>\\")"],"scope":"static","longname":"Pattern.slice","kind":"member"},{"comment":"/**\\n *\\n * make something happen on event time\\n * uses browser timeout which is innacurate for audio tasks\\n * @name onTriggerTime\\n * @memberof Pattern\\n *  @returns Pattern\\n * @example\\n * s(\\"bd!8\\").onTriggerTime((hap) => {console.log(hap)})\\n */","meta":{"filename":"pattern.mjs","lineno":3272,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>make something happen on event time\\nuses browser timeout which is innacurate for audio tasks</p>","name":"onTriggerTime","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd!8\\").onTriggerTime((hap) => {console.log(hap)})"],"scope":"static","longname":"Pattern.onTriggerTime","kind":"member"},{"comment":"/**\\n * Works the same as slice, but changes the playback speed of each slice to match the duration of its step.\\n * @name splice\\n * @example\\n * samples('github:tidalcycles/dirt-samples')\\n * s(\\"breaks165\\")\\n * .splice(8,  \\"0 1 [2 3 0]@2 3 0@2 7\\")\\n */","meta":{"filename":"pattern.mjs","lineno":3291,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Works the same as slice, but changes the playback speed of each slice to match the duration of its step.</p>","name":"splice","examples":["samples('github:tidalcycles/dirt-samples')\\ns(\\"breaks165\\")\\n.splice(8,  \\"0 1 [2 3 0]@2 3 0@2 7\\")"],"longname":"splice","kind":"member","scope":"global"},{"comment":"/**\\n * Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\\n * Similar to \`loopAt\`.\\n * @name fit\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes/2\\").fit()\\n */","meta":{"filename":"pattern.mjs","lineno":3327,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\\nSimilar to <code>loopAt</code>.</p>","name":"fit","examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes/2\\").fit()"],"longname":"fit","kind":"member","scope":"global"},{"comment":"/**\\n * Makes the sample fit the given number of cycles and cps value, by\\n * changing the speed. Please note that at some point cps will be\\n * given by a global clock and this function will be\\n * deprecated/removed.\\n * @name loopAtCps\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes\\").loopAtCps(4,1.5).cps(1.5)\\n */","meta":{"filename":"pattern.mjs","lineno":3350,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit the given number of cycles and cps value, by\\nchanging the speed. Please note that at some point cps will be\\ngiven by a global clock and this function will be\\ndeprecated/removed.</p>","name":"loopAtCps","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes\\").loopAtCps(4,1.5).cps(1.5)"],"scope":"static","longname":"Pattern.loopAtCps","kind":"member"},{"comment":"/** exposes a custom value at query time. basically allows mutating state without evaluation */","meta":{"range":[100643,100743],"filename":"pattern.mjs","lineno":3368,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033669","name":"exports.ref","type":"VariableDeclaration"}},"description":"<p>exposes a custom value at query time. basically allows mutating state without evaluation</p>","name":"ref","longname":"ref","kind":"constant","scope":"global"},{"comment":"/**\\n * Cross-fades between left and right from 0 to 1:\\n * - 0 = (full left, no right)\\n * - .5 = (both equal)\\n * - 1 = (no left, full right)\\n *\\n * @name xfade\\n * @example\\n * xfade(s(\\"bd*2\\"), \\"<0 .25 .5 .75 1>\\", s(\\"hh*8\\"))\\n */","meta":{"filename":"pattern.mjs","lineno":3375,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cross-fades between left and right from 0 to 1:</p>\\n<ul>\\n<li>0 = (full left, no right)</li>\\n<li>.5 = (both equal)</li>\\n<li>1 = (no left, full right)</li>\\n</ul>","name":"xfade","examples":["xfade(s(\\"bd*2\\"), \\"<0 .25 .5 .75 1>\\", s(\\"hh*8\\"))"],"longname":"xfade","kind":"member","scope":"global"},{"comment":"/**\\n * creates a structure pattern from divisions of a cycle\\n * especially useful for creating rhythms\\n * @name beat\\n * @example\\n * s(\\"bd\\").beat(\\"0,7,10\\", 16)\\n * @example\\n * s(\\"sd\\").beat(\\"4,12\\", 16)\\n */","meta":{"filename":"pattern.mjs","lineno":3399,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>creates a structure pattern from divisions of a cycle\\nespecially useful for creating rhythms</p>","name":"beat","examples":["s(\\"bd\\").beat(\\"0,7,10\\", 16)","s(\\"sd\\").beat(\\"4,12\\", 16)"],"longname":"beat","kind":"member","scope":"global"},{"comment":"/**\\n * Takes two binary rhythms represented as lists of 1s and 0s, and a number\\n * between 0 and 1 that morphs between them. The two lists should contain the same\\n * number of true values.\\n * @example\\n * sound(\\"hh\\").struct(morph([1,0,1,0,1,0,1,0], // straight rhythm\\n *                          [1,1,0,1,0,1,0], // wonky rhythm\\n *                          0.25 // creates a slightly wonky rhythm\\n *                         )\\n *                   )\\n * @example\\n * sound(\\"hh\\").struct(morph(\\"1:0:1:0:1:0:1:0\\", // straight rhythm\\n *                          \\"1:1:0:1:0:1:0\\", // wonky rhythm\\n *                          sine.slow(8) // slowly morph between the rhythms\\n *                         )\\n *                   )\\n */","meta":{"range":[103717,103955],"filename":"pattern.mjs","lineno":3480,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034069","name":"exports.morph","type":"VariableDeclaration"}},"description":"<p>Takes two binary rhythms represented as lists of 1s and 0s, and a number\\nbetween 0 and 1 that morphs between them. The two lists should contain the same\\nnumber of true values.</p>","examples":["sound(\\"hh\\").struct(morph([1,0,1,0,1,0,1,0], // straight rhythm\\n                         [1,1,0,1,0,1,0], // wonky rhythm\\n                         0.25 // creates a slightly wonky rhythm\\n                        )\\n                  )","sound(\\"hh\\").struct(morph(\\"1:0:1:0:1:0:1:0\\", // straight rhythm\\n                         \\"1:1:0:1:0:1:0\\", // wonky rhythm\\n                         sine.slow(8) // slowly morph between the rhythms\\n                        )\\n                  )"],"name":"morph","longname":"morph","kind":"constant","scope":"global"},{"comment":"/** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\n * Similar to \`inhabit\`, but maintains the structure of the original patterns.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n * @example\\n * note(\\"<0 1 2!2 3>\\".pick([\\"g a\\", \\"e f\\", \\"f g f g\\" , \\"g c d\\"]))\\n * @example\\n * sound(\\"<0 1 [2,0]>\\".pick([\\"bd sd\\", \\"cp cp\\", \\"hh hh\\"]))\\n * @example\\n * sound(\\"<0!2 [0,1] 1>\\".pick([\\"bd(3,8)\\", \\"sd sd\\"]))\\n * @example\\n * s(\\"<a!2 [a,b] b>\\".pick({a: \\"bd(3,8)\\", b: \\"sd sd\\"}))\\n */","meta":{"range":[1892,2094],"filename":"pick.mjs","lineno":44,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034226","name":"exports.pick","type":"VariableDeclaration"}},"description":"<p>Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\nSimilar to <code>inhabit</code>, but maintains the structure of the original patterns.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"<0 1 2!2 3>\\".pick([\\"g a\\", \\"e f\\", \\"f g f g\\" , \\"g c d\\"]))","sound(\\"<0 1 [2,0]>\\".pick([\\"bd sd\\", \\"cp cp\\", \\"hh hh\\"]))","sound(\\"<0!2 [0,1] 1>\\".pick([\\"bd(3,8)\\", \\"sd sd\\"]))","s(\\"<a!2 [a,b] b>\\".pick({a: \\"bd(3,8)\\", b: \\"sd sd\\"}))"],"name":"pick","longname":"pick","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pick\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * For example, if you pick the fifth pattern of a list of three, you'll get the\\n * second one.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[2519,2637],"filename":"pick.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034271","name":"exports.pickmod","type":"VariableDeclaration"}},"description":"<p>The same as <code>pick</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.\\nFor example, if you pick the fifth pattern of a list of three, you'll get the\\nsecond one.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmod","longname":"pickmod","kind":"constant","scope":"global"},{"comment":"/** * pickF lets you use a pattern of numbers to pick which function to apply to another pattern.\\n * @param {Pattern} pat\\n * @param {Pattern} lookup a pattern of indices\\n * @param {function[]} funcs the array of functions from which to pull\\n * @returns {Pattern}\\n * @example\\n * s(\\"bd [rim hh]\\").pickF(\\"<0 1 2>\\", [rev,jux(rev),fast(2)])\\n * @example\\n * note(\\"<c2 d2>(3,8)\\").s(\\"square\\")\\n *     .pickF(\\"<0 2> 1\\", [jux(rev),fast(2),x=>x.lpf(800)])\\n */","meta":{"range":[3086,3201],"filename":"pick.mjs","lineno":80,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034291","name":"exports.pickF","type":"VariableDeclaration"}},"description":"<p>pickF lets you use a pattern of numbers to pick which function to apply to another pattern.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["Pattern"]},"description":"<p>a pattern of indices</p>","name":"lookup"},{"type":{"names":["Array.<function()>"]},"description":"<p>the array of functions from which to pull</p>","name":"funcs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["s(\\"bd [rim hh]\\").pickF(\\"<0 1 2>\\", [rev,jux(rev),fast(2)])","note(\\"<c2 d2>(3,8)\\").s(\\"square\\")\\n    .pickF(\\"<0 2> 1\\", [jux(rev),fast(2),x=>x.lpf(800)])"],"name":"pickF","longname":"pickF","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickF\`, but if you pick a number greater than the size of the functions list,\\n * it wraps around, rather than sticking at the maximum value.\\n * @param {Pattern} pat\\n * @param {Pattern} lookup a pattern of indices\\n * @param {function[]} funcs the array of functions from which to pull\\n * @returns {Pattern}\\n */","meta":{"range":[3532,3656],"filename":"pick.mjs","lineno":91,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034312","name":"exports.pickmodF","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickF</code>, but if you pick a number greater than the size of the functions list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["Pattern"]},"description":"<p>a pattern of indices</p>","name":"lookup"},{"type":{"names":["Array.<function()>"]},"description":"<p>the array of functions from which to pull</p>","name":"funcs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodF","longname":"pickmodF","kind":"constant","scope":"global"},{"comment":"/** * Similar to \`pick\`, but it applies an outerJoin instead of an innerJoin.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[3803,3922],"filename":"pick.mjs","lineno":100,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034333","name":"exports.pickOut","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but it applies an outerJoin instead of an innerJoin.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickOut","longname":"pickOut","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickOut\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[4143,4267],"filename":"pick.mjs","lineno":110,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034353","name":"exports.pickmodOut","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickOut</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodOut","longname":"pickmodOut","kind":"constant","scope":"global"},{"comment":"/** * Similar to \`pick\`, but the choosen pattern is restarted when its index is triggered.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[4427,4556],"filename":"pick.mjs","lineno":119,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034373","name":"exports.pickRestart","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but the choosen pattern is restarted when its index is triggered.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickRestart","longname":"pickRestart","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickRestart\`, but if you pick a number greater than the size of the list,\\n   * it wraps around, rather than sticking at the maximum value.\\n   * @param {Pattern} pat\\n   * @param {*} xs\\n   * @returns {Pattern}\\n   * @example\\n   * \\"<a@2 b@2 c@2 d@2>\\".pickRestart({\\n        a: n(\\"0 1 2 0\\"),\\n        b: n(\\"2 3 4 ~\\"),\\n        c: n(\\"[4 5] [4 3] 2 0\\"),\\n        d: n(\\"0 -3 0 ~\\")\\n      }).scale(\\"C:major\\").s(\\"piano\\")\\n   */","meta":{"range":[4989,5123],"filename":"pick.mjs","lineno":136,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034393","name":"exports.pickmodRestart","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickRestart</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"<a@2 b@2 c@2 d@2>\\".pickRestart({\\n        a: n(\\"0 1 2 0\\"),\\n        b: n(\\"2 3 4 ~\\"),\\n        c: n(\\"[4 5] [4 3] 2 0\\"),\\n        d: n(\\"0 -3 0 ~\\")\\n      }).scale(\\"C:major\\").s(\\"piano\\")"],"name":"pickmodRestart","longname":"pickmodRestart","kind":"constant","scope":"global"},{"comment":"/** * Similar to \`pick\`, but the choosen pattern is reset when its index is triggered.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[5279,5402],"filename":"pick.mjs","lineno":145,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034413","name":"exports.pickReset","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but the choosen pattern is reset when its index is triggered.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickReset","longname":"pickReset","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickReset\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[5625,5753],"filename":"pick.mjs","lineno":155,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034433","name":"exports.pickmodReset","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickReset</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodReset","longname":"pickmodReset","kind":"constant","scope":"global"},{"comment":"/** Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\n   * Similar to \`pick\`, but cycles are squeezed into the target ('inhabited') pattern.\\n   * @name inhabit\\n   * @synonyms pickSqueeze\\n   * @param {Pattern} pat\\n   * @param {*} xs\\n   * @returns {Pattern}\\n   * @example\\n   * \\"<a b [a,b]>\\".inhabit({a: s(\\"bd(3,8)\\"),\\n                            b: s(\\"cp sd\\")\\n                           })\\n   * @example\\n   * s(\\"a@2 [a b] a\\".inhabit({a: \\"bd(3,8)\\", b: \\"sd sd\\"})).slow(4)\\n   */","meta":{"filename":"pick.mjs","lineno":159,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\nSimilar to <code>pick</code>, but cycles are squeezed into the target ('inhabited') pattern.</p>","name":"inhabit","synonyms_text":"pickSqueeze","synonyms":["pickSqueeze"],"params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"<a b [a,b]>\\".inhabit({a: s(\\"bd(3,8)\\"),\\n                            b: s(\\"cp sd\\")\\n                           })","s(\\"a@2 [a b] a\\".inhabit({a: \\"bd(3,8)\\", b: \\"sd sd\\"})).slow(4)"],"longname":"inhabit","kind":"member","scope":"global"},{"comment":"/** * The same as \`inhabit\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * For example, if you pick the fifth pattern of a list of three, you'll get the\\n * second one.\\n * @name inhabitmod\\n * @synonyms pickmodSqueeze\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"filename":"pick.mjs","lineno":177,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The same as <code>inhabit</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.\\nFor example, if you pick the fifth pattern of a list of three, you'll get the\\nsecond one.</p>","name":"inhabitmod","synonyms_text":"pickmodSqueeze","synonyms":["pickmodSqueeze"],"params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"longname":"inhabitmod","kind":"member","scope":"global"},{"comment":"/**\\n * Pick from the list of values (or patterns of values) via the index using the given\\n * pattern of integers. The selected pattern will be compressed to fit the duration of the selecting event\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n * @example\\n * note(squeeze(\\"<0@2 [1!2] 2>\\", [\\"g a\\", \\"f g f g\\" , \\"g a c d\\"]))\\n */","meta":{"range":[7302,7543],"filename":"pick.mjs","lineno":202,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034505","name":"exports.squeeze","type":"VariableDeclaration"}},"description":"<p>Pick from the list of values (or patterns of values) via the index using the given\\npattern of integers. The selected pattern will be compressed to fit the duration of the selecting event</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(squeeze(\\"<0@2 [1!2] 2>\\", [\\"g a\\", \\"f g f g\\" , \\"g a c d\\"]))"],"name":"squeeze","longname":"squeeze","kind":"constant","scope":"global"},{"comment":"/**\\n   * Changes the global tempo to the given cycles per minute\\n   *\\n   * @name setcpm\\n   * @alias setCpm\\n   * @param {number} cpm cycles per minute\\n   * @example\\n   * setcpm(140/4) // =140 bpm in 4/4\\n   * $: s(\\"bd*4,[- sd]*2\\").bank('tr707')\\n   */","meta":{"filename":"repl.mjs","lineno":90,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the global tempo to the given cycles per minute</p>","name":"setcpm","alias":"setCpm","params":[{"type":{"names":["number"]},"description":"<p>cycles per minute</p>","name":"cpm"}],"examples":["setcpm(140/4) // =140 bpm in 4/4\\n$: s(\\"bd*4,[- sd]*2\\").bank('tr707')"],"longname":"setcpm","kind":"member","scope":"global"},{"comment":"/** Applies a function to all the running patterns. Note that the patterns are groups together into a single \`stack\` before the function is applied. This is probably what you want, but see \`each\` for\\n   * a version that applies the function to each pattern separately.\\n   * \`\`\`\\n   * $: sound(\\"bd - cp sd\\")\\n   * $: sound(\\"hh*8\\")\\n   * all(fast(\\"<2 3>\\"))\\n   * \`\`\`\\n   * \`\`\`\\n   * $: sound(\\"bd - cp sd\\")\\n   * $: sound(\\"hh*8\\")\\n   * all(x => x.pianoroll())\\n   * \`\`\`\\n   */","meta":{"range":[3200,3218],"filename":"repl.mjs","lineno":117,"columnno":6,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034877","name":"allTransforms","type":"ArrayExpression","value":"[]"}},"description":"<p>Applies a function to all the running patterns. Note that the patterns are groups together into a single <code>stack</code> before the function is applied. This is probably what you want, but see <code>each</code> for\\na version that applies the function to each pattern separately.</p>\\n<pre class=\\"prettyprint source\\"><code>$: sound(&quot;bd - cp sd&quot;)\\n$: sound(&quot;hh*8&quot;)\\nall(fast(&quot;&lt;2 3>&quot;))\\n</code></pre>\\n<pre class=\\"prettyprint source\\"><code>$: sound(&quot;bd - cp sd&quot;)\\n$: sound(&quot;hh*8&quot;)\\nall(x => x.pianoroll())\\n</code></pre>","name":"allTransforms","longname":"repl~allTransforms","kind":"member","memberof":"repl","scope":"inner","params":[]},{"comment":"/** Applies a function to each of the running patterns separately. This is intended for future use with upcoming 'stepwise' features. See \`all\` for a version that applies the function to all the patterns stacked together into a single pattern.\\n   * \`\`\`\\n   * $: sound(\\"bd - cp sd\\")\\n   * $: sound(\\"hh*8\\")\\n   * each(fast(\\"<2 3>\\"))\\n   * \`\`\`\\n   */","meta":{"range":[3670,3754],"filename":"repl.mjs","lineno":129,"columnno":8,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034895","name":"each","type":"FunctionExpression"},"vars":{"eachTransform":"repl~each~eachTransform"}},"description":"<p>Applies a function to each of the running patterns separately. This is intended for future use with upcoming 'stepwise' features. See <code>all</code> for a version that applies the function to all the patterns stacked together into a single pattern.</p>\\n<pre class=\\"prettyprint source\\"><code>$: sound(&quot;bd - cp sd&quot;)\\n$: sound(&quot;hh*8&quot;)\\neach(fast(&quot;&lt;2 3>&quot;))\\n</code></pre>","name":"each","longname":"repl~each","kind":"function","memberof":"repl","scope":"inner","params":[]},{"comment":"/**\\n *  A sawtooth signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n * .clip(saw.slow(2))\\n * @example\\n * n(saw.range(0,8).segment(8))\\n * .scale('C major')\\n *\\n */","meta":{"range":[1533,1573],"filename":"signal.mjs","lineno":35,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035519","name":"exports.saw","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n.clip(saw.slow(2))","n(saw.range(0,8).segment(8))\\n.scale('C major')"],"name":"saw","longname":"saw","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sawtooth signal between -1 and 1 (like \`saw\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[1673,1709],"filename":"signal.mjs","lineno":42,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035530","name":"exports.saw2","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between -1 and 1 (like <code>saw</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"saw2","longname":"saw2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sawtooth signal between 1 and 0 (like \`saw\`, but flipped).\\n *\\n * @return {Pattern}\\n * @example\\n * note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n * .clip(isaw.slow(2))\\n * @example\\n * n(isaw.range(0,8).segment(8))\\n * .scale('C major')\\n *\\n */","meta":{"range":[1951,1998],"filename":"signal.mjs","lineno":56,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035538","name":"exports.isaw","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 1 and 0 (like <code>saw</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n.clip(isaw.slow(2))","n(isaw.range(0,8).segment(8))\\n.scale('C major')"],"name":"isaw","longname":"isaw","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sawtooth signal between 1 and -1 (like \`saw2\`, but flipped).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[2099,2137],"filename":"signal.mjs","lineno":63,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035551","name":"exports.isaw2","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 1 and -1 (like <code>saw2</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"isaw2","longname":"isaw2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sine signal between -1 and 1 (like \`sine\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[2234,2296],"filename":"signal.mjs","lineno":70,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035559","name":"exports.sine2","type":"VariableDeclaration"}},"description":"<p>A sine signal between -1 and 1 (like <code>sine</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"sine2","longname":"sine2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sine signal between 0 and 1.\\n * @return {Pattern}\\n * @example\\n * n(sine.segment(16).range(0,15))\\n * .scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[2433,2473],"filename":"signal.mjs","lineno":80,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035578","name":"exports.sine","type":"VariableDeclaration"}},"description":"<p>A sine signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(sine.segment(16).range(0,15))\\n.scale(\\"C:minor\\")"],"name":"sine","longname":"sine","kind":"constant","scope":"global"},{"comment":"/**\\n *  A cosine signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * n(stack(sine,cosine).segment(16).range(0,15))\\n * .scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[2629,2683],"filename":"signal.mjs","lineno":91,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035586","name":"exports.cosine","type":"VariableDeclaration"}},"description":"<p>A cosine signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(stack(sine,cosine).segment(16).range(0,15))\\n.scale(\\"C:minor\\")"],"name":"cosine","longname":"cosine","kind":"constant","scope":"global"},{"comment":"/**\\n *  A cosine signal between -1 and 1 (like \`cosine\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[2784,2840],"filename":"signal.mjs","lineno":98,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035601","name":"exports.cosine2","type":"VariableDeclaration"}},"description":"<p>A cosine signal between -1 and 1 (like <code>cosine</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"cosine2","longname":"cosine2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A square signal between 0 and 1.\\n * @return {Pattern}\\n * @example\\n * n(square.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[2975,3036],"filename":"signal.mjs","lineno":107,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035616","name":"exports.square","type":"VariableDeclaration"}},"description":"<p>A square signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(square.segment(4).range(0,7)).scale(\\"C:minor\\")"],"name":"square","longname":"square","kind":"constant","scope":"global"},{"comment":"/**\\n *  A square signal between -1 and 1 (like \`square\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3137,3179],"filename":"signal.mjs","lineno":114,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035633","name":"exports.square2","type":"VariableDeclaration"}},"description":"<p>A square signal between -1 and 1 (like <code>square</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"square2","longname":"square2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A triangle signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * n(tri.segment(8).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[3316,3354],"filename":"signal.mjs","lineno":124,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035641","name":"exports.tri","type":"VariableDeclaration"}},"description":"<p>A triangle signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(tri.segment(8).range(0,7)).scale(\\"C:minor\\")"],"name":"tri","longname":"tri","kind":"constant","scope":"global"},{"comment":"/**\\n *  A triangle signal between -1 and 1 (like \`tri\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3454,3495],"filename":"signal.mjs","lineno":131,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035649","name":"exports.tri2","type":"VariableDeclaration"}},"description":"<p>A triangle signal between -1 and 1 (like <code>tri</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"tri2","longname":"tri2","kind":"constant","scope":"global"},{"comment":"/**\\n *  An inverted triangle signal between 1 and 0 (like \`tri\`, but flipped).\\n *\\n * @return {Pattern}\\n * @example\\n * n(itri.segment(8).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[3669,3708],"filename":"signal.mjs","lineno":141,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035657","name":"exports.itri","type":"VariableDeclaration"}},"description":"<p>An inverted triangle signal between 1 and 0 (like <code>tri</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(itri.segment(8).range(0,7)).scale(\\"C:minor\\")"],"name":"itri","longname":"itri","kind":"constant","scope":"global"},{"comment":"/**\\n *  An inverted triangle signal between -1 and 1 (like \`itri\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3819,3861],"filename":"signal.mjs","lineno":148,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035665","name":"exports.itri2","type":"VariableDeclaration"}},"description":"<p>An inverted triangle signal between -1 and 1 (like <code>itri</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"itri2","longname":"itri2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A signal representing the cycle time.\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3937,3968],"filename":"signal.mjs","lineno":155,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035673","name":"exports.time","type":"VariableDeclaration"}},"description":"<p>A signal representing the cycle time.</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"time","longname":"time","kind":"constant","scope":"global"},{"comment":"/**\\n *  The mouse's x position value ranges from 0 to 1.\\n * @name mousex\\n * @return {Pattern}\\n * @example\\n * n(mousex.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":157,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The mouse's x position value ranges from 0 to 1.</p>","name":"mousex","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(mousex.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"mousex","kind":"member","scope":"global"},{"comment":"/**\\n *  The mouse's y position value ranges from 0 to 1.\\n * @name mousey\\n * @return {Pattern}\\n * @example\\n * n(mousey.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":166,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The mouse's y position value ranges from 0 to 1.</p>","name":"mousey","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(mousey.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"mousey","kind":"member","scope":"global"},{"comment":"/**\\n * A discrete pattern of numbers from 0 to n-1\\n * @example\\n * n(run(4)).scale(\\"C4:pentatonic\\")\\n * // n(\\"0 1 2 3\\").scale(\\"C4:pentatonic\\")\\n */","meta":{"range":[5663,5724],"filename":"signal.mjs","lineno":228,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035890","name":"exports.run","type":"VariableDeclaration"}},"description":"<p>A discrete pattern of numbers from 0 to n-1</p>","examples":["n(run(4)).scale(\\"C4:pentatonic\\")\\n// n(\\"0 1 2 3\\").scale(\\"C4:pentatonic\\")"],"name":"run","longname":"run","kind":"constant","scope":"global"},{"comment":"/**\\n * Creates a pattern from a binary number.\\n *\\n * @name binary\\n * @param {number} n - input number to convert to binary\\n * @example\\n * \\"hh\\".s().struct(binary(5))\\n * // \\"hh\\".s().struct(\\"1 0 1\\")\\n */","meta":{"filename":"signal.mjs","lineno":230,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Creates a pattern from a binary number.</p>","name":"binary","params":[{"type":{"names":["number"]},"description":"<p>input number to convert to binary</p>","name":"n"}],"examples":["\\"hh\\".s().struct(binary(5))\\n// \\"hh\\".s().struct(\\"1 0 1\\")"],"longname":"binary","kind":"member","scope":"global"},{"comment":"/**\\n * Creates a pattern from a binary number, padded to n bits long.\\n *\\n * @name binaryN\\n * @param {number} n - input number to convert to binary\\n * @param {number} nBits - pattern length, defaults to 16\\n * @example\\n * \\"hh\\".s().struct(binaryN(55532, 16))\\n * // \\"hh\\".s().struct(\\"1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0\\")\\n */","meta":{"filename":"signal.mjs","lineno":244,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Creates a pattern from a binary number, padded to n bits long.</p>","name":"binaryN","params":[{"type":{"names":["number"]},"description":"<p>input number to convert to binary</p>","name":"n"},{"type":{"names":["number"]},"description":"<p>pattern length, defaults to 16</p>","name":"nBits"}],"examples":["\\"hh\\".s().struct(binaryN(55532, 16))\\n// \\"hh\\".s().struct(\\"1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0\\")"],"longname":"binaryN","kind":"member","scope":"global"},{"comment":"/**\\n * Slices a pattern into the given number of parts, then plays those parts in random order.\\n * Each part will be played exactly once per cycle.\\n * @name shuffle\\n * @example\\n * note(\\"c d e f\\").sound(\\"piano\\").shuffle(4)\\n * @example\\n * seq(\\"c d e f\\".shuffle(4), \\"g\\").note().sound(\\"piano\\")\\n */","meta":{"filename":"signal.mjs","lineno":279,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slices a pattern into the given number of parts, then plays those parts in random order.\\nEach part will be played exactly once per cycle.</p>","name":"shuffle","examples":["note(\\"c d e f\\").sound(\\"piano\\").shuffle(4)","seq(\\"c d e f\\".shuffle(4), \\"g\\").note().sound(\\"piano\\")"],"longname":"shuffle","kind":"member","scope":"global"},{"comment":"/**\\n * Slices a pattern into the given number of parts, then plays those parts at random. Similar to \`shuffle\`,\\n * but parts might be played more than once, or not at all, per cycle.\\n * @name scramble\\n * @example\\n * note(\\"c d e f\\").sound(\\"piano\\").scramble(4)\\n * @example\\n * seq(\\"c d e f\\".scramble(4), \\"g\\").note().sound(\\"piano\\")\\n */","meta":{"filename":"signal.mjs","lineno":292,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slices a pattern into the given number of parts, then plays those parts at random. Similar to <code>shuffle</code>,\\nbut parts might be played more than once, or not at all, per cycle.</p>","name":"scramble","examples":["note(\\"c d e f\\").sound(\\"piano\\").scramble(4)","seq(\\"c d e f\\".scramble(4), \\"g\\").note().sound(\\"piano\\")"],"longname":"scramble","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of random numbers, between 0 and 1.\\n *\\n * @name rand\\n * @example\\n * // randomly change the cutoff\\n * s(\\"bd*4,hh*8\\").cutoff(rand.range(500,8000))\\n *\\n */","meta":{"filename":"signal.mjs","lineno":305,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of random numbers, between 0 and 1.</p>","name":"rand","examples":["// randomly change the cutoff\\ns(\\"bd*4,hh*8\\").cutoff(rand.range(500,8000))"],"longname":"rand","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of random numbers, between -1 and 1\\n */","meta":{"range":[8355,8393],"filename":"signal.mjs","lineno":318,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036198","name":"exports.rand2","type":"VariableDeclaration"}},"description":"<p>A continuous pattern of random numbers, between -1 and 1</p>","name":"rand2","longname":"rand2","kind":"constant","scope":"global"},{"comment":"/**\\n * A continuous pattern of 0 or 1 (binary random), with a probability for the value being 1\\n *\\n * @name brandBy\\n * @param {number} probability - a number between 0 and 1\\n * @example\\n * s(\\"hh*10\\").pan(brandBy(0.2))\\n */","meta":{"filename":"signal.mjs","lineno":322,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of 0 or 1 (binary random), with a probability for the value being 1</p>","name":"brandBy","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"probability"}],"examples":["s(\\"hh*10\\").pan(brandBy(0.2))"],"longname":"brandBy","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of 0 or 1 (binary random)\\n *\\n * @name brand\\n * @example\\n * s(\\"hh*10\\").pan(brand)\\n */","meta":{"filename":"signal.mjs","lineno":332,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of 0 or 1 (binary random)</p>","name":"brand","examples":["s(\\"hh*10\\").pan(brand)"],"longname":"brand","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of random integers, between 0 and n-1.\\n *\\n * @name irand\\n * @param {number} n max value (exclusive)\\n * @example\\n * // randomly select scale notes from 0 - 7 (= C to C)\\n * n(irand(8)).struct(\\"x x*2 x x*3\\").scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":343,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of random integers, between 0 and n-1.</p>","name":"irand","params":[{"type":{"names":["number"]},"description":"<p>max value (exclusive)</p>","name":"n"}],"examples":["// randomly select scale notes from 0 - 7 (= C to C)\\nn(irand(8)).struct(\\"x x*2 x x*3\\").scale(\\"C:minor\\")"],"longname":"irand","kind":"member","scope":"global"},{"comment":"/**\\n * Choose from the list of values (or patterns of values) using the given\\n * pattern of numbers, which should be in the range of 0..1\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n * @example\\n * note(\\"c2 g2!2 d2 f1\\").s(chooseWith(sine.fast(2), [\\"sawtooth\\", \\"triangle\\", \\"bd:6\\"]))\\n */","meta":{"range":[9855,9942],"filename":"signal.mjs","lineno":375,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036345","name":"exports.chooseWith","type":"VariableDeclaration"}},"description":"<p>Choose from the list of values (or patterns of values) using the given\\npattern of numbers, which should be in the range of 0..1</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"c2 g2!2 d2 f1\\").s(chooseWith(sine.fast(2), [\\"sawtooth\\", \\"triangle\\", \\"bd:6\\"]))"],"name":"chooseWith","longname":"chooseWith","kind":"constant","scope":"global"},{"comment":"/**\\n * As with {chooseWith}, but the structure comes from the chosen values, rather\\n * than the pattern you're using to choose with.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[10144,10233],"filename":"signal.mjs","lineno":386,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036361","name":"exports.chooseInWith","type":"VariableDeclaration"}},"description":"<p>As with {chooseWith}, but the structure comes from the chosen values, rather\\nthan the pattern you're using to choose with.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"chooseInWith","longname":"chooseInWith","kind":"constant","scope":"global"},{"comment":"/**\\n * Chooses randomly from the given list of elements.\\n * @param  {...any} xs values / patterns to choose from.\\n * @returns {Pattern} - a continuous pattern.\\n * @example\\n * note(\\"c2 g2!2 d2 f1\\").s(choose(\\"sine\\", \\"triangle\\", \\"bd:6\\"))\\n */","meta":{"range":[10474,10528],"filename":"signal.mjs","lineno":397,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036377","name":"exports.choose","type":"VariableDeclaration"}},"description":"<p>Chooses randomly from the given list of elements.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>values / patterns to choose from.</p>","name":"xs"}],"returns":[{"type":{"names":["Pattern"]},"description":"<ul>\\n<li>a continuous pattern.</li>\\n</ul>"}],"examples":["note(\\"c2 g2!2 d2 f1\\").s(choose(\\"sine\\", \\"triangle\\", \\"bd:6\\"))"],"name":"choose","longname":"choose","kind":"constant","scope":"global"},{"comment":"/**\\n * Chooses from the given list of values (or patterns of values), according\\n * to the pattern that the method is called on. The pattern should be in\\n * the range 0 .. 1.\\n * @param  {...any} xs\\n * @returns {Pattern}\\n */","meta":{"range":[10859,10937],"filename":"signal.mjs","lineno":410,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036405","name":"Pattern.prototype.choose","type":"FunctionExpression","paramnames":["xs"]}},"description":"<p>Chooses from the given list of values (or patterns of values), according\\nto the pattern that the method is called on. The pattern should be in\\nthe range 0 .. 1.</p>","params":[{"type":{"names":["any"]},"variable":true,"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"choose","longname":"Pattern#choose","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * As with choose, but the pattern that this method is called on should be\\n * in the range -1 .. 1\\n * @param  {...any} xs\\n * @returns {Pattern}\\n */","meta":{"range":[11092,11185],"filename":"signal.mjs","lineno":420,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036421","name":"Pattern.prototype.choose2","type":"FunctionExpression","paramnames":["xs"]}},"description":"<p>As with choose, but the pattern that this method is called on should be\\nin the range -1 .. 1</p>","params":[{"type":{"names":["any"]},"variable":true,"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"choose2","longname":"Pattern#choose2","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Picks one of the elements at random each cycle.\\n * @synonyms randcat\\n * @returns {Pattern}\\n * @example\\n * chooseCycles(\\"bd\\", \\"hh\\", \\"sd\\").s().fast(8)\\n * @example\\n * s(\\"bd | hh | sd\\").fast(8)\\n */","meta":{"range":[11389,11462],"filename":"signal.mjs","lineno":433,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036439","name":"exports.chooseCycles","type":"VariableDeclaration"}},"description":"<p>Picks one of the elements at random each cycle.</p>","synonyms_text":"randcat","synonyms":["randcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["chooseCycles(\\"bd\\", \\"hh\\", \\"sd\\").s().fast(8)","s(\\"bd | hh | sd\\").fast(8)"],"name":"chooseCycles","longname":"chooseCycles","kind":"constant","scope":"global"},{"comment":"/**\\n * Chooses randomly from the given list of elements by giving a probability to each element\\n * @param {...any} pairs arrays of value and weight\\n * @returns {Pattern} - a continuous pattern.\\n * @example\\n * note(\\"c2 g2!2 d2 f1\\").s(wchoose([\\"sine\\",10], [\\"triangle\\",1], [\\"bd:6\\",1]))\\n */","meta":{"range":[12754,12819],"filename":"signal.mjs","lineno":473,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036577","name":"exports.wchoose","type":"VariableDeclaration"}},"description":"<p>Chooses randomly from the given list of elements by giving a probability to each element</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>arrays of value and weight</p>","name":"pairs"}],"returns":[{"type":{"names":["Pattern"]},"description":"<ul>\\n<li>a continuous pattern.</li>\\n</ul>"}],"examples":["note(\\"c2 g2!2 d2 f1\\").s(wchoose([\\"sine\\",10], [\\"triangle\\",1], [\\"bd:6\\",1]))"],"name":"wchoose","longname":"wchoose","kind":"constant","scope":"global"},{"comment":"/**\\n * Picks one of the elements at random each cycle by giving a probability to each element\\n * @synonyms wrandcat\\n * @returns {Pattern}\\n * @example\\n * wchooseCycles([\\"bd\\",10], [\\"hh\\",1], [\\"sd\\",1]).s().fast(8)\\n * @example\\n * wchooseCycles([\\"bd bd bd\\",5], [\\"hh hh hh\\",3], [\\"sd sd sd\\",1]).fast(4).s()\\n * @example\\n * // The probability can itself be a pattern\\n * wchooseCycles([\\"bd(3,8)\\",\\"<5 0>\\"], [\\"hh hh hh\\",3]).fast(4).s()\\n */","meta":{"range":[13248,13343],"filename":"signal.mjs","lineno":487,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100036589","name":"exports.wchooseCycles","type":"VariableDeclaration"}},"description":"<p>Picks one of the elements at random each cycle by giving a probability to each element</p>","synonyms_text":"wrandcat","synonyms":["wrandcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["wchooseCycles([\\"bd\\",10], [\\"hh\\",1], [\\"sd\\",1]).s().fast(8)","wchooseCycles([\\"bd bd bd\\",5], [\\"hh hh hh\\",3], [\\"sd sd sd\\",1]).fast(4).s()","// The probability can itself be a pattern\\nwchooseCycles([\\"bd(3,8)\\",\\"<5 0>\\"], [\\"hh hh hh\\",3]).fast(4).s()"],"name":"wchooseCycles","longname":"wchooseCycles","kind":"constant","scope":"global"},{"comment":"/**\\n * Generates a continuous pattern of [perlin noise](https://en.wikipedia.org/wiki/Perlin_noise), in the range 0..1.\\n *\\n * @name perlin\\n * @example\\n * // randomly change the cutoff\\n * s(\\"bd*4,hh*8\\").cutoff(perlin.range(500,8000))\\n *\\n */","meta":{"filename":"signal.mjs","lineno":521,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Generates a continuous pattern of <a href=\\"https://en.wikipedia.org/wiki/Perlin_noise\\">perlin noise</a>, in the range 0..1.</p>","name":"perlin","examples":["// randomly change the cutoff\\ns(\\"bd*4,hh*8\\").cutoff(perlin.range(500,8000))"],"longname":"perlin","kind":"member","scope":"global"},{"comment":"/**\\n * Generates a continuous pattern of [berlin noise](conceived by Jame Coyne and Jade Rowland as a joke but turned out to be surprisingly cool and useful,\\n * like perlin noise but with sawtooth waves), in the range 0..1.\\n *\\n * @name berlin\\n * @example\\n * // ascending arpeggios\\n * n(\\"0!16\\".add(berlin.fast(4).mul(14))).scale(\\"d:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":532,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Generates a continuous pattern of [berlin noise](conceived by Jame Coyne and Jade Rowland as a joke but turned out to be surprisingly cool and useful,\\nlike perlin noise but with sawtooth waves), in the range 0..1.</p>","name":"berlin","examples":["// ascending arpeggios\\nn(\\"0!16\\".add(berlin.fast(4).mul(14))).scale(\\"d:minor\\")"],"longname":"berlin","kind":"member","scope":"global"},{"comment":"/**\\n * Randomly removes events from the pattern by a given amount.\\n * 0 = 0% chance of removal\\n * 1 = 100% chance of removal\\n *\\n * @name degradeBy\\n * @memberof Pattern\\n * @param {number} amount - a number between 0 and 1\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").degradeBy(0.2)\\n * @example\\n * s(\\"[hh?0.2]*8\\")\\n * @example\\n * //beat generator\\n * s(\\"bd\\").segment(16).degradeBy(.5).ribbon(16,1)\\n */","meta":{"filename":"signal.mjs","lineno":551,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly removes events from the pattern by a given amount.\\n0 = 0% chance of removal\\n1 = 100% chance of removal</p>","name":"degradeBy","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").degradeBy(0.2)","s(\\"[hh?0.2]*8\\")","//beat generator\\ns(\\"bd\\").segment(16).degradeBy(.5).ribbon(16,1)"],"scope":"static","longname":"Pattern.degradeBy","kind":"member"},{"comment":"/**\\n *\\n * Randomly removes 50% of events from the pattern. Shorthand for \`.degradeBy(0.5)\`\\n *\\n * @name degrade\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").degrade()\\n * @example\\n * s(\\"[hh?]*8\\")\\n */","meta":{"filename":"signal.mjs","lineno":577,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly removes 50% of events from the pattern. Shorthand for <code>.degradeBy(0.5)</code></p>","name":"degrade","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").degrade()","s(\\"[hh?]*8\\")"],"scope":"static","longname":"Pattern.degrade","kind":"member"},{"comment":"/**\\n * Inverse of \`degradeBy\`: Randomly removes events from the pattern by a given amount.\\n * 0 = 100% chance of removal\\n * 1 = 0% chance of removal\\n * Events that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).\\n *\\n * @name undegradeBy\\n * @memberof Pattern\\n * @param {number} amount - a number between 0 and 1\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").undegradeBy(0.2)\\n * @example\\n * s(\\"hh*10\\").layer(\\n *   x => x.degradeBy(0.2).pan(0),\\n *   x => x.undegradeBy(0.8).pan(1)\\n * )\\n */","meta":{"filename":"signal.mjs","lineno":591,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Inverse of <code>degradeBy</code>: Randomly removes events from the pattern by a given amount.\\n0 = 100% chance of removal\\n1 = 0% chance of removal\\nEvents that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).</p>","name":"undegradeBy","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").undegradeBy(0.2)","s(\\"hh*10\\").layer(\\n  x => x.degradeBy(0.2).pan(0),\\n  x => x.undegradeBy(0.8).pan(1)\\n)"],"scope":"static","longname":"Pattern.undegradeBy","kind":"member"},{"comment":"/**\\n * Inverse of \`degrade\`: Randomly removes 50% of events from the pattern. Shorthand for \`.undegradeBy(0.5)\`\\n * Events that would be removed by degrade are let through by undegrade and vice versa (see second example).\\n *\\n * @name undegrade\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").undegrade()\\n * @example\\n * s(\\"hh*10\\").layer(\\n *   x => x.degrade().pan(0),\\n *   x => x.undegrade().pan(1)\\n * )\\n */","meta":{"filename":"signal.mjs","lineno":621,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Inverse of <code>degrade</code>: Randomly removes 50% of events from the pattern. Shorthand for <code>.undegradeBy(0.5)</code>\\nEvents that would be removed by degrade are let through by undegrade and vice versa (see second example).</p>","name":"undegrade","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").undegrade()","s(\\"hh*10\\").layer(\\n  x => x.degrade().pan(0),\\n  x => x.undegrade().pan(1)\\n)"],"scope":"static","longname":"Pattern.undegrade","kind":"member"},{"comment":"/**\\n *\\n * Randomly applies the given function by the given probability.\\n * Similar to \`someCyclesBy\`\\n *\\n * @name sometimesBy\\n * @memberof Pattern\\n * @param {number | Pattern} probability - a number between 0 and 1\\n * @param {function} function - the transformation to apply\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").sometimesBy(.4, x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":638,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly applies the given function by the given probability.\\nSimilar to <code>someCyclesBy</code></p>","name":"sometimesBy","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>a number between 0 and 1</p>","name":"probability"},{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").sometimesBy(.4, x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.sometimesBy","kind":"member"},{"comment":"/**\\n *\\n * Applies the given function with a 50% chance\\n *\\n * @name sometimes\\n * @memberof Pattern\\n * @param {function} function - the transformation to apply\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").sometimes(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":658,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function with a 50% chance</p>","name":"sometimes","memberof":"Pattern","params":[{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").sometimes(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.sometimes","kind":"member"},{"comment":"/**\\n *\\n * Randomly applies the given function by the given probability on a cycle by cycle basis.\\n * Similar to \`sometimesBy\`\\n *\\n * @name someCyclesBy\\n * @memberof Pattern\\n * @param {number | Pattern} probability - a number between 0 and 1\\n * @param {function} function - the transformation to apply\\n * @returns Pattern\\n * @example\\n * s(\\"bd,hh*8\\").someCyclesBy(.3, x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":673,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly applies the given function by the given probability on a cycle by cycle basis.\\nSimilar to <code>sometimesBy</code></p>","name":"someCyclesBy","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>a number between 0 and 1</p>","name":"probability"},{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd,hh*8\\").someCyclesBy(.3, x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.someCyclesBy","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.someCyclesBy(0.5, fn)\`\\n *\\n * @name someCycles\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"bd,hh*8\\").someCycles(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":698,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.someCyclesBy(0.5, fn)</code></p>","name":"someCycles","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd,hh*8\\").someCycles(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.someCycles","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.75, fn)\`\\n *\\n * @name often\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").often(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":712,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.75, fn)</code></p>","name":"often","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").often(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.often","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.25, fn)\`\\n *\\n * @name rarely\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").rarely(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":726,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.25, fn)</code></p>","name":"rarely","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").rarely(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.rarely","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.1, fn)\`\\n *\\n * @name almostNever\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").almostNever(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":740,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.1, fn)</code></p>","name":"almostNever","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").almostNever(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.almostNever","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.9, fn)\`\\n *\\n * @name almostAlways\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").almostAlways(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":754,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.9, fn)</code></p>","name":"almostAlways","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").almostAlways(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.almostAlways","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0, fn)\` (never calls fn)\\n *\\n * @name never\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").never(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":768,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0, fn)</code> (never calls fn)</p>","name":"never","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").never(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.never","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(1, fn)\` (always calls fn)\\n *\\n * @name always\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").always(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":782,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(1, fn)</code> (always calls fn)</p>","name":"always","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").always(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.always","kind":"member"},{"comment":"/**\\n *\\n * Do something on a keypress, or array of keypresses\\n * [Key name reference](https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values)\\n *\\n * @name whenKey\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"bd(5,8)\\").whenKey(\\"Control:j\\", x => x.segment(16).color(\\"red\\")).whenKey(\\"Control:i\\", x => x.fast(2).color(\\"blue\\"))\\n */","meta":{"filename":"signal.mjs","lineno":809,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Do something on a keypress, or array of keypresses\\n<a href=\\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\\">Key name reference</a></p>","name":"whenKey","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd(5,8)\\").whenKey(\\"Control:j\\", x => x.segment(16).color(\\"red\\")).whenKey(\\"Control:i\\", x => x.fast(2).color(\\"blue\\"))"],"scope":"static","longname":"Pattern.whenKey","kind":"member"},{"comment":"/**\\n *\\n * returns true when a key or array of keys is held\\n * [Key name reference](https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values)\\n *\\n * @name keyDown\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * keyDown(\\"Control:j\\").pick([s(\\"bd(5,8)\\"), s(\\"cp(3,8)\\")])\\n */","meta":{"filename":"signal.mjs","lineno":825,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>returns true when a key or array of keys is held\\n<a href=\\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\\">Key name reference</a></p>","name":"keyDown","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["keyDown(\\"Control:j\\").pick([s(\\"bd(5,8)\\"), s(\\"cp(3,8)\\")])"],"scope":"static","longname":"Pattern.keyDown","kind":"member"},{"comment":"/**\\n * @deprecated does not appear to be referenced or invoked anywhere in the codebase\\n * @noAutocomplete\\n */","meta":{"range":[2812,2979],"filename":"util.mjs","lineno":73,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100050400","name":"exports.getFreq","type":"VariableDeclaration"}},"deprecated":"does not appear to be referenced or invoked anywhere in the codebase","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"getFreq","longname":"getFreq","kind":"constant","scope":"global"},{"comment":"/**\\n * @deprecated only used in workshop (first-notes)\\n * @noAutocomplete\\n */","meta":{"range":[3138,3257],"filename":"util.mjs","lineno":85,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100050439","name":"exports.midi2note","type":"VariableDeclaration"}},"deprecated":"only used in workshop (first-notes)","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"midi2note","longname":"midi2note","kind":"constant","scope":"global"},{"comment":"/**\\n * Sends notes to Csound for rendering with MIDI semantics. The hap value is\\n * translated to these Csound pfields:\\n *\\n *  p1 -- Csound instrument either as a number (1-based, can be a fraction),\\n *        or as a string name.\\n *  p2 -- time in beats (usually seconds) from start of performance.\\n *  p3 -- duration in beats (usually seconds).\\n *  p4 -- MIDI key number (as a real number, not an integer but in [0, 127].\\n *  p5 -- MIDI velocity (as a real number, not an integer but in [0, 127].\\n *  p6 -- Strudel controls, as a string.\\n */","meta":{"range":[4679,6063],"filename":"index.mjs","lineno":139,"columnno":0,"path":"/Users/felix/projects/strudel/packages/csound","code":{"id":"astnode100053043","name":"exports.csoundm","type":"VariableDeclaration"}},"description":"<p>Sends notes to Csound for rendering with MIDI semantics. The hap value is\\ntranslated to these Csound pfields:</p>\\n<p>p1 -- Csound instrument either as a number (1-based, can be a fraction),\\nor as a string name.\\np2 -- time in beats (usually seconds) from start of performance.\\np3 -- duration in beats (usually seconds).\\np4 -- MIDI key number (as a real number, not an integer but in [0, 127].\\np5 -- MIDI velocity (as a real number, not an integer but in [0, 127].\\np6 -- Strudel controls, as a string.</p>","name":"csoundm","longname":"csoundm","kind":"constant","scope":"global"},{"comment":"/**\\n * Visualises a pattern as a scrolling 'pianoroll', displayed in the background of the editor. To show a pianoroll for all running patterns, use \`all(pianoroll)\`. To have a pianoroll appear below\\n * a pattern instead, prefix with \`_\`, e.g.: \`sound(\\"bd sd\\")._pianoroll()\`.\\n *\\n * @name pianoroll\\n * @synonyms punchcard\\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\\n * @param {integer} cycles number of cycles to be displayed at the same time - defaults to 4\\n * @param {number} playhead location of the active notes on the time axis - 0 to 1, defaults to 0.5\\n * @param {boolean} vertical displays the roll vertically - 0 by default\\n * @param {boolean} labels displays labels on individual notes (see the label function) - 0 by default\\n * @param {boolean} flipTime reverse the direction of the roll - 0 by default\\n * @param {boolean} flipValues reverse the relative location of notes on the value axis - 0 by default\\n * @param {number} overscan lookup X cycles outside of the cycles window to display notes in advance - 1 by default\\n * @param {boolean} hideNegative hide notes with negative time (before starting playing the pattern) - 0 by default\\n * @param {boolean} smear notes leave a solid trace - 0 by default\\n * @param {boolean} fold notes takes the full value axis width - 0 by default\\n * @param {string} active hexadecimal or CSS color of the active notes - defaults to #FFCA28\\n * @param {string} inactive hexadecimal or CSS color of the inactive notes - defaults to #7491D2\\n * @param {string} background hexadecimal or CSS color of the background - defaults to transparent\\n * @param {string} playheadColor hexadecimal or CSS color of the line representing the play head - defaults to white\\n * @param {boolean} fill notes are filled with color (otherwise only the label is displayed) - 0 by default\\n * @param {boolean} fillActive active notes are filled with color - 0 by default\\n * @param {boolean} stroke notes are shown with colored borders - 0 by default\\n * @param {boolean} strokeActive active notes are shown with colored borders - 0 by default\\n * @param {boolean} hideInactive only active notes are shown - 0 by default\\n * @param {boolean} colorizeInactive use note color for inactive notes - 1 by default\\n * @param {string} fontFamily define the font used by notes labels - defaults to 'monospace'\\n * @param {integer} minMidi minimum note value to display on the value axis - defaults to 10\\n * @param {integer} maxMidi maximum note value to display on the value axis - defaults to 90\\n * @param {boolean} autorange automatically calculate the minMidi and maxMidi parameters - 0 by default\\n * @see _pianoroll\\n * @example\\n * note(\\"c2 a2 eb2\\")\\n * .euclid(5,8)\\n * .s('sawtooth')\\n * .lpenv(4).lpf(300)\\n * .pianoroll({ labels: 1 })\\n */","meta":{"filename":"pianoroll.mjs","lineno":39,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Visualises a pattern as a scrolling 'pianoroll', displayed in the background of the editor. To show a pianoroll for all running patterns, use <code>all(pianoroll)</code>. To have a pianoroll appear below\\na pattern instead, prefix with <code>_</code>, e.g.: <code>sound(&quot;bd sd&quot;)._pianoroll()</code>.</p>","name":"pianoroll","synonyms_text":"punchcard","synonyms":["punchcard"],"params":[{"type":{"names":["Object"]},"description":"<p>Object containing all the optional following parameters as key value pairs:</p>","name":"options"},{"type":{"names":["integer"]},"description":"<p>number of cycles to be displayed at the same time - defaults to 4</p>","name":"cycles"},{"type":{"names":["number"]},"description":"<p>location of the active notes on the time axis - 0 to 1, defaults to 0.5</p>","name":"playhead"},{"type":{"names":["boolean"]},"description":"<p>displays the roll vertically - 0 by default</p>","name":"vertical"},{"type":{"names":["boolean"]},"description":"<p>displays labels on individual notes (see the label function) - 0 by default</p>","name":"labels"},{"type":{"names":["boolean"]},"description":"<p>reverse the direction of the roll - 0 by default</p>","name":"flipTime"},{"type":{"names":["boolean"]},"description":"<p>reverse the relative location of notes on the value axis - 0 by default</p>","name":"flipValues"},{"type":{"names":["number"]},"description":"<p>lookup X cycles outside of the cycles window to display notes in advance - 1 by default</p>","name":"overscan"},{"type":{"names":["boolean"]},"description":"<p>hide notes with negative time (before starting playing the pattern) - 0 by default</p>","name":"hideNegative"},{"type":{"names":["boolean"]},"description":"<p>notes leave a solid trace - 0 by default</p>","name":"smear"},{"type":{"names":["boolean"]},"description":"<p>notes takes the full value axis width - 0 by default</p>","name":"fold"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the active notes - defaults to #FFCA28</p>","name":"active"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the inactive notes - defaults to #7491D2</p>","name":"inactive"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the background - defaults to transparent</p>","name":"background"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the line representing the play head - defaults to white</p>","name":"playheadColor"},{"type":{"names":["boolean"]},"description":"<p>notes are filled with color (otherwise only the label is displayed) - 0 by default</p>","name":"fill"},{"type":{"names":["boolean"]},"description":"<p>active notes are filled with color - 0 by default</p>","name":"fillActive"},{"type":{"names":["boolean"]},"description":"<p>notes are shown with colored borders - 0 by default</p>","name":"stroke"},{"type":{"names":["boolean"]},"description":"<p>active notes are shown with colored borders - 0 by default</p>","name":"strokeActive"},{"type":{"names":["boolean"]},"description":"<p>only active notes are shown - 0 by default</p>","name":"hideInactive"},{"type":{"names":["boolean"]},"description":"<p>use note color for inactive notes - 1 by default</p>","name":"colorizeInactive"},{"type":{"names":["string"]},"description":"<p>define the font used by notes labels - defaults to 'monospace'</p>","name":"fontFamily"},{"type":{"names":["integer"]},"description":"<p>minimum note value to display on the value axis - defaults to 10</p>","name":"minMidi"},{"type":{"names":["integer"]},"description":"<p>maximum note value to display on the value axis - defaults to 90</p>","name":"maxMidi"},{"type":{"names":["boolean"]},"description":"<p>automatically calculate the minMidi and maxMidi parameters - 0 by default</p>","name":"autorange"}],"see":["_pianoroll"],"examples":["note(\\"c2 a2 eb2\\")\\n.euclid(5,8)\\n.s('sawtooth')\\n.lpenv(4).lpf(300)\\n.pianoroll({ labels: 1 })"],"longname":"pianoroll","kind":"member","scope":"global"},{"comment":"/**\\n * Displays a vertical pianoroll with event labels.\\n * Supports all the same options as pianoroll.\\n *\\n * @name wordfall\\n */","meta":{"filename":"pianoroll.mjs","lineno":297,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Displays a vertical pianoroll with event labels.\\nSupports all the same options as pianoroll.</p>","name":"wordfall","longname":"wordfall","kind":"member","scope":"global"},{"comment":"/**\\n * Renders a pitch circle to visualize frequencies within one octave\\n * @name pitchwheel\\n * @param {number} hapcircles\\n * @param {number} circle\\n * @param {number} edo\\n * @param {string} root\\n * @param {number} thickness\\n * @param {number} hapRadius\\n * @param {string} mode\\n * @param {number} margin\\n * @example\\n * n(\\"0 .. 12\\").scale(\\"C:chromatic\\")\\n * .s(\\"sawtooth\\")\\n * .lpf(500)\\n * ._pitchwheel()\\n */","meta":{"filename":"pitchwheel.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Renders a pitch circle to visualize frequencies within one octave</p>","name":"pitchwheel","params":[{"type":{"names":["number"]},"name":"hapcircles"},{"type":{"names":["number"]},"name":"circle"},{"type":{"names":["number"]},"name":"edo"},{"type":{"names":["string"]},"name":"root"},{"type":{"names":["number"]},"name":"thickness"},{"type":{"names":["number"]},"name":"hapRadius"},{"type":{"names":["string"]},"name":"mode"},{"type":{"names":["number"]},"name":"margin"}],"examples":["n(\\"0 .. 12\\").scale(\\"C:chromatic\\")\\n.s(\\"sawtooth\\")\\n.lpf(500)\\n._pitchwheel()"],"longname":"pitchwheel","kind":"member","scope":"global"},{"comment":"/**\\n * Displays a spiral visual.\\n *\\n * @name spiral\\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\\n * @param {number} stretch controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees\\n * @param {number} size the diameter of the spiral\\n * @param {number} thickness line thickness\\n * @param {string} cap style of line ends: butt (default), round, square\\n * @param {string} inset number of rotations before spiral starts (default 3)\\n * @param {string} playheadColor color of playhead, defaults to white\\n * @param {number} playheadLength length of playhead in rotations, defaults to 0.02\\n * @param {number} playheadThickness thickness of playheadrotations, defaults to thickness\\n * @param {number} padding space around spiral\\n * @param {number} steady steadyness of spiral vs playhead. 1 = spiral doesn't move, playhead does.\\n * @param {number} activeColor color of active segment. defaults to foreground of theme\\n * @param {number} inactiveColor color of inactive segments. defaults to gutterForeground of theme\\n * @param {boolean} colorizeInactive wether or not to colorize inactive segments, defaults to 0\\n * @param {boolean} fade wether or not past and future should fade out. defaults to 1\\n * @param {boolean} logSpiral wether or not the spiral should be logarithmic. defaults to 0\\n * @example\\n * note(\\"c2 a2 eb2\\")\\n * .euclid(5,8)\\n * .s('sawtooth')\\n * .lpenv(4).lpf(300)\\n * ._spiral({ steady: .96 })\\n */","meta":{"filename":"spiral.mjs","lineno":128,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Displays a spiral visual.</p>","name":"spiral","params":[{"type":{"names":["Object"]},"description":"<p>Object containing all the optional following parameters as key value pairs:</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees</p>","name":"stretch"},{"type":{"names":["number"]},"description":"<p>the diameter of the spiral</p>","name":"size"},{"type":{"names":["number"]},"description":"<p>line thickness</p>","name":"thickness"},{"type":{"names":["string"]},"description":"<p>style of line ends: butt (default), round, square</p>","name":"cap"},{"type":{"names":["string"]},"description":"<p>number of rotations before spiral starts (default 3)</p>","name":"inset"},{"type":{"names":["string"]},"description":"<p>color of playhead, defaults to white</p>","name":"playheadColor"},{"type":{"names":["number"]},"description":"<p>length of playhead in rotations, defaults to 0.02</p>","name":"playheadLength"},{"type":{"names":["number"]},"description":"<p>thickness of playheadrotations, defaults to thickness</p>","name":"playheadThickness"},{"type":{"names":["number"]},"description":"<p>space around spiral</p>","name":"padding"},{"type":{"names":["number"]},"description":"<p>steadyness of spiral vs playhead. 1 = spiral doesn't move, playhead does.</p>","name":"steady"},{"type":{"names":["number"]},"description":"<p>color of active segment. defaults to foreground of theme</p>","name":"activeColor"},{"type":{"names":["number"]},"description":"<p>color of inactive segments. defaults to gutterForeground of theme</p>","name":"inactiveColor"},{"type":{"names":["boolean"]},"description":"<p>wether or not to colorize inactive segments, defaults to 0</p>","name":"colorizeInactive"},{"type":{"names":["boolean"]},"description":"<p>wether or not past and future should fade out. defaults to 1</p>","name":"fade"},{"type":{"names":["boolean"]},"description":"<p>wether or not the spiral should be logarithmic. defaults to 0</p>","name":"logSpiral"}],"examples":["note(\\"c2 a2 eb2\\")\\n.euclid(5,8)\\n.s('sawtooth')\\n.lpenv(4).lpf(300)\\n._spiral({ steady: .96 })"],"longname":"spiral","kind":"member","scope":"global"},{"comment":"/**\\n * configures the default midimap, which is used when no \\"midimap\\" port is set\\n * @example\\n * defaultmidimap({ lpf: 74 })\\n * $: note(\\"c a f e\\").midi();\\n * $: lpf(sine.slow(4).segment(16)).midi();\\n */","meta":{"range":[4416,4515],"filename":"midi.mjs","lineno":131,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100060963","name":"exports.defaultmidimap","type":"FunctionDeclaration","paramnames":["mapping"]}},"description":"<p>configures the default midimap, which is used when no &quot;midimap&quot; port is set</p>","examples":["defaultmidimap({ lpf: 74 })\\n$: note(\\"c a f e\\").midi();\\n$: lpf(sine.slow(4).segment(16)).midi();"],"name":"defaultmidimap","longname":"defaultmidimap","kind":"function","scope":"global"},{"comment":"/**\\n * Adds midimaps to the registry. Inside each midimap, control names (e.g. lpf) are mapped to cc numbers.\\n * @example\\n * midimaps({ mymap: { lpf: 74 } })\\n * $: note(\\"c a f e\\")\\n * .lpf(sine.slow(4))\\n * .midimap('mymap')\\n * .midi()\\n * @example\\n * midimaps({ mymap: {\\n *   lpf: { ccn: 74, min: 0, max: 20000, exp: 0.5 }\\n * }})\\n * $: note(\\"c a f e\\")\\n * .lpf(sine.slow(2).range(400,2000))\\n * .midimap('mymap')\\n * .midi()\\n */","meta":{"range":[4962,5392],"filename":"midi.mjs","lineno":154,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100060981","name":"exports.midimaps","type":"FunctionDeclaration","paramnames":["map"]}},"description":"<p>Adds midimaps to the registry. Inside each midimap, control names (e.g. lpf) are mapped to cc numbers.</p>","examples":["midimaps({ mymap: { lpf: 74 } })\\n$: note(\\"c a f e\\")\\n.lpf(sine.slow(4))\\n.midimap('mymap')\\n.midi()","midimaps({ mymap: {\\n  lpf: { ccn: 74, min: 0, max: 20000, exp: 0.5 }\\n}})\\n$: note(\\"c a f e\\")\\n.lpf(sine.slow(2).range(400,2000))\\n.midimap('mymap')\\n.midi()"],"name":"midimaps","longname":"midimaps","kind":"function","scope":"global"},{"comment":"/**\\n * MIDI output: Opens a MIDI output port.\\n * @param {string | number} midiport MIDI device name or index defaulting to 0\\n * @param {object} options Additional MIDI configuration options\\n * @example\\n * note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1')\\n * @example\\n * note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1', { controller: true, latency: 50 })\\n */","meta":{"range":[10343,16473],"filename":"midi.mjs","lineno":289,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100061632","name":"Pattern.prototype.midi","type":"FunctionExpression","paramnames":["midiport","options"]},"vars":{"undefined":null,"options":"Pattern#midi~options","midiport":"Pattern#midi~midiport","midiConfig":"Pattern#midi~midiConfig","":null}},"description":"<p>MIDI output: Opens a MIDI output port.</p>","params":[{"type":{"names":["string","number"]},"description":"<p>MIDI device name or index defaulting to 0</p>","name":"midiport"},{"type":{"names":["object"]},"description":"<p>Additional MIDI configuration options</p>","name":"options"}],"examples":["note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1')","note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1', { controller: true, latency: 50 })"],"name":"midi","longname":"Pattern#midi","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * MIDI input: Opens a MIDI input port to receive MIDI control change messages.\\n * @param {string | number} input MIDI device name or index defaulting to 0\\n * @returns {Function}\\n * @example\\n * let cc = await midin('IAC Driver Bus 1')\\n * note(\\"c a f e\\").lpf(cc(0).range(0, 1000)).lpq(cc(1).range(0, 10)).sound(\\"sawtooth\\")\\n */","meta":{"range":[16844,18118],"filename":"midi.mjs","lineno":474,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100062281","name":"exports.midin","type":"FunctionDeclaration","paramnames":["input"]}},"description":"<p>MIDI input: Opens a MIDI input port to receive MIDI control change messages.</p>","params":[{"type":{"names":["string","number"]},"description":"<p>MIDI device name or index defaulting to 0</p>","name":"input"}],"returns":[{"type":{"names":["function"]}}],"examples":["let cc = await midin('IAC Driver Bus 1')\\nnote(\\"c a f e\\").lpf(cc(0).range(0, 1000)).lpq(cc(1).range(0, 10)).sound(\\"sawtooth\\")"],"name":"midin","longname":"midin","kind":"function","scope":"global"},{"comment":"/**\\n *  The accelerometer's x-axis value ranges from 0 to 1.\\n * @name accelerationX\\n * @return {Pattern}\\n * @synonyms accX\\n * @example\\n * n(accelerationX.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":5,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer's x-axis value ranges from 0 to 1.</p>","name":"accelerationX","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accX","synonyms":["accX"],"examples":["n(accelerationX.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"accelerationX","kind":"member","scope":"global"},{"comment":"/**\\n *  The accelerometer's y-axis value ranges from 0 to 1.\\n * @name accelerationY\\n * @return {Pattern}\\n * @synonyms accY\\n * @example\\n * n(accelerationY.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":15,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer's y-axis value ranges from 0 to 1.</p>","name":"accelerationY","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accY","synonyms":["accY"],"examples":["n(accelerationY.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"accelerationY","kind":"member","scope":"global"},{"comment":"/**\\n *  The accelerometer's z-axis value ranges from 0 to 1.\\n * @name accelerationZ\\n * @return {Pattern}\\n * @synonyms accZ\\n * @example\\n * n(accelerationZ.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":25,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer's z-axis value ranges from 0 to 1.</p>","name":"accelerationZ","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accZ","synonyms":["accZ"],"examples":["n(accelerationZ.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"accelerationZ","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's gravity x-axis value ranges from 0 to 1.\\n * @name gravityX\\n * @return {Pattern}\\n * @synonyms gravX\\n * @example\\n * n(gravityX.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":35,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's gravity x-axis value ranges from 0 to 1.</p>","name":"gravityX","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravX","synonyms":["gravX"],"examples":["n(gravityX.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"gravityX","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's gravity y-axis value ranges from 0 to 1.\\n * @name gravityY\\n * @return {Pattern}\\n * @synonyms gravY\\n * @example\\n * n(gravityY.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":45,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's gravity y-axis value ranges from 0 to 1.</p>","name":"gravityY","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravY","synonyms":["gravY"],"examples":["n(gravityY.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"gravityY","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's gravity z-axis value ranges from 0 to 1.\\n * @name gravityZ\\n * @return {Pattern}\\n * @synonyms gravZ\\n * @example\\n * n(gravityZ.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":55,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's gravity z-axis value ranges from 0 to 1.</p>","name":"gravityZ","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravZ","synonyms":["gravZ"],"examples":["n(gravityZ.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"gravityZ","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's rotation around the alpha-axis value ranges from 0 to 1.\\n * @name rotationAlpha\\n * @return {Pattern}\\n * @synonyms rotA, rotZ, rotationZ\\n * @example\\n * n(rotationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's rotation around the alpha-axis value ranges from 0 to 1.</p>","name":"rotationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotA, rotZ, rotationZ","synonyms":["rotA","rotZ","rotationZ"],"examples":["n(rotationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"rotationAlpha","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's rotation around the beta-axis value ranges from 0 to 1.\\n * @name rotationBeta\\n * @return {Pattern}\\n * @synonyms rotB, rotX, rotationX\\n * @example\\n * n(rotationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's rotation around the beta-axis value ranges from 0 to 1.</p>","name":"rotationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotB, rotX, rotationX","synonyms":["rotB","rotX","rotationX"],"examples":["n(rotationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"rotationBeta","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's rotation around the gamma-axis value ranges from 0 to 1.\\n * @name rotationGamma\\n * @return {Pattern}\\n * @synonyms rotG, rotY, rotationY\\n * @example\\n * n(rotationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":85,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's rotation around the gamma-axis value ranges from 0 to 1.</p>","name":"rotationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotG, rotY, rotationY","synonyms":["rotG","rotY","rotationY"],"examples":["n(rotationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"rotationGamma","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's orientation alpha value ranges from 0 to 1.\\n * @name orientationAlpha\\n * @return {Pattern}\\n * @synonyms oriA, oriZ, orientationZ\\n * @example\\n * n(orientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":95,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's orientation alpha value ranges from 0 to 1.</p>","name":"orientationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriA, oriZ, orientationZ","synonyms":["oriA","oriZ","orientationZ"],"examples":["n(orientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"orientationAlpha","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's orientation beta value ranges from 0 to 1.\\n * @name orientationBeta\\n * @return {Pattern}\\n * @synonyms oriB, oriX, orientationX\\n * @example\\n * n(orientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":105,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's orientation beta value ranges from 0 to 1.</p>","name":"orientationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriB, oriX, orientationX","synonyms":["oriB","oriX","orientationX"],"examples":["n(orientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"orientationBeta","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's orientation gamma value ranges from 0 to 1.\\n * @name orientationGamma\\n * @return {Pattern}\\n * @synonyms oriG, oriY, orientationY\\n * @example\\n * n(orientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":115,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's orientation gamma value ranges from 0 to 1.</p>","name":"orientationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriG, oriY, orientationY","synonyms":["oriG","oriY","orientationY"],"examples":["n(orientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"orientationGamma","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's absolute orientation alpha value ranges from 0 to 1.\\n * @name absoluteOrientationAlpha\\n * @return {Pattern}\\n * @synonyms absOriA, absOriZ, absoluteOrientationZ\\n * @example\\n * n(absoluteOrientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":125,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's absolute orientation alpha value ranges from 0 to 1.</p>","name":"absoluteOrientationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriA, absOriZ, absoluteOrientationZ","synonyms":["absOriA","absOriZ","absoluteOrientationZ"],"examples":["n(absoluteOrientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"absoluteOrientationAlpha","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's absolute orientation beta value ranges from 0 to 1.\\n * @name absoluteOrientationBeta\\n * @return {Pattern}\\n * @synonyms absOriB, absOriX, absoluteOrientationX\\n * @example\\n * n(absoluteOrientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":135,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's absolute orientation beta value ranges from 0 to 1.</p>","name":"absoluteOrientationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriB, absOriX, absoluteOrientationX","synonyms":["absOriB","absOriX","absoluteOrientationX"],"examples":["n(absoluteOrientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"absoluteOrientationBeta","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's absolute orientation gamma value ranges from 0 to 1.\\n * @name absoluteOrientationGamma\\n * @return {Pattern}\\n * @synonyms absOriG, absOriY, absoluteOrientationY\\n * @example\\n * n(absoluteOrientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":145,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's absolute orientation gamma value ranges from 0 to 1.</p>","name":"absoluteOrientationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriG, absOriY, absoluteOrientationY","synonyms":["absOriG","absOriY","absoluteOrientationY"],"examples":["n(absoluteOrientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"absoluteOrientationGamma","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * Sends each hap as an OSC message, which can be picked up by SuperCollider or any other OSC-enabled software.\\n * For more info, read [MIDI & OSC in the docs](https://strudel.cc/learn/input-output/)\\n *\\n * @name osc\\n * @memberof Pattern\\n * @returns Pattern\\n */","meta":{"filename":"osc.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/osc","code":{}},"description":"<p>Sends each hap as an OSC message, which can be picked up by SuperCollider or any other OSC-enabled software.\\nFor more info, read <a href=\\"https://strudel.cc/learn/input-output/\\">MIDI &amp; OSC in the docs</a></p>","name":"osc","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"scope":"static","longname":"Pattern.osc","kind":"member"},{"comment":"/** Overlap-Add Node */","meta":{"range":[150,6513],"filename":"ola-processor.js","lineno":7,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098159","name":"OLAProcessor","type":"ClassDeclaration","paramnames":["options"]}},"name":"OLAProcessor","longname":"OLAProcessor","kind":"class","classdesc":"<p>Overlap-Add Node</p>","scope":"global"},{"comment":"/** Handles dynamic reallocation of input/output channels buffer\\n     (channel numbers may lety during lifecycle) **/","meta":{"range":[1429,1897],"filename":"ola-processor.js","lineno":39,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098312","name":"OLAProcessor#reallocateChannelsIfNeeded","type":"MethodDefinition","paramnames":["inputs","outputs"]},"vars":{"":null}},"description":"<p>Handles dynamic reallocation of input/output channels buffer\\n(channel numbers may lety during lifecycle)</p>","name":"reallocateChannelsIfNeeded","longname":"OLAProcessor#reallocateChannelsIfNeeded","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Read next web audio block to input buffers **/","meta":{"range":[3534,4122],"filename":"ola-processor.js","lineno":92,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098619","name":"OLAProcessor#readInputs","type":"MethodDefinition","paramnames":["inputs"]},"vars":{"":null}},"description":"<p>Read next web audio block to input buffers</p>","name":"readInputs","longname":"OLAProcessor#readInputs","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Write next web audio block from output buffers **/","meta":{"range":[4183,4461],"filename":"ola-processor.js","lineno":112,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098740","name":"OLAProcessor#writeOutputs","type":"MethodDefinition","paramnames":["outputs"]},"vars":{"":null}},"description":"<p>Write next web audio block from output buffers</p>","name":"writeOutputs","longname":"OLAProcessor#writeOutputs","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Shift left content of input buffers to receive new web audio block **/","meta":{"range":[4542,4757],"filename":"ola-processor.js","lineno":122,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098800","name":"OLAProcessor#shiftInputBuffers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Shift left content of input buffers to receive new web audio block</p>","name":"shiftInputBuffers","longname":"OLAProcessor#shiftInputBuffers","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Shift left content of output buffers to receive new web audio block **/","meta":{"range":[4839,5147],"filename":"ola-processor.js","lineno":131,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098847","name":"OLAProcessor#shiftOutputBuffers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Shift left content of output buffers to receive new web audio block</p>","name":"shiftOutputBuffers","longname":"OLAProcessor#shiftOutputBuffers","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Copy contents of input buffers to buffer actually sent to process **/","meta":{"range":[5227,5454],"filename":"ola-processor.js","lineno":141,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098914","name":"OLAProcessor#prepareInputBuffersToSend","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Copy contents of input buffers to buffer actually sent to process</p>","name":"prepareInputBuffersToSend","longname":"OLAProcessor#prepareInputBuffersToSend","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Add contents of output buffers just processed to output buffers **/","meta":{"range":[5532,5852],"filename":"ola-processor.js","lineno":150,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098966","name":"OLAProcessor#handleOutputBuffersToRetrieve","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Add contents of output buffers just processed to output buffers</p>","name":"handleOutputBuffersToRetrieve","longname":"OLAProcessor#handleOutputBuffersToRetrieve","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Generates a reverb impulse response.\\n\\n @param {!Object} params TODO: Document the properties.\\n @param {!function(!AudioBuffer)} callback Function to call when\\n  the impulse response has been generated. The impulse response\\n  is passed to this function as its parameter. May be called\\n  immediately within the current execution context, or later. */","meta":{"range":[969,2138],"filename":"reverbGen.mjs","lineno":24,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099451","name":"reverbGen.generateReverb","type":"FunctionExpression","paramnames":["params","callback"]},"vars":{"audioContext":"reverbGen.generateReverb~audioContext","sampleRate":"reverbGen.generateReverb~sampleRate","numChannels":"reverbGen.generateReverb~numChannels","totalTime":"reverbGen.generateReverb~totalTime","decaySampleFrames":"reverbGen.generateReverb~decaySampleFrames","numSampleFrames":"reverbGen.generateReverb~numSampleFrames","fadeInSampleFrames":"reverbGen.generateReverb~fadeInSampleFrames","decayBase":"reverbGen.generateReverb~decayBase","reverbIR":"reverbGen.generateReverb~reverbIR","i":"reverbGen.generateReverb~i","chan":"reverbGen.generateReverb~chan","j":"reverbGen.generateReverb~j","chan[undefined]":"reverbGen.generateReverb~chan.undefined]"}},"description":"<p>Generates a reverb impulse response.</p>","params":[{"type":{"names":["Object"]},"nullable":false,"description":"<p>TODO: Document the properties.</p>","name":"params"},{"type":{"names":["function"]},"nullable":false,"description":"<p>Function to call when\\nthe impulse response has been generated. The impulse response\\nis passed to this function as its parameter. May be called\\nimmediately within the current execution context, or later.</p>","name":"callback"}],"name":"generateReverb","longname":"reverbGen.generateReverb","kind":"function","memberof":"reverbGen","scope":"static"},{"comment":"/** Creates a canvas element showing a graph of the given data.\\n\\n\\n @param {!Float32Array} data An array of numbers, or a Float32Array.\\n @param {number} width Width in pixels of the canvas.\\n @param {number} height Height in pixels of the canvas.\\n @param {number} min Minimum value of data for the graph (lower edge).\\n @param {number} max Maximum value of data in the graph (upper edge).\\n @return {!CanvasElement} The generated canvas element. */","meta":{"range":[2586,3097],"filename":"reverbGen.mjs","lineno":58,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099631","name":"reverbGen.generateGraph","type":"FunctionExpression","paramnames":["data","width","height","min","max"]},"vars":{"canvas":"reverbGen.generateGraph~canvas","canvas.width":"reverbGen.generateGraph~canvas.width","canvas.height":"reverbGen.generateGraph~canvas.height","gc":"reverbGen.generateGraph~gc","gc.fillStyle":"reverbGen.generateGraph~gc.fillStyle","xscale":"reverbGen.generateGraph~xscale","yscale":"reverbGen.generateGraph~yscale","i":"reverbGen.generateGraph~i"}},"description":"<p>Creates a canvas element showing a graph of the given data.</p>","params":[{"type":{"names":["Float32Array"]},"nullable":false,"description":"<p>An array of numbers, or a Float32Array.</p>","name":"data"},{"type":{"names":["number"]},"description":"<p>Width in pixels of the canvas.</p>","name":"width"},{"type":{"names":["number"]},"description":"<p>Height in pixels of the canvas.</p>","name":"height"},{"type":{"names":["number"]},"description":"<p>Minimum value of data for the graph (lower edge).</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>Maximum value of data in the graph (upper edge).</p>","name":"max"}],"returns":[{"type":{"names":["CanvasElement"]},"nullable":false,"description":"<p>The generated canvas element.</p>"}],"name":"generateGraph","longname":"reverbGen.generateGraph","kind":"function","memberof":"reverbGen","scope":"static"},{"comment":"/** Applies a constantly changing lowpass filter to the given sound.\\n\\n @private\\n @param {!AudioBuffer} input\\n @param {number} lpFreqStart\\n @param {number} lpFreqEnd\\n @param {number} lpFreqEndAt\\n @param {!function(!AudioBuffer)} callback May be called\\n  immediately within the current execution context, or later.*/","meta":{"range":[3419,4357],"filename":"reverbGen.mjs","lineno":83,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099746","name":"applyGradualLowpass","type":"FunctionExpression"},"vars":{"channelData":"applyGradualLowpass~channelData","context":"applyGradualLowpass~context","player":"applyGradualLowpass~player","player.buffer":"applyGradualLowpass~player.buffer","filter":"applyGradualLowpass~filter","lpFreqStart":"applyGradualLowpass~lpFreqStart","lpFreqEnd":"applyGradualLowpass~lpFreqEnd","filter.type":"applyGradualLowpass~filter.type","filter.Q.value":"applyGradualLowpass~filter.Q.value","context.oncomplete":"applyGradualLowpass~context.oncomplete","":null,"window.filterNode":"window.filterNode"}},"description":"<p>Applies a constantly changing lowpass filter to the given sound.</p>","access":"private","params":[{"type":{"names":["AudioBuffer"]},"nullable":false,"name":"input"},{"type":{"names":["number"]},"name":"lpFreqStart"},{"type":{"names":["number"]},"name":"lpFreqEnd"},{"type":{"names":["number"]},"name":"lpFreqEndAt"},{"type":{"names":["function"]},"nullable":false,"description":"<p>May be called\\nimmediately within the current execution context, or later.</p>","name":"callback"}],"name":"applyGradualLowpass","longname":"applyGradualLowpass","kind":"function","scope":"global"},{"comment":"/** @private\\n @param {!AudioBuffer} buffer\\n @return {!Array.<!Float32Array>} An array containing the Float32Array of each channel's samples. */","meta":{"range":[4508,4691],"filename":"reverbGen.mjs","lineno":116,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099910","name":"getAllChannelData","type":"FunctionExpression"},"vars":{"channels":"getAllChannelData~channels","i":"getAllChannelData~i","channels[undefined]":"getAllChannelData~channels.undefined]"}},"access":"private","params":[{"type":{"names":["AudioBuffer"]},"nullable":false,"name":"buffer"}],"returns":[{"type":{"names":["Array.<!Float32Array>"]},"nullable":false,"description":"<p>An array containing the Float32Array of each channel's samples.</p>"}],"name":"getAllChannelData","longname":"getAllChannelData","kind":"function","scope":"global"},{"comment":"/** @private\\n @return {number} A random number from -1 to 1. */","meta":{"range":[4762,4824],"filename":"reverbGen.mjs","lineno":126,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099945","name":"randomSample","type":"FunctionExpression"}},"access":"private","returns":[{"type":{"names":["number"]},"description":"<p>A random number from -1 to 1.</p>"}],"name":"randomSample","longname":"randomSample","kind":"function","scope":"global","params":[]},{"comment":"/**\\n * Loads a collection of samples to use with \`s\`\\n * @example\\n * samples('github:tidalcycles/dirt-samples');\\n * s(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")\\n * @example\\n * samples({\\n *  bd: '808bd/BD0000.WAV',\\n *  sd: '808sd/SD0010.WAV'\\n *  }, 'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/');\\n * s(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")\\n * @example\\n * samples('shabda:noise,chimp:2')\\n * s(\\"noise <chimp:0*2 chimp:1>\\")\\n * @example\\n * samples('shabda/speech/fr-FR/f:chocolat')\\n * s(\\"chocolat*4\\")\\n */","meta":{"range":[7678,9659],"filename":"sampler.mjs","lineno":218,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100100991","name":"exports.samples","type":"VariableDeclaration"}},"description":"<p>Loads a collection of samples to use with <code>s</code></p>","examples":["samples('github:tidalcycles/dirt-samples');\\ns(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")","samples({\\n bd: '808bd/BD0000.WAV',\\n sd: '808sd/SD0010.WAV'\\n }, 'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/');\\ns(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")","samples('shabda:noise,chimp:2')\\ns(\\"noise <chimp:0*2 chimp:1>\\")","samples('shabda/speech/fr-FR/f:chocolat')\\ns(\\"chocolat*4\\")"],"name":"samples","longname":"samples","kind":"constant","scope":"global"},{"comment":"/**\\n * Register an alias for a bank of sounds.\\n * Optionally accepts a single argument map of bank aliases.\\n * Optionally accepts a single argument string of a path to a JSON file containing bank aliases.\\n * @param {string} bank - The bank to alias\\n * @param {string} alias - The alias to use for the bank\\n */","meta":{"range":[3683,4070],"filename":"superdough.mjs","lineno":101,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100101918","name":"exports.aliasBank","type":"FunctionDeclaration","paramnames":["args"]}},"description":"<p>Register an alias for a bank of sounds.\\nOptionally accepts a single argument map of bank aliases.\\nOptionally accepts a single argument string of a path to a JSON file containing bank aliases.</p>","params":[{"type":{"names":["string"]},"description":"<p>The bank to alias</p>","name":"bank"},{"type":{"names":["string"]},"description":"<p>The alias to use for the bank</p>","name":"alias"}],"name":"aliasBank","longname":"aliasBank","kind":"function","scope":"global"},{"comment":"/** Apply Hann window in-place */","meta":{"range":[15251,15387],"filename":"worklets.mjs","lineno":571,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100110531","name":"PhaseVocoderProcessor#applyHannWindow","type":"MethodDefinition","paramnames":["input"]},"vars":{"":null}},"description":"<p>Apply Hann window in-place</p>","name":"applyHannWindow","longname":"PhaseVocoderProcessor#applyHannWindow","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Compute squared magnitudes for peak finding **/","meta":{"range":[15445,15757],"filename":"worklets.mjs","lineno":578,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100110565","name":"PhaseVocoderProcessor#computeMagnitudes","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Compute squared magnitudes for peak finding</p>","name":"computeMagnitudes","longname":"PhaseVocoderProcessor#computeMagnitudes","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Find peaks in spectrum magnitudes **/","meta":{"range":[15805,16276],"filename":"worklets.mjs","lineno":592,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100110625","name":"PhaseVocoderProcessor#findPeaks","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Find peaks in spectrum magnitudes</p>","name":"findPeaks","longname":"PhaseVocoderProcessor#findPeaks","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Shift peaks and regions of influence by pitchFactor into new specturm */","meta":{"range":[16359,18422],"filename":"worklets.mjs","lineno":616,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100110731","name":"PhaseVocoderProcessor#shiftPeaks","type":"MethodDefinition","paramnames":["pitchFactor"]},"vars":{"":null}},"description":"<p>Shift peaks and regions of influence by pitchFactor into new specturm</p>","name":"shiftPeaks","longname":"PhaseVocoderProcessor#shiftPeaks","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/**  BYTE BEATS */","meta":{"range":[21480,22411],"filename":"worklets.mjs","lineno":779,"columnno":6,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100111445","name":"chyx","type":"ObjectExpression","value":"{\\"bitC\\":\\"\\",\\"br\\":\\"\\",\\"sinf\\":\\"\\",\\"cosf\\":\\"\\",\\"tanf\\":\\"\\",\\"regG\\":\\"\\"}"}},"description":"<p>BYTE BEATS</p>","name":"chyx","longname":"chyx","kind":"constant","scope":"global","params":[]},{"comment":"/**\\n * Change the pitch of each value by the given amount. Expects numbers or note strings as values.\\n * The amount can be given as a number of semitones or as a string in interval short notation.\\n * If you don't care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\\n * the form: ST where S is the degree number and T the type of interval with\\n *\\n * - M = major\\n * - m = minor\\n * - P = perfect\\n * - A = augmented\\n * - d = diminished\\n *\\n * Examples intervals:\\n *\\n * - 1P = unison\\n * - 3M = major third\\n * - 3m = minor third\\n * - 4P = perfect fourth\\n * - 4A = augmented fourth\\n * - 5P = perfect fifth\\n * - 5d = diminished fifth\\n *\\n * @param {string | number} amount Either number of semitones or interval string.\\n * @returns Pattern\\n * @memberof Pattern\\n * @name transpose\\n * @synonyms trans\\n * @example\\n * \\"c2 c3\\".fast(2).transpose(\\"<0 -2 5 3>\\".slow(2)).note()\\n * @example\\n * \\"c2 c3\\".fast(2).transpose(\\"<1P -2M 4P 3m>\\".slow(2)).note()\\n */","meta":{"filename":"tonal.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Change the pitch of each value by the given amount. Expects numbers or note strings as values.\\nThe amount can be given as a number of semitones or as a string in interval short notation.\\nIf you don't care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\\nthe form: ST where S is the degree number and T the type of interval with</p>\\n<ul>\\n<li>M = major</li>\\n<li>m = minor</li>\\n<li>P = perfect</li>\\n<li>A = augmented</li>\\n<li>d = diminished</li>\\n</ul>\\n<p>Examples intervals:</p>\\n<ul>\\n<li>1P = unison</li>\\n<li>3M = major third</li>\\n<li>3m = minor third</li>\\n<li>4P = perfect fourth</li>\\n<li>4A = augmented fourth</li>\\n<li>5P = perfect fifth</li>\\n<li>5d = diminished fifth</li>\\n</ul>","params":[{"type":{"names":["string","number"]},"description":"<p>Either number of semitones or interval string.</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"memberof":"Pattern","name":"transpose","synonyms_text":"trans","synonyms":["trans"],"examples":["\\"c2 c3\\".fast(2).transpose(\\"<0 -2 5 3>\\".slow(2)).note()","\\"c2 c3\\".fast(2).transpose(\\"<1P -2M 4P 3m>\\".slow(2)).note()"],"scope":"static","longname":"Pattern.transpose","kind":"member"},{"comment":"/**\\n * Transposes notes inside the scale by the number of steps.\\n * Expected to be called on a Pattern which already has a {@link Pattern#scale}\\n *\\n * @memberof Pattern\\n * @name scaleTranspose\\n * @param {offset} offset number of steps inside the scale\\n * @returns Pattern\\n * @synonyms scaleTrans, strans\\n * @example\\n * \\"-8 [2,4,6]\\"\\n * .scale('C4 bebop major')\\n * .scaleTranspose(\\"<0 -1 -2 -3 -4 -5 -6 -4>\\")\\n * .note()\\n */","meta":{"filename":"tonal.mjs","lineno":138,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Transposes notes inside the scale by the number of steps.\\nExpected to be called on a Pattern which already has a {@link Pattern#scale}</p>","memberof":"Pattern","name":"scaleTranspose","params":[{"type":{"names":["offset"]},"description":"<p>number of steps inside the scale</p>","name":"offset"}],"returns":[{"description":"<p>Pattern</p>"}],"synonyms_text":"scaleTrans, strans","synonyms":["scaleTrans","strans"],"examples":["\\"-8 [2,4,6]\\"\\n.scale('C4 bebop major')\\n.scaleTranspose(\\"<0 -1 -2 -3 -4 -5 -6 -4>\\")\\n.note()"],"scope":"static","longname":"Pattern.scaleTranspose","kind":"member"},{"comment":"/**\\n * Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.\\n *\\n * A scale consists of a root note (e.g. \`c4\`, \`c\`, \`f#\`, \`bb4\`) followed by semicolon (':') and then a [scale type](https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts).\\n *\\n * The root note defaults to octave 3, if no octave number is given.\\n *\\n * @name scale\\n * @param {string} scale Name of scale\\n * @returns Pattern\\n * @example\\n * n(\\"0 2 4 6 4 2\\").scale(\\"C:major\\")\\n * @example\\n * n(\\"[0,7] 4 [2,7] 4\\")\\n * .scale(\\"C:<major minor>/2\\")\\n * .s(\\"piano\\")\\n * @example\\n * n(rand.range(0,12).segment(8))\\n * .scale(\\"C:ritusen\\")\\n * .s(\\"piano\\")\\n */","meta":{"filename":"tonal.mjs","lineno":174,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.</p>\\n<p>A scale consists of a root note (e.g. <code>c4</code>, <code>c</code>, <code>f#</code>, <code>bb4</code>) followed by semicolon (':') and then a <a href=\\"https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts\\">scale type</a>.</p>\\n<p>The root note defaults to octave 3, if no octave number is given.</p>","name":"scale","params":[{"type":{"names":["string"]},"description":"<p>Name of scale</p>","name":"scale"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\"0 2 4 6 4 2\\").scale(\\"C:major\\")","n(\\"[0,7] 4 [2,7] 4\\")\\n.scale(\\"C:<major minor>/2\\")\\n.s(\\"piano\\")","n(rand.range(0,12).segment(8))\\n.scale(\\"C:ritusen\\")\\n.s(\\"piano\\")"],"longname":"scale","kind":"member","scope":"global"},{"comment":"/**\\n * Adds a new custom voicing dictionary.\\n *\\n * @name addVoicings\\n * @memberof Pattern\\n * @param {string} name identifier for the voicing dictionary\\n * @param {Object} dictionary maps chord symbol to possible voicings\\n * @param {Array} range min, max note\\n * @returns Pattern\\n * @example\\n * addVoicings('cookie', {\\n *   7: ['3M 7m 9M 12P 15P', '7m 10M 13M 16M 19P'],\\n *   '^7': ['3M 6M 9M 12P 14M', '7M 10M 13M 16M 19P'],\\n *   m7: ['8P 11P 14m 17m 19P', '5P 8P 11P 14m 17m'],\\n *   m7b5: ['3m 5d 8P 11P 14m', '5d 8P 11P 14m 17m'],\\n *   o7: ['3m 6M 9M 11A 15P'],\\n *   '7alt': ['3M 7m 10m 13m 15P'],\\n *   '7#11': ['7m 10m 13m 15P 17m'],\\n * }, ['C3', 'C6'])\\n * \\"<C^7 A7 Dm7 G7>\\".voicings('cookie').note()\\n */","meta":{"filename":"voicings.mjs","lineno":89,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Adds a new custom voicing dictionary.</p>","name":"addVoicings","memberof":"Pattern","params":[{"type":{"names":["string"]},"description":"<p>identifier for the voicing dictionary</p>","name":"name"},{"type":{"names":["Object"]},"description":"<p>maps chord symbol to possible voicings</p>","name":"dictionary"},{"type":{"names":["Array"]},"description":"<p>min, max note</p>","name":"range"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["addVoicings('cookie', {\\n  7: ['3M 7m 9M 12P 15P', '7m 10M 13M 16M 19P'],\\n  '^7': ['3M 6M 9M 12P 14M', '7M 10M 13M 16M 19P'],\\n  m7: ['8P 11P 14m 17m 19P', '5P 8P 11P 14m 17m'],\\n  m7b5: ['3m 5d 8P 11P 14m', '5d 8P 11P 14m 17m'],\\n  o7: ['3m 6M 9M 11A 15P'],\\n  '7alt': ['3M 7m 10m 13m 15P'],\\n  '7#11': ['7m 10m 13m 15P 17m'],\\n}, ['C3', 'C6'])\\n\\"<C^7 A7 Dm7 G7>\\".voicings('cookie').note()"],"scope":"static","longname":"Pattern.addVoicings","kind":"member"},{"comment":"/**\\n * DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\\n * Turns chord symbols into voicings, using the smoothest voice leading possible.\\n * Uses [chord-voicings package](https://github.com/felixroos/chord-voicings#chord-voicings).\\n *\\n * @name voicings\\n * @memberof Pattern\\n * @param {string} dictionary which voicing dictionary to use.\\n * @returns Pattern\\n * @example\\n * stack(\\"<C^7 A7 Dm7 G7>\\".voicings('lefthand'), \\"<C3 A2 D3 G2>\\").note()\\n */","meta":{"filename":"voicings.mjs","lineno":130,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\\nTurns chord symbols into voicings, using the smoothest voice leading possible.\\nUses <a href=\\"https://github.com/felixroos/chord-voicings#chord-voicings\\">chord-voicings package</a>.</p>","name":"voicings","memberof":"Pattern","params":[{"type":{"names":["string"]},"description":"<p>which voicing dictionary to use.</p>","name":"dictionary"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["stack(\\"<C^7 A7 Dm7 G7>\\".voicings('lefthand'), \\"<C3 A2 D3 G2>\\").note()"],"scope":"static","longname":"Pattern.voicings","kind":"member"},{"comment":"/**\\n * Maps the chords of the incoming pattern to root notes in the given octave.\\n *\\n * @name rootNotes\\n * @memberof Pattern\\n * @param {octave} octave octave to use\\n * @returns Pattern\\n * @example\\n * \\"<C^7 A7 Dm7 G7>\\".rootNotes(2).note()\\n */","meta":{"filename":"voicings.mjs","lineno":156,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Maps the chords of the incoming pattern to root notes in the given octave.</p>","name":"rootNotes","memberof":"Pattern","params":[{"type":{"names":["octave"]},"description":"<p>octave to use</p>","name":"octave"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<C^7 A7 Dm7 G7>\\".rootNotes(2).note()"],"scope":"static","longname":"Pattern.rootNotes","kind":"member"},{"comment":"/**\\n * Turns chord symbols into voicings. You can use the following control params:\\n *\\n * - \`chord\`: Note, followed by chord symbol, e.g. C Am G7 Bb^7\\n * - \`dict\`: voicing dictionary to use, falls back to default dictionary\\n * - \`anchor\`: the note that is used to align the chord\\n * - \`mode\`: how the voicing is aligned to the anchor\\n *   - \`below\`: top note <= anchor\\n *   - \`duck\`: top note <= anchor, anchor excluded\\n *   - \`above\`: bottom note >= anchor\\n * - \`offset\`: whole number that shifts the voicing up or down to the next voicing\\n * - \`n\`: if set, the voicing is played like a scale. Overshooting numbers will be octaved\\n *\\n * All of the above controls are optional, except \`chord\`.\\n * If you pass a pattern of strings to voicing, they will be interpreted as chords.\\n *\\n * @name voicing\\n * @returns Pattern\\n * @example\\n * n(\\"0 1 2 3\\").chord(\\"<C Am F G>\\").voicing()\\n */","meta":{"filename":"voicings.mjs","lineno":175,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Turns chord symbols into voicings. You can use the following control params:</p>\\n<ul>\\n<li><code>chord</code>: Note, followed by chord symbol, e.g. C Am G7 Bb^7</li>\\n<li><code>dict</code>: voicing dictionary to use, falls back to default dictionary</li>\\n<li><code>anchor</code>: the note that is used to align the chord</li>\\n<li><code>mode</code>: how the voicing is aligned to the anchor\\n<ul>\\n<li><code>below</code>: top note &lt;= anchor</li>\\n<li><code>duck</code>: top note &lt;= anchor, anchor excluded</li>\\n<li><code>above</code>: bottom note &gt;= anchor</li>\\n</ul>\\n</li>\\n<li><code>offset</code>: whole number that shifts the voicing up or down to the next voicing</li>\\n<li><code>n</code>: if set, the voicing is played like a scale. Overshooting numbers will be octaved</li>\\n</ul>\\n<p>All of the above controls are optional, except <code>chord</code>.\\nIf you pass a pattern of strings to voicing, they will be interpreted as chords.</p>","name":"voicing","returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\"0 1 2 3\\").chord(\\"<C Am F G>\\").voicing()"],"longname":"voicing","kind":"member","scope":"global"},{"comment":"/**\\n * Renders an oscilloscope for the frequency domain of the audio signal.\\n * @name fscope\\n * @param {string} color line color as hex or color name. defaults to white.\\n * @param {number} scale scales the y-axis. Defaults to 0.25\\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\\n * @param {number} lean y-axis alignment where 0 = top and 1 = bottom\\n * @param {number} min min value\\n * @param {number} max max value\\n * @example\\n * s(\\"sawtooth\\").fscope()\\n */","meta":{"filename":"scope.mjs","lineno":98,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders an oscilloscope for the frequency domain of the audio signal.</p>","name":"fscope","params":[{"type":{"names":["string"]},"description":"<p>line color as hex or color name. defaults to white.</p>","name":"color"},{"type":{"names":["number"]},"description":"<p>scales the y-axis. Defaults to 0.25</p>","name":"scale"},{"type":{"names":["number"]},"description":"<p>y-position relative to screen height. 0 = top, 1 = bottom of screen</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>y-axis alignment where 0 = top and 1 = bottom</p>","name":"lean"},{"type":{"names":["number"]},"description":"<p>min value</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>max value</p>","name":"max"}],"examples":["s(\\"sawtooth\\").fscope()"],"longname":"fscope","kind":"member","scope":"global"},{"comment":"/**\\n * Renders an oscilloscope for the time domain of the audio signal.\\n * @name scope\\n * @synonyms tscope\\n * @param {object} config optional config with options:\\n * @param {boolean} align if 1, the scope will be aligned to the first zero crossing. defaults to 1\\n * @param {string} color line color as hex or color name. defaults to white.\\n * @param {number} thickness line thickness. defaults to 3\\n * @param {number} scale scales the y-axis. Defaults to 0.25\\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\\n * @param {number} trigger amplitude value that is used to align the scope. defaults to 0.\\n * @example\\n * s(\\"sawtooth\\")._scope()\\n */","meta":{"filename":"scope.mjs","lineno":121,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders an oscilloscope for the time domain of the audio signal.</p>","name":"scope","synonyms_text":"tscope","synonyms":["tscope"],"params":[{"type":{"names":["object"]},"description":"<p>optional config with options:</p>","name":"config"},{"type":{"names":["boolean"]},"description":"<p>if 1, the scope will be aligned to the first zero crossing. defaults to 1</p>","name":"align"},{"type":{"names":["string"]},"description":"<p>line color as hex or color name. defaults to white.</p>","name":"color"},{"type":{"names":["number"]},"description":"<p>line thickness. defaults to 3</p>","name":"thickness"},{"type":{"names":["number"]},"description":"<p>scales the y-axis. Defaults to 0.25</p>","name":"scale"},{"type":{"names":["number"]},"description":"<p>y-position relative to screen height. 0 = top, 1 = bottom of screen</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>amplitude value that is used to align the scope. defaults to 0.</p>","name":"trigger"}],"examples":["s(\\"sawtooth\\")._scope()"],"longname":"scope","kind":"member","scope":"global"},{"comment":"/**\\n * Renders a spectrum analyzer for the incoming audio signal.\\n * @name spectrum\\n * @param {object} config optional config with options:\\n * @param {integer} thickness line thickness in px (default 3)\\n * @param {integer} speed scroll speed (default 1)\\n * @param {integer} min min db (default -80)\\n * @param {integer} max max db (default 0)\\n * @example\\n * n(\\"<0 4 <2 3> 1>*3\\")\\n * .off(1/8, add(n(5)))\\n * .off(1/5, add(n(7)))\\n * .scale(\\"d3:minor:pentatonic\\")\\n * .s('sine')\\n * .dec(.3).room(.5)\\n * ._spectrum()\\n */","meta":{"filename":"spectrum.mjs","lineno":5,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders a spectrum analyzer for the incoming audio signal.</p>","name":"spectrum","params":[{"type":{"names":["object"]},"description":"<p>optional config with options:</p>","name":"config"},{"type":{"names":["integer"]},"description":"<p>line thickness in px (default 3)</p>","name":"thickness"},{"type":{"names":["integer"]},"description":"<p>scroll speed (default 1)</p>","name":"speed"},{"type":{"names":["integer"]},"description":"<p>min db (default -80)</p>","name":"min"},{"type":{"names":["integer"]},"description":"<p>max db (default 0)</p>","name":"max"}],"examples":["n(\\"<0 4 <2 3> 1>*3\\")\\n.off(1/8, add(n(5)))\\n.off(1/5, add(n(7)))\\n.scale(\\"d3:minor:pentatonic\\")\\n.s('sine')\\n.dec(.3).room(.5)\\n._spectrum()"],"longname":"spectrum","kind":"member","scope":"global"},{"kind":"package","longname":"package:undefined","files":["/Users/felix/projects/strudel/packages/codemirror/autocomplete.mjs","/Users/felix/projects/strudel/packages/codemirror/codemirror.mjs","/Users/felix/projects/strudel/packages/codemirror/flash.mjs","/Users/felix/projects/strudel/packages/codemirror/highlight.mjs","/Users/felix/projects/strudel/packages/codemirror/html.mjs","/Users/felix/projects/strudel/packages/codemirror/index.mjs","/Users/felix/projects/strudel/packages/codemirror/keybindings.mjs","/Users/felix/projects/strudel/packages/codemirror/slider.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/CutiePi.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/algoboy.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/androidstudio.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/archBtw.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/atomone.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/aura.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bbedit.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/blackscreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bluescreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bluescreenlight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/darcula.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/dracula.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/duotoneDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/duotoneLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/eclipse.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/fruitDaw.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/githubDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/githubLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/green-text.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/gruvboxDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/gruvboxLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/materialDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/materialLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/monokai.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/noctisLilac.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/nord.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/red-text.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/solarizedDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/solarizedLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/sonic-pink.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/strudel-theme.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/sublime.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/teletext.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/terminal.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/theme-helper.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokioNightStorm.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokyoNight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokyoNightDay.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/vscodeDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/vscodeLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/whitescreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/xcodeLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes.mjs","/Users/felix/projects/strudel/packages/codemirror/tooltip.mjs","/Users/felix/projects/strudel/packages/codemirror/vite.config.js","/Users/felix/projects/strudel/packages/codemirror/widget.mjs","/Users/felix/projects/strudel/packages/core/bench/pattern.bench.mjs","/Users/felix/projects/strudel/packages/core/clockworker.js","/Users/felix/projects/strudel/packages/core/controls.mjs","/Users/felix/projects/strudel/packages/core/cyclist.mjs","/Users/felix/projects/strudel/packages/core/drawLine.mjs","/Users/felix/projects/strudel/packages/core/euclid.mjs","/Users/felix/projects/strudel/packages/core/evaluate.mjs","/Users/felix/projects/strudel/packages/core/fraction.mjs","/Users/felix/projects/strudel/packages/core/hap.mjs","/Users/felix/projects/strudel/packages/core/index.mjs","/Users/felix/projects/strudel/packages/core/logger.mjs","/Users/felix/projects/strudel/packages/core/neocyclist.mjs","/Users/felix/projects/strudel/packages/core/pattern.mjs","/Users/felix/projects/strudel/packages/core/pick.mjs","/Users/felix/projects/strudel/packages/core/repl.mjs","/Users/felix/projects/strudel/packages/core/signal.mjs","/Users/felix/projects/strudel/packages/core/speak.mjs","/Users/felix/projects/strudel/packages/core/state.mjs","/Users/felix/projects/strudel/packages/core/test/controls.test.mjs","/Users/felix/projects/strudel/packages/core/test/drawLine.test.mjs","/Users/felix/projects/strudel/packages/core/test/euclid.test.js","/Users/felix/projects/strudel/packages/core/test/fraction.test.mjs","/Users/felix/projects/strudel/packages/core/test/pattern.test.mjs","/Users/felix/projects/strudel/packages/core/test/solmization.test.js","/Users/felix/projects/strudel/packages/core/test/util.test.mjs","/Users/felix/projects/strudel/packages/core/test/value.test.mjs","/Users/felix/projects/strudel/packages/core/time.mjs","/Users/felix/projects/strudel/packages/core/timespan.mjs","/Users/felix/projects/strudel/packages/core/ui.mjs","/Users/felix/projects/strudel/packages/core/util.mjs","/Users/felix/projects/strudel/packages/core/value.mjs","/Users/felix/projects/strudel/packages/core/vite.config.js","/Users/felix/projects/strudel/packages/core/zyklus.mjs","/Users/felix/projects/strudel/packages/csound/index.mjs","/Users/felix/projects/strudel/packages/csound/vite.config.js","/Users/felix/projects/strudel/packages/desktopbridge/index.mjs","/Users/felix/projects/strudel/packages/desktopbridge/loggerbridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/midibridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/oscbridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/utils.mjs","/Users/felix/projects/strudel/packages/draw/animate.mjs","/Users/felix/projects/strudel/packages/draw/color.mjs","/Users/felix/projects/strudel/packages/draw/draw.mjs","/Users/felix/projects/strudel/packages/draw/index.mjs","/Users/felix/projects/strudel/packages/draw/pianoroll.mjs","/Users/felix/projects/strudel/packages/draw/pitchwheel.mjs","/Users/felix/projects/strudel/packages/draw/spiral.mjs","/Users/felix/projects/strudel/packages/draw/vite.config.js","/Users/felix/projects/strudel/packages/embed/embed.js","/Users/felix/projects/strudel/packages/gamepad/gamepad.mjs","/Users/felix/projects/strudel/packages/gamepad/index.mjs","/Users/felix/projects/strudel/packages/gamepad/vite.config.js","/Users/felix/projects/strudel/packages/hs2js/src/hs2js.mjs","/Users/felix/projects/strudel/packages/hs2js/src/index.mjs","/Users/felix/projects/strudel/packages/hs2js/src/parser.mjs","/Users/felix/projects/strudel/packages/hs2js/vite.config.js","/Users/felix/projects/strudel/packages/hydra/hydra.mjs","/Users/felix/projects/strudel/packages/hydra/vite.config.js","/Users/felix/projects/strudel/packages/midi/index.mjs","/Users/felix/projects/strudel/packages/midi/midi.mjs","/Users/felix/projects/strudel/packages/midi/vite.config.js","/Users/felix/projects/strudel/packages/mini/bench/mini.bench.mjs","/Users/felix/projects/strudel/packages/mini/index.mjs","/Users/felix/projects/strudel/packages/mini/krill-parser.js","/Users/felix/projects/strudel/packages/mini/mini.mjs","/Users/felix/projects/strudel/packages/mini/test/mini.test.mjs","/Users/felix/projects/strudel/packages/mini/vite.config.js","/Users/felix/projects/strudel/packages/mondo/mondo.mjs","/Users/felix/projects/strudel/packages/mondo/test/mondo.test.mjs","/Users/felix/projects/strudel/packages/mondo/vite.config.js","/Users/felix/projects/strudel/packages/mondough/mondough.mjs","/Users/felix/projects/strudel/packages/mondough/vite.config.js","/Users/felix/projects/strudel/packages/motion/index.mjs","/Users/felix/projects/strudel/packages/motion/motion.mjs","/Users/felix/projects/strudel/packages/motion/vite.config.js","/Users/felix/projects/strudel/packages/mqtt/mqtt.mjs","/Users/felix/projects/strudel/packages/mqtt/vite.config.js","/Users/felix/projects/strudel/packages/osc/osc.mjs","/Users/felix/projects/strudel/packages/osc/server.js","/Users/felix/projects/strudel/packages/osc/superdirtoutput.js","/Users/felix/projects/strudel/packages/osc/tidal-sniffer.js","/Users/felix/projects/strudel/packages/osc/vite.config.js","/Users/felix/projects/strudel/packages/reference/index.mjs","/Users/felix/projects/strudel/packages/reference/vite.config.js","/Users/felix/projects/strudel/packages/repl/index.mjs","/Users/felix/projects/strudel/packages/repl/prebake.mjs","/Users/felix/projects/strudel/packages/repl/repl-component.mjs","/Users/felix/projects/strudel/packages/repl/vite.config.js","/Users/felix/projects/strudel/packages/sampler/sample-server.mjs","/Users/felix/projects/strudel/packages/serial/serial.mjs","/Users/felix/projects/strudel/packages/serial/vite.config.js","/Users/felix/projects/strudel/packages/soundfonts/convert.js","/Users/felix/projects/strudel/packages/soundfonts/fontloader.mjs","/Users/felix/projects/strudel/packages/soundfonts/gm.mjs","/Users/felix/projects/strudel/packages/soundfonts/index.mjs","/Users/felix/projects/strudel/packages/soundfonts/list.mjs","/Users/felix/projects/strudel/packages/soundfonts/sfumato.mjs","/Users/felix/projects/strudel/packages/soundfonts/vite.config.js","/Users/felix/projects/strudel/packages/superdough/dspworklet.mjs","/Users/felix/projects/strudel/packages/superdough/feedbackdelay.mjs","/Users/felix/projects/strudel/packages/superdough/fft.js","/Users/felix/projects/strudel/packages/superdough/helpers.mjs","/Users/felix/projects/strudel/packages/superdough/index.mjs","/Users/felix/projects/strudel/packages/superdough/logger.mjs","/Users/felix/projects/strudel/packages/superdough/noise.mjs","/Users/felix/projects/strudel/packages/superdough/ola-processor.js","/Users/felix/projects/strudel/packages/superdough/reverb.mjs","/Users/felix/projects/strudel/packages/superdough/reverbGen.mjs","/Users/felix/projects/strudel/packages/superdough/sampler.mjs","/Users/felix/projects/strudel/packages/superdough/superdough.mjs","/Users/felix/projects/strudel/packages/superdough/synth.mjs","/Users/felix/projects/strudel/packages/superdough/util.mjs","/Users/felix/projects/strudel/packages/superdough/vite.config.js","/Users/felix/projects/strudel/packages/superdough/vowel.mjs","/Users/felix/projects/strudel/packages/superdough/worklets.mjs","/Users/felix/projects/strudel/packages/superdough/zzfx.mjs","/Users/felix/projects/strudel/packages/superdough/zzfx_fork.mjs","/Users/felix/projects/strudel/packages/tidal/tidal.mjs","/Users/felix/projects/strudel/packages/tonal/index.mjs","/Users/felix/projects/strudel/packages/tonal/ireal.mjs","/Users/felix/projects/strudel/packages/tonal/test/tonal.test.mjs","/Users/felix/projects/strudel/packages/tonal/test/tonleiter.test.mjs","/Users/felix/projects/strudel/packages/tonal/tonal.mjs","/Users/felix/projects/strudel/packages/tonal/tonleiter.mjs","/Users/felix/projects/strudel/packages/tonal/vite.config.js","/Users/felix/projects/strudel/packages/tonal/voicings.mjs","/Users/felix/projects/strudel/packages/transpiler/index.mjs","/Users/felix/projects/strudel/packages/transpiler/test/transpiler.test.mjs","/Users/felix/projects/strudel/packages/transpiler/transpiler.mjs","/Users/felix/projects/strudel/packages/transpiler/vite.config.js","/Users/felix/projects/strudel/packages/vite-plugin-bundle-audioworklet/vite-plugin-bundle-audioworklet.js","/Users/felix/projects/strudel/packages/web/vite.config.js","/Users/felix/projects/strudel/packages/web/web.mjs","/Users/felix/projects/strudel/packages/webaudio/index.mjs","/Users/felix/projects/strudel/packages/webaudio/scope.mjs","/Users/felix/projects/strudel/packages/webaudio/spectrum.mjs","/Users/felix/projects/strudel/packages/webaudio/vite.config.js","/Users/felix/projects/strudel/packages/webaudio/webaudio.mjs","/Users/felix/projects/strudel/packages/xen/index.mjs","/Users/felix/projects/strudel/packages/xen/test/xen.test.mjs","/Users/felix/projects/strudel/packages/xen/tune.mjs","/Users/felix/projects/strudel/packages/xen/tunejs.js","/Users/felix/projects/strudel/packages/xen/vite.config.js","/Users/felix/projects/strudel/packages/xen/xen.mjs"]}]`), Zf = {
  docs: g_
}, b_ = typeof DOMParser < "u" ? new DOMParser() : null;
let y_ = (t) => b_?.parseFromString(t, "text/html").querySelectorAll("*"), yb = (t) => Array.isArray(t) ? t.flat().join("") : t === void 0 ? "" : t, O_ = (t, ...e) => {
  let n = "";
  for (let r in t)
    n += yb(t[r]), n += yb(e[r]);
  return y_(n);
};
const v_ = (t) => {
  const e = document.createElement("div");
  return e.innerText = t, e.innerHTML;
}, x_ = (t) => {
  const e = document.createElement("div");
  return e.innerHTML = t, e.textContent || e.innerText || "";
}, Qm = (t) => t.name || t.longname, w_ = (t) => t?.length ? `
    <div class="autocomplete-info-params-section">
      <h4 class="autocomplete-info-section-title">Parameters</h4>
      <ul class="autocomplete-info-params-list">
        ${t.map(
  ({ name: e, type: n, description: r }) => `
          <li class="autocomplete-info-param-item">
            <span class="autocomplete-info-param-name">${e}</span>
            <span class="autocomplete-info-param-type">${n.names?.join(" | ")}</span>
            ${r ? `<div class="autocomplete-info-param-desc">${x_(r)}</div>` : ""}
          </li>
        `
).join("")}
      </ul>
    </div>
  ` : "", k_ = (t) => t?.length ? `
    <div class="autocomplete-info-examples-section">
      <h4 class="autocomplete-info-section-title">Examples</h4>
      ${t.map(
  (e) => `
        <pre class="autocomplete-info-example-code">${v_(e)}</pre>
      `
).join("")}
    </div>
  ` : "", x5 = ({ doc: t, label: e }) => O_`
  <div class="autocomplete-info-container">
    <div class="autocomplete-info-tooltip">
      <h3 class="autocomplete-info-function-name">${e || Qm(t)}</h3>
      ${t.description ? `<div class="autocomplete-info-function-description">${t.description}</div>` : ""}
      ${w_(t.params)}
      ${k_(t.examples)}
    </div>
  </div>
`[0], C_ = (t) => {
  const e = Qm(t);
  return e && !e.startsWith("_") && !["package"].includes(t.kind);
}, S_ = (t) => ["superdirtOnly", "noAutocomplete"].some((e) => t.tags?.find((n) => n.originalTitle === e)), A_ = Zf.docs.filter((t) => C_(t) && !S_(t)).map((t) => ({
  label: Qm(t),
  // detail: 'xxx', // An optional short piece of information to show (with a different style) after the label.
  info: () => x5({ doc: t }),
  type: "function"
  // https://codemirror.net/docs/ref/#autocomplete.Completion.type
})), P_ = (t) => {
  const e = t.matchBefore(/\w*/);
  return e.from === e.to && !t.explicit ? null : {
    from: e.from,
    options: A_
    /*     options: [
      { label: 'match', type: 'keyword' },
      { label: 'hello', type: 'variable', info: '(World)' },
      { label: 'magic', type: 'text', apply: '⠁⭒*.✩.*⭒⠁', detail: 'macro' },
    ], */
  };
}, D_ = (t) => t ? [TQ({ override: [P_], closeOnBlur: !1 })] : [], E_ = (t) => t.name || t.longname;
let $f = !1;
typeof window < "u" && (window.addEventListener(
  "keyup",
  function(t) {
    t.key == "Control" && ($f = !1);
  },
  !0
), window.addEventListener(
  "keydown",
  function(t) {
    t.key == "Control" && ($f = !0);
  },
  !0
));
const F_ = BS(
  (t, e, n) => {
    if (!$f)
      return null;
    let { from: r, to: s, text: i } = t.state.doc.lineAt(e), a = e, o = e;
    for (; a > r && /\w/.test(i[a - r - 1]); )
      a--;
    for (; o < s && /\w/.test(i[o - r]); )
      o++;
    if (a == e && n < 0 || o == e && n > 0)
      return null;
    let l = i.slice(a - r, o - r), u = Zf.docs.filter((h) => E_(h) === l)[0];
    return !u && (u = Zf.docs.filter((h) => h.synonyms && h.synonyms.includes(l))[0], !u) ? null : {
      pos: a,
      end: o,
      above: !1,
      arrow: !0,
      create(h) {
        let f = document.createElement("div");
        f.className = "strudel-tooltip";
        const m = x5({ doc: u, label: l });
        return f.appendChild(m), { dom: f };
      }
    };
  },
  { hoverTime: 10 }
), B_ = (t) => t ? F_ : [], vu = Ze.define(), w5 = Vt.define({
  create() {
    return Be.none;
  },
  update(t, e) {
    try {
      for (let n of e.effects)
        if (n.is(vu))
          if (n.value && e.newDoc.length > 0) {
            const r = Be.mark({
              attributes: { style: "background-color: rgba(255,255,255, .4); filter: invert(10%)" }
            });
            t = Be.set([r.range(0, e.newDoc.length)]);
          } else
            t = Be.set([]);
      return t;
    } catch (n) {
      return console.warn("flash error", n), t;
    }
  },
  provide: (t) => ye.decorations.from(t)
}), k5 = (t, e = 200) => {
  t.dispatch({ effects: vu.of(!0) }), setTimeout(() => {
    t.dispatch({ effects: vu.of(!1) });
  }, e);
}, C5 = (t) => t ? w5 : [], jm = Ze.define(), _m = Ze.define(), xu = (t, e) => {
  t.dispatch({ effects: jm.of(e) });
}, S5 = (t, e, n) => {
  t.dispatch({ effects: _m.of({ atTime: e, haps: n }) });
}, Lf = Vt.define({
  create() {
    return Be.none;
  },
  update(t, e) {
    e.docChanged && (t = t.map(e.changes));
    for (let n of e.effects)
      if (n.is(jm)) {
        const r = n.value.filter(([s]) => s < e.newDoc.length).map(([s, i]) => [s, Math.min(i, e.newDoc.length)]).map(
          (s) => Be.mark({
            id: s.join(":"),
            // this green is only to verify that the decoration moves when the document is edited
            // it will be removed later, so the mark is not visible by default
            attributes: { style: "background-color: #00CA2880" }
          }).range(...s)
          // -> Decoration
        );
        t = Be.set(r, !0);
      }
    return t;
  }
}), If = Vt.define({
  create() {
    return { atTime: 0, haps: /* @__PURE__ */ new Map() };
  },
  update(t, e) {
    for (let n of e.effects)
      if (n.is(_m)) {
        const r = /* @__PURE__ */ new Map();
        for (let s of n.value.haps)
          if (!(!s.context?.locations || !s.whole))
            for (let { start: i, end: a } of s.context.locations) {
              let o = `${i}:${a}`;
              (!r.has(o) || r.get(o).whole.begin.lt(s.whole.begin)) && r.set(o, s);
            }
        t = { atTime: n.value.atTime, haps: r };
      }
    return t;
  }
}), M_ = ye.decorations.compute([Lf, If], (t) => {
  const e = t.field(Lf).iter(), { haps: n } = t.field(If), r = new vs();
  for (; e.value; ) {
    const {
      from: s,
      to: i,
      value: {
        spec: { id: a }
      }
    } = e;
    if (n.has(a)) {
      const o = n.get(a), l = o.value?.color ?? "var(--foreground)", u = o.value?.markcss || `outline: solid 2px ${l}`;
      r.add(
        s,
        i,
        Be.mark({
          // attributes: { style: `outline: solid 2px rgba(${channels.join(', ')})` },
          attributes: { style: u }
        })
      );
    }
    e.next();
  }
  return r.finish();
}), A5 = [Lf, If, M_], P5 = (t, e) => (t && e && setTimeout(() => {
  xu(e.editor, e.miniLocations);
}, 100), t ? lr.highest(A5) : []);
function _t() {
  var t = arguments[0];
  typeof t == "string" && (t = document.createElement(t));
  var e = 1, n = arguments[1];
  if (n && typeof n == "object" && n.nodeType == null && !Array.isArray(n)) {
    for (var r in n) if (Object.prototype.hasOwnProperty.call(n, r)) {
      var s = n[r];
      typeof s == "string" ? t.setAttribute(r, s) : s != null && (t[r] = s);
    }
    e++;
  }
  for (; e < arguments.length; e++) D5(t, arguments[e]);
  return t;
}
function D5(t, e) {
  if (typeof e == "string")
    t.appendChild(document.createTextNode(e));
  else if (e != null) if (e.nodeType != null)
    t.appendChild(e);
  else if (Array.isArray(e))
    for (var n = 0; n < e.length; n++) D5(t, e[n]);
  else
    throw new RangeError("Unsupported child node: " + e);
}
const Ob = typeof String.prototype.normalize == "function" ? (t) => t.normalize("NFKD") : (t) => t;
class zo {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, n, r = 0, s = e.length, i, a) {
    this.test = a, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(r, s), this.bufferStart = r, this.normalize = i ? (o) => i(Ob(o)) : Ob, this.query = this.normalize(n);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return tr(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let n = Yd(e), r = this.bufferStart + this.bufferPos;
      this.bufferPos += ds(e);
      let s = this.normalize(n);
      if (s.length)
        for (let i = 0, a = r; ; i++) {
          let o = s.charCodeAt(i), l = this.match(o, a, this.bufferPos + this.bufferStart);
          if (i == s.length - 1) {
            if (l)
              return this.value = l, this;
            break;
          }
          a == r && i < n.length && n.charCodeAt(i) == o && a++;
        }
    }
  }
  match(e, n, r) {
    let s = null;
    for (let i = 0; i < this.matches.length; i += 2) {
      let a = this.matches[i], o = !1;
      this.query.charCodeAt(a) == e && (a == this.query.length - 1 ? s = { from: this.matches[i + 1], to: r } : (this.matches[i]++, o = !0)), o || (this.matches.splice(i, 2), i -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? s = { from: n, to: r } : this.matches.push(1, n)), s && this.test && !this.test(s.from, s.to, this.buffer, this.bufferStart) && (s = null), s;
  }
}
typeof Symbol < "u" && (zo.prototype[Symbol.iterator] = function() {
  return this;
});
const E5 = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, Rm = "gm" + (/x/.unicode == null ? "" : "u");
class Zm {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, n, r, s = 0, i = e.length) {
    if (this.text = e, this.to = i, this.curLine = "", this.done = !1, this.value = E5, /\\[sWDnr]|\n|\r|\[\^/.test(n))
      return new F5(e, n, r, s, i);
    this.re = new RegExp(n, Rm + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.iter = e.iter();
    let a = e.lineAt(s);
    this.curLineStart = a.from, this.matchPos = wu(e, s), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let n = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (n) {
        let r = this.curLineStart + n.index, s = r + n[0].length;
        if (this.matchPos = wu(this.text, s + (r == s ? 1 : 0)), r == this.curLineStart + this.curLine.length && this.nextLine(), (r < s || r > this.value.to) && (!this.test || this.test(r, s, n)))
          return this.value = { from: r, to: s, match: n }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const yp = /* @__PURE__ */ new WeakMap();
class ya {
  constructor(e, n) {
    this.from = e, this.text = n;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, n, r) {
    let s = yp.get(e);
    if (!s || s.from >= r || s.to <= n) {
      let o = new ya(n, e.sliceString(n, r));
      return yp.set(e, o), o;
    }
    if (s.from == n && s.to == r)
      return s;
    let { text: i, from: a } = s;
    return a > n && (i = e.sliceString(n, a) + i, a = n), s.to < r && (i += e.sliceString(s.to, r)), yp.set(e, new ya(a, i)), new ya(n, i.slice(n - a, r - a));
  }
}
class F5 {
  constructor(e, n, r, s, i) {
    this.text = e, this.to = i, this.done = !1, this.value = E5, this.matchPos = wu(e, s), this.re = new RegExp(n, Rm + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.flat = ya.get(e, s, this.chunkEnd(
      s + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, n = this.re.exec(this.flat.text);
      if (n && !n[0] && n.index == e && (this.re.lastIndex = e + 1, n = this.re.exec(this.flat.text)), n) {
        let r = this.flat.from + n.index, s = r + n[0].length;
        if ((this.flat.to >= this.to || n.index + n[0].length <= this.flat.text.length - 10) && (!this.test || this.test(r, s, n)))
          return this.value = { from: r, to: s, match: n }, this.matchPos = wu(this.text, s + (r == s ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = ya.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (Zm.prototype[Symbol.iterator] = F5.prototype[Symbol.iterator] = function() {
  return this;
});
function T_(t) {
  try {
    return new RegExp(t, Rm), !0;
  } catch {
    return !1;
  }
}
function wu(t, e) {
  if (e >= t.length)
    return e;
  let n = t.lineAt(e), r;
  for (; e < n.to && (r = n.text.charCodeAt(e - n.from)) >= 56320 && r < 57344; )
    e++;
  return e;
}
function Nf(t) {
  let e = String(t.state.doc.lineAt(t.state.selection.main.head).number), n = _t("input", { class: "cm-textfield", name: "line", value: e }), r = _t("form", {
    class: "cm-gotoLine",
    onkeydown: (i) => {
      i.keyCode == 27 ? (i.preventDefault(), t.dispatch({ effects: ku.of(!1) }), t.focus()) : i.keyCode == 13 && (i.preventDefault(), s());
    },
    onsubmit: (i) => {
      i.preventDefault(), s();
    }
  }, _t("label", t.state.phrase("Go to line"), ": ", n), " ", _t("button", { class: "cm-button", type: "submit" }, t.state.phrase("go")));
  function s() {
    let i = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(n.value);
    if (!i)
      return;
    let { state: a } = t, o = a.doc.lineAt(a.selection.main.head), [, l, u, h, f] = i, m = h ? +h.slice(1) : 0, b = u ? +u : o.number;
    if (u && f) {
      let S = b / 100;
      l && (S = S * (l == "-" ? -1 : 1) + o.number / a.doc.lines), b = Math.round(a.doc.lines * S);
    } else u && l && (b = b * (l == "-" ? -1 : 1) + o.number);
    let v = a.doc.line(Math.max(1, Math.min(a.doc.lines, b))), C = ne.cursor(v.from + Math.max(0, Math.min(m, v.length)));
    t.dispatch({
      effects: [ku.of(!1), ye.scrollIntoView(C.from, { y: "center" })],
      selection: C
    }), t.focus();
  }
  return { dom: r };
}
const ku = /* @__PURE__ */ Ze.define(), vb = /* @__PURE__ */ Vt.define({
  create() {
    return !0;
  },
  update(t, e) {
    for (let n of e.effects)
      n.is(ku) && (t = n.value);
    return t;
  },
  provide: (t) => hi.from(t, (e) => e ? Nf : null)
}), Q_ = (t) => {
  let e = Lo(t, Nf);
  if (!e) {
    let n = [ku.of(!0)];
    t.state.field(vb, !1) == null && n.push(Ze.appendConfig.of([vb, j_])), t.dispatch({ effects: n }), e = Lo(t, Nf);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, j_ = /* @__PURE__ */ ye.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    "& label": { fontSize: "80%" }
  }
}), __ = ({ state: t, dispatch: e }) => {
  let { selection: n } = t, r = ne.create(n.ranges.map((s) => t.wordAt(s.head) || ne.cursor(s.head)), n.mainIndex);
  return r.eq(n) ? !1 : (e(t.update({ selection: r })), !0);
};
function R_(t, e) {
  let { main: n, ranges: r } = t.selection, s = t.wordAt(n.head), i = s && s.from == n.from && s.to == n.to;
  for (let a = !1, o = new zo(t.doc, e, r[r.length - 1].to); ; )
    if (o.next(), o.done) {
      if (a)
        return null;
      o = new zo(t.doc, e, 0, Math.max(0, r[r.length - 1].from - 1)), a = !0;
    } else {
      if (a && r.some((l) => l.from == o.value.from))
        continue;
      if (i) {
        let l = t.wordAt(o.value.from);
        if (!l || l.from != o.value.from || l.to != o.value.to)
          continue;
      }
      return o.value;
    }
}
const Z_ = ({ state: t, dispatch: e }) => {
  let { ranges: n } = t.selection;
  if (n.some((i) => i.from === i.to))
    return __({ state: t, dispatch: e });
  let r = t.sliceDoc(n[0].from, n[0].to);
  if (t.selection.ranges.some((i) => t.sliceDoc(i.from, i.to) != r))
    return !1;
  let s = R_(t, r);
  return s ? (e(t.update({
    selection: t.selection.addRange(ne.range(s.from, s.to), !1),
    effects: ye.scrollIntoView(s.to)
  })), !0) : !1;
}, Xa = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Xs(t, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new q_(e),
      scrollToMatch: (e) => ye.scrollIntoView(e)
    });
  }
});
class $m {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || T_(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (n, r) => r == "n" ? `
` : r == "r" ? "\r" : r == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new N_(this) : new L_(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, n = 0, r) {
    let s = e.doc ? e : ft.create({ doc: e });
    return r == null && (r = s.doc.length), this.regexp ? ta(this, s, n, r) : ea(this, s, n, r);
  }
}
class B5 {
  constructor(e) {
    this.spec = e;
  }
}
function ea(t, e, n, r) {
  return new zo(e.doc, t.unquoted, n, r, t.caseSensitive ? void 0 : (s) => s.toLowerCase(), t.wholeWord ? $_(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function $_(t, e) {
  return (n, r, s, i) => ((i > n || i + s.length < r) && (i = Math.max(0, n - 2), s = t.sliceString(i, Math.min(t.length, r + 2))), (e(Cu(s, n - i)) != ln.Word || e(Su(s, n - i)) != ln.Word) && (e(Su(s, r - i)) != ln.Word || e(Cu(s, r - i)) != ln.Word));
}
class L_ extends B5 {
  constructor(e) {
    super(e);
  }
  nextMatch(e, n, r) {
    let s = ea(this.spec, e, r, e.doc.length).nextOverlapping();
    if (s.done) {
      let i = Math.min(e.doc.length, n + this.spec.unquoted.length);
      s = ea(this.spec, e, 0, i).nextOverlapping();
    }
    return s.done || s.value.from == n && s.value.to == r ? null : s.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, n, r) {
    for (let s = r; ; ) {
      let i = Math.max(n, s - 1e4 - this.spec.unquoted.length), a = ea(this.spec, e, i, s), o = null;
      for (; !a.nextOverlapping().done; )
        o = a.value;
      if (o)
        return o;
      if (i == n)
        return null;
      s -= 1e4;
    }
  }
  prevMatch(e, n, r) {
    let s = this.prevMatchInRange(e, 0, n);
    return s || (s = this.prevMatchInRange(e, Math.max(0, r - this.spec.unquoted.length), e.doc.length)), s && (s.from != n || s.to != r) ? s : null;
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, n) {
    let r = ea(this.spec, e, 0, e.doc.length), s = [];
    for (; !r.next().done; ) {
      if (s.length >= n)
        return null;
      s.push(r.value);
    }
    return s;
  }
  highlight(e, n, r, s) {
    let i = ea(this.spec, e, Math.max(0, n - this.spec.unquoted.length), Math.min(r + this.spec.unquoted.length, e.doc.length));
    for (; !i.next().done; )
      s(i.value.from, i.value.to);
  }
}
function ta(t, e, n, r) {
  return new Zm(e.doc, t.search, {
    ignoreCase: !t.caseSensitive,
    test: t.wholeWord ? I_(e.charCategorizer(e.selection.main.head)) : void 0
  }, n, r);
}
function Cu(t, e) {
  return t.slice(kn(t, e, !1), e);
}
function Su(t, e) {
  return t.slice(e, kn(t, e));
}
function I_(t) {
  return (e, n, r) => !r[0].length || (t(Cu(r.input, r.index)) != ln.Word || t(Su(r.input, r.index)) != ln.Word) && (t(Su(r.input, r.index + r[0].length)) != ln.Word || t(Cu(r.input, r.index + r[0].length)) != ln.Word);
}
class N_ extends B5 {
  nextMatch(e, n, r) {
    let s = ta(this.spec, e, r, e.doc.length).next();
    return s.done && (s = ta(this.spec, e, 0, n).next()), s.done ? null : s.value;
  }
  prevMatchInRange(e, n, r) {
    for (let s = 1; ; s++) {
      let i = Math.max(
        n,
        r - s * 1e4
        /* FindPrev.ChunkSize */
      ), a = ta(this.spec, e, i, r), o = null;
      for (; !a.next().done; )
        o = a.value;
      if (o && (i == n || o.from > i + 10))
        return o;
      if (i == n)
        return null;
    }
  }
  prevMatch(e, n, r) {
    return this.prevMatchInRange(e, 0, n) || this.prevMatchInRange(e, r, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&\d+])/g, (n, r) => r == "$" ? "$" : r == "&" ? e.match[0] : r != "0" && +r < e.match.length ? e.match[r] : n);
  }
  matchAll(e, n) {
    let r = ta(this.spec, e, 0, e.doc.length), s = [];
    for (; !r.next().done; ) {
      if (s.length >= n)
        return null;
      s.push(r.value);
    }
    return s;
  }
  highlight(e, n, r, s) {
    let i = ta(this.spec, e, Math.max(
      0,
      n - 250
      /* RegExp.HighlightMargin */
    ), Math.min(r + 250, e.doc.length));
    for (; !i.next().done; )
      s(i.value.from, i.value.to);
  }
}
const di = /* @__PURE__ */ Ze.define(), Lm = /* @__PURE__ */ Ze.define(), oi = /* @__PURE__ */ Vt.define({
  create(t) {
    return new Op(Vf(t).create(), null);
  },
  update(t, e) {
    for (let n of e.effects)
      n.is(di) ? t = new Op(n.value.create(), t.panel) : n.is(Lm) && (t = new Op(t.query, n.value ? Im : null));
    return t;
  },
  provide: (t) => hi.from(t, (e) => e.panel)
});
class Op {
  constructor(e, n) {
    this.query = e, this.panel = n;
  }
}
const V_ = /* @__PURE__ */ Be.mark({ class: "cm-searchMatch" }), X_ = /* @__PURE__ */ Be.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), W_ = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.view = t, this.decorations = this.highlight(t.state.field(oi));
  }
  update(t) {
    let e = t.state.field(oi);
    (e != t.startState.field(oi) || t.docChanged || t.selectionSet || t.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: t, panel: e }) {
    if (!e || !t.spec.valid)
      return Be.none;
    let { view: n } = this, r = new vs();
    for (let s = 0, i = n.visibleRanges, a = i.length; s < a; s++) {
      let { from: o, to: l } = i[s];
      for (; s < a - 1 && l > i[s + 1].from - 2 * 250; )
        l = i[++s].to;
      t.highlight(n.state, o, l, (u, h) => {
        let f = n.state.selection.ranges.some((m) => m.from == u && m.to == h);
        r.add(u, h, f ? X_ : V_);
      });
    }
    return r.finish();
  }
}, {
  decorations: (t) => t.decorations
});
function ml(t) {
  return (e) => {
    let n = e.state.field(oi, !1);
    return n && n.query.spec.valid ? t(e, n) : _5(e);
  };
}
const xb = /* @__PURE__ */ ml((t, { query: e }) => {
  let { to: n } = t.state.selection.main, r = e.nextMatch(t.state, n, n);
  if (!r)
    return !1;
  let s = ne.single(r.from, r.to), i = t.state.facet(Xa);
  return t.dispatch({
    selection: s,
    effects: [Nm(t, r), i.scrollToMatch(s.main, t)],
    userEvent: "select.search"
  }), j5(t), !0;
}), wb = /* @__PURE__ */ ml((t, { query: e }) => {
  let { state: n } = t, { from: r } = n.selection.main, s = e.prevMatch(n, r, r);
  if (!s)
    return !1;
  let i = ne.single(s.from, s.to), a = t.state.facet(Xa);
  return t.dispatch({
    selection: i,
    effects: [Nm(t, s), a.scrollToMatch(i.main, t)],
    userEvent: "select.search"
  }), j5(t), !0;
}), M5 = /* @__PURE__ */ ml((t, { query: e }) => {
  let n = e.matchAll(t.state, 1e3);
  return !n || !n.length ? !1 : (t.dispatch({
    selection: ne.create(n.map((r) => ne.range(r.from, r.to))),
    userEvent: "select.search.matches"
  }), !0);
}), U_ = ({ state: t, dispatch: e }) => {
  let n = t.selection;
  if (n.ranges.length > 1 || n.main.empty)
    return !1;
  let { from: r, to: s } = n.main, i = [], a = 0;
  for (let o = new zo(t.doc, t.sliceDoc(r, s)); !o.next().done; ) {
    if (i.length > 1e3)
      return !1;
    o.value.from == r && (a = i.length), i.push(ne.range(o.value.from, o.value.to));
  }
  return e(t.update({
    selection: ne.create(i, a),
    userEvent: "select.search.matches"
  })), !0;
}, kb = /* @__PURE__ */ ml((t, { query: e }) => {
  let { state: n } = t, { from: r, to: s } = n.selection.main;
  if (n.readOnly)
    return !1;
  let i = e.nextMatch(n, r, r);
  if (!i)
    return !1;
  let a = i, o = [], l, u, h = [];
  if (a.from == r && a.to == s && (u = n.toText(e.getReplacement(a)), o.push({ from: a.from, to: a.to, insert: u }), a = e.nextMatch(n, a.from, a.to), h.push(ye.announce.of(n.phrase("replaced match on line $", n.doc.lineAt(r).number) + "."))), a) {
    let f = o.length == 0 || o[0].from >= i.to ? 0 : i.to - i.from - u.length;
    l = ne.single(a.from - f, a.to - f), h.push(Nm(t, a)), h.push(n.facet(Xa).scrollToMatch(l.main, t));
  }
  return t.dispatch({
    changes: o,
    selection: l,
    effects: h,
    userEvent: "input.replace"
  }), !0;
}), T5 = /* @__PURE__ */ ml((t, { query: e }) => {
  if (t.state.readOnly)
    return !1;
  let n = e.matchAll(t.state, 1e9).map((s) => {
    let { from: i, to: a } = s;
    return { from: i, to: a, insert: e.getReplacement(s) };
  });
  if (!n.length)
    return !1;
  let r = t.state.phrase("replaced $ matches", n.length) + ".";
  return t.dispatch({
    changes: n,
    effects: ye.announce.of(r),
    userEvent: "input.replace.all"
  }), !0;
});
function Im(t) {
  return t.state.facet(Xa).createPanel(t);
}
function Vf(t, e) {
  var n, r, s, i, a;
  let o = t.selection.main, l = o.empty || o.to > o.from + 100 ? "" : t.sliceDoc(o.from, o.to);
  if (e && !l)
    return e;
  let u = t.facet(Xa);
  return new $m({
    search: ((n = e?.literal) !== null && n !== void 0 ? n : u.literal) ? l : l.replace(/\n/g, "\\n"),
    caseSensitive: (r = e?.caseSensitive) !== null && r !== void 0 ? r : u.caseSensitive,
    literal: (s = e?.literal) !== null && s !== void 0 ? s : u.literal,
    regexp: (i = e?.regexp) !== null && i !== void 0 ? i : u.regexp,
    wholeWord: (a = e?.wholeWord) !== null && a !== void 0 ? a : u.wholeWord
  });
}
function Q5(t) {
  let e = Lo(t, Im);
  return e && e.dom.querySelector("[main-field]");
}
function j5(t) {
  let e = Q5(t);
  e && e == t.root.activeElement && e.select();
}
const _5 = (t) => {
  let e = t.state.field(oi, !1);
  if (e && e.panel) {
    let n = Q5(t);
    if (n && n != t.root.activeElement) {
      let r = Vf(t.state, e.query.spec);
      r.valid && t.dispatch({ effects: di.of(r) }), n.focus(), n.select();
    }
  } else
    t.dispatch({ effects: [
      Lm.of(!0),
      e ? di.of(Vf(t.state, e.query.spec)) : Ze.appendConfig.of(z_)
    ] });
  return !0;
}, R5 = (t) => {
  let e = t.state.field(oi, !1);
  if (!e || !e.panel)
    return !1;
  let n = Lo(t, Im);
  return n && n.dom.contains(t.root.activeElement) && t.focus(), t.dispatch({ effects: Lm.of(!1) }), !0;
};
class q_ {
  constructor(e) {
    this.view = e;
    let n = this.query = e.state.field(oi).query.spec;
    this.commit = this.commit.bind(this), this.searchField = _t("input", {
      value: n.search,
      placeholder: pr(e, "Find"),
      "aria-label": pr(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = _t("input", {
      value: n.replace,
      placeholder: pr(e, "Replace"),
      "aria-label": pr(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = _t("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: n.caseSensitive,
      onchange: this.commit
    }), this.reField = _t("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: n.regexp,
      onchange: this.commit
    }), this.wordField = _t("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: n.wholeWord,
      onchange: this.commit
    });
    function r(s, i, a) {
      return _t("button", { class: "cm-button", name: s, onclick: i, type: "button" }, a);
    }
    this.dom = _t("div", { onkeydown: (s) => this.keydown(s), class: "cm-search" }, [
      this.searchField,
      r("next", () => xb(e), [pr(e, "next")]),
      r("prev", () => wb(e), [pr(e, "previous")]),
      r("select", () => M5(e), [pr(e, "all")]),
      _t("label", null, [this.caseField, pr(e, "match case")]),
      _t("label", null, [this.reField, pr(e, "regexp")]),
      _t("label", null, [this.wordField, pr(e, "by word")]),
      ...e.state.readOnly ? [] : [
        _t("br"),
        this.replaceField,
        r("replace", () => kb(e), [pr(e, "replace")]),
        r("replaceAll", () => T5(e), [pr(e, "replace all")])
      ],
      _t("button", {
        name: "close",
        onclick: () => R5(e),
        "aria-label": pr(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new $m({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: di.of(e) }));
  }
  keydown(e) {
    VM(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? wb : xb)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), kb(this.view));
  }
  update(e) {
    for (let n of e.transactions)
      for (let r of n.effects)
        r.is(di) && !r.value.eq(this.query) && this.setQuery(r.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet(Xa).top;
  }
}
function pr(t, e) {
  return t.state.phrase(e);
}
const ac = 30, oc = /[\s\.,:;?!]/;
function Nm(t, { from: e, to: n }) {
  let r = t.state.doc.lineAt(e), s = t.state.doc.lineAt(n).to, i = Math.max(r.from, e - ac), a = Math.min(s, n + ac), o = t.state.sliceDoc(i, a);
  if (i != r.from) {
    for (let l = 0; l < ac; l++)
      if (!oc.test(o[l + 1]) && oc.test(o[l])) {
        o = o.slice(l);
        break;
      }
  }
  if (a != s) {
    for (let l = o.length - 1; l > o.length - ac; l--)
      if (!oc.test(o[l - 1]) && oc.test(o[l])) {
        o = o.slice(0, l);
        break;
      }
  }
  return ye.announce.of(`${t.state.phrase("current match")}. ${o} ${t.state.phrase("on line")} ${r.number}.`);
}
const G_ = /* @__PURE__ */ ye.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), z_ = [
  oi,
  /* @__PURE__ */ lr.low(W_),
  G_
];
let Xf = AS, Y_ = class {
  constructor(e, n, r, s, i, a, o, l, u, h) {
    this.left = e, this.top = n, this.height = r, this.fontFamily = s, this.fontSize = i, this.fontWeight = a, this.color = o, this.className = l, this.letter = u, this.partial = h;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", e.style.height = this.height + "px", e.style.lineHeight = this.height + "px", e.style.fontFamily = this.fontFamily, e.style.fontSize = this.fontSize, e.style.fontWeight = this.fontWeight, e.style.color = this.partial ? "transparent" : this.color, e.className = this.className, e.textContent = this.letter;
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.height == e.height && this.fontFamily == e.fontFamily && this.fontSize == e.fontSize && this.fontWeight == e.fontWeight && this.color == e.color && this.className == e.className && this.letter == e.letter;
  }
}, H_ = class {
  constructor(e, n) {
    this.view = e, this.rangePieces = [], this.cursors = [], this.em = n, this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) }, this.cursorLayer = e.scrollDOM.appendChild(document.createElement("div")), this.cursorLayer.className = "cm-cursorLayer cm-vimCursorLayer", this.cursorLayer.setAttribute("aria-hidden", "true"), e.requestMeasure(this.measureReq), this.setBlinkRate();
  }
  setBlinkRate() {
    let n = Xf(this.view.state).cursorBlinkRate;
    this.cursorLayer.style.animationDuration = n + "ms";
  }
  update(e) {
    (e.selectionSet || e.geometryChanged || e.viewportChanged) && (this.view.requestMeasure(this.measureReq), this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink"), K_(e) && this.setBlinkRate();
  }
  scheduleRedraw() {
    this.view.requestMeasure(this.measureReq);
  }
  readPos() {
    let { state: e } = this.view, n = [];
    for (let r of e.selection.ranges) {
      let s = r == e.selection.main, i = nR(this.em, this.view, r, s);
      i && n.push(i);
    }
    return { cursors: n };
  }
  drawSel({ cursors: e }) {
    if (e.length != this.cursors.length || e.some((n, r) => !n.eq(this.cursors[r]))) {
      let n = this.cursorLayer.children;
      if (n.length !== e.length) {
        this.cursorLayer.textContent = "";
        for (const r of e)
          this.cursorLayer.appendChild(r.draw());
      } else
        e.forEach((r, s) => r.adjust(n[s]));
      this.cursors = e;
    }
  }
  destroy() {
    this.cursorLayer.remove();
  }
};
function K_(t) {
  return Xf(t.startState) != Xf(t.state);
}
const J_ = {
  ".cm-line": {
    "& ::selection": { backgroundColor: "transparent !important" },
    "&::selection": { backgroundColor: "transparent !important" },
    caretColor: "transparent !important"
  },
  ".cm-fat-cursor": {
    position: "absolute",
    background: "#ff9696",
    border: "none",
    whiteSpace: "pre"
  },
  "&:not(.cm-focused) .cm-fat-cursor": {
    background: "none",
    outline: "solid 1px #ff9696",
    color: "transparent !important"
  }
}, eR = /* @__PURE__ */ lr.highest(/* @__PURE__ */ ye.theme(J_));
function tR(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Et.LTR ? e.left : e.right - t.scrollDOM.clientWidth) - t.scrollDOM.scrollLeft, top: e.top - t.scrollDOM.scrollTop };
}
function nR(t, e, n, r) {
  var s, i;
  let a = n.head, o = 1;
  (t.$data.count || t.$data.keyChain) && (o = 0.5);
  {
    let u = a < e.state.doc.length && e.state.sliceDoc(a, a + 1);
    u && /[\uDC00-\uDFFF]/.test(u) && a > 1 && (a--, u = e.state.sliceDoc(a, a + 1));
    let h = e.coordsAtPos(a, 1);
    if (!h)
      return null;
    let f = tR(e), m = e.domAtPos(a), b = m ? m.node : e.contentDOM;
    for (; m && m.node instanceof HTMLElement; )
      b = m.node, m = { node: m.node.childNodes[m.offset], offset: 0 };
    if (!(b instanceof HTMLElement)) {
      if (!b.parentNode)
        return null;
      b = b.parentNode;
    }
    let v = getComputedStyle(b), C = h.left, S = (i = (s = e).coordsForChar) === null || i === void 0 ? void 0 : i.call(s, a);
    if (S && (C = S.left), !u || u == `
` || u == "\r")
      u = " ";
    else if (u == "	") {
      u = " ";
      var l = e.coordsAtPos(a + 1, -1);
      l && (C = l.left - (l.left - h.left) / parseInt(v.tabSize));
    } else /[\uD800-\uDBFF]/.test(u) && a < e.state.doc.length - 1 && (u += e.state.sliceDoc(a + 1, a + 2));
    let B = h.bottom - h.top;
    return new Y_(C - f.left, h.top - f.top + B * (1 - o), B * o, v.fontFamily, v.fontSize, v.fontWeight, v.color, r ? "cm-fat-cursor cm-cursor-primary" : "cm-fat-cursor cm-cursor-secondary", u, o != 1);
  }
}
const rR = /* @__PURE__ */ ye.theme({
  ".cm-emacsMode .cm-cursorLayer:not(.cm-vimCursorLayer)": {
    display: "none"
  },
  ".cm-vim-panel": {
    padding: "5px 10px",
    backgroundColor: "#fffa8f",
    fontFamily: "monospace"
  },
  ".cm-vim-panel input": {
    border: "none",
    outline: "none",
    backgroundColor: "#fffa8f"
  }
}), sR = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.status = "", this.view = t, this.em = new Ti(t), this.blockCursor = new H_(t, this.em), this.view.scrollDOM.classList.add("cm-emacsMode");
  }
  update(t) {
    t.docChanged && (this.em.$emacsMark = null, this.em.updateMarksOnChange(t.changes)), this.blockCursor.update(t);
  }
  destroy() {
    this.view.scrollDOM.classList.remove("cm-emacsMode"), this.blockCursor.destroy();
  }
}, {
  eventHandlers: {
    keydown: function(t, e) {
      var n = this.em.handleKeyboard(t);
      return n && this.blockCursor.scheduleRedraw(), !!n;
    },
    mousedown: function() {
      this.em.$emacsMark = null;
    }
  }
}), iR = /* @__PURE__ */ Ze.define(), aR = /* @__PURE__ */ Vt.define({
  create: () => !1,
  update(t, e) {
    for (let n of e.effects)
      n.is(iR) && (t = n.value);
    return t;
  },
  provide: (t) => hi.from(t, (e) => e ? oR : null)
});
function oR(t) {
  let e = document.createElement("div");
  return e.className = "cm-vim-panel", { top: !1, dom: e };
}
function lR(t = {}) {
  return [
    rR,
    sR,
    eR,
    aR
  ];
}
var cR = {
  Return: "Return",
  Escape: "Esc",
  Insert: "Ins",
  ArrowLeft: "Left",
  ArrowRight: "Right",
  ArrowUp: "Up",
  ArrowDown: "Down",
  Enter: "Return",
  Divide: "/",
  Slash: "/",
  Multiply: "*",
  Subtract: "-",
  Minus: "-",
  Equal: "="
}, uR = { Shift: 1, Alt: 1, Command: 1, Control: 1, CapsLock: 1 };
const vp = {};
class Ti {
  constructor(e) {
    this.view = e, this.$data = {
      count: 0,
      keyChain: "",
      lastCommand: ""
    }, this.$emacsMarkRing = [], this.$emacsMark = null;
  }
  static bindKey(e, n) {
    e.split("|").forEach(function(r) {
      let s = "", i = r.split(/\s+/);
      i.forEach(function(a, o) {
        let l = a.split(/-(?=.)/), u = l.pop();
        l.length && (s += l.sort().join("-") + "-"), s += u, o === i.length - 1 ? vp[s] = n : (vp[s] = "null", s += " ");
      });
    });
  }
  static getKey(e) {
    var n = e.code, r = e.key;
    if (uR[r])
      return ["", "", ""];
    n.length > 1 && (n[0] == "N" && (n = n.replace(/^Numpad/, "")), n[0] == "K" && (n = n.replace(/^Key/, ""))), n = cR[n] || n, n.length == 1 && (n = n.toLowerCase());
    var s = "";
    return e.ctrlKey && (s += "C-"), e.metaKey && (s += "CMD-"), e.altKey && (s += "M-"), e.shiftKey && (s += "S-"), [n, s, r];
  }
  static addCommands(e) {
    Object.keys(e).forEach(function(n) {
      var r = e[n];
      typeof r == "function" && (r = { exec: r }), Ti.commands[n] = r;
    });
  }
  static execCommand(e, n, r, s = 1) {
    var i = void 0;
    if (s < 0 && (s = -s), typeof e == "function")
      for (var a = 0; a < s; a++)
        e(n.view);
    else if (e !== "null") if (e.exec) {
      s > 1 && e.handlesCount && (r || (r = {}), typeof r == "object" && (r.count = s), s = 1);
      for (var a = 0; a < s; a++)
        i = e.exec(n, r || {});
    } else
      throw new Error("missformed command");
    return i;
  }
  handleKeyboard(e) {
    var n = Ti.getKey(e), r = this.findCommand(n);
    if (!(/Up|Down/.test(n?.[0]) && _Q(this.view.state))) {
      if (r && r.command) {
        var s = Ti.execCommand(r.command, this, r.args, r.count);
        if (s === !1)
          return;
      }
      return r;
    }
  }
  findCommand([e, n, r]) {
    if (e) {
      var s = this, i = this.$data;
      if (!n && e.length == 1 && (s.pushEmacsMark(), i.count)) {
        var a = new Array(i.count + 1).join(r);
        return i.count = null, { command: "insertstring", args: a };
      }
      if (n == "C-" || i.count) {
        var u = parseInt(e[e.length - 1]);
        if (typeof u == "number" && !isNaN(u))
          return i.count = Math.max(i.count || 0, 0), i.count = 10 * i.count + u, { command: "null" };
      }
      n && (e = n + e), i.keyChain && (e = i.keyChain += " " + e);
      var o = vp[e];
      if (i.keyChain = o == "null" ? e : "", !!o) {
        if (o === "null")
          return { command: "null" };
        if (o === "universalArgument")
          return i.count = -4, { command: "null" };
        var l;
        if (typeof o != "string" && (l = o.args, o.command && (o = o.command)), (o === "insertstring" || o === Bm || o === Yu) && s.pushEmacsMark(), !(typeof o == "string" && (o = Ti.commands[o], !o))) {
          !o.readOnly && !o.keepLastCommand && (i.lastCommand = null);
          var u = i.count || 1;
          return i.count && (i.count = 0), { command: o, args: l, count: u };
        }
      }
    }
  }
  showCommandLine(e) {
    console.error("TODO");
  }
  updateMarksOnChange(e) {
    this.$emacsMark && (this.$emacsMark = this.updateMark(this.$emacsMark, e)), this.$emacsMarkRing = this.$emacsMarkRing.map((n) => this.updateMark(n, e)).filter(Boolean);
  }
  updateMark(e, n) {
    if (e) {
      var r = e.map(function(s) {
        return n.mapPos(s, 1, an.TrackDel);
      }).filter((s) => s != null);
      return r.length == 0 ? null : r;
    }
  }
  emacsMark() {
    return this.$emacsMark;
  }
  setEmacsMark(e) {
    this.$emacsMark = e;
  }
  pushEmacsMark(e, n) {
    var r = this.$emacsMark;
    r && Cb(this.$emacsMarkRing, r), !e || n ? this.setEmacsMark(e) : Cb(this.$emacsMarkRing, e);
  }
  popEmacsMark() {
    var e = this.emacsMark();
    return e ? (this.setEmacsMark(null), e) : this.$emacsMarkRing.pop();
  }
  getLastEmacsMark() {
    return this.$emacsMark || this.$emacsMarkRing.slice(-1)[0];
  }
  getCopyText() {
    var e = this.view.state;
    return e.selection.ranges.map((n) => e.sliceDoc(n.from, n.to)).join(`
`);
  }
  clearSelection() {
    var e = this.view, n = e.state.selection, r = !n.ranges.some((i) => i.from != i.to);
    if (r)
      return !1;
    var s = n.ranges.map((i) => ne.range(i.head, i.head));
    return e.dispatch({
      selection: ne.create(s, n.mainIndex)
    }), !0;
  }
  onPaste(e) {
    var n = this.view, r = n.state.selection, s;
    if (r.ranges.length > 1) {
      var i = e.split(`
`);
      i.length == r.ranges.length && (s = i);
    }
    var a = 0, o = n.state.changeByRange((l) => {
      var u = s ? s[a] : e;
      return a++, {
        changes: { from: l.from, to: l.to, insert: u },
        range: ne.cursor(l.from + u.length)
      };
    });
    n.dispatch(o);
  }
  selectionToEmacsMark() {
    var e = this.view.state.selection;
    return e.ranges.map((n) => n.head);
  }
}
Ti.commands = {};
function Cb(t, e) {
  t.length && t[t.length - 1] + "" == e + "" || t.push(e);
}
function hR(t) {
  var e = t.Pos;
  function n(p, d, g) {
    if (d.line === g.line && d.ch >= g.ch - 1) {
      var y = p.getLine(d.line), x = y.charCodeAt(d.ch);
      55296 <= x && x <= 55551 && (g.ch += 1);
    }
    return { start: d, end: g };
  }
  var r = [
    // Key to key mapping. This goes first to make it possible to override
    // existing mappings.
    { keys: "<Left>", type: "keyToKey", toKeys: "h" },
    { keys: "<Right>", type: "keyToKey", toKeys: "l" },
    { keys: "<Up>", type: "keyToKey", toKeys: "k" },
    { keys: "<Down>", type: "keyToKey", toKeys: "j" },
    { keys: "g<Up>", type: "keyToKey", toKeys: "gk" },
    { keys: "g<Down>", type: "keyToKey", toKeys: "gj" },
    { keys: "<Space>", type: "keyToKey", toKeys: "l" },
    { keys: "<BS>", type: "keyToKey", toKeys: "h" },
    { keys: "<Del>", type: "keyToKey", toKeys: "x" },
    { keys: "<C-Space>", type: "keyToKey", toKeys: "W" },
    { keys: "<C-BS>", type: "keyToKey", toKeys: "B" },
    { keys: "<S-Space>", type: "keyToKey", toKeys: "w" },
    { keys: "<S-BS>", type: "keyToKey", toKeys: "b" },
    { keys: "<C-n>", type: "keyToKey", toKeys: "j" },
    { keys: "<C-p>", type: "keyToKey", toKeys: "k" },
    { keys: "<C-[>", type: "keyToKey", toKeys: "<Esc>" },
    { keys: "<C-c>", type: "keyToKey", toKeys: "<Esc>" },
    { keys: "<C-[>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },
    { keys: "<C-c>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },
    { keys: "<C-Esc>", type: "keyToKey", toKeys: "<Esc>" },
    // ipad keyboard sends C-Esc instead of C-[
    { keys: "<C-Esc>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },
    { keys: "s", type: "keyToKey", toKeys: "cl", context: "normal" },
    { keys: "s", type: "keyToKey", toKeys: "c", context: "visual" },
    { keys: "S", type: "keyToKey", toKeys: "cc", context: "normal" },
    { keys: "S", type: "keyToKey", toKeys: "VdO", context: "visual" },
    { keys: "<Home>", type: "keyToKey", toKeys: "0" },
    { keys: "<End>", type: "keyToKey", toKeys: "$" },
    { keys: "<PageUp>", type: "keyToKey", toKeys: "<C-b>" },
    { keys: "<PageDown>", type: "keyToKey", toKeys: "<C-f>" },
    { keys: "<CR>", type: "keyToKey", toKeys: "j^", context: "normal" },
    { keys: "<Ins>", type: "keyToKey", toKeys: "i", context: "normal" },
    { keys: "<Ins>", type: "action", action: "toggleOverwrite", context: "insert" },
    // Motions
    { keys: "H", type: "motion", motion: "moveToTopLine", motionArgs: { linewise: !0, toJumplist: !0 } },
    { keys: "M", type: "motion", motion: "moveToMiddleLine", motionArgs: { linewise: !0, toJumplist: !0 } },
    { keys: "L", type: "motion", motion: "moveToBottomLine", motionArgs: { linewise: !0, toJumplist: !0 } },
    { keys: "h", type: "motion", motion: "moveByCharacters", motionArgs: { forward: !1 } },
    { keys: "l", type: "motion", motion: "moveByCharacters", motionArgs: { forward: !0 } },
    { keys: "j", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, linewise: !0 } },
    { keys: "k", type: "motion", motion: "moveByLines", motionArgs: { forward: !1, linewise: !0 } },
    { keys: "gj", type: "motion", motion: "moveByDisplayLines", motionArgs: { forward: !0 } },
    { keys: "gk", type: "motion", motion: "moveByDisplayLines", motionArgs: { forward: !1 } },
    { keys: "w", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !1 } },
    { keys: "W", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !1, bigWord: !0 } },
    { keys: "e", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !0, inclusive: !0 } },
    { keys: "E", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !0, bigWord: !0, inclusive: !0 } },
    { keys: "b", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1 } },
    { keys: "B", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1, bigWord: !0 } },
    { keys: "ge", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !0, inclusive: !0 } },
    { keys: "gE", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !0, bigWord: !0, inclusive: !0 } },
    { keys: "{", type: "motion", motion: "moveByParagraph", motionArgs: { forward: !1, toJumplist: !0 } },
    { keys: "}", type: "motion", motion: "moveByParagraph", motionArgs: { forward: !0, toJumplist: !0 } },
    { keys: "(", type: "motion", motion: "moveBySentence", motionArgs: { forward: !1 } },
    { keys: ")", type: "motion", motion: "moveBySentence", motionArgs: { forward: !0 } },
    { keys: "<C-f>", type: "motion", motion: "moveByPage", motionArgs: { forward: !0 } },
    { keys: "<C-b>", type: "motion", motion: "moveByPage", motionArgs: { forward: !1 } },
    { keys: "<C-d>", type: "motion", motion: "moveByScroll", motionArgs: { forward: !0, explicitRepeat: !0 } },
    { keys: "<C-u>", type: "motion", motion: "moveByScroll", motionArgs: { forward: !1, explicitRepeat: !0 } },
    { keys: "gg", type: "motion", motion: "moveToLineOrEdgeOfDocument", motionArgs: { forward: !1, explicitRepeat: !0, linewise: !0, toJumplist: !0 } },
    { keys: "G", type: "motion", motion: "moveToLineOrEdgeOfDocument", motionArgs: { forward: !0, explicitRepeat: !0, linewise: !0, toJumplist: !0 } },
    { keys: "g$", type: "motion", motion: "moveToEndOfDisplayLine" },
    { keys: "g^", type: "motion", motion: "moveToStartOfDisplayLine" },
    { keys: "g0", type: "motion", motion: "moveToStartOfDisplayLine" },
    { keys: "0", type: "motion", motion: "moveToStartOfLine" },
    { keys: "^", type: "motion", motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: "+", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, toFirstChar: !0 } },
    { keys: "-", type: "motion", motion: "moveByLines", motionArgs: { forward: !1, toFirstChar: !0 } },
    { keys: "_", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, toFirstChar: !0, repeatOffset: -1 } },
    { keys: "$", type: "motion", motion: "moveToEol", motionArgs: { inclusive: !0 } },
    { keys: "%", type: "motion", motion: "moveToMatchedSymbol", motionArgs: { inclusive: !0, toJumplist: !0 } },
    { keys: "f<character>", type: "motion", motion: "moveToCharacter", motionArgs: { forward: !0, inclusive: !0 } },
    { keys: "F<character>", type: "motion", motion: "moveToCharacter", motionArgs: { forward: !1 } },
    { keys: "t<character>", type: "motion", motion: "moveTillCharacter", motionArgs: { forward: !0, inclusive: !0 } },
    { keys: "T<character>", type: "motion", motion: "moveTillCharacter", motionArgs: { forward: !1 } },
    { keys: ";", type: "motion", motion: "repeatLastCharacterSearch", motionArgs: { forward: !0 } },
    { keys: ",", type: "motion", motion: "repeatLastCharacterSearch", motionArgs: { forward: !1 } },
    { keys: "'<register>", type: "motion", motion: "goToMark", motionArgs: { toJumplist: !0, linewise: !0 } },
    { keys: "`<register>", type: "motion", motion: "goToMark", motionArgs: { toJumplist: !0 } },
    { keys: "]`", type: "motion", motion: "jumpToMark", motionArgs: { forward: !0 } },
    { keys: "[`", type: "motion", motion: "jumpToMark", motionArgs: { forward: !1 } },
    { keys: "]'", type: "motion", motion: "jumpToMark", motionArgs: { forward: !0, linewise: !0 } },
    { keys: "['", type: "motion", motion: "jumpToMark", motionArgs: { forward: !1, linewise: !0 } },
    // the next two aren't motions but must come before more general motion declarations
    { keys: "]p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !0, isEdit: !0, matchIndent: !0 } },
    { keys: "[p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !1, isEdit: !0, matchIndent: !0 } },
    { keys: "]<character>", type: "motion", motion: "moveToSymbol", motionArgs: { forward: !0, toJumplist: !0 } },
    { keys: "[<character>", type: "motion", motion: "moveToSymbol", motionArgs: { forward: !1, toJumplist: !0 } },
    { keys: "|", type: "motion", motion: "moveToColumn" },
    { keys: "o", type: "motion", motion: "moveToOtherHighlightedEnd", context: "visual" },
    { keys: "O", type: "motion", motion: "moveToOtherHighlightedEnd", motionArgs: { sameLine: !0 }, context: "visual" },
    // Operators
    { keys: "d", type: "operator", operator: "delete" },
    { keys: "y", type: "operator", operator: "yank" },
    { keys: "c", type: "operator", operator: "change" },
    { keys: "=", type: "operator", operator: "indentAuto" },
    { keys: ">", type: "operator", operator: "indent", operatorArgs: { indentRight: !0 } },
    { keys: "<", type: "operator", operator: "indent", operatorArgs: { indentRight: !1 } },
    { keys: "g~", type: "operator", operator: "changeCase" },
    { keys: "gu", type: "operator", operator: "changeCase", operatorArgs: { toLower: !0 }, isEdit: !0 },
    { keys: "gU", type: "operator", operator: "changeCase", operatorArgs: { toLower: !1 }, isEdit: !0 },
    { keys: "n", type: "motion", motion: "findNext", motionArgs: { forward: !0, toJumplist: !0 } },
    { keys: "N", type: "motion", motion: "findNext", motionArgs: { forward: !1, toJumplist: !0 } },
    { keys: "gn", type: "motion", motion: "findAndSelectNextInclusive", motionArgs: { forward: !0 } },
    { keys: "gN", type: "motion", motion: "findAndSelectNextInclusive", motionArgs: { forward: !1 } },
    { keys: "gq", type: "operator", operator: "hardWrap" },
    { keys: "gw", type: "operator", operator: "hardWrap", operatorArgs: { keepCursor: !0 } },
    // Operator-Motion dual commands
    { keys: "x", type: "operatorMotion", operator: "delete", motion: "moveByCharacters", motionArgs: { forward: !0 }, operatorMotionArgs: { visualLine: !1 } },
    { keys: "X", type: "operatorMotion", operator: "delete", motion: "moveByCharacters", motionArgs: { forward: !1 }, operatorMotionArgs: { visualLine: !0 } },
    { keys: "D", type: "operatorMotion", operator: "delete", motion: "moveToEol", motionArgs: { inclusive: !0 }, context: "normal" },
    { keys: "D", type: "operator", operator: "delete", operatorArgs: { linewise: !0 }, context: "visual" },
    { keys: "Y", type: "operatorMotion", operator: "yank", motion: "expandToLine", motionArgs: { linewise: !0 }, context: "normal" },
    { keys: "Y", type: "operator", operator: "yank", operatorArgs: { linewise: !0 }, context: "visual" },
    { keys: "C", type: "operatorMotion", operator: "change", motion: "moveToEol", motionArgs: { inclusive: !0 }, context: "normal" },
    { keys: "C", type: "operator", operator: "change", operatorArgs: { linewise: !0 }, context: "visual" },
    { keys: "~", type: "operatorMotion", operator: "changeCase", motion: "moveByCharacters", motionArgs: { forward: !0 }, operatorArgs: { shouldMoveCursor: !0 }, context: "normal" },
    { keys: "~", type: "operator", operator: "changeCase", context: "visual" },
    { keys: "<C-u>", type: "operatorMotion", operator: "delete", motion: "moveToStartOfLine", context: "insert" },
    { keys: "<C-w>", type: "operatorMotion", operator: "delete", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1 }, context: "insert" },
    //ignore C-w in normal mode
    { keys: "<C-w>", type: "idle", context: "normal" },
    // Actions
    { keys: "<C-i>", type: "action", action: "jumpListWalk", actionArgs: { forward: !0 } },
    { keys: "<C-o>", type: "action", action: "jumpListWalk", actionArgs: { forward: !1 } },
    { keys: "<C-e>", type: "action", action: "scroll", actionArgs: { forward: !0, linewise: !0 } },
    { keys: "<C-y>", type: "action", action: "scroll", actionArgs: { forward: !1, linewise: !0 } },
    { keys: "a", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "charAfter" }, context: "normal" },
    { keys: "A", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "eol" }, context: "normal" },
    { keys: "A", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "endOfSelectedArea" }, context: "visual" },
    { keys: "i", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "inplace" }, context: "normal" },
    { keys: "gi", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "lastEdit" }, context: "normal" },
    { keys: "I", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "firstNonBlank" }, context: "normal" },
    { keys: "gI", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "bol" }, context: "normal" },
    { keys: "I", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "startOfSelectedArea" }, context: "visual" },
    { keys: "o", type: "action", action: "newLineAndEnterInsertMode", isEdit: !0, interlaceInsertRepeat: !0, actionArgs: { after: !0 }, context: "normal" },
    { keys: "O", type: "action", action: "newLineAndEnterInsertMode", isEdit: !0, interlaceInsertRepeat: !0, actionArgs: { after: !1 }, context: "normal" },
    { keys: "v", type: "action", action: "toggleVisualMode" },
    { keys: "V", type: "action", action: "toggleVisualMode", actionArgs: { linewise: !0 } },
    { keys: "<C-v>", type: "action", action: "toggleVisualMode", actionArgs: { blockwise: !0 } },
    { keys: "<C-q>", type: "action", action: "toggleVisualMode", actionArgs: { blockwise: !0 } },
    { keys: "gv", type: "action", action: "reselectLastSelection" },
    { keys: "J", type: "action", action: "joinLines", isEdit: !0 },
    { keys: "gJ", type: "action", action: "joinLines", actionArgs: { keepSpaces: !0 }, isEdit: !0 },
    { keys: "p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !0, isEdit: !0 } },
    { keys: "P", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !1, isEdit: !0 } },
    { keys: "r<character>", type: "action", action: "replace", isEdit: !0 },
    { keys: "@<register>", type: "action", action: "replayMacro" },
    { keys: "q<register>", type: "action", action: "enterMacroRecordMode" },
    // Handle Replace-mode as a special case of insert mode.
    { keys: "R", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { replace: !0 }, context: "normal" },
    { keys: "R", type: "operator", operator: "change", operatorArgs: { linewise: !0, fullLine: !0 }, context: "visual", exitVisualBlock: !0 },
    { keys: "u", type: "action", action: "undo", context: "normal" },
    { keys: "u", type: "operator", operator: "changeCase", operatorArgs: { toLower: !0 }, context: "visual", isEdit: !0 },
    { keys: "U", type: "operator", operator: "changeCase", operatorArgs: { toLower: !1 }, context: "visual", isEdit: !0 },
    { keys: "<C-r>", type: "action", action: "redo" },
    { keys: "m<register>", type: "action", action: "setMark" },
    { keys: '"<register>', type: "action", action: "setRegister" },
    { keys: "<C-r><register>", type: "action", action: "insertRegister", context: "insert", isEdit: !0 },
    { keys: "<C-o>", type: "action", action: "oneNormalCommand", context: "insert" },
    { keys: "zz", type: "action", action: "scrollToCursor", actionArgs: { position: "center" } },
    { keys: "z.", type: "action", action: "scrollToCursor", actionArgs: { position: "center" }, motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: "zt", type: "action", action: "scrollToCursor", actionArgs: { position: "top" } },
    { keys: "z<CR>", type: "action", action: "scrollToCursor", actionArgs: { position: "top" }, motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: "zb", type: "action", action: "scrollToCursor", actionArgs: { position: "bottom" } },
    { keys: "z-", type: "action", action: "scrollToCursor", actionArgs: { position: "bottom" }, motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: ".", type: "action", action: "repeatLastEdit" },
    { keys: "<C-a>", type: "action", action: "incrementNumberToken", isEdit: !0, actionArgs: { increase: !0, backtrack: !1 } },
    { keys: "<C-x>", type: "action", action: "incrementNumberToken", isEdit: !0, actionArgs: { increase: !1, backtrack: !1 } },
    { keys: "<C-t>", type: "action", action: "indent", actionArgs: { indentRight: !0 }, context: "insert" },
    { keys: "<C-d>", type: "action", action: "indent", actionArgs: { indentRight: !1 }, context: "insert" },
    // Text object motions
    { keys: "a<register>", type: "motion", motion: "textObjectManipulation" },
    { keys: "i<register>", type: "motion", motion: "textObjectManipulation", motionArgs: { textObjectInner: !0 } },
    // Search
    { keys: "/", type: "search", searchArgs: { forward: !0, querySrc: "prompt", toJumplist: !0 } },
    { keys: "?", type: "search", searchArgs: { forward: !1, querySrc: "prompt", toJumplist: !0 } },
    { keys: "*", type: "search", searchArgs: { forward: !0, querySrc: "wordUnderCursor", wholeWordOnly: !0, toJumplist: !0 } },
    { keys: "#", type: "search", searchArgs: { forward: !1, querySrc: "wordUnderCursor", wholeWordOnly: !0, toJumplist: !0 } },
    { keys: "g*", type: "search", searchArgs: { forward: !0, querySrc: "wordUnderCursor", toJumplist: !0 } },
    { keys: "g#", type: "search", searchArgs: { forward: !1, querySrc: "wordUnderCursor", toJumplist: !0 } },
    // Ex command
    { keys: ":", type: "ex" }
  ], s = r.length, i = [
    { name: "colorscheme", shortName: "colo" },
    { name: "map" },
    { name: "imap", shortName: "im" },
    { name: "nmap", shortName: "nm" },
    { name: "vmap", shortName: "vm" },
    { name: "omap", shortName: "om" },
    { name: "noremap", shortName: "no" },
    { name: "nnoremap", shortName: "nn" },
    { name: "vnoremap", shortName: "vn" },
    { name: "inoremap", shortName: "ino" },
    { name: "onoremap", shortName: "ono" },
    { name: "unmap" },
    { name: "mapclear", shortName: "mapc" },
    { name: "nmapclear", shortName: "nmapc" },
    { name: "vmapclear", shortName: "vmapc" },
    { name: "imapclear", shortName: "imapc" },
    { name: "omapclear", shortName: "omapc" },
    { name: "write", shortName: "w" },
    { name: "undo", shortName: "u" },
    { name: "redo", shortName: "red" },
    { name: "set", shortName: "se" },
    { name: "setlocal", shortName: "setl" },
    { name: "setglobal", shortName: "setg" },
    { name: "sort", shortName: "sor" },
    { name: "substitute", shortName: "s", possiblyAsync: !0 },
    { name: "startinsert", shortName: "start" },
    { name: "nohlsearch", shortName: "noh" },
    { name: "yank", shortName: "y" },
    { name: "delmarks", shortName: "delm" },
    { name: "registers", shortName: "reg", excludeFromCommandHistory: !0 },
    { name: "vglobal", shortName: "v" },
    { name: "delete", shortName: "d" },
    { name: "join", shortName: "j" },
    { name: "normal", shortName: "norm" },
    { name: "global", shortName: "g" }
  ], a = Sn("");
  function o(p) {
    p.setOption("disableInput", !0), p.setOption("showCursorWhenSelecting", !1), t.signal(p, "vim-mode-change", { mode: "normal" }), p.on("cursorActivity", Qe), Pe(p), t.on(p.getInputField(), "paste", u(p));
  }
  function l(p) {
    p.setOption("disableInput", !1), p.off("cursorActivity", Qe), t.off(p.getInputField(), "paste", u(p)), p.state.vim = null, ki && clearTimeout(ki);
  }
  function u(p) {
    var d = p.state.vim;
    return d.onPasteFn || (d.onPasteFn = function() {
      d.insertMode || (p.setCursor(Ve(p.getCursor(), 0, 1)), qe.enterInsertMode(p, {}, d));
    }), d.onPasteFn;
  }
  var h = /[\d]/, f = [t.isWordChar, function(p) {
    return p && !t.isWordChar(p) && !/\s/.test(p);
  }], m = [function(p) {
    return /\S/.test(p);
  }], b = ["<", ">"], v = ["-", '"', ".", ":", "_", "/", "+"], C = /^\w$/, S;
  try {
    S = new RegExp("^[\\p{Lu}]$", "u");
  } catch {
    S = /^[A-Z]$/;
  }
  function B(p, d) {
    return d >= p.firstLine() && d <= p.lastLine();
  }
  function $(p) {
    return /^[a-z]$/.test(p);
  }
  function W(p) {
    return "()[]{}".indexOf(p) != -1;
  }
  function _(p) {
    return h.test(p);
  }
  function M(p) {
    return S.test(p);
  }
  function Z(p) {
    return /^\s*$/.test(p);
  }
  function N(p) {
    return ".?!".indexOf(p) != -1;
  }
  function q(p, d) {
    for (var g = 0; g < d.length; g++)
      if (d[g] == p)
        return !0;
    return !1;
  }
  var ae = {};
  function J(p, d, g, y, x) {
    if (d === void 0 && !x)
      throw Error("defaultValue is required unless callback is provided");
    if (g || (g = "string"), ae[p] = {
      type: g,
      defaultValue: d,
      callback: x
    }, y)
      for (var k = 0; k < y.length; k++)
        ae[y[k]] = ae[p];
    d && pe(p, d);
  }
  function pe(p, d, g, y) {
    var x = ae[p];
    y = y || {};
    var k = y.scope;
    if (!x)
      return new Error("Unknown option: " + p);
    if (x.type == "boolean") {
      if (d && d !== !0)
        return new Error("Invalid argument: " + p + "=" + d);
      d !== !1 && (d = !0);
    }
    x.callback ? (k !== "local" && x.callback(d, void 0), k !== "global" && g && x.callback(d, g)) : (k !== "local" && (x.value = x.type == "boolean" ? !!d : d), k !== "global" && g && (g.state.vim.options[p] = { value: d }));
  }
  function H(p, d, g) {
    var y = ae[p];
    g = g || {};
    var x = g.scope;
    if (!y)
      return new Error("Unknown option: " + p);
    if (y.callback) {
      let k = d && y.callback(void 0, d);
      return x !== "global" && k !== void 0 ? k : x !== "local" ? y.callback() : void 0;
    } else
      return (x !== "global" && d && d.state.vim.options[p] || x !== "local" && y || {}).value;
  }
  J("filetype", void 0, "string", ["ft"], function(p, d) {
    if (d !== void 0)
      if (p === void 0) {
        let g = d.getOption("mode");
        return g == "null" ? "" : g;
      } else {
        let g = p == "" ? "null" : p;
        d.setOption("mode", g);
      }
  }), J("textwidth", 80, "number", ["tw"], function(p, d) {
    if (d !== void 0)
      if (p === void 0) {
        var g = d.getOption("textwidth");
        return g;
      } else {
        var y = Math.round(
          /**@type {any}*/
          p
        );
        y > 1 && d.setOption("textwidth", y);
      }
  });
  var oe = function() {
    var p = 100, d = -1, g = 0, y = 0, x = new Array(p);
    function k(j, V, U) {
      var K = d % p, ee = x[K];
      function z(te) {
        var he = ++d % p, Re = x[he];
        Re && Re.clear(), x[he] = j.setBookmark(te);
      }
      if (ee) {
        var G = ee.find();
        G && !it(G, V) && z(V);
      } else
        z(V);
      z(U), g = d, y = d - p + 1, y < 0 && (y = 0);
    }
    function E(j, V) {
      d += V, d > g ? d = g : d < y && (d = y);
      var U = x[(p + d) % p];
      if (U && !U.find()) {
        var K = V > 0 ? 1 : -1, ee, z = j.getCursor();
        do
          if (d += K, U = x[(p + d) % p], U && (ee = U.find()) && !it(z, ee))
            break;
        while (d < g && d > y);
      }
      return U;
    }
    function T(j, V) {
      var U = d, K = E(j, V);
      return d = U, K && K.find();
    }
    return {
      cachedCursor: void 0,
      //used for # and * jumps
      add: k,
      find: T,
      move: E
    };
  }, fe = function(p) {
    return p ? {
      changes: p.changes,
      expectCursorActivityForChange: p.expectCursorActivityForChange
    } : {
      // Change list
      changes: [],
      // Set to true on change, false on cursorActivity.
      expectCursorActivityForChange: !1
    };
  };
  class ke {
    constructor() {
      this.latestRegister = void 0, this.isPlaying = !1, this.isRecording = !1, this.replaySearchQueries = [], this.onRecordingDone = void 0, this.lastInsertModeChanges = fe();
    }
    exitMacroRecordMode() {
      var d = ie.macroModeState;
      d.onRecordingDone && d.onRecordingDone(), d.onRecordingDone = void 0, d.isRecording = !1;
    }
    enterMacroRecordMode(d, g) {
      var y = ie.registerController.getRegister(g);
      if (y) {
        if (y.clear(), this.latestRegister = g, d.openDialog) {
          var x = ss("span", { class: "cm-vim-message" }, "recording @" + g);
          this.onRecordingDone = d.openDialog(x, null, { bottom: !0 });
        }
        this.isRecording = !0;
      }
    }
  }
  function Pe(p) {
    return p.state.vim || (p.state.vim = {
      inputState: new vt(),
      // Vim's input state that triggered the last edit, used to repeat
      // motions and operators with '.'.
      lastEditInputState: void 0,
      // Vim's action command before the last edit, used to repeat actions
      // with '.' and insert mode repeat.
      lastEditActionCommand: void 0,
      // When using jk for navigation, if you move from a longer line to a
      // shorter line, the cursor may clip to the end of the shorter line.
      // If j is pressed again and cursor goes to the next line, the
      // cursor should go back to its horizontal position on the longer
      // line if it can. This is to keep track of the horizontal position.
      lastHPos: -1,
      // Doing the same with screen-position for gj/gk
      lastHSPos: -1,
      // The last motion command run. Cleared if a non-motion command gets
      // executed in between.
      lastMotion: null,
      marks: {},
      insertMode: !1,
      insertModeReturn: !1,
      // Repeat count for changes made in insert mode, triggered by key
      // sequences like 3,i. Only exists when insertMode is true.
      insertModeRepeat: void 0,
      visualMode: !1,
      // If we are in visual line mode. No effect if visualMode is false.
      visualLine: !1,
      visualBlock: !1,
      lastSelection: null,
      lastPastedText: null,
      sel: {},
      // Buffer-local/window-local values of vim options.
      options: {},
      // Whether the next character should be interpreted literally
      // Necassary for correct implementation of f<character>, r<character> etc.
      // in terms of langmaps.
      expectLiteralNext: !1
    }), p.state.vim;
  }
  var ie;
  function Ce() {
    ie = {
      // The current search query.
      searchQuery: null,
      // Whether we are searching backwards.
      searchIsReversed: !1,
      // Replace part of the last substituted pattern
      lastSubstituteReplacePart: void 0,
      jumpList: oe(),
      macroModeState: new ke(),
      // Recording latest f, t, F or T motion command.
      lastCharacterSearch: { increment: 0, forward: !0, selectedCharacter: "" },
      registerController: new Wn({}),
      // search history buffer
      searchHistoryController: new Un(),
      // ex Command history buffer
      exCommandHistoryController: new Un()
    };
    for (var p in ae) {
      var d = ae[p];
      d.value = d.defaultValue;
    }
  }
  var Le, Ue = {
    enterVimMode: o,
    leaveVimMode: l,
    buildKeyMap: function() {
    },
    // Testing hook, though it might be useful to expose the register
    // controller anyway.
    getRegisterController: function() {
      return ie.registerController;
    },
    // Testing hook.
    resetVimGlobalState_: Ce,
    // Testing hook.
    getVimGlobalState_: function() {
      return ie;
    },
    // Testing hook.
    maybeInitVimState_: Pe,
    suppressErrorLogging: !1,
    InsertModeKey: qi,
    /**@type {(lhs: string, rhs: string, ctx: string) => void} */
    map: function(p, d, g) {
      Se.map(p, d, g);
    },
    /**@type {(lhs: string, ctx: string) => any} */
    unmap: function(p, d) {
      return Se.unmap(p, d);
    },
    // Non-recursive map function.
    // NOTE: This will not create mappings to key maps that aren't present
    // in the default key map. See TODO at bottom of function.
    /**@type {(lhs: string, rhs: string, ctx: string) => void} */
    noremap: function(p, d, g) {
      Se.map(p, d, g, !0);
    },
    // Remove all user-defined mappings for the provided context.
    /**@arg {string} [ctx]} */
    mapclear: function(p) {
      var d = r.length, g = s, y = r.slice(0, d - g);
      if (r = r.slice(d - g), p)
        for (var x = y.length - 1; x >= 0; x--) {
          var k = y[x];
          if (p !== k.context)
            if (k.context)
              this._mapCommand(k);
            else {
              var E = ["normal", "insert", "visual"];
              for (var T in E)
                if (E[T] !== p) {
                  var j = Object.assign({}, k);
                  j.context = E[T], this._mapCommand(j);
                }
            }
        }
    },
    langmap: Tn,
    vimKeyFromEvent: Bt,
    // TODO: Expose setOption and getOption as instance methods. Need to decide how to namespace
    // them, or somehow make them work with the existing CodeMirror setOption/getOption API.
    setOption: pe,
    getOption: H,
    defineOption: J,
    /**@type {(name: string, prefix: string|undefined, func: ExFn) => void} */
    defineEx: function(p, d, g) {
      if (!d)
        d = p;
      else if (p.indexOf(d) !== 0)
        throw new Error('(Vim.defineEx) "' + d + '" is not a prefix of "' + p + '", command not registered');
      Ci[p] = g, Se.commandMap_[d] = { name: p, shortName: d, type: "api" };
    },
    /**@type {(cm: CodeMirror, key: string, origin: string) => undefined | boolean} */
    handleKey: function(p, d, g) {
      var y = this.findKey(p, d, g);
      if (typeof y == "function")
        return y();
    },
    multiSelectHandleKey: vh,
    /**
     * This is the outermost function called by CodeMirror, after keys have
     * been mapped to their Vim equivalents.
     *
     * Finds a command based on the key (and cached keys if there is a
     * multi-key sequence). Returns `undefined` if no key is matched, a noop
     * function if a partial match is found (multi-key), and a function to
     * execute the bound command if a a key is matched. The function always
     * returns true.
     */
    /**@type {(cm_: CodeMirror, key: string, origin?: string| undefined) => (() => boolean) | undefined} */
    findKey: function(p, d, g) {
      var y = Pe(p), x = (
        /**@type {CodeMirrorV}*/
        p
      );
      function k() {
        var U = ie.macroModeState;
        if (U.isRecording) {
          if (d == "q")
            return U.exitMacroRecordMode(), Mt(x), !0;
          g != "mapping" && Oh(U, d);
        }
      }
      function E() {
        if (d == "<Esc>") {
          if (y.visualMode)
            ge(x);
          else if (y.insertMode)
            is(x);
          else
            return;
          return Mt(x), !0;
        }
      }
      function T() {
        if (E())
          return !0;
        y.inputState.keyBuffer.push(d);
        var U = y.inputState.keyBuffer.join(""), K = d.length == 1, ee = Pn.matchCommand(U, r, y.inputState, "insert"), z = y.inputState.changeQueue;
        if (ee.type == "none")
          return Mt(x), !1;
        if (ee.type == "partial") {
          if (ee.expectLiteralNext && (y.expectLiteralNext = !0), Le && window.clearTimeout(Le), Le = K && window.setTimeout(
            function() {
              y.insertMode && y.inputState.keyBuffer.length && Mt(x);
            },
            H("insertModeEscKeysTimeout")
          ), K) {
            var G = x.listSelections();
            (!z || z.removed.length != G.length) && (z = y.inputState.changeQueue = new Tt()), z.inserted += d;
            for (var te = 0; te < G.length; te++) {
              var he = zt(G[te].anchor, G[te].head), Re = ut(G[te].anchor, G[te].head), Fe = x.getRange(he, x.state.overwrite ? Ve(Re, 0, 1) : Re);
              z.removed[te] = (z.removed[te] || "") + Fe;
            }
          }
          return !K;
        }
        if (y.expectLiteralNext = !1, Le && window.clearTimeout(Le), ee.command && z) {
          for (var G = x.listSelections(), te = 0; te < G.length; te++) {
            var Ne = G[te].head;
            x.replaceRange(
              z.removed[te] || "",
              Ve(Ne, 0, -z.inserted.length),
              Ne,
              "+input"
            );
          }
          ie.macroModeState.lastInsertModeChanges.changes.pop();
        }
        return ee.command || Mt(x), ee.command;
      }
      function j() {
        if (k() || E())
          return !0;
        y.inputState.keyBuffer.push(d);
        var U = y.inputState.keyBuffer.join("");
        if (/^[1-9]\d*$/.test(U))
          return !0;
        var K = /^(\d*)(.*)$/.exec(U);
        if (!K)
          return Mt(x), !1;
        var ee = y.visualMode ? "visual" : "normal", z = K[2] || K[1];
        y.inputState.operatorShortcut && y.inputState.operatorShortcut.slice(-1) == z && (z = y.inputState.operatorShortcut);
        var G = Pn.matchCommand(z, r, y.inputState, ee);
        return G.type == "none" ? (Mt(x), !1) : G.type == "partial" ? (G.expectLiteralNext && (y.expectLiteralNext = !0), !0) : G.type == "clear" ? (Mt(x), !0) : (y.expectLiteralNext = !1, y.inputState.keyBuffer.length = 0, K = /^(\d*)(.*)$/.exec(U), K && K[1] && K[1] != "0" && y.inputState.pushRepeatDigit(K[1]), G.command);
      }
      var V;
      return y.insertMode ? V = T() : V = j(), V === !1 ? !y.insertMode && d.length === 1 ? function() {
        return !0;
      } : void 0 : V === !0 ? function() {
        return !0;
      } : function() {
        return x.operation(function() {
          x.curOp.isVimOp = !0;
          try {
            V.type == "keyToKey" ? dt(x, V.toKeys, V) : Pn.processCommand(x, y, V);
          } catch (U) {
            throw x.state.vim = void 0, Pe(x), Ue.suppressErrorLogging || console.log(U), U;
          }
          return !0;
        });
      };
    },
    handleEx: function(p, d) {
      Se.processCommand(p, d);
    },
    defineMotion: Lr,
    defineAction: xt,
    defineOperator: Ir,
    mapCommand: st,
    _mapCommand: Ga,
    defineRegister: An,
    exitVisualMode: ge,
    exitInsertMode: is
  }, De = [], ue = !1, _e;
  function He(p) {
    if (p[0] == "<") {
      var d = p.toLowerCase().slice(1, -1), g = d.split("-");
      if (d = g.pop() || "", d == "lt") p = "<";
      else if (d == "space") p = " ";
      else if (d == "cr") p = `
`;
      else if (tt[d]) {
        var y = _e.value, x = {
          key: tt[d],
          target: {
            value: y,
            selectionEnd: y.length,
            selectionStart: y.length
          }
        };
        _e.onKeyDown && _e.onKeyDown(x, _e.value, E), _e && _e.onKeyUp && _e.onKeyUp(x, _e.value, E);
        return;
      }
    }
    if (p == `
`) {
      var k = _e;
      _e = null, k.onClose && k.onClose(k.value);
    } else
      _e.value = (_e.value || "") + p;
    function E(T) {
      typeof T == "string" ? _e.value = T : _e = null;
    }
  }
  function dt(p, d, g) {
    var y = ue;
    if (g) {
      if (De.indexOf(g) != -1) return;
      De.push(g), ue = g.noremap != !1;
    }
    try {
      for (var x = Pe(p), k = /<(?:[CSMA]-)*\w+>|./gi, E; E = k.exec(d); ) {
        var T = E[0], j = x.insertMode;
        if (_e) {
          He(T);
          continue;
        }
        var V = Ue.handleKey(p, T, "mapping");
        if (!V && j && x.insertMode) {
          if (T[0] == "<") {
            var U = T.toLowerCase().slice(1, -1), K = U.split("-");
            if (U = K.pop() || "", U == "lt") T = "<";
            else if (U == "space") T = " ";
            else if (U == "cr") T = `
`;
            else if (tt.hasOwnProperty(U)) {
              T = tt[U], Bl(p, T);
              continue;
            } else
              T = T[0], k.lastIndex = E.index + 1;
          }
          p.replaceSelection(T);
        }
      }
    } finally {
      if (De.pop(), ue = De.length ? y : !1, !De.length && _e) {
        var ee = _e;
        _e = null, xi(p, ee);
      }
    }
  }
  var $e = {
    Return: "CR",
    Backspace: "BS",
    Delete: "Del",
    Escape: "Esc",
    Insert: "Ins",
    ArrowLeft: "Left",
    ArrowRight: "Right",
    ArrowUp: "Up",
    ArrowDown: "Down",
    Enter: "CR",
    " ": "Space"
  }, Ft = {
    Shift: 1,
    Alt: 1,
    Command: 1,
    Control: 1,
    CapsLock: 1,
    AltGraph: 1,
    Dead: 1,
    Unidentified: 1
  }, tt = {};
  "Left|Right|Up|Down|End|Home".split("|").concat(Object.keys($e)).forEach(function(p) {
    tt[($e[p] || "").toLowerCase()] = tt[p.toLowerCase()] = p;
  });
  function Bt(p, d) {
    var g = p.key;
    if (!Ft[g]) {
      g.length > 1 && g[0] == "n" && (g = g.replace("Numpad", "")), g = $e[g] || g;
      var y = "";
      if (p.ctrlKey && (y += "C-"), p.altKey && (y += "A-"), p.metaKey && (y += "M-"), t.isMac && p.altKey && !p.metaKey && !p.ctrlKey && (y = y.slice(2)), (y || g.length > 1) && p.shiftKey && (y += "S-"), d && !d.expectLiteralNext && g.length == 1) {
        if (a.keymap && g in a.keymap)
          (a.remapCtrl != !1 || !y) && (g = a.keymap[g]);
        else if (g.charCodeAt(0) > 255) {
          var x = p.code?.slice(-1) || "";
          p.shiftKey || (x = x.toLowerCase()), x && (g = x);
        }
      }
      return y += g, y.length > 1 && (y = "<" + y + ">"), y;
    }
  }
  function Tn(p, d) {
    a.string !== p && (a = Sn(p)), a.remapCtrl = d;
  }
  function Sn(p) {
    let d = {};
    if (!p) return { keymap: d, string: "" };
    function g(y) {
      return y.split(/\\?(.)/).filter(Boolean);
    }
    return p.split(/((?:[^\\,]|\\.)+),/).map((y) => {
      if (!y) return;
      const x = y.split(/((?:[^\\;]|\\.)+);/);
      if (x.length == 3) {
        const k = g(x[1]), E = g(x[2]);
        if (k.length !== E.length) return;
        for (let T = 0; T < k.length; ++T) d[k[T]] = E[T];
      } else if (x.length == 1) {
        const k = g(y);
        if (k.length % 2 !== 0) return;
        for (let E = 0; E < k.length; E += 2) d[k[E]] = k[E + 1];
      }
    }), { keymap: d, string: p };
  }
  J("langmap", void 0, "string", ["lmap"], function(p, d) {
    if (p === void 0)
      return a.string;
    Tn(p);
  });
  class vt {
    constructor() {
      this.prefixRepeat = [], this.motionRepeat = [], this.operator = null, this.operatorArgs = null, this.motion = null, this.motionArgs = null, this.keyBuffer = [], this.registerName = null, this.changeQueue = null;
    }
    pushRepeatDigit(d) {
      this.operator ? this.motionRepeat = this.motionRepeat.concat(d) : this.prefixRepeat = this.prefixRepeat.concat(d);
    }
    getRepeat() {
      var d = 0;
      return (this.prefixRepeat.length > 0 || this.motionRepeat.length > 0) && (d = 1, this.prefixRepeat.length > 0 && (d *= parseInt(this.prefixRepeat.join(""), 10)), this.motionRepeat.length > 0 && (d *= parseInt(this.motionRepeat.join(""), 10))), d;
    }
  }
  function Mt(p, d) {
    p.state.vim.inputState = new vt(), p.state.vim.expectLiteralNext = !1, t.signal(p, "vim-command-done", d);
  }
  function Tt() {
    this.removed = [], this.inserted = "";
  }
  class Gt {
    constructor(d, g, y) {
      this.clear(), this.keyBuffer = [d || ""], this.insertModeChanges = [], this.searchQueries = [], this.linewise = !!g, this.blockwise = !!y;
    }
    setText(d, g, y) {
      this.keyBuffer = [d || ""], this.linewise = !!g, this.blockwise = !!y;
    }
    pushText(d, g) {
      g && (this.linewise || this.keyBuffer.push(`
`), this.linewise = !0), this.keyBuffer.push(d);
    }
    pushInsertModeChanges(d) {
      this.insertModeChanges.push(fe(d));
    }
    pushSearchQuery(d) {
      this.searchQueries.push(d);
    }
    clear() {
      this.keyBuffer = [], this.insertModeChanges = [], this.searchQueries = [], this.linewise = !1;
    }
    toString() {
      return this.keyBuffer.join("");
    }
  }
  function An(p, d) {
    var g = ie.registerController.registers;
    if (!p || p.length != 1)
      throw Error("Register name must be 1 character");
    if (g[p])
      throw Error("Register already defined " + p);
    g[p] = d, v.push(p);
  }
  class Wn {
    /** @arg {Object<string, Register>} registers */
    constructor(d) {
      this.registers = d, this.unnamedRegister = d['"'] = new Gt(), d["."] = new Gt(), d[":"] = new Gt(), d["/"] = new Gt(), d["+"] = new Gt();
    }
    pushText(d, g, y, x, k) {
      if (d !== "_") {
        x && y.charAt(y.length - 1) !== `
` && (y += `
`);
        var E = this.isValidRegister(d) ? this.getRegister(d) : null;
        if (!E) {
          switch (g) {
            case "yank":
              this.registers[0] = new Gt(y, x, k);
              break;
            case "delete":
            case "change":
              y.indexOf(`
`) == -1 ? this.registers["-"] = new Gt(y, x) : (this.shiftNumericRegisters_(), this.registers[1] = new Gt(y, x));
              break;
          }
          this.unnamedRegister.setText(y, x, k);
          return;
        }
        var T = M(d);
        T ? E.pushText(y, x) : E.setText(y, x, k), d === "+" && navigator.clipboard.writeText(y), this.unnamedRegister.setText(E.toString(), x);
      }
    }
    /**
     * Gets the register named @name.  If one of @name doesn't already exist,
     * create it.  If @name is invalid, return the unnamedRegister.
     * @arg {string} [name]
     */
    getRegister(d) {
      return this.isValidRegister(d) ? (d = d.toLowerCase(), this.registers[d] || (this.registers[d] = new Gt()), this.registers[d]) : this.unnamedRegister;
    }
    /**@type {{(name: any): name is string}} */
    isValidRegister(d) {
      return d && (q(d, v) || C.test(d));
    }
    shiftNumericRegisters_() {
      for (var d = 9; d >= 2; d--)
        this.registers[d] = this.getRegister("" + (d - 1));
    }
  }
  class Un {
    constructor() {
      this.historyBuffer = [], this.iterator = 0, this.initialPrefix = null;
    }
    // the input argument here acts a user entered prefix for a small time
    // until we start autocompletion in which case it is the autocompleted.
    nextMatch(d, g) {
      var y = this.historyBuffer, x = g ? -1 : 1;
      this.initialPrefix === null && (this.initialPrefix = d);
      for (var k = this.iterator + x; g ? k >= 0 : k < y.length; k += x)
        for (var E = y[k], T = 0; T <= E.length; T++)
          if (this.initialPrefix == E.substring(0, T))
            return this.iterator = k, E;
      if (k >= y.length)
        return this.iterator = y.length, this.initialPrefix;
      if (k < 0) return d;
    }
    pushInput(d) {
      var g = this.historyBuffer.indexOf(d);
      g > -1 && this.historyBuffer.splice(g, 1), d.length && this.historyBuffer.push(d);
    }
    reset() {
      this.initialPrefix = null, this.iterator = this.historyBuffer.length;
    }
  }
  var Pn = {
    matchCommand: function(p, d, g, y) {
      var x = Us(p, d, y, g);
      if (!x.full && !x.partial)
        return { type: "none" };
      if (!x.full && x.partial)
        return {
          type: "partial",
          expectLiteralNext: x.partial.length == 1 && x.partial[0].keys.slice(-11) == "<character>"
          // langmap literal logic
        };
      for (var k, E = 0; E < x.full.length; E++) {
        var T = x.full[E];
        k || (k = T);
      }
      if (k.keys.slice(-11) == "<character>" || k.keys.slice(-10) == "<register>") {
        var j = Qn(p);
        if (!j || j.length > 1) return { type: "clear" };
        g.selectedCharacter = j;
      }
      return { type: "full", command: k };
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {vimKey} command
     */
    processCommand: function(p, d, g) {
      switch (d.inputState.repeatOverride = g.repeatOverride, g.type) {
        case "motion":
          this.processMotion(p, d, g);
          break;
        case "operator":
          this.processOperator(p, d, g);
          break;
        case "operatorMotion":
          this.processOperatorMotion(p, d, g);
          break;
        case "action":
          this.processAction(p, d, g);
          break;
        case "search":
          this.processSearch(p, d, g);
          break;
        case "ex":
        case "keyToEx":
          this.processEx(p, d, g);
          break;
      }
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").motionCommand|import("./types").operatorMotionCommand} command
     */
    processMotion: function(p, d, g) {
      d.inputState.motion = g.motion, d.inputState.motionArgs = /**@type {MotionArgs}*/
      wt(g.motionArgs), this.evalInput(p, d);
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").operatorCommand|import("./types").operatorMotionCommand} command
     */
    processOperator: function(p, d, g) {
      var y = d.inputState;
      if (y.operator)
        if (y.operator == g.operator) {
          y.motion = "expandToLine", y.motionArgs = { linewise: !0, repeat: 1 }, this.evalInput(p, d);
          return;
        } else
          Mt(p);
      y.operator = g.operator, y.operatorArgs = wt(g.operatorArgs), g.keys.length > 1 && (y.operatorShortcut = g.keys), g.exitVisualBlock && (d.visualBlock = !1, Y(p)), d.visualMode && this.evalInput(p, d);
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").operatorMotionCommand} command
     */
    processOperatorMotion: function(p, d, g) {
      var y = d.visualMode, x = wt(g.operatorMotionArgs);
      x && y && x.visualLine && (d.visualLine = !0), this.processOperator(p, d, g), y || this.processMotion(p, d, g);
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").actionCommand} command
     */
    processAction: function(p, d, g) {
      var y = d.inputState, x = y.getRepeat(), k = !!x, E = (
        /**@type {ActionArgs}*/
        wt(g.actionArgs) || { repeat: 1 }
      );
      y.selectedCharacter && (E.selectedCharacter = y.selectedCharacter), g.operator && this.processOperator(p, d, g), g.motion && this.processMotion(p, d, g), (g.motion || g.operator) && this.evalInput(p, d), E.repeat = x || 1, E.repeatIsExplicit = k, E.registerName = y.registerName, Mt(p), d.lastMotion = null, g.isEdit && this.recordLastEdit(d, y, g), qe[g.action](p, E, d);
    },
    /** @arg {CodeMirrorV} cm @arg {vimState} vim @arg {import("./types").searchCommand} command*/
    processSearch: function(p, d, g) {
      if (!p.getSearchCursor)
        return;
      var y = g.searchArgs.forward, x = g.searchArgs.wholeWordOnly;
      cr(p).setReversed(!y);
      var k = y ? "/" : "?", E = cr(p).getQuery(), T = p.getScrollInfo();
      function j(te, he, Re) {
        ie.searchHistoryController.pushInput(te), ie.searchHistoryController.reset();
        try {
          wi(p, te, he, Re);
        } catch {
          bt(p, "Invalid regex: " + te), Mt(p);
          return;
        }
        Pn.processMotion(p, d, {
          keys: "",
          type: "motion",
          motion: "findNext",
          motionArgs: { forward: !0, toJumplist: g.searchArgs.toJumplist }
        });
      }
      function V(te) {
        p.scrollTo(T.left, T.top), j(
          te,
          !0,
          !0
          /** smartCase */
        );
        var he = ie.macroModeState;
        he.isRecording && Dl(he, te);
      }
      function U(te, he, Re) {
        var Fe = Bt(te), Ne, yt;
        Fe == "<Up>" || Fe == "<Down>" ? (Ne = Fe == "<Up>", yt = te.target ? te.target.selectionEnd : 0, he = ie.searchHistoryController.nextMatch(he, Ne) || "", Re(he), yt && te.target && (te.target.selectionEnd = te.target.selectionStart = Math.min(yt, te.target.value.length))) : Fe && Fe != "<Left>" && Fe != "<Right>" && ie.searchHistoryController.reset();
        var bn;
        try {
          bn = wi(
            p,
            he,
            !0,
            !0
            /** smartCase */
          );
        } catch {
        }
        bn ? p.scrollIntoView(Pl(p, !y, bn), 30) : (qa(p), p.scrollTo(T.left, T.top));
      }
      function K(te, he, Re) {
        var Fe = Bt(te);
        Fe == "<Esc>" || Fe == "<C-c>" || Fe == "<C-[>" || Fe == "<BS>" && he == "" ? (ie.searchHistoryController.pushInput(he), ie.searchHistoryController.reset(), wi(p, E), qa(p), p.scrollTo(T.left, T.top), t.e_stop(te), Mt(p), Re(), p.focus()) : Fe == "<Up>" || Fe == "<Down>" ? t.e_stop(te) : Fe == "<C-u>" && (t.e_stop(te), Re(""));
      }
      switch (g.searchArgs.querySrc) {
        case "prompt":
          var ee = ie.macroModeState;
          if (ee.isPlaying) {
            let he = ee.replaySearchQueries.shift();
            j(
              he,
              !0,
              !1
              /** smartCase */
            );
          } else
            xi(p, {
              onClose: V,
              prefix: k,
              desc: "(JavaScript regexp)",
              onKeyUp: U,
              onKeyDown: K
            });
          break;
        case "wordUnderCursor":
          var z = jn(p, { noSymbol: !0 }), G = !0;
          if (z || (z = jn(p, { noSymbol: !1 }), G = !1), !z) {
            bt(p, "No word under cursor"), Mt(p);
            return;
          }
          let te = p.getLine(z.start.line).substring(
            z.start.ch,
            z.end.ch
          );
          G && x ? te = "\\b" + te + "\\b" : te = qs(te), ie.jumpList.cachedCursor = p.getCursor(), p.setCursor(z.start), j(
            te,
            !0,
            !1
            /** smartCase */
          );
          break;
      }
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").exCommand | import("./types").keyToExCommand} command
     */
    processEx: function(p, d, g) {
      function y(k) {
        ie.exCommandHistoryController.pushInput(k), ie.exCommandHistoryController.reset(), Se.processCommand(p, k), p.state.vim && Mt(p);
      }
      function x(k, E, T) {
        var j = Bt(k), V, U;
        (j == "<Esc>" || j == "<C-c>" || j == "<C-[>" || j == "<BS>" && E == "") && (ie.exCommandHistoryController.pushInput(E), ie.exCommandHistoryController.reset(), t.e_stop(k), Mt(p), T(), p.focus()), j == "<Up>" || j == "<Down>" ? (t.e_stop(k), V = j == "<Up>", U = k.target ? k.target.selectionEnd : 0, E = ie.exCommandHistoryController.nextMatch(E, V) || "", T(E), U && k.target && (k.target.selectionEnd = k.target.selectionStart = Math.min(U, k.target.value.length))) : j == "<C-u>" ? (t.e_stop(k), T("")) : j && j != "<Left>" && j != "<Right>" && ie.exCommandHistoryController.reset();
      }
      g.type == "keyToEx" ? Se.processCommand(p, g.exArgs.input) : d.visualMode ? xi(p, {
        onClose: y,
        prefix: ":",
        value: "'<,'>",
        onKeyDown: x,
        selectValueOnOpen: !1
      }) : xi(p, {
        onClose: y,
        prefix: ":",
        onKeyDown: x
      });
    },
    /**@arg {CodeMirrorV} cm   @arg {vimState} vim */
    evalInput: function(p, d) {
      var g = d.inputState, y = g.motion, x = g.motionArgs || { repeat: 1 }, k = g.operator, E = g.operatorArgs || {}, T = g.registerName, j = d.sel, V = rt(d.visualMode ? xe(p, j.head) : p.getCursor("head")), U = rt(d.visualMode ? xe(p, j.anchor) : p.getCursor("anchor")), K = rt(V), ee = rt(U), z, G, te;
      if (k && this.recordLastEdit(d, g), g.repeatOverride !== void 0 ? te = g.repeatOverride : te = g.getRepeat(), te > 0 && x.explicitRepeat ? x.repeatIsExplicit = !0 : (x.noRepeat || !x.explicitRepeat && te === 0) && (te = 1, x.repeatIsExplicit = !1), g.selectedCharacter && (x.selectedCharacter = E.selectedCharacter = g.selectedCharacter), x.repeat = te, Mt(p), y) {
        var he = Jt[y](p, V, x, d, g);
        if (d.lastMotion = Jt[y], !he)
          return;
        if (x.toJumplist) {
          var Re = ie.jumpList, Fe = Re.cachedCursor;
          Fe ? (gn(p, Fe, he), delete Re.cachedCursor) : gn(p, V, he);
        }
        he instanceof Array ? (G = he[0], z = he[1]) : z = he, z || (z = rt(V)), d.visualMode ? (d.visualBlock && z.ch === 1 / 0 || (z = xe(p, z, K)), G && (G = xe(p, G)), G = G || ee, j.anchor = G, j.head = z, Y(p), Vr(
          p,
          d,
          "<",
          gt(G, z) ? G : z
        ), Vr(
          p,
          d,
          ">",
          gt(G, z) ? z : G
        )) : k || (z = xe(p, z, K), p.setCursor(z.line, z.ch));
      }
      if (k) {
        if (E.lastSel) {
          G = ee;
          var Ne = E.lastSel, yt = Math.abs(Ne.head.line - Ne.anchor.line), bn = Math.abs(Ne.head.ch - Ne.anchor.ch);
          Ne.visualLine ? z = new e(ee.line + yt, ee.ch) : Ne.visualBlock ? z = new e(ee.line + yt, ee.ch + bn) : Ne.head.line == Ne.anchor.line ? z = new e(ee.line, ee.ch + bn) : z = new e(ee.line + yt, ee.ch), d.visualMode = !0, d.visualLine = Ne.visualLine, d.visualBlock = Ne.visualBlock, j = d.sel = {
            anchor: G,
            head: z
          }, Y(p);
        } else d.visualMode && (E.lastSel = {
          anchor: rt(j.anchor),
          head: rt(j.head),
          visualBlock: d.visualBlock,
          visualLine: d.visualLine
        });
        var Yt, hn, at, Ke, $t;
        if (d.visualMode) {
          Yt = zt(j.head, j.anchor), hn = ut(j.head, j.anchor), at = d.visualLine || E.linewise, Ke = d.visualBlock ? "block" : at ? "line" : "char";
          var tn = n(p, Yt, hn);
          if ($t = se(p, {
            anchor: tn.start,
            head: tn.end
          }, Ke), at) {
            var nn = $t.ranges;
            if (Ke == "block")
              for (var kr = 0; kr < nn.length; kr++)
                nn[kr].head.ch = kt(p, nn[kr].head.line);
            else Ke == "line" && (nn[0].head = new e(nn[0].head.line + 1, 0));
          }
        } else {
          if (Yt = rt(G || ee), hn = rt(z || K), gt(hn, Yt)) {
            var Gi = Yt;
            Yt = hn, hn = Gi;
          }
          at = x.linewise || E.linewise, at ? St(p, Yt, hn) : x.forward && We(p, Yt, hn), Ke = "char";
          var Tl = !x.inclusive || at, tn = n(p, Yt, hn);
          $t = se(p, {
            anchor: tn.start,
            head: tn.end
          }, Ke, Tl);
        }
        p.setSelections($t.ranges, $t.primary), d.lastMotion = null, E.repeat = te, E.registerName = T, E.linewise = at;
        var Ha = un[k](
          p,
          E,
          $t.ranges,
          ee,
          z
        );
        d.visualMode && ge(p, Ha != null), Ha && p.setCursor(Ha);
      }
    },
    /**@arg {vimState} vim  @arg {InputStateInterface} inputState, @arg {import("./types").actionCommand} [actionCommand] */
    recordLastEdit: function(p, d, g) {
      var y = ie.macroModeState;
      y.isPlaying || (p.lastEditInputState = d, p.lastEditActionCommand = g, y.lastInsertModeChanges.changes = [], y.lastInsertModeChanges.expectCursorActivityForChange = !1, y.lastInsertModeChanges.visualBlock = p.visualBlock ? p.sel.head.line - p.sel.anchor.line : 0);
    }
  }, Jt = {
    moveToTopLine: function(p, d, g) {
      var y = L(p).top + g.repeat - 1;
      return new e(y, Xt(p.getLine(y)));
    },
    moveToMiddleLine: function(p) {
      var d = L(p), g = Math.floor((d.top + d.bottom) * 0.5);
      return new e(g, Xt(p.getLine(g)));
    },
    moveToBottomLine: function(p, d, g) {
      var y = L(p).bottom - g.repeat + 1;
      return new e(y, Xt(p.getLine(y)));
    },
    expandToLine: function(p, d, g) {
      var y = d;
      return new e(y.line + g.repeat - 1, 1 / 0);
    },
    findNext: function(p, d, g) {
      var y = cr(p), x = y.getQuery();
      if (x) {
        var k = !g.forward;
        return k = y.isReversed() ? !k : k, Al(p, x), Pl(p, k, x, g.repeat);
      }
    },
    /**
     * Find and select the next occurrence of the search query. If the cursor is currently
     * within a match, then find and select the current match. Otherwise, find the next occurrence in the
     * appropriate direction.
     *
     * This differs from `findNext` in the following ways:
     *
     * 1. Instead of only returning the "from", this returns a "from", "to" range.
     * 2. If the cursor is currently inside a search match, this selects the current match
     *    instead of the next match.
     * 3. If there is no associated operator, this will turn on visual mode.
     */
    findAndSelectNextInclusive: function(p, d, g, y, x) {
      var k = cr(p), E = k.getQuery();
      if (E) {
        var T = !g.forward;
        T = k.isReversed() ? !T : T;
        var j = bh(p, T, E, g.repeat, y);
        if (j) {
          if (x.operator)
            return j;
          var V = j[0], U = new e(j[1].line, j[1].ch - 1);
          if (y.visualMode) {
            (y.visualLine || y.visualBlock) && (y.visualLine = !1, y.visualBlock = !1, t.signal(p, "vim-mode-change", { mode: "visual", subMode: "" }));
            var K = y.sel.anchor;
            if (K)
              return k.isReversed() ? g.forward ? [K, V] : [K, U] : g.forward ? [K, U] : [K, V];
          } else
            y.visualMode = !0, y.visualLine = !1, y.visualBlock = !1, t.signal(p, "vim-mode-change", { mode: "visual", subMode: "" });
          return T ? [U, V] : [V, U];
        }
      }
    },
    goToMark: function(p, d, g, y) {
      var x = Ie(p, y, g.selectedCharacter || "");
      return x ? g.linewise ? { line: x.line, ch: Xt(p.getLine(x.line)) } : x : null;
    },
    moveToOtherHighlightedEnd: function(p, d, g, y) {
      if (y.visualBlock && g.sameLine) {
        var x = y.sel;
        return [
          xe(p, new e(x.anchor.line, x.head.ch)),
          xe(p, new e(x.head.line, x.anchor.ch))
        ];
      } else
        return [y.sel.head, y.sel.anchor];
    },
    jumpToMark: function(p, d, g, y) {
      for (var x = d, k = 0; k < g.repeat; k++) {
        var E = x;
        for (var T in y.marks)
          if ($(T)) {
            var j = y.marks[T].find(), V = g.forward ? (
              // @ts-ignore
              gt(j, E)
            ) : gt(E, j);
            if (!V && !(g.linewise && j.line == E.line)) {
              var U = it(E, x), K = g.forward ? (
                // @ts-ignore
                en(E, j, x)
              ) : (
                // @ts-ignore
                en(x, j, E)
              );
              (U || K) && (x = j);
            }
          }
      }
      return g.linewise && (x = new e(x.line, Xt(p.getLine(x.line)))), x;
    },
    moveByCharacters: function(p, d, g) {
      var y = d, x = g.repeat, k = g.forward ? y.ch + x : y.ch - x;
      return new e(y.line, k);
    },
    moveByLines: function(p, d, g, y) {
      var x = d, k = x.ch;
      switch (y.lastMotion) {
        case this.moveByLines:
        case this.moveByDisplayLines:
        case this.moveByScroll:
        case this.moveToColumn:
        case this.moveToEol:
          k = y.lastHPos;
          break;
        default:
          y.lastHPos = k;
      }
      var E = g.repeat + (g.repeatOffset || 0), T = g.forward ? x.line + E : x.line - E, j = p.firstLine(), V = p.lastLine(), U = p.findPosV(x, g.forward ? E : -E, "line", y.lastHSPos), K = g.forward ? U.line > T : U.line < T;
      return K && (T = U.line, k = U.ch), T < j && x.line == j ? this.moveToStartOfLine(p, d, g, y) : T > V && x.line == V ? bl(p, d, g, y, !0) : (g.toFirstChar && (k = Xt(p.getLine(T)), y.lastHPos = k), y.lastHSPos = p.charCoords(new e(T, k), "div").left, new e(T, k));
    },
    moveByDisplayLines: function(p, d, g, y) {
      var x = d;
      switch (y.lastMotion) {
        case this.moveByDisplayLines:
        case this.moveByScroll:
        case this.moveByLines:
        case this.moveToColumn:
        case this.moveToEol:
          break;
        default:
          y.lastHSPos = p.charCoords(x, "div").left;
      }
      var k = g.repeat, E = p.findPosV(x, g.forward ? k : -k, "line", y.lastHSPos);
      if (E.hitSide)
        if (g.forward) {
          var T = p.charCoords(E, "div"), j = { top: T.top + 8, left: y.lastHSPos };
          E = p.coordsChar(j, "div");
        } else {
          var V = p.charCoords(new e(p.firstLine(), 0), "div");
          V.left = y.lastHSPos, E = p.coordsChar(V, "div");
        }
      return y.lastHPos = E.ch, E;
    },
    moveByPage: function(p, d, g) {
      var y = d, x = g.repeat;
      return p.findPosV(y, g.forward ? x : -x, "page");
    },
    moveByParagraph: function(p, d, g) {
      var y = g.forward ? 1 : -1;
      return yl(p, d, g.repeat, y).start;
    },
    moveBySentence: function(p, d, g) {
      var y = g.forward ? 1 : -1;
      return ah(p, d, g.repeat, y);
    },
    moveByScroll: function(p, d, g, y) {
      var x = p.getScrollInfo(), k = null, E = g.repeat;
      E || (E = x.clientHeight / (2 * p.defaultTextHeight()));
      var T = p.charCoords(d, "local");
      if (g.repeat = E, k = Jt.moveByDisplayLines(p, d, g, y), !k)
        return null;
      var j = p.charCoords(k, "local");
      return p.scrollTo(null, x.top + j.top - T.top), k;
    },
    moveByWords: function(p, d, g) {
      return rh(
        p,
        d,
        g.repeat,
        !!g.forward,
        !!g.wordEnd,
        !!g.bigWord
      );
    },
    moveTillCharacter: function(p, d, g) {
      var y = g.repeat, x = Ua(
        p,
        y,
        g.forward,
        g.selectedCharacter,
        d
      ), k = g.forward ? -1 : 1;
      return Ct(k, g), x ? (x.ch += k, x) : null;
    },
    moveToCharacter: function(p, d, g) {
      var y = g.repeat;
      return Ct(0, g), Ua(
        p,
        y,
        g.forward,
        g.selectedCharacter,
        d
      ) || d;
    },
    moveToSymbol: function(p, d, g) {
      var y = g.repeat;
      return g.selectedCharacter && nh(
        p,
        y,
        g.forward,
        g.selectedCharacter
      ) || d;
    },
    moveToColumn: function(p, d, g, y) {
      var x = g.repeat;
      return y.lastHPos = x - 1, y.lastHSPos = p.charCoords(d, "div").left, sh(p, x);
    },
    moveToEol: function(p, d, g, y) {
      return bl(p, d, g, y, !1);
    },
    moveToFirstNonWhiteSpaceCharacter: function(p, d) {
      var g = d;
      return new e(
        g.line,
        Xt(p.getLine(g.line))
      );
    },
    moveToMatchedSymbol: function(p, d) {
      for (var g = d, y = g.line, x = g.ch, k = p.getLine(y), E; x < k.length; x++)
        if (E = k.charAt(x), E && W(E)) {
          var T = p.getTokenTypeAt(new e(y, x + 1));
          if (T !== "string" && T !== "comment")
            break;
        }
      if (x < k.length) {
        var j = E === "<" || E === ">" ? /[(){}[\]<>]/ : /[(){}[\]]/, V = p.findMatchingBracket(new e(y, x), { bracketRegex: j });
        return V.to;
      } else
        return g;
    },
    moveToStartOfLine: function(p, d) {
      return new e(d.line, 0);
    },
    moveToLineOrEdgeOfDocument: function(p, d, g) {
      var y = g.forward ? p.lastLine() : p.firstLine();
      return g.repeatIsExplicit && (y = g.repeat - p.getOption("firstLineNumber")), new e(
        y,
        Xt(p.getLine(y))
      );
    },
    moveToStartOfDisplayLine: function(p) {
      return p.execCommand("goLineLeft"), p.getCursor();
    },
    moveToEndOfDisplayLine: function(p) {
      p.execCommand("goLineRight");
      var d = p.getCursor();
      return d.sticky == "before" && d.ch--, d;
    },
    textObjectManipulation: function(p, d, g, y) {
      var x = {
        "(": ")",
        ")": "(",
        "{": "}",
        "}": "{",
        "[": "]",
        "]": "[",
        "<": ">",
        ">": "<"
      }, k = { "'": !0, '"': !0, "`": !0 }, E = g.selectedCharacter || "";
      E == "b" ? E = "(" : E == "B" && (E = "{");
      var T = !g.textObjectInner, j, V;
      if (x[E]) {
        if (V = !0, j = vl(p, d, E, T), !j) {
          var U = p.getSearchCursor(new RegExp("\\" + E, "g"), d);
          U.find() && (j = vl(p, U.from(), E, T));
        }
      } else if (k[E])
        V = !0, j = oh(p, d, E, T);
      else if (E === "W" || E === "w")
        for (var K = g.repeat || 1; K-- > 0; ) {
          var ee = jn(p, {
            inclusive: T,
            innerWord: !T,
            bigWord: E === "W",
            noSymbol: E === "W",
            multiline: !0
          }, j && j.end);
          ee && (j || (j = ee), j.end = ee.end);
        }
      else if (E === "p")
        if (j = yl(p, d, g.repeat, 0, T), g.linewise = !0, y.visualMode)
          y.visualLine || (y.visualLine = !0);
        else {
          var z = y.inputState.operatorArgs;
          z && (z.linewise = !0), j.end.line--;
        }
      else if (E === "t")
        j = Ge(p, d, T);
      else if (E === "s") {
        var G = p.getLine(d.line);
        d.ch > 0 && N(G[d.ch]) && (d.ch -= 1);
        var te = Ol(p, d, g.repeat, 1, T), he = Ol(p, d, g.repeat, -1, T);
        Z(p.getLine(he.line)[he.ch]) && Z(p.getLine(te.line)[te.ch - 1]) && (he = { line: he.line, ch: he.ch + 1 }), j = { start: he, end: te };
      }
      return j ? p.state.vim.visualMode ? R(p, j.start, j.end, V) : [j.start, j.end] : null;
    },
    repeatLastCharacterSearch: function(p, d, g) {
      var y = ie.lastCharacterSearch, x = g.repeat, k = g.forward === y.forward, E = (y.increment ? 1 : 0) * (k ? -1 : 1);
      p.moveH(-E, "char"), g.inclusive = !!k;
      var T = Ua(p, x, k, y.selectedCharacter);
      return T ? (T.ch += E, T) : (p.moveH(E, "char"), d);
    }
  };
  function Lr(p, d) {
    Jt[p] = d;
  }
  function vr(p, d) {
    for (var g = [], y = 0; y < d; y++)
      g.push(p);
    return g;
  }
  var un = {
    change: function(p, d, g) {
      var y, x, k = p.state.vim, E = g[0].anchor, T = g[0].head;
      if (k.visualMode)
        if (d.fullLine)
          T.ch = Number.MAX_VALUE, T.line--, p.setSelection(E, T), x = p.getSelection(), p.replaceSelection(""), y = E;
        else {
          x = p.getSelection();
          var U = vr("", g.length);
          p.replaceSelections(U), y = zt(g[0].head, g[0].anchor);
        }
      else {
        x = p.getRange(E, T);
        var j = k.lastEditInputState;
        if (j?.motion == "moveByWords" && !Z(x)) {
          var V = /\s+$/.exec(x);
          V && j.motionArgs && j.motionArgs.forward && (T = Ve(T, 0, -V[0].length), x = x.slice(0, -V[0].length));
        }
        d.linewise && (E = new e(E.line, Xt(p.getLine(E.line))), T.line > E.line && (T = new e(T.line - 1, Number.MAX_VALUE))), p.replaceRange("", E, T), y = E;
      }
      ie.registerController.pushText(
        d.registerName,
        "change",
        x,
        d.linewise,
        g.length > 1
      ), qe.enterInsertMode(p, { head: y }, p.state.vim);
    },
    delete: function(p, d, g) {
      var y, x, k = p.state.vim;
      if (k.visualBlock) {
        x = p.getSelection();
        var j = vr("", g.length);
        p.replaceSelections(j), y = zt(g[0].head, g[0].anchor);
      } else {
        var E = g[0].anchor, T = g[0].head;
        d.linewise && T.line != p.firstLine() && E.line == p.lastLine() && E.line == T.line - 1 && (E.line == p.firstLine() ? E.ch = 0 : E = new e(E.line - 1, kt(p, E.line - 1))), x = p.getRange(E, T), p.replaceRange("", E, T), y = E, d.linewise && (y = Jt.moveToFirstNonWhiteSpaceCharacter(p, E));
      }
      return ie.registerController.pushText(
        d.registerName,
        "delete",
        x,
        d.linewise,
        k.visualBlock
      ), xe(p, y);
    },
    indent: function(p, d, g) {
      var y = p.state.vim, x = y.visualMode ? d.repeat || 0 : 1;
      if (p.indentMore)
        for (var k = 0; k < x; k++)
          d.indentRight ? p.indentMore() : p.indentLess();
      else {
        var E = g[0].anchor.line, T = y.visualBlock ? g[g.length - 1].anchor.line : g[0].head.line;
        d.linewise && T--;
        for (var j = E; j <= T; j++)
          for (var k = 0; k < x; k++)
            p.indentLine(j, d.indentRight);
      }
      return Jt.moveToFirstNonWhiteSpaceCharacter(p, g[0].anchor);
    },
    indentAuto: function(p, d, g) {
      return p.execCommand("indentAuto"), Jt.moveToFirstNonWhiteSpaceCharacter(p, g[0].anchor);
    },
    hardWrap: function(p, d, g, y) {
      if (p.hardWrap) {
        var x = g[0].anchor.line, k = g[0].head.line;
        d.linewise && k--;
        var E = p.hardWrap({ from: x, to: k });
        return E > x && d.linewise && E--, d.keepCursor ? y : new e(E, 0);
      }
    },
    changeCase: function(p, d, g, y, x) {
      for (var k = p.getSelections(), E = [], T = d.toLower, j = 0; j < k.length; j++) {
        var V = k[j], U = "";
        if (T === !0)
          U = V.toLowerCase();
        else if (T === !1)
          U = V.toUpperCase();
        else
          for (var K = 0; K < V.length; K++) {
            var ee = V.charAt(K);
            U += M(ee) ? ee.toLowerCase() : ee.toUpperCase();
          }
        E.push(U);
      }
      return p.replaceSelections(E), d.shouldMoveCursor ? x : !p.state.vim.visualMode && d.linewise && g[0].anchor.line + 1 == g[0].head.line ? Jt.moveToFirstNonWhiteSpaceCharacter(p, y) : d.linewise ? y : zt(g[0].anchor, g[0].head);
    },
    yank: function(p, d, g, y) {
      var x = p.state.vim, k = p.getSelection(), E = x.visualMode ? zt(x.sel.anchor, x.sel.head, g[0].head, g[0].anchor) : y;
      return ie.registerController.pushText(
        d.registerName,
        "yank",
        k,
        d.linewise,
        x.visualBlock
      ), E;
    }
  };
  function Ir(p, d) {
    un[p] = d;
  }
  var qe = {
    jumpListWalk: function(p, d, g) {
      if (!g.visualMode) {
        var y = d.repeat || 1, x = d.forward, k = ie.jumpList, E = k.move(p, x ? y : -y), T = E ? E.find() : void 0;
        T = T || p.getCursor(), p.setCursor(T);
      }
    },
    scroll: function(p, d, g) {
      if (!g.visualMode) {
        var y = d.repeat || 1, x = p.defaultTextHeight(), k = p.getScrollInfo().top, E = x * y, T = d.forward ? k + E : k - E, j = rt(p.getCursor()), V = p.charCoords(j, "local");
        if (d.forward)
          T > V.top ? (j.line += (T - V.top) / x, j.line = Math.ceil(j.line), p.setCursor(j), V = p.charCoords(j, "local"), p.scrollTo(null, V.top)) : p.scrollTo(null, T);
        else {
          var U = T + p.getScrollInfo().clientHeight;
          U < V.bottom ? (j.line -= (V.bottom - U) / x, j.line = Math.floor(j.line), p.setCursor(j), V = p.charCoords(j, "local"), p.scrollTo(
            null,
            V.bottom - p.getScrollInfo().clientHeight
          )) : p.scrollTo(null, T);
        }
      }
    },
    scrollToCursor: function(p, d) {
      var g = p.getCursor().line, y = p.charCoords(new e(g, 0), "local"), x = p.getScrollInfo().clientHeight, k = y.top;
      switch (d.position) {
        case "center":
          k = y.bottom - x / 2;
          break;
        case "bottom":
          var E = new e(g, p.getLine(g).length - 1), T = p.charCoords(E, "local"), j = T.bottom - k;
          k = k - x + j;
          break;
      }
      p.scrollTo(null, k);
    },
    replayMacro: function(p, d, g) {
      var y = d.selectedCharacter || "", x = d.repeat || 1, k = ie.macroModeState;
      for (y == "@" ? y = k.latestRegister : k.latestRegister = y; x--; )
        Xr(p, g, k, y);
    },
    enterMacroRecordMode: function(p, d) {
      var g = ie.macroModeState, y = d.selectedCharacter;
      ie.registerController.isValidRegister(y) && g.enterMacroRecordMode(p, y);
    },
    toggleOverwrite: function(p) {
      p.state.overwrite ? (p.toggleOverwrite(!1), p.setOption("keyMap", "vim-insert"), t.signal(p, "vim-mode-change", { mode: "insert" })) : (p.toggleOverwrite(!0), p.setOption("keyMap", "vim-replace"), t.signal(p, "vim-mode-change", { mode: "replace" }));
    },
    enterInsertMode: function(p, d, g) {
      if (!p.getOption("readOnly")) {
        g.insertMode = !0, g.insertModeRepeat = d && d.repeat || 1;
        var y = d ? d.insertAt : null, x = g.sel, k = d.head || p.getCursor("head"), E = p.listSelections().length;
        if (y == "eol")
          k = new e(k.line, kt(p, k.line));
        else if (y == "bol")
          k = new e(k.line, 0);
        else if (y == "charAfter") {
          var T = n(p, k, Ve(k, 0, 1));
          k = T.end;
        } else if (y == "firstNonBlank") {
          var T = n(p, k, Jt.moveToFirstNonWhiteSpaceCharacter(p, k));
          k = T.end;
        } else if (y == "startOfSelectedArea") {
          if (!g.visualMode)
            return;
          g.visualBlock ? (k = new e(
            Math.min(x.head.line, x.anchor.line),
            Math.min(x.head.ch, x.anchor.ch)
          ), E = Math.abs(x.head.line - x.anchor.line) + 1) : x.head.line < x.anchor.line ? k = x.head : k = new e(x.anchor.line, 0);
        } else if (y == "endOfSelectedArea") {
          if (!g.visualMode)
            return;
          g.visualBlock ? (k = new e(
            Math.min(x.head.line, x.anchor.line),
            Math.max(x.head.ch, x.anchor.ch) + 1
          ), E = Math.abs(x.head.line - x.anchor.line) + 1) : x.head.line >= x.anchor.line ? k = Ve(x.head, 0, 1) : k = new e(x.anchor.line, 0);
        } else if (y == "inplace") {
          if (g.visualMode)
            return;
        } else y == "lastEdit" && (k = As(p) || k);
        p.setOption("disableInput", !1), d && d.replace ? (p.toggleOverwrite(!0), p.setOption("keyMap", "vim-replace"), t.signal(p, "vim-mode-change", { mode: "replace" })) : (p.toggleOverwrite(!1), p.setOption("keyMap", "vim-insert"), t.signal(p, "vim-mode-change", { mode: "insert" })), ie.macroModeState.isPlaying || (p.on("change", Ui), g.insertEnd && g.insertEnd.clear(), g.insertEnd = p.setBookmark(k, { insertLeft: !0 }), t.on(p.getInputField(), "keydown", wr)), g.visualMode && ge(p), O(p, k, E);
      }
    },
    toggleVisualMode: function(p, d, g) {
      var y = d.repeat, x = p.getCursor(), k;
      if (g.visualMode)
        g.visualLine != !!d.linewise || g.visualBlock != !!d.blockwise ? (g.visualLine = !!d.linewise, g.visualBlock = !!d.blockwise, t.signal(p, "vim-mode-change", { mode: "visual", subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : "" }), Y(p)) : ge(p);
      else {
        g.visualMode = !0, g.visualLine = !!d.linewise, g.visualBlock = !!d.blockwise, k = xe(
          p,
          new e(x.line, x.ch + y - 1)
        );
        var E = n(p, x, k);
        g.sel = {
          anchor: E.start,
          head: E.end
        }, t.signal(p, "vim-mode-change", { mode: "visual", subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : "" }), Y(p), Vr(p, g, "<", zt(x, k)), Vr(p, g, ">", ut(x, k));
      }
    },
    reselectLastSelection: function(p, d, g) {
      var y = g.lastSelection;
      if (g.visualMode && P(p, g), y) {
        var x = y.anchorMark.find(), k = y.headMark.find();
        if (!x || !k)
          return;
        g.sel = {
          anchor: x,
          head: k
        }, g.visualMode = !0, g.visualLine = y.visualLine, g.visualBlock = y.visualBlock, Y(p), Vr(p, g, "<", zt(x, k)), Vr(p, g, ">", ut(x, k)), t.signal(p, "vim-mode-change", {
          mode: "visual",
          subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : ""
        });
      }
    },
    joinLines: function(p, d, g) {
      var y, x;
      if (g.visualMode) {
        if (y = p.getCursor("anchor"), x = p.getCursor("head"), gt(x, y)) {
          var k = x;
          x = y, y = k;
        }
        x.ch = kt(p, x.line) - 1;
      } else {
        var E = Math.max(d.repeat, 2);
        y = p.getCursor(), x = xe(p, new e(
          y.line + E - 1,
          1 / 0
        ));
      }
      for (var T = 0, j = y.line; j < x.line; j++) {
        T = kt(p, y.line);
        var V = "", U = 0;
        if (!d.keepSpaces) {
          var K = p.getLine(y.line + 1);
          U = K.search(/\S/), U == -1 ? U = K.length : V = " ";
        }
        p.replaceRange(
          V,
          new e(y.line, T),
          new e(y.line + 1, U)
        );
      }
      var ee = xe(p, new e(y.line, T));
      g.visualMode && ge(p, !1), p.setCursor(ee);
    },
    newLineAndEnterInsertMode: function(p, d, g) {
      g.insertMode = !0;
      var y = rt(p.getCursor());
      if (y.line === p.firstLine() && !d.after)
        p.replaceRange(`
`, new e(p.firstLine(), 0)), p.setCursor(p.firstLine(), 0);
      else {
        y.line = d.after ? y.line : y.line - 1, y.ch = kt(p, y.line), p.setCursor(y);
        var x = t.commands.newlineAndIndentContinueComment || t.commands.newlineAndIndent;
        x(p);
      }
      this.enterInsertMode(p, { repeat: d.repeat }, g);
    },
    paste: function(p, d, g) {
      var y = ie.registerController.getRegister(
        d.registerName
      );
      if (d.registerName === "+")
        navigator.clipboard.readText().then((k) => {
          this.continuePaste(p, d, g, k, y);
        });
      else {
        var x = y.toString();
        this.continuePaste(p, d, g, x, y);
      }
    },
    continuePaste: function(p, d, g, y, x) {
      var k = rt(p.getCursor());
      if (y) {
        if (d.matchIndent) {
          var E = p.getOption("tabSize"), T = function(tn) {
            var nn = tn.split("	").length - 1, kr = tn.split(" ").length - 1;
            return nn * E + kr * 1;
          }, j = p.getLine(p.getCursor().line), V = T(j.match(/^\s*/)[0]), U = y.replace(/\n$/, ""), K = y !== U, ee = T(y.match(/^\s*/)[0]), y = U.replace(/^\s*/gm, function(tn) {
            var nn = V + (T(tn) - ee);
            if (nn < 0)
              return "";
            if (p.getOption("indentWithTabs")) {
              var kr = Math.floor(nn / E);
              return Array(kr + 1).join("	");
            } else
              return Array(nn + 1).join(" ");
          });
          y += K ? `
` : "";
        }
        if (d.repeat > 1)
          var y = Array(d.repeat + 1).join(y);
        var z = x.linewise, G = x.blockwise;
        if (G) {
          y = y.split(`
`), z && y.pop();
          for (var te = 0; te < y.length; te++)
            y[te] = y[te] == "" ? " " : y[te];
          k.ch += d.after ? 1 : 0, k.ch = Math.min(kt(p, k.line), k.ch);
        } else z ? g.visualMode ? y = g.visualLine ? y.slice(0, -1) : `
` + y.slice(0, y.length - 1) + `
` : d.after ? (y = `
` + y.slice(0, y.length - 1), k.ch = kt(p, k.line)) : k.ch = 0 : k.ch += d.after ? 1 : 0;
        var he;
        if (g.visualMode) {
          g.lastPastedText = y;
          var Re, Fe = A(p, g), Ne = Fe[0], yt = Fe[1], bn = p.getSelection(), Yt = p.listSelections(), hn = new Array(Yt.length).join("1").split("1");
          g.lastSelection && (Re = g.lastSelection.headMark.find()), ie.registerController.unnamedRegister.setText(bn), G ? (p.replaceSelections(hn), yt = new e(Ne.line + y.length - 1, Ne.ch), p.setCursor(Ne), Gs(p, yt), p.replaceSelections(y), he = Ne) : g.visualBlock ? (p.replaceSelections(hn), p.setCursor(Ne), p.replaceRange(y, Ne, Ne), he = Ne) : (p.replaceRange(y, Ne, yt), he = p.posFromIndex(p.indexFromPos(Ne) + y.length - 1)), Re && (g.lastSelection.headMark = p.setBookmark(Re)), z && (he.ch = 0);
        } else if (G) {
          p.setCursor(k);
          for (var te = 0; te < y.length; te++) {
            var at = k.line + te;
            at > p.lastLine() && p.replaceRange(`
`, new e(at, 0));
            var Ke = kt(p, at);
            Ke < k.ch && Oi(p, at, k.ch);
          }
          p.setCursor(k), Gs(p, new e(k.line + y.length - 1, k.ch)), p.replaceSelections(y), he = k;
        } else if (p.replaceRange(y, k), z) {
          var at = d.after ? k.line + 1 : k.line;
          he = new e(at, Xt(p.getLine(at)));
        } else
          he = rt(k), /\n/.test(y) || (he.ch += y.length - (d.after ? 1 : 0));
        g.visualMode && ge(p, !1), p.setCursor(he);
      }
    },
    undo: function(p, d) {
      p.operation(function() {
        Nr(p, t.commands.undo, d.repeat)(), p.setCursor(xe(p, p.getCursor("start")));
      });
    },
    redo: function(p, d) {
      Nr(p, t.commands.redo, d.repeat)();
    },
    setRegister: function(p, d, g) {
      g.inputState.registerName = d.selectedCharacter;
    },
    insertRegister: function(p, d, g) {
      var y = d.selectedCharacter, x = ie.registerController.getRegister(y), k = x && x.toString();
      k && p.replaceSelection(k);
    },
    oneNormalCommand: function(p, d, g) {
      is(p, !0), g.insertModeReturn = !0, t.on(p, "vim-command-done", function y() {
        g.visualMode || (g.insertModeReturn && (g.insertModeReturn = !1, g.insertMode || qe.enterInsertMode(p, {}, g)), t.off(p, "vim-command-done", y));
      });
    },
    setMark: function(p, d, g) {
      var y = d.selectedCharacter;
      y && Vr(p, g, y, p.getCursor());
    },
    replace: function(p, d, g) {
      var y = d.selectedCharacter || "", x = p.getCursor(), k, E, T = p.listSelections();
      if (g.visualMode)
        x = p.getCursor("start"), E = p.getCursor("end");
      else {
        var j = p.getLine(x.line);
        k = x.ch + d.repeat, k > j.length && (k = j.length), E = new e(x.line, k);
      }
      var V = n(p, x, E);
      if (x = V.start, E = V.end, y == `
`)
        g.visualMode || p.replaceRange("", x, E), (t.commands.newlineAndIndentContinueComment || t.commands.newlineAndIndent)(p);
      else {
        var U = p.getRange(x, E);
        if (U = U.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, y), U = U.replace(/[^\n]/g, y), g.visualBlock) {
          var K = new Array(p.getOption("tabSize") + 1).join(" ");
          U = p.getSelection(), U = U.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, y);
          var ee = U.replace(/\t/g, K).replace(/[^\n]/g, y).split(`
`);
          p.replaceSelections(ee);
        } else
          p.replaceRange(U, x, E);
        g.visualMode ? (x = gt(T[0].anchor, T[0].head) ? T[0].anchor : T[0].head, p.setCursor(x), ge(p, !1)) : p.setCursor(Ve(E, 0, -1));
      }
    },
    incrementNumberToken: function(p, d) {
      for (var g = p.getCursor(), y = p.getLine(g.line), x = /(-?)(?:(0x)([\da-f]+)|(0b|0|)(\d+))/gi, k, E, T, j; (k = x.exec(y)) !== null && (E = k.index, T = E + k[0].length, !(g.ch < T)); )
        ;
      if (!(!d.backtrack && T <= g.ch)) {
        if (k) {
          var V = k[2] || k[4], U = k[3] || k[5], K = d.increase ? 1 : -1, ee = { "0b": 2, 0: 8, "": 10, "0x": 16 }[V.toLowerCase()], z = parseInt(k[1] + U, ee) + K * d.repeat;
          j = z.toString(ee);
          var G = V ? new Array(U.length - j.length + 1 + k[1].length).join("0") : "";
          j.charAt(0) === "-" ? j = "-" + V + G + j.substr(1) : j = V + G + j;
          var te = new e(g.line, E), he = new e(g.line, T);
          p.replaceRange(j, te, he);
        } else
          return;
        p.setCursor(new e(g.line, E + j.length - 1));
      }
    },
    repeatLastEdit: function(p, d, g) {
      var y = g.lastEditInputState;
      if (y) {
        var x = d.repeat;
        x && d.repeatIsExplicit ? y.repeatOverride = x : x = y.repeatOverride || x, Fl(
          p,
          g,
          x,
          !1
          /** repeatForInsert */
        );
      }
    },
    indent: function(p, d) {
      p.indentLine(p.getCursor().line, d.indentRight);
    },
    exitInsertMode: function(p, d) {
      is(p);
    }
  };
  function xt(p, d) {
    qe[p] = d;
  }
  function xe(p, d, g) {
    var y = p.state.vim, x = y.insertMode || y.visualMode, k = Math.min(Math.max(p.firstLine(), d.line), p.lastLine()), E = p.getLine(k), T = E.length - 1 + +!!x, j = Math.min(Math.max(0, d.ch), T), V = E.charCodeAt(j);
    if (56320 <= V && V <= 57343) {
      var U = 1;
      g && g.line == k && g.ch > j && (U = -1), j += U, j > T && (j -= 2);
    }
    return new e(k, j);
  }
  function wt(p) {
    var d = {};
    for (var g in p)
      p.hasOwnProperty(g) && (d[g] = p[g]);
    return d;
  }
  function Ve(p, d, g) {
    return typeof d == "object" && (g = d.ch, d = d.line), new e(p.line + d, p.ch + g);
  }
  function Us(p, d, g, y) {
    y.operator && (g = "operatorPending");
    for (var x, k = [], E = [], T = ue ? d.length - s : 0, j = T; j < d.length; j++) {
      var V = d[j];
      g == "insert" && V.context != "insert" || V.context && V.context != g || y.operator && V.type == "action" || !(x = yi(p, V.keys)) || (x == "partial" && k.push(V), x == "full" && E.push(V));
    }
    return {
      partial: k.length && k,
      full: E.length && E
    };
  }
  function yi(p, d) {
    const g = d.slice(-11) == "<character>", y = d.slice(-10) == "<register>";
    if (g || y) {
      var x = d.length - (g ? 11 : 10), k = p.slice(0, x), E = d.slice(0, x);
      return k == E && p.length > x ? "full" : E.indexOf(k) == 0 ? "partial" : !1;
    } else
      return p == d ? "full" : d.indexOf(p) == 0 ? "partial" : !1;
  }
  function Qn(p) {
    var d = /^.*(<[^>]+>)$/.exec(p), g = d ? d[1] : p.slice(-1);
    if (g.length > 1)
      switch (g) {
        case "<CR>":
        case "<S-CR>":
          g = `
`;
          break;
        case "<Space>":
        case "<S-Space>":
          g = " ";
          break;
        default:
          g = "";
          break;
      }
    return g;
  }
  function Nr(p, d, g) {
    return function() {
      for (var y = 0; y < g; y++)
        d(p);
    };
  }
  function rt(p) {
    return new e(p.line, p.ch);
  }
  function it(p, d) {
    return p.ch == d.ch && p.line == d.line;
  }
  function gt(p, d) {
    return p.line < d.line || p.line == d.line && p.ch < d.ch;
  }
  function zt(p, d) {
    return arguments.length > 2 && (d = zt.apply(void 0, Array.prototype.slice.call(arguments, 1))), gt(p, d) ? p : d;
  }
  function ut(p, d) {
    return arguments.length > 2 && (d = ut.apply(void 0, Array.prototype.slice.call(arguments, 1))), gt(p, d) ? d : p;
  }
  function en(p, d, g) {
    var y = gt(p, d), x = gt(d, g);
    return y && x;
  }
  function kt(p, d) {
    return p.getLine(d).length;
  }
  function xr(p) {
    return p.trim ? p.trim() : p.replace(/^\s+|\s+$/g, "");
  }
  function qs(p) {
    return p.replace(/([.?*+$\[\]\/\\(){}|\-])/g, "\\$1");
  }
  function Oi(p, d, g) {
    var y = kt(p, d), x = new Array(g - y + 1).join(" ");
    p.setCursor(new e(d, y)), p.replaceRange(x, p.getCursor());
  }
  function Gs(p, d) {
    var g = [], y = p.listSelections(), x = rt(p.clipPos(d)), k = !it(d, x), E = p.getCursor("head"), T = D(y, E), j = it(y[T].head, y[T].anchor), V = y.length - 1, U = V - T > T ? V : 0, K = y[U].anchor, ee = Math.min(K.line, x.line), z = Math.max(K.line, x.line), G = K.ch, te = x.ch, he = y[U].head.ch - G, Re = te - G;
    he > 0 && Re <= 0 ? (G++, k || te--) : he < 0 && Re >= 0 ? (G--, j || te++) : he < 0 && Re == -1 && (G--, te++);
    for (var Fe = ee; Fe <= z; Fe++) {
      var Ne = { anchor: new e(Fe, G), head: new e(Fe, te) };
      g.push(Ne);
    }
    return p.setSelections(g), d.ch = te, K.ch = G, K;
  }
  function O(p, d, g) {
    for (var y = [], x = 0; x < g; x++) {
      var k = Ve(d, x, 0);
      y.push({ anchor: k, head: k });
    }
    p.setSelections(y, 0);
  }
  function D(p, d, g) {
    for (var y = 0; y < p.length; y++) {
      var x = it(p[y].anchor, d), k = it(p[y].head, d);
      if (x || k)
        return y;
    }
    return -1;
  }
  function A(p, d) {
    var g = d.lastSelection, y = function() {
      var k = p.listSelections(), E = k[0], T = k[k.length - 1], j = gt(E.anchor, E.head) ? E.anchor : E.head, V = gt(T.anchor, T.head) ? T.head : T.anchor;
      return [j, V];
    }, x = function() {
      var k = p.getCursor(), E = p.getCursor(), T = g.visualBlock;
      if (T) {
        var j = T.width, V = T.height;
        E = new e(k.line + V, k.ch + j);
        for (var U = [], K = k.line; K < E.line; K++) {
          var ee = new e(K, k.ch), z = new e(K, E.ch), G = { anchor: ee, head: z };
          U.push(G);
        }
        p.setSelections(U);
      } else {
        var te = g.anchorMark.find(), he = g.headMark.find(), Re = he.line - te.line, Fe = he.ch - te.ch;
        E = { line: E.line + Re, ch: Re ? E.ch : Fe + E.ch }, g.visualLine && (k = new e(k.line, 0), E = new e(E.line, kt(p, E.line))), p.setSelection(k, E);
      }
      return [k, E];
    };
    return d.visualMode ? y() : x();
  }
  function P(p, d) {
    var g = d.sel.anchor, y = d.sel.head;
    d.lastPastedText && (y = p.posFromIndex(p.indexFromPos(g) + d.lastPastedText.length), d.lastPastedText = null), d.lastSelection = {
      anchorMark: p.setBookmark(g),
      headMark: p.setBookmark(y),
      anchor: rt(g),
      head: rt(y),
      visualMode: d.visualMode,
      visualLine: d.visualLine,
      visualBlock: d.visualBlock
    };
  }
  function R(p, d, g, y) {
    var x = p.state.vim.sel, k = y ? d : x.head, E = y ? d : x.anchor, T;
    return gt(g, d) && (T = g, g = d, d = T), gt(k, E) ? (k = zt(d, k), E = ut(E, g)) : (E = zt(d, E), k = ut(k, g), k = Ve(k, 0, -1), k.ch == -1 && k.line != p.firstLine() && (k = new e(k.line - 1, kt(p, k.line - 1)))), [E, k];
  }
  function Y(p, d, g) {
    var y = p.state.vim;
    d = d || y.sel, g || (g = y.visualLine ? "line" : y.visualBlock ? "block" : "char");
    var x = se(p, d, g);
    p.setSelections(x.ranges, x.primary);
  }
  function se(p, d, g, y) {
    var x = rt(d.head), k = rt(d.anchor);
    if (g == "char") {
      var E = !y && !gt(d.head, d.anchor) ? 1 : 0, T = gt(d.head, d.anchor) ? 1 : 0;
      return x = Ve(d.head, 0, E), k = Ve(d.anchor, 0, T), {
        ranges: [{ anchor: k, head: x }],
        primary: 0
      };
    } else if (g == "line") {
      if (gt(d.head, d.anchor))
        x.ch = 0, k.ch = kt(p, k.line);
      else {
        k.ch = 0;
        var j = p.lastLine();
        x.line > j && (x.line = j), x.ch = kt(p, x.line);
      }
      return {
        ranges: [{ anchor: k, head: x }],
        primary: 0
      };
    } else if (g == "block") {
      var V = Math.min(k.line, x.line), U = k.ch, K = Math.max(k.line, x.line), ee = x.ch;
      U < ee ? ee += 1 : U += 1;
      for (var z = K - V + 1, G = x.line == V ? 0 : z - 1, te = [], he = 0; he < z; he++)
        te.push({
          anchor: new e(V + he, U),
          head: new e(V + he, ee)
        });
      return {
        ranges: te,
        primary: G
      };
    }
    throw "never happens";
  }
  function le(p) {
    var d = p.getCursor("head");
    return p.getSelection().length == 1 && (d = zt(d, p.getCursor("anchor"))), d;
  }
  function ge(p, d) {
    var g = p.state.vim;
    d !== !1 && p.setCursor(xe(p, g.sel.head)), P(p, g), g.visualMode = !1, g.visualLine = !1, g.visualBlock = !1, g.insertMode || t.signal(p, "vim-mode-change", { mode: "normal" });
  }
  function We(p, d, g) {
    var y = p.getRange(d, g);
    if (/\n\s*$/.test(y)) {
      var x = y.split(`
`);
      x.pop();
      for (var k = x.pop(); x.length > 0 && k && Z(k); k = x.pop())
        g.line--, g.ch = 0;
      k ? (g.line--, g.ch = kt(p, g.line)) : g.ch = 0;
    }
  }
  function St(p, d, g) {
    d.ch = 0, g.ch = 0, g.line++;
  }
  function Xt(p) {
    if (!p)
      return 0;
    var d = p.search(/\S/);
    return d == -1 ? p.length : d;
  }
  function jn(p, { inclusive: d, innerWord: g, bigWord: y, noSymbol: x, multiline: k }, E) {
    var T = E || le(p), j = p.getLine(T.line), V = j, U = T.line, K = U, ee = T.ch, z, G = x ? f[0] : m[0];
    if (g && /\s/.test(j.charAt(ee)))
      G = function(yt) {
        return /\s/.test(yt);
      };
    else {
      for (; !G(j.charAt(ee)); )
        if (ee++, ee >= j.length) {
          if (!k) return null;
          ee--, z = gl(p, T, !0, y, !0);
          break;
        }
      y ? G = m[0] : (G = f[0], G(j.charAt(ee)) || (G = f[1]));
    }
    for (var te = ee, he = ee; G(j.charAt(he)) && he >= 0; )
      he--;
    if (he++, z)
      te = z.to, K = z.line, V = p.getLine(K), !V && te == 0 && te++;
    else
      for (; G(j.charAt(te)) && te < j.length; )
        te++;
    if (d) {
      var Re = te, Fe = T.ch <= he && /\s/.test(j.charAt(T.ch));
      if (!Fe)
        for (; /\s/.test(V.charAt(te)) && te < V.length; )
          te++;
      if (Re == te || Fe) {
        for (var Ne = he; /\s/.test(j.charAt(he - 1)) && he > 0; )
          he--;
        !he && !Fe && (he = Ne);
      }
    }
    return { start: new e(U, he), end: new e(K, te) };
  }
  function Ge(p, d, g) {
    var y = d;
    if (!t.findMatchingTag || !t.findEnclosingTag)
      return { start: y, end: y };
    var x = t.findMatchingTag(p, d) || t.findEnclosingTag(p, d);
    return !x || !x.open || !x.close ? { start: y, end: y } : g ? { start: x.open.from, end: x.close.to } : { start: x.open.to, end: x.close.from };
  }
  function gn(p, d, g) {
    it(d, g) || ie.jumpList.add(p, d, g);
  }
  function Ct(p, d) {
    ie.lastCharacterSearch.increment = p, ie.lastCharacterSearch.forward = d.forward, ie.lastCharacterSearch.selectedCharacter = d.selectedCharacter;
  }
  var _n = {
    "(": "bracket",
    ")": "bracket",
    "{": "bracket",
    "}": "bracket",
    "[": "section",
    "]": "section",
    "*": "comment",
    "/": "comment",
    m: "method",
    M: "method",
    "#": "preprocess"
  }, vi = {
    bracket: {
      isComplete: function(p) {
        if (p.nextCh === p.symb) {
          if (p.depth++, p.depth >= 1) return !0;
        } else p.nextCh === p.reverseSymb && p.depth--;
        return !1;
      }
    },
    section: {
      init: function(p) {
        p.curMoveThrough = !0, p.symb = (p.forward ? "]" : "[") === p.symb ? "{" : "}";
      },
      isComplete: function(p) {
        return p.index === 0 && p.nextCh === p.symb;
      }
    },
    comment: {
      isComplete: function(p) {
        var d = p.lastCh === "*" && p.nextCh === "/";
        return p.lastCh = p.nextCh, d;
      }
    },
    // TODO: The original Vim implementation only operates on level 1 and 2.
    // The current implementation doesn't check for code block level and
    // therefore it operates on any levels.
    method: {
      init: function(p) {
        p.symb = p.symb === "m" ? "{" : "}", p.reverseSymb = p.symb === "{" ? "}" : "{";
      },
      isComplete: function(p) {
        return p.nextCh === p.symb;
      }
    },
    preprocess: {
      init: function(p) {
        p.index = 0;
      },
      isComplete: function(p) {
        if (p.nextCh === "#") {
          var d = p.lineText.match(/^#(\w+)/)[1];
          if (d === "endif") {
            if (p.forward && p.depth === 0)
              return !0;
            p.depth++;
          } else if (d === "if") {
            if (!p.forward && p.depth === 0)
              return !0;
            p.depth--;
          }
          if (d === "else" && p.depth === 0) return !0;
        }
        return !1;
      }
    }
  };
  function nh(p, d, g, y) {
    var x = rt(p.getCursor()), k = g ? 1 : -1, E = g ? p.lineCount() : -1, T = x.ch, j = x.line, V = p.getLine(j), U = {
      lineText: V,
      nextCh: V.charAt(T),
      lastCh: null,
      index: T,
      symb: y,
      reverseSymb: (g ? { ")": "(", "}": "{" } : { "(": ")", "{": "}" })[y],
      forward: g,
      depth: 0,
      curMoveThrough: !1
    }, K = _n[y];
    if (!K) return x;
    var ee = vi[K].init, z = vi[K].isComplete;
    for (ee && ee(U); j !== E && d; ) {
      if (U.index += k, U.nextCh = U.lineText.charAt(U.index), !U.nextCh) {
        if (j += k, U.lineText = p.getLine(j) || "", k > 0)
          U.index = 0;
        else {
          var G = U.lineText.length;
          U.index = G > 0 ? G - 1 : 0;
        }
        U.nextCh = U.lineText.charAt(U.index);
      }
      z(U) && (x.line = j, x.ch = U.index, d--);
    }
    return U.nextCh || U.curMoveThrough ? new e(j, U.index) : x;
  }
  function gl(p, d, g, y, x) {
    var k = d.line, E = d.ch, T = p.getLine(k), j = g ? 1 : -1, V = y ? m : f;
    if (x && T == "") {
      if (k += j, T = p.getLine(k), !B(p, k))
        return null;
      E = g ? 0 : T.length;
    }
    for (; ; ) {
      if (x && T == "")
        return { from: 0, to: 0, line: k };
      for (var U = j > 0 ? T.length : -1, K = U, ee = U; E != U; ) {
        for (var z = !1, G = 0; G < V.length && !z; ++G)
          if (V[G](T.charAt(E))) {
            for (K = E; E != U && V[G](T.charAt(E)); )
              E += j;
            if (ee = E, z = K != ee, K == d.ch && k == d.line && ee == K + j)
              continue;
            return {
              from: Math.min(K, ee + 1),
              to: Math.max(K, ee),
              line: k
            };
          }
        z || (E += j);
      }
      if (k += j, !B(p, k))
        return null;
      T = p.getLine(k), E = j > 0 ? 0 : T.length;
    }
  }
  function rh(p, d, g, y, x, k) {
    var E = rt(d), T = [];
    (y && !x || !y && x) && g++;
    for (var j = !(y && x), V = 0; V < g; V++) {
      var U = gl(p, d, y, k, j);
      if (!U) {
        var K = kt(p, p.lastLine());
        T.push(y ? { line: p.lastLine(), from: K, to: K } : { line: 0, from: 0, to: 0 });
        break;
      }
      T.push(U), d = new e(U.line, y ? U.to - 1 : U.from);
    }
    var ee = T.length != g, z = T[0], G = T.pop();
    return y && !x ? (!ee && (z.from != E.ch || z.line != E.line) && (G = T.pop()), G && new e(G.line, G.from)) : y && x ? G && new e(G.line, G.to - 1) : !y && x ? (!ee && (z.to != E.ch || z.line != E.line) && (G = T.pop()), G && new e(G.line, G.to)) : G && new e(G.line, G.from);
  }
  function bl(p, d, g, y, x) {
    var k = d, E = new e(k.line + g.repeat - 1, 1 / 0), T = p.clipPos(E);
    return T.ch--, x || (y.lastHPos = 1 / 0, y.lastHSPos = p.charCoords(T, "div").left), E;
  }
  function Ua(p, d, g, y, x) {
    if (y) {
      for (var k = x || p.getCursor(), E = k.ch, T, j = 0; j < d; j++) {
        var V = p.getLine(k.line);
        if (T = ih(E, V, y, g), T == -1)
          return;
        E = T;
      }
      if (T != null)
        return new e(p.getCursor().line, T);
    }
  }
  function sh(p, d) {
    var g = p.getCursor().line;
    return xe(p, new e(g, d - 1));
  }
  function Vr(p, d, g, y) {
    !q(g, b) && !C.test(g) || (d.marks[g] && d.marks[g].clear(), d.marks[g] = p.setBookmark(y));
  }
  function ih(p, d, g, y, x) {
    var k;
    return y ? k = d.indexOf(g, p + 1) : k = d.lastIndexOf(g, p - 1), k;
  }
  function yl(p, d, g, y, x) {
    var k = d.line, E = p.firstLine(), T = p.lastLine(), j, V, U = k;
    function K(he) {
      return !p.getLine(he);
    }
    function ee(he, Re, Fe) {
      return Fe ? K(he) != K(he + Re) : !K(he) && K(he + Re);
    }
    if (y) {
      for (; E <= U && U <= T && g > 0; )
        ee(U, y) && g--, U += y;
      return { start: new e(U, 0), end: d };
    }
    var z = p.state.vim;
    if (z.visualLine && ee(k, 1, !0)) {
      var G = z.sel.anchor;
      ee(G.line, -1, !0) && (!x || G.line != k) && (k += 1);
    }
    var te = K(k);
    for (U = k; U <= T && g; U++)
      ee(U, 1, !0) && (!x || K(U) != te) && g--;
    for (V = new e(U, 0), U > T && !te ? te = !0 : x = !1, U = k; U > E && !((!x || K(U) == te || U == k) && ee(U, -1, !0)); U--)
      ;
    return j = new e(U, 0), { start: j, end: V };
  }
  function Ol(p, d, g, y, x) {
    function k(V) {
      V.pos + V.dir < 0 || V.pos + V.dir >= V.line.length ? V.line = null : V.pos += V.dir;
    }
    function E(V, U, K, ee) {
      var z = V.getLine(U), G = {
        line: z,
        ln: U,
        pos: K,
        dir: ee
      };
      if (G.line === "")
        return { ln: G.ln, pos: G.pos };
      var te = G.pos;
      for (k(G); G.line !== null; ) {
        if (te = G.pos, N(G.line[G.pos]))
          if (x) {
            for (k(G); G.line !== null && Z(G.line[G.pos]); )
              te = G.pos, k(G);
            return { ln: G.ln, pos: te + 1 };
          } else
            return { ln: G.ln, pos: G.pos + 1 };
        k(G);
      }
      return { ln: G.ln, pos: te + 1 };
    }
    function T(V, U, K, ee) {
      var z = V.getLine(U), G = {
        line: z,
        ln: U,
        pos: K,
        dir: ee
      };
      if (G.line === "")
        return { ln: G.ln, pos: G.pos };
      var te = G.pos;
      for (k(G); G.line !== null; ) {
        if (!Z(G.line[G.pos]) && !N(G.line[G.pos]))
          te = G.pos;
        else if (N(G.line[G.pos]))
          return x ? Z(G.line[G.pos + 1]) ? { ln: G.ln, pos: G.pos + 1 } : { ln: G.ln, pos: te } : { ln: G.ln, pos: te };
        k(G);
      }
      return G.line = z, x && Z(G.line[G.pos]) ? { ln: G.ln, pos: G.pos } : { ln: G.ln, pos: te };
    }
    for (var j = {
      ln: d.line,
      pos: d.ch
    }; g > 0; )
      y < 0 ? j = T(p, j.ln, j.pos, y) : j = E(p, j.ln, j.pos, y), g--;
    return new e(j.ln, j.pos);
  }
  function ah(p, d, g, y) {
    function x(j, V) {
      if (V.pos + V.dir < 0 || V.pos + V.dir >= V.line.length) {
        if (V.ln += V.dir, !B(j, V.ln)) {
          V.line = null, V.ln = null, V.pos = null;
          return;
        }
        V.line = j.getLine(V.ln), V.pos = V.dir > 0 ? 0 : V.line.length - 1;
      } else
        V.pos += V.dir;
    }
    function k(j, V, U, K) {
      var he = j.getLine(V), ee = he === "", z = {
        line: he,
        ln: V,
        pos: U,
        dir: K
      }, G = {
        ln: z.ln,
        pos: z.pos
      }, te = z.line === "";
      for (x(j, z); z.line !== null; ) {
        if (G.ln = z.ln, G.pos = z.pos, z.line === "" && !te)
          return { ln: z.ln, pos: z.pos };
        if (ee && z.line !== "" && !Z(z.line[z.pos]))
          return { ln: z.ln, pos: z.pos };
        N(z.line[z.pos]) && !ee && (z.pos === z.line.length - 1 || Z(z.line[z.pos + 1])) && (ee = !0), x(j, z);
      }
      var he = j.getLine(G.ln);
      G.pos = 0;
      for (var Re = he.length - 1; Re >= 0; --Re)
        if (!Z(he[Re])) {
          G.pos = Re;
          break;
        }
      return G;
    }
    function E(j, V, U, K) {
      var te = j.getLine(V), ee = {
        line: te,
        ln: V,
        pos: U,
        dir: K
      }, z = {
        ln: ee.ln,
        pos: null
      }, G = ee.line === "";
      for (x(j, ee); ee.line !== null; ) {
        if (ee.line === "" && !G)
          return z.pos !== null ? z : { ln: ee.ln, pos: ee.pos };
        if (N(ee.line[ee.pos]) && z.pos !== null && !(ee.ln === z.ln && ee.pos + 1 === z.pos))
          return z;
        ee.line !== "" && !Z(ee.line[ee.pos]) && (G = !1, z = { ln: ee.ln, pos: ee.pos }), x(j, ee);
      }
      var te = j.getLine(z.ln);
      z.pos = 0;
      for (var he = 0; he < te.length; ++he)
        if (!Z(te[he])) {
          z.pos = he;
          break;
        }
      return z;
    }
    for (var T = {
      ln: d.line,
      pos: d.ch
    }; g > 0; )
      y < 0 ? T = E(p, T.ln, T.pos, y) : T = k(p, T.ln, T.pos, y), g--;
    return new e(T.ln, T.pos);
  }
  function vl(p, d, g, y) {
    var x = d, k = {
      "(": /[()]/,
      ")": /[()]/,
      "[": /[[\]]/,
      "]": /[[\]]/,
      "{": /[{}]/,
      "}": /[{}]/,
      "<": /[<>]/,
      ">": /[<>]/
    }[g], E = {
      "(": "(",
      ")": "(",
      "[": "[",
      "]": "[",
      "{": "{",
      "}": "{",
      "<": "<",
      ">": "<"
    }[g], T = p.getLine(x.line).charAt(x.ch), j = T === E ? 1 : 0, V = p.scanForBracket(new e(x.line, x.ch + j), -1, void 0, { bracketRegex: k }), U = p.scanForBracket(new e(x.line, x.ch + j), 1, void 0, { bracketRegex: k });
    if (!V || !U) return null;
    var K = V.pos, ee = U.pos;
    if (K.line == ee.line && K.ch > ee.ch || K.line > ee.line) {
      var z = K;
      K = ee, ee = z;
    }
    return y ? ee.ch += 1 : K.ch += 1, { start: K, end: ee };
  }
  function oh(p, d, g, y) {
    var x = rt(d), k = p.getLine(x.line), E = k.split(""), T, j, V, U, K = E.indexOf(g);
    if (x.ch < K)
      x.ch = K;
    else if (K < x.ch && E[x.ch] == g) {
      var ee = /string/.test(p.getTokenTypeAt(Ve(d, 0, 1))), z = /string/.test(p.getTokenTypeAt(d)), G = ee && !z;
      G || (j = x.ch, --x.ch);
    }
    if (E[x.ch] == g && !j)
      T = x.ch + 1;
    else
      for (V = x.ch; V > -1 && !T; V--)
        E[V] == g && (T = V + 1);
    if (T && !j)
      for (V = T, U = E.length; V < U && !j; V++)
        E[V] == g && (j = V);
    return !T || !j ? { start: x, end: x } : (y && (--T, ++j), {
      start: new e(x.line, T),
      end: new e(x.line, j)
    });
  }
  J("pcre", !0, "boolean");
  class lh {
    getQuery() {
      return ie.query;
    }
    setQuery(d) {
      ie.query = d;
    }
    getOverlay() {
      return this.searchOverlay;
    }
    setOverlay(d) {
      this.searchOverlay = d;
    }
    isReversed() {
      return ie.isReversed;
    }
    setReversed(d) {
      ie.isReversed = d;
    }
    getScrollbarAnnotate() {
      return this.annotate;
    }
    setScrollbarAnnotate(d) {
      this.annotate = d;
    }
  }
  function cr(p) {
    var d = p.state.vim;
    return d.searchState_ || (d.searchState_ = new lh());
  }
  function ch(p) {
    return xl(p, "/");
  }
  function uh(p) {
    return wl(p, "/");
  }
  function xl(p, d) {
    var g = wl(p, d);
    if (!g.length) return [];
    var y = [];
    if (g[0] === 0) {
      for (var x = 0; x < g.length; x++)
        typeof g[x] == "number" && y.push(p.substring(g[x] + 1, g[x + 1]));
      return y;
    }
  }
  function wl(p, d) {
    d || (d = "/");
    for (var g = !1, y = [], x = 0; x < p.length; x++) {
      var k = p.charAt(x);
      !g && k == d && y.push(x), g = !g && k == "\\";
    }
    return y;
  }
  function hh(p) {
    for (var d = "|(){", g = "}", y = !1, x = [], k = -1; k < p.length; k++) {
      var E = p.charAt(k) || "", T = p.charAt(k + 1) || "", j = T && d.indexOf(T) != -1;
      y ? ((E !== "\\" || !j) && x.push(E), y = !1) : E === "\\" ? (y = !0, T && g.indexOf(T) != -1 && (j = !0), (!j || T === "\\") && x.push(E)) : (x.push(E), j && T !== "\\" && x.push("\\"));
    }
    return x.join("");
  }
  var kl = { "\\n": `
`, "\\r": "\r", "\\t": "	" };
  function ph(p) {
    for (var d = !1, g = [], y = -1; y < p.length; y++) {
      var x = p.charAt(y) || "", k = p.charAt(y + 1) || "";
      kl[x + k] ? (g.push(kl[x + k]), y++) : d ? (g.push(x), d = !1) : x === "\\" ? (d = !0, _(k) || k === "$" ? g.push("$") : k !== "/" && k !== "\\" && g.push("\\")) : (x === "$" && g.push("$"), g.push(x), k === "/" && g.push("\\"));
    }
    return g.join("");
  }
  var Cl = { "\\/": "/", "\\\\": "\\", "\\n": `
`, "\\r": "\r", "\\t": "	", "\\&": "&" };
  function fh(p) {
    for (var d = new t.StringStream(p), g = []; !d.eol(); ) {
      for (; d.peek() && d.peek() != "\\"; )
        g.push(d.next());
      var y = !1;
      for (var x in Cl)
        if (d.match(x, !0)) {
          y = !0, g.push(Cl[x]);
          break;
        }
      y || g.push(d.next());
    }
    return g.join("");
  }
  function dh(p, d, g) {
    var y = ie.registerController.getRegister("/");
    if (y.setText(p), p instanceof RegExp)
      return p;
    var x = uh(p), k, E;
    if (!x.length)
      k = p;
    else {
      k = p.substring(0, x[0]);
      var T = p.substring(x[0]);
      E = T.indexOf("i") != -1;
    }
    if (!k)
      return null;
    H("pcre") || (k = hh(k)), g && (d = /^[^A-Z]*$/.test(k));
    var j = new RegExp(
      k,
      d || E ? "im" : "m"
    );
    return j;
  }
  function ss(p) {
    typeof p == "string" && (p = document.createElement(p));
    for (var d, g = 1; g < arguments.length; g++)
      if (d = arguments[g])
        if (typeof d != "object" && (d = document.createTextNode(d)), d.nodeType) p.appendChild(d);
        else for (var y in d)
          Object.prototype.hasOwnProperty.call(d, y) && (y[0] === "$" ? p.style[y.slice(1)] = d[y] : p.setAttribute(y, d[y]));
    return p;
  }
  function bt(p, d) {
    var g = ss("div", { $color: "red", $whiteSpace: "pre", class: "cm-vim-message" }, d);
    p.openNotification ? p.openNotification(g, { bottom: !0, duration: 5e3 }) : alert(g.innerText);
  }
  function mh(p, d) {
    return ss(
      "div",
      { $display: "flex" },
      ss(
        "span",
        { $fontFamily: "monospace", $whiteSpace: "pre", $flex: 1 },
        p,
        ss("input", {
          type: "text",
          autocorrect: "off",
          autocapitalize: "off",
          spellcheck: "false",
          $width: "100%"
        })
      ),
      d && ss("span", { $color: "#888" }, d)
    );
  }
  function xi(p, d) {
    if (De.length) {
      d.value || (d.value = ""), _e = d;
      return;
    }
    var g = mh(d.prefix, d.desc);
    if (p.openDialog)
      p.openDialog(g, d.onClose, {
        onKeyDown: d.onKeyDown,
        onKeyUp: d.onKeyUp,
        bottom: !0,
        selectValueOnOpen: !1,
        value: d.value
      });
    else {
      var y = "";
      typeof d.prefix != "string" && d.prefix && (y += d.prefix.textContent), d.desc && (y += " " + d.desc), d.onClose(prompt(y, ""));
    }
  }
  function Sl(p, d) {
    if (p instanceof RegExp && d instanceof RegExp) {
      for (var g = ["global", "multiline", "ignoreCase", "source"], y = 0; y < g.length; y++) {
        var x = g[y];
        if (p[x] !== d[x])
          return !1;
      }
      return !0;
    }
    return !1;
  }
  function wi(p, d, g, y) {
    if (d) {
      var x = cr(p), k = dh(d, !!g, !!y);
      if (k)
        return Al(p, k), Sl(k, x.getQuery()) || x.setQuery(k), k;
    }
  }
  function gh(p) {
    if (p.source.charAt(0) == "^")
      var d = !0;
    return {
      token: function(g) {
        if (d && !g.sol()) {
          g.skipToEnd();
          return;
        }
        var y = g.match(p, !1);
        if (y)
          return y[0].length == 0 ? (g.next(), "searching") : !g.sol() && (g.backUp(1), !p.exec(g.next() + y[0])) ? (g.next(), null) : (g.match(p), "searching");
        for (; !g.eol() && (g.next(), !g.match(p, !1)); )
          ;
      },
      query: p
    };
  }
  var ki = 0;
  function Al(p, d) {
    clearTimeout(ki);
    var g = cr(p);
    g.highlightTimeout = ki, ki = setTimeout(function() {
      if (p.state.vim) {
        var y = cr(p);
        y.highlightTimeout = null;
        var x = y.getOverlay();
        (!x || d != x.query) && (x && p.removeOverlay(x), x = gh(d), p.addOverlay(x), p.showMatchesOnScrollbar && (y.getScrollbarAnnotate() && y.getScrollbarAnnotate().clear(), y.setScrollbarAnnotate(p.showMatchesOnScrollbar(d))), y.setOverlay(x));
      }
    }, 50);
  }
  function Pl(p, d, g, y) {
    return p.operation(function() {
      y === void 0 && (y = 1);
      for (var x = p.getCursor(), k = p.getSearchCursor(g, x), E = 0; E < y; E++) {
        var T = k.find(d);
        if (E == 0 && T && it(k.from(), x)) {
          var j = d ? k.from() : k.to();
          T = k.find(d), T && !T[0] && it(k.from(), j) && p.getLine(j.line).length == j.ch && (T = k.find(d));
        }
        if (!T && (k = p.getSearchCursor(
          g,
          // @ts-ignore
          d ? new e(p.lastLine()) : new e(p.firstLine(), 0)
        ), !k.find(d)))
          return;
      }
      return k.from();
    });
  }
  function bh(p, d, g, y, x) {
    return p.operation(function() {
      y === void 0 && (y = 1);
      var k = p.getCursor(), E = p.getSearchCursor(g, k), T = E.find(!d);
      !x.visualMode && T && it(E.from(), k) && E.find(!d);
      for (var j = 0; j < y; j++)
        if (T = E.find(d), !T && (E = p.getSearchCursor(
          g,
          // @ts-ignore
          d ? new e(p.lastLine()) : new e(p.firstLine(), 0)
        ), !E.find(d)))
          return;
      return [E.from(), E.to()];
    });
  }
  function qa(p) {
    var d = cr(p);
    d.highlightTimeout && (clearTimeout(d.highlightTimeout), d.highlightTimeout = null), p.removeOverlay(cr(p).getOverlay()), d.setOverlay(null), d.getScrollbarAnnotate() && (d.getScrollbarAnnotate().clear(), d.setScrollbarAnnotate(null));
  }
  function yh(p, d, g) {
    return typeof p != "number" && (p = p.line), d instanceof Array ? q(p, d) : typeof g == "number" ? p >= d && p <= g : p == d;
  }
  function L(p) {
    var d = p.getScrollInfo(), g = 6, y = 10, x = p.coordsChar({ left: 0, top: g + d.top }, "local"), k = d.clientHeight - y + d.top, E = p.coordsChar({ left: 0, top: k }, "local");
    return { top: x.line, bottom: E.line };
  }
  function Ie(p, d, g) {
    if (g == "'" || g == "`")
      return ie.jumpList.find(p, -1) || new e(0, 0);
    if (g == ".")
      return As(p);
    var y = d.marks[g];
    return y && y.find();
  }
  function As(p) {
    if (p.getLastEditEnd)
      return p.getLastEditEnd();
    for (var d = (
      /**@type{any}*/
      p.doc.history.done
    ), g = d.length; g--; )
      if (d[g].changes)
        return rt(d[g].changes[0].to);
  }
  class ur {
    constructor() {
      this.commandMap_, this.buildCommandMap_();
    }
    processCommand(d, g, y) {
      var x = this;
      d.operation(function() {
        d.curOp.isVimOp = !0, x._processCommand(d, g, y);
      });
    }
    _processCommand(d, g, y) {
      var x = d.state.vim, k = ie.registerController.getRegister(":"), E = k.toString(), T = new t.StringStream(g);
      k.setText(g);
      var j = y || {};
      j.input = g;
      try {
        this.parseInput_(d, T, j);
      } catch (K) {
        throw bt(d, K + ""), K;
      }
      x.visualMode && ge(d);
      var V, U;
      if (!j.commandName)
        j.line !== void 0 && (U = "move");
      else if (V = this.matchCommand_(j.commandName), V) {
        if (U = V.name, V.excludeFromCommandHistory && k.setText(E), this.parseCommandArgs_(T, j, V), V.type == "exToKey") {
          dt(d, V.toKeys, V);
          return;
        } else if (V.type == "exToEx") {
          this.processCommand(d, V.toInput);
          return;
        }
      }
      if (!U) {
        bt(d, 'Not an editor command ":' + g + '"');
        return;
      }
      try {
        Ci[U](d, j), (!V || !V.possiblyAsync) && j.callback && j.callback();
      } catch (K) {
        throw bt(d, K + ""), K;
      }
    }
    parseInput_(d, g, y) {
      g.eatWhile(":"), g.eat("%") ? (y.line = d.firstLine(), y.lineEnd = d.lastLine()) : (y.line = this.parseLineSpec_(d, g), y.line !== void 0 && g.eat(",") && (y.lineEnd = this.parseLineSpec_(d, g))), y.line == null ? d.state.vim.visualMode ? (y.selectionLine = Ie(d, d.state.vim, "<")?.line, y.selectionLineEnd = Ie(d, d.state.vim, ">")?.line) : y.selectionLine = d.getCursor().line : (y.selectionLine = y.line, y.selectionLineEnd = y.lineEnd);
      var x = g.match(/^(\w+|!!|@@|[!#&*<=>@~])/);
      return x ? y.commandName = x[1] : y.commandName = g.match(/.*/)[0], y;
    }
    parseLineSpec_(d, g) {
      var y = g.match(/^(\d+)/);
      if (y)
        return parseInt(y[1], 10) - 1;
      switch (g.next()) {
        case ".":
          return this.parseLineSpecOffset_(g, d.getCursor().line);
        case "$":
          return this.parseLineSpecOffset_(g, d.lastLine());
        case "'":
          var x = g.next(), k = Ie(d, d.state.vim, x);
          if (!k) throw new Error("Mark not set");
          return this.parseLineSpecOffset_(g, k.line);
        case "-":
        case "+":
          return g.backUp(1), this.parseLineSpecOffset_(g, d.getCursor().line);
        default:
          g.backUp(1);
          return;
      }
    }
    parseLineSpecOffset_(d, g) {
      var y = d.match(/^([+-])?(\d+)/);
      if (y) {
        var x = parseInt(y[2], 10);
        y[1] == "-" ? g -= x : g += x;
      }
      return g;
    }
    parseCommandArgs_(d, g, y) {
      if (!d.eol()) {
        g.argString = d.match(/.*/)[0];
        var x = y.argDelimiter || /\s+/, k = xr(g.argString).split(x);
        k.length && k[0] && (g.args = k);
      }
    }
    matchCommand_(d) {
      for (var g = d.length; g > 0; g--) {
        var y = d.substring(0, g);
        if (this.commandMap_[y]) {
          var x = this.commandMap_[y];
          if (x.name.indexOf(d) === 0)
            return x;
        }
      }
      return null;
    }
    buildCommandMap_() {
      this.commandMap_ = {};
      for (var d = 0; d < i.length; d++) {
        var g = i[d], y = g.shortName || g.name;
        this.commandMap_[y] = g;
      }
    }
    /**@type {(lhs: string, rhs: string, ctx: string, noremap?: boolean) => void} */
    map(d, g, y, x) {
      if (d != ":" && d.charAt(0) == ":") {
        if (y)
          throw Error("Mode not supported for ex mappings");
        var k = d.substring(1);
        g != ":" && g.charAt(0) == ":" ? this.commandMap_[k] = {
          name: k,
          type: "exToEx",
          toInput: g.substring(1),
          user: !0
        } : this.commandMap_[k] = {
          name: k,
          type: "exToKey",
          toKeys: g,
          user: !0
        };
      } else {
        var E = {
          keys: d,
          type: "keyToKey",
          toKeys: g,
          noremap: !!x
        };
        y && (E.context = y), r.unshift(E);
      }
    }
    /**@type {(lhs: string, ctx: string) => boolean|void} */
    unmap(d, g) {
      if (d != ":" && d.charAt(0) == ":") {
        if (g)
          throw Error("Mode not supported for ex mappings");
        var y = d.substring(1);
        if (this.commandMap_[y] && this.commandMap_[y].user)
          return delete this.commandMap_[y], !0;
      } else
        for (var x = d, k = 0; k < r.length; k++)
          if (x == r[k].keys && r[k].context === g)
            return r.splice(k, 1), !0;
    }
  }
  var Ci = {
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    colorscheme: function(p, d) {
      if (!d.args || d.args.length < 1) {
        bt(p, p.getOption("theme"));
        return;
      }
      p.setOption("theme", d.args[0]);
    },
    map: function(p, d, g, y) {
      var x = d.args;
      if (!x || x.length < 2) {
        p && bt(p, "Invalid mapping: " + d.input);
        return;
      }
      Se.map(x[0], x[1], g, y);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    imap: function(p, d) {
      this.map(p, d, "insert");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    nmap: function(p, d) {
      this.map(p, d, "normal");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vmap: function(p, d) {
      this.map(p, d, "visual");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    omap: function(p, d) {
      this.map(p, d, "operatorPending");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    noremap: function(p, d) {
      this.map(p, d, void 0, !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    inoremap: function(p, d) {
      this.map(p, d, "insert", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    nnoremap: function(p, d) {
      this.map(p, d, "normal", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vnoremap: function(p, d) {
      this.map(p, d, "visual", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    onoremap: function(p, d) {
      this.map(p, d, "operatorPending", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params @arg {string} ctx*/
    unmap: function(p, d, g) {
      var y = d.args;
      (!y || y.length < 1 || !Se.unmap(y[0], g)) && p && bt(p, "No such mapping: " + d.input);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    mapclear: function(p, d) {
      Ue.mapclear();
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    imapclear: function(p, d) {
      Ue.mapclear("insert");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    nmapclear: function(p, d) {
      Ue.mapclear("normal");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vmapclear: function(p, d) {
      Ue.mapclear("visual");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    omapclear: function(p, d) {
      Ue.mapclear("operatorPending");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    move: function(p, d) {
      Pn.processCommand(p, p.state.vim, {
        keys: "",
        type: "motion",
        motion: "moveToLineOrEdgeOfDocument",
        motionArgs: { forward: !1, explicitRepeat: !0, linewise: !0 },
        repeatOverride: d.line + 1
      });
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    set: function(p, d) {
      var g = d.args, y = d.setCfg || {};
      if (!g || g.length < 1) {
        p && bt(p, "Invalid mapping: " + d.input);
        return;
      }
      var x = g[0].split("="), k = x.shift() || "", E = x.length > 0 ? x.join("=") : void 0, T = !1, j = !1;
      if (k.charAt(k.length - 1) == "?") {
        if (E)
          throw Error("Trailing characters: " + d.argString);
        k = k.substring(0, k.length - 1), T = !0;
      } else k.charAt(k.length - 1) == "!" && (k = k.substring(0, k.length - 1), j = !0);
      E === void 0 && k.substring(0, 2) == "no" && (k = k.substring(2), E = !1);
      var V = ae[k] && ae[k].type == "boolean";
      if (V && (j ? E = !H(k, p, y) : E == null && (E = !0)), !V && E === void 0 || T) {
        var U = H(k, p, y);
        U instanceof Error ? bt(p, U.message) : U === !0 || U === !1 ? bt(p, " " + (U ? "" : "no") + k) : bt(p, "  " + k + "=" + U);
      } else {
        var K = pe(k, E, p, y);
        K instanceof Error && bt(p, K.message);
      }
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    setlocal: function(p, d) {
      d.setCfg = { scope: "local" }, this.set(p, d);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    setglobal: function(p, d) {
      d.setCfg = { scope: "global" }, this.set(p, d);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    registers: function(p, d) {
      var g = d.args, y = ie.registerController.registers, x = `----------Registers----------

`;
      if (g)
        for (var T = g.join(""), j = 0; j < T.length; j++) {
          var k = T.charAt(j);
          if (ie.registerController.isValidRegister(k)) {
            var V = y[k] || new Gt();
            x += '"' + k + "    " + V.toString() + `
`;
          }
        }
      else
        for (var k in y) {
          var E = y[k].toString();
          E.length && (x += '"' + k + "    " + E + `
`);
        }
      bt(p, x);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    sort: function(p, d) {
      var g, y, x, k, E;
      function T() {
        if (d.argString) {
          var at = new t.StringStream(d.argString);
          if (at.eat("!") && (g = !0), at.eol())
            return;
          if (!at.eatSpace())
            return "Invalid arguments";
          var Ke = at.match(/([dinuox]+)?\s*(\/.+\/)?\s*/);
          if (!Ke || !at.eol())
            return "Invalid arguments";
          if (Ke[1]) {
            y = Ke[1].indexOf("i") != -1, x = Ke[1].indexOf("u") != -1;
            var $t = Ke[1].indexOf("d") != -1 || Ke[1].indexOf("n") != -1, tn = Ke[1].indexOf("x") != -1, nn = Ke[1].indexOf("o") != -1;
            if (Number($t) + Number(tn) + Number(nn) > 1)
              return "Invalid arguments";
            k = $t && "decimal" || tn && "hex" || nn && "octal";
          }
          Ke[2] && (E = new RegExp(Ke[2].substr(1, Ke[2].length - 2), y ? "i" : ""));
        }
      }
      var j = T();
      if (j) {
        bt(p, j + ": " + d.argString);
        return;
      }
      var V = d.line || p.firstLine(), U = d.lineEnd || d.line || p.lastLine();
      if (V == U)
        return;
      var K = new e(V, 0), ee = new e(U, kt(p, U)), z = p.getRange(K, ee).split(`
`), G = k == "decimal" ? /(-?)([\d]+)/ : k == "hex" ? /(-?)(?:0x)?([0-9a-f]+)/i : k == "octal" ? /([0-7]+)/ : null, te = k == "decimal" ? 10 : k == "hex" ? 16 : k == "octal" ? 8 : void 0, he = [], Re = [];
      if (k || E)
        for (var Fe = 0; Fe < z.length; Fe++) {
          var Ne = E ? z[Fe].match(E) : null;
          Ne && Ne[0] != "" ? he.push(Ne) : G && G.exec(z[Fe]) ? he.push(z[Fe]) : Re.push(z[Fe]);
        }
      else
        Re = z;
      function yt(at, Ke) {
        if (g) {
          var $t;
          $t = at, at = Ke, Ke = $t;
        }
        y && (at = at.toLowerCase(), Ke = Ke.toLowerCase());
        var tn = G && G.exec(at), nn = G && G.exec(Ke);
        if (!tn || !nn)
          return at < Ke ? -1 : 1;
        var kr = parseInt((tn[1] + tn[2]).toLowerCase(), te), Gi = parseInt((nn[1] + nn[2]).toLowerCase(), te);
        return kr - Gi;
      }
      function bn(at, Ke) {
        if (g) {
          var $t;
          $t = at, at = Ke, Ke = $t;
        }
        return y && (at[0] = at[0].toLowerCase(), Ke[0] = Ke[0].toLowerCase()), at[0] < Ke[0] ? -1 : 1;
      }
      if (he.sort(E ? bn : yt), E)
        for (var Fe = 0; Fe < he.length; Fe++)
          he[Fe] = he[Fe].input;
      else k || Re.sort(yt);
      if (z = g ? he.concat(Re) : Re.concat(he), x) {
        var Yt = z, hn;
        z = [];
        for (var Fe = 0; Fe < Yt.length; Fe++)
          Yt[Fe] != hn && z.push(Yt[Fe]), hn = Yt[Fe];
      }
      p.replaceRange(z.join(`
`), K, ee);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vglobal: function(p, d) {
      this.global(p, d);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    normal: function(p, d) {
      var g = d.argString;
      if (g && g[0] == "!" && (g = g.slice(1), ue = !0), g = g.trimStart(), !g) {
        bt(p, "Argument is required.");
        return;
      }
      var y = d.line;
      if (typeof y == "number")
        for (var x = isNaN(d.lineEnd) ? y : d.lineEnd, k = y; k <= x; k++)
          p.setCursor(k, 0), dt(p, d.argString.trimStart()), p.state.vim.insertMode && is(p, !0);
      else
        dt(p, d.argString.trimStart()), p.state.vim.insertMode && is(p, !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    global: function(p, d) {
      var g = d.argString;
      if (!g) {
        bt(p, "Regular Expression missing from global");
        return;
      }
      var y = d.commandName[0] === "v";
      g[0] === "!" && d.commandName[0] === "g" && (y = !0, g = g.slice(1));
      var x = d.line !== void 0 ? d.line : p.firstLine(), k = d.lineEnd || d.line || p.lastLine(), E = ch(g), T = g, j = "";
      if (E && E.length && (T = E[0], j = E.slice(1, E.length).join("/")), T)
        try {
          wi(
            p,
            T,
            !0,
            !0
            /** smartCase */
          );
        } catch {
          bt(p, "Invalid regex: " + T);
          return;
        }
      for (var V = cr(p).getQuery(), U = [], K = x; K <= k; K++) {
        var ee = p.getLine(K), z = V.test(ee);
        z !== y && U.push(j ? p.getLineHandle(K) : ee);
      }
      if (!j) {
        bt(p, U.join(`
`));
        return;
      }
      var G = 0, te = function() {
        if (G < U.length) {
          var he = U[G++], Re = p.getLineNumber(he);
          if (Re == null) {
            te();
            return;
          }
          var Fe = Re + 1 + j;
          Se.processCommand(p, Fe, {
            callback: te
          });
        } else p.releaseLineHandles && p.releaseLineHandles();
      };
      te();
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    substitute: function(p, d) {
      if (!p.getSearchCursor)
        throw new Error("Search feature not available. Requires searchcursor.js or any other getSearchCursor implementation.");
      var g = d.argString, y = g ? xl(g, g[0]) : [], x = "", k = "", E, T, j, V = !1, U = !1;
      if (y && y.length)
        x = y[0], H("pcre") && x !== "" && (x = new RegExp(x).source), k = y[1], k !== void 0 && (H("pcre") ? k = fh(k.replace(/([^\\])&/g, "$1$$&")) : k = ph(k), ie.lastSubstituteReplacePart = k), E = y[2] ? y[2].split(" ") : [];
      else if (g && g.length) {
        bt(p, "Substitutions should be of the form :s/pattern/replace/");
        return;
      }
      if (E && (T = E[0], j = parseInt(E[1]), T && (T.indexOf("c") != -1 && (V = !0), T.indexOf("g") != -1 && (U = !0), H("pcre") ? x = x + "/" + T : x = x.replace(/\//g, "\\/") + "/" + T)), x)
        try {
          wi(
            p,
            x,
            !0,
            !0
            /** smartCase */
          );
        } catch {
          bt(p, "Invalid regex: " + x);
          return;
        }
      if (k = k || ie.lastSubstituteReplacePart, k === void 0) {
        bt(p, "No previous substitute regular expression");
        return;
      }
      var K = cr(p), ee = K.getQuery(), z = d.line !== void 0 ? d.line : p.getCursor().line, G = d.lineEnd || z;
      z == p.firstLine() && G == p.lastLine() && (G = 1 / 0), j && (z = G, G = z + j - 1);
      var te = xe(p, new e(z, 0)), he = p.getSearchCursor(ee, te);
      Si(p, V, U, z, G, he, ee, k, d.callback);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    startinsert: function(p, d) {
      dt(p, d.argString == "!" ? "A" : "i", {});
    },
    redo: t.commands.redo,
    undo: t.commands.undo,
    /** @arg {CodeMirrorV} cm */
    write: function(p) {
      t.commands.save ? t.commands.save(p) : p.save && p.save();
    },
    /** @arg {CodeMirrorV} cm */
    nohlsearch: function(p) {
      qa(p);
    },
    /** @arg {CodeMirrorV} cm */
    yank: function(p) {
      var d = rt(p.getCursor()), g = d.line, y = p.getLine(g);
      ie.registerController.pushText(
        "0",
        "yank",
        y,
        !0,
        !0
      );
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    delete: function(p, d) {
      var g = d.selectionLine, y = isNaN(d.selectionLineEnd) ? g : d.selectionLineEnd;
      un.delete(p, { linewise: !0 }, [
        {
          anchor: new e(g, 0),
          head: new e(y + 1, 0)
        }
      ]);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    join: function(p, d) {
      var g = d.selectionLine, y = isNaN(d.selectionLineEnd) ? g : d.selectionLineEnd;
      p.setCursor(new e(g, 0)), qe.joinLines(p, { repeat: y - g }, p.state.vim);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    delmarks: function(p, d) {
      if (!d.argString || !xr(d.argString)) {
        bt(p, "Argument required");
        return;
      }
      for (var g = p.state.vim, y = new t.StringStream(xr(d.argString)); !y.eol(); ) {
        y.eatSpace();
        var x = y.pos;
        if (!y.match(/[a-zA-Z]/, !1)) {
          bt(p, "Invalid argument: " + d.argString.substring(x));
          return;
        }
        var k = y.next();
        if (y.match("-", !0)) {
          if (!y.match(/[a-zA-Z]/, !1)) {
            bt(p, "Invalid argument: " + d.argString.substring(x));
            return;
          }
          var E = k, T = y.next();
          if (E && T && $(E) == $(T)) {
            var j = E.charCodeAt(0), V = T.charCodeAt(0);
            if (j >= V) {
              bt(p, "Invalid argument: " + d.argString.substring(x));
              return;
            }
            for (var U = 0; U <= V - j; U++) {
              var K = String.fromCharCode(j + U);
              delete g.marks[K];
            }
          } else {
            bt(p, "Invalid argument: " + E + "-");
            return;
          }
        } else k && delete g.marks[k];
      }
    }
  }, Se = new ur();
  function Si(p, d, g, y, x, k, E, T, j) {
    p.state.vim.exMode = !0;
    var V = !1, U, K, ee;
    function z() {
      p.operation(function() {
        for (; !V; )
          G(), he();
        Re();
      });
    }
    function G() {
      var Ne = p.getRange(k.from(), k.to()), yt = Ne.replace(E, T), bn = k.to().line;
      k.replace(yt), K = k.to().line, x += K - bn, ee = K < bn;
    }
    function te() {
      var Ne = U && rt(k.to()), yt = k.findNext();
      return yt && !yt[0] && Ne && it(k.from(), Ne) && (yt = k.findNext()), yt;
    }
    function he() {
      for (; te() && yh(k.from(), y, x); )
        if (!(!g && k.from().line == K && !ee)) {
          p.scrollIntoView(k.from(), 30), p.setSelection(k.from(), k.to()), U = k.from(), V = !1;
          return;
        }
      V = !0;
    }
    function Re(Ne) {
      if (Ne && Ne(), p.focus(), U) {
        p.setCursor(U);
        var yt = p.state.vim;
        yt.exMode = !1, yt.lastHPos = yt.lastHSPos = U.ch;
      }
      j && j();
    }
    function Fe(Ne, yt, bn) {
      t.e_stop(Ne);
      var Yt = Bt(Ne);
      switch (Yt) {
        case "y":
          G(), he();
          break;
        case "n":
          he();
          break;
        case "a":
          var hn = j;
          j = void 0, p.operation(z), j = hn;
          break;
        case "l":
          G();
        // fall through and exit.
        case "q":
        case "<Esc>":
        case "<C-c>":
        case "<C-[>":
          Re(bn);
          break;
      }
      return V && Re(bn), !0;
    }
    if (he(), V) {
      bt(p, "No matches for " + E.source);
      return;
    }
    if (!d) {
      z(), j && j();
      return;
    }
    xi(p, {
      prefix: ss("span", "replace with ", ss("strong", T), " (y/n/a/q/l)"),
      onKeyDown: Fe
    });
  }
  function is(p, d) {
    var g = p.state.vim, y = ie.macroModeState, x = ie.registerController.getRegister("."), k = y.isPlaying, E = y.lastInsertModeChanges;
    k || (p.off("change", Ui), g.insertEnd && g.insertEnd.clear(), g.insertEnd = void 0, t.off(p.getInputField(), "keydown", wr)), !k && g.insertModeRepeat > 1 && (Fl(
      p,
      g,
      g.insertModeRepeat - 1,
      !0
      /** repeatForInsert */
    ), g.lastEditInputState.repeatOverride = g.insertModeRepeat), delete g.insertModeRepeat, g.insertMode = !1, d || p.setCursor(p.getCursor().line, p.getCursor().ch - 1), p.setOption("keyMap", "vim"), p.setOption("disableInput", !0), p.toggleOverwrite(!1), x.setText(E.changes.join("")), t.signal(p, "vim-mode-change", { mode: "normal" }), y.isRecording && za(y);
  }
  function Ga(p) {
    r.unshift(p);
  }
  function st(p, d, g, y, x) {
    var k = { keys: p, type: d };
    k[d] = g, k[d + "Args"] = y;
    for (var E in x)
      k[E] = x[E];
    Ga(k);
  }
  J("insertModeEscKeysTimeout", 200, "number");
  function Xr(p, d, g, y) {
    var x = ie.registerController.getRegister(y);
    if (y == ":") {
      x.keyBuffer[0] && Se.processCommand(p, x.keyBuffer[0]), g.isPlaying = !1;
      return;
    }
    var k = x.keyBuffer, E = 0;
    g.isPlaying = !0, g.replaySearchQueries = x.searchQueries.slice(0);
    for (var T = 0; T < k.length; T++)
      for (var j = k[T], V, U, K = /<(?:[CSMA]-)*\w+>|./gi; V = K.exec(j); )
        if (U = V[0], Ue.handleKey(p, U, "macro"), d.insertMode) {
          var ee = x.insertModeChanges[E++].changes;
          ie.macroModeState.lastInsertModeChanges.changes = ee, Ml(p, ee, 1), is(p);
        }
    g.isPlaying = !1;
  }
  function Oh(p, d) {
    if (!p.isPlaying) {
      var g = p.latestRegister, y = ie.registerController.getRegister(g);
      y && y.pushText(d);
    }
  }
  function za(p) {
    if (!p.isPlaying) {
      var d = p.latestRegister, g = ie.registerController.getRegister(d);
      g && g.pushInsertModeChanges && g.pushInsertModeChanges(p.lastInsertModeChanges);
    }
  }
  function Dl(p, d) {
    if (!p.isPlaying) {
      var g = p.latestRegister, y = ie.registerController.getRegister(g);
      y && y.pushSearchQuery && y.pushSearchQuery(d);
    }
  }
  function Ui(p, d) {
    var g = ie.macroModeState, y = g.lastInsertModeChanges;
    if (!g.isPlaying)
      for (var x = p.state.vim; d; ) {
        if (y.expectCursorActivityForChange = !0, y.ignoreCount > 1)
          y.ignoreCount--;
        else if (d.origin == "+input" || d.origin == "paste" || d.origin === void 0) {
          var k = p.listSelections().length;
          k > 1 && (y.ignoreCount = k);
          var E = d.text.join(`
`);
          if (y.maybeReset && (y.changes = [], y.maybeReset = !1), E)
            if (p.state.overwrite && !/\n/.test(E))
              y.changes.push([E]);
            else {
              if (E.length > 1) {
                var T = x && x.insertEnd && x.insertEnd.find(), j = p.getCursor();
                if (T && T.line == j.line) {
                  var V = T.ch - j.ch;
                  V > 0 && V < E.length && (y.changes.push([E, V]), E = "");
                }
              }
              E && y.changes.push(E);
            }
        }
        d = d.next;
      }
  }
  function Qe(p) {
    var d = p.state.vim;
    if (d.insertMode) {
      var g = ie.macroModeState;
      if (g.isPlaying)
        return;
      var y = g.lastInsertModeChanges;
      y.expectCursorActivityForChange ? y.expectCursorActivityForChange = !1 : (y.maybeReset = !0, d.insertEnd && d.insertEnd.clear(), d.insertEnd = p.setBookmark(p.getCursor(), { insertLeft: !0 }));
    } else p.curOp?.isVimOp || El(p, d);
  }
  function El(p, d) {
    var g = p.getCursor("anchor"), y = p.getCursor("head");
    if (d.visualMode && !p.somethingSelected() ? ge(p, !1) : !d.visualMode && !d.insertMode && p.somethingSelected() && (d.visualMode = !0, d.visualLine = !1, t.signal(p, "vim-mode-change", { mode: "visual" })), d.visualMode) {
      var x = gt(y, g) ? 0 : -1, k = gt(y, g) ? -1 : 0;
      y = Ve(y, 0, x), g = Ve(g, 0, k), d.sel = {
        anchor: g,
        head: y
      }, Vr(p, d, "<", zt(y, g)), Vr(p, d, ">", ut(y, g));
    } else d.insertMode || (d.lastHPos = p.getCursor().ch);
  }
  function qi(p, d) {
    this.keyName = p, this.key = d.key, this.ctrlKey = d.ctrlKey, this.altKey = d.altKey, this.metaKey = d.metaKey, this.shiftKey = d.shiftKey;
  }
  function wr(p) {
    var d = ie.macroModeState, g = d.lastInsertModeChanges, y = t.keyName ? t.keyName(p) : p.key;
    y && (y.indexOf("Delete") != -1 || y.indexOf("Backspace") != -1) && (g.maybeReset && (g.changes = [], g.maybeReset = !1), g.changes.push(new qi(y, p)));
  }
  function Fl(p, d, g, y) {
    var x = ie.macroModeState;
    x.isPlaying = !0;
    var k = d.lastEditActionCommand, E = d.inputState;
    function T() {
      k ? Pn.processAction(p, d, k) : Pn.evalInput(p, d);
    }
    function j(U) {
      if (x.lastInsertModeChanges.changes.length > 0) {
        U = d.lastEditActionCommand ? U : 1;
        var K = x.lastInsertModeChanges;
        Ml(p, K.changes, U);
      }
    }
    if (d.inputState = d.lastEditInputState, k && k.interlaceInsertRepeat)
      for (var V = 0; V < g; V++)
        T(), j(1);
    else
      y || T(), j(g);
    d.inputState = E, d.insertMode && !y && is(p), x.isPlaying = !1;
  }
  function Bl(p, d) {
    t.lookupKey(d, "vim-insert", function(y) {
      return typeof y == "string" ? t.commands[y](p) : y(p), !0;
    });
  }
  function Ml(p, d, g) {
    var y = p.getCursor("head"), x = ie.macroModeState.lastInsertModeChanges.visualBlock;
    x && (O(p, y, x + 1), g = p.listSelections().length, p.setCursor(y));
    for (var k = 0; k < g; k++) {
      x && p.setCursor(Ve(y, k, 0));
      for (var E = 0; E < d.length; E++) {
        var T = d[E];
        if (T instanceof qi)
          Bl(p, T.keyName);
        else if (typeof T == "string")
          p.replaceSelection(T);
        else {
          var j = p.getCursor(), V = Ve(j, 0, T[0].length - (T[1] || 0));
          p.replaceRange(T[0], j, T[1] ? j : V), p.setCursor(V);
        }
      }
    }
    x && p.setCursor(Ve(y, 0, 1));
  }
  function Ya(p) {
    var d = new p.constructor();
    return Object.keys(p).forEach(function(g) {
      if (g != "insertEnd") {
        var y = p[g];
        Array.isArray(y) ? y = y.slice() : y && typeof y == "object" && y.constructor != Object && (y = Ya(y)), d[g] = y;
      }
    }), p.sel && (d.sel = {
      head: p.sel.head && rt(p.sel.head),
      anchor: p.sel.anchor && rt(p.sel.anchor)
    }), d;
  }
  function vh(p, d, g) {
    var k = Pe(p), y = (
      /**@type {CodeMirrorV}*/
      p
    ), x = !1, k = Ue.maybeInitVimState_(y), E = k.visualBlock || k.wasInVisualBlock, T = y.isInMultiSelectMode();
    if (k.wasInVisualBlock && !T ? k.wasInVisualBlock = !1 : T && k.visualBlock && (k.wasInVisualBlock = !0), d == "<Esc>" && !k.insertMode && !k.visualMode && T && k.status == "<Esc>")
      Mt(y);
    else if (E || !T || y.inVirtualSelectionMode)
      x = Ue.handleKey(y, d, g);
    else {
      var j = Ya(k), V = k.inputState.changeQueueList || [];
      y.operation(function() {
        y.curOp && (y.curOp.isVimOp = !0);
        var U = 0;
        y.forEachSelection(function() {
          y.state.vim.inputState.changeQueue = V[U];
          var K = y.getCursor("head"), ee = y.getCursor("anchor"), z = gt(K, ee) ? 0 : -1, G = gt(K, ee) ? -1 : 0;
          K = Ve(K, 0, z), ee = Ve(ee, 0, G), y.state.vim.sel.head = K, y.state.vim.sel.anchor = ee, x = Ue.handleKey(y, d, g), y.virtualSelection && (V[U] = y.state.vim.inputState.changeQueue, y.state.vim = Ya(j)), U++;
        }), y.curOp?.cursorActivity && !x && (y.curOp.cursorActivity = !1), y.state.vim = k, k.inputState.changeQueueList = V, k.inputState.changeQueue = null;
      }, !0);
    }
    return x && !k.visualMode && !k.insert && k.visualMode != y.somethingSelected() && El(y, k), x;
  }
  return Ce(), Ue;
}
function fr(t, e) {
  var n = e.ch, r = e.line + 1;
  r < 1 && (r = 1, n = 0), r > t.lines && (r = t.lines, n = Number.MAX_VALUE);
  var s = t.line(r);
  return Math.min(s.from + Math.max(0, n), s.to);
}
function Ar(t, e) {
  let n = t.lineAt(e);
  return { line: n.number - 1, ch: e - n.from };
}
class us {
  constructor(e, n) {
    this.line = e, this.ch = n;
  }
}
function Z5(t, e, n) {
  if (t.addEventListener)
    t.addEventListener(e, n, !1);
  else {
    var r = t._handlers || (t._handlers = {});
    r[e] = (r[e] || []).concat(n);
  }
}
function $5(t, e, n) {
  if (t.removeEventListener)
    t.removeEventListener(e, n, !1);
  else {
    var r = t._handlers, s = r && r[e];
    if (s) {
      var i = s.indexOf(n);
      i > -1 && (r[e] = s.slice(0, i).concat(s.slice(i + 1)));
    }
  }
}
function L5(t, e, ...n) {
  var r, s = (r = t._handlers) === null || r === void 0 ? void 0 : r[e];
  if (s)
    for (var i = 0; i < s.length; ++i)
      s[i](...n);
}
function Sb(t, ...e) {
  if (t)
    for (var n = 0; n < t.length; ++n)
      t[n](...e);
}
let Wf;
try {
  Wf = /* @__PURE__ */ new RegExp("[\\w\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
  Wf = /[\w]/;
}
function Oo(t, e) {
  var n = t.cm6;
  if (!n.state.readOnly) {
    var r = "input.type.compose";
    if (t.curOp && (t.curOp.lastChange || (r = "input.type.compose.start")), e.annotations)
      try {
        e.annotations.some(function(s) {
          s.value == "input" && (s.value = r);
        });
      } catch (s) {
        console.error(s);
      }
    else
      e.userEvent = r;
    return n.dispatch(e);
  }
}
function Ab(t, e) {
  var n;
  t.curOp && (t.curOp.$changeStart = void 0), (e ? Ku : Ba)(t.cm6);
  let r = (n = t.curOp) === null || n === void 0 ? void 0 : n.$changeStart;
  r != null && t.cm6.dispatch({ selection: { anchor: r } });
}
var pR = {};
class Je {
  constructor(e) {
    this.state = {}, this.marks = /* @__PURE__ */ Object.create(null), this.$mid = 0, this.options = {}, this._handlers = {}, this.$lastChangeEndOffset = 0, this.virtualSelection = null, this.cm6 = e, this.onChange = this.onChange.bind(this), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  // --------------------------
  openDialog(e, n, r) {
    return dR(this, e, n, r);
  }
  openNotification(e, n) {
    return fR(this, e, n);
  }
  on(e, n) {
    Z5(this, e, n);
  }
  off(e, n) {
    $5(this, e, n);
  }
  signal(e, n, r) {
    L5(this, e, n, r);
  }
  indexFromPos(e) {
    return fr(this.cm6.state.doc, e);
  }
  posFromIndex(e) {
    return Ar(this.cm6.state.doc, e);
  }
  foldCode(e) {
    let n = this.cm6, r = n.state.selection.ranges, s = this.cm6.state.doc, i = fr(s, e), a = ne.create([ne.range(i, i)], 0).ranges;
    n.state.selection.ranges = a, nA(n), n.state.selection.ranges = r;
  }
  firstLine() {
    return 0;
  }
  lastLine() {
    return this.cm6.state.doc.lines - 1;
  }
  lineCount() {
    return this.cm6.state.doc.lines;
  }
  setCursor(e, n) {
    typeof e == "object" && (n = e.ch, e = e.line);
    var r = fr(this.cm6.state.doc, { line: e, ch: n || 0 });
    this.cm6.dispatch({ selection: { anchor: r } }, { scrollIntoView: !this.curOp }), this.curOp && !this.curOp.isVimOp && this.onBeforeEndOperation();
  }
  getCursor(e) {
    var n = this.cm6.state.selection.main, r = e == "head" || !e ? n.head : e == "anchor" ? n.anchor : e == "start" ? n.from : e == "end" ? n.to : null;
    if (r == null)
      throw new Error("Invalid cursor type");
    return this.posFromIndex(r);
  }
  listSelections() {
    var e = this.cm6.state.doc;
    return this.cm6.state.selection.ranges.map((n) => ({
      anchor: Ar(e, n.anchor),
      head: Ar(e, n.head)
    }));
  }
  setSelections(e, n) {
    var r = this.cm6.state.doc, s = e.map((i) => {
      var a = fr(r, i.head), o = fr(r, i.anchor);
      return a == o ? ne.cursor(a, 1) : ne.range(o, a);
    });
    this.cm6.dispatch({
      selection: ne.create(s, n)
    });
  }
  setSelection(e, n, r) {
    this.setSelections([{ anchor: e, head: n }], 0), r && r.origin == "*mouse" && this.onBeforeEndOperation();
  }
  getLine(e) {
    var n = this.cm6.state.doc;
    return e < 0 || e >= n.lines ? "" : this.cm6.state.doc.line(e + 1).text;
  }
  getLineHandle(e) {
    return this.$lineHandleChanges || (this.$lineHandleChanges = []), { row: e, index: this.indexFromPos(new us(e, 0)) };
  }
  getLineNumber(e) {
    var n = this.$lineHandleChanges;
    if (!n)
      return null;
    for (var r = e.index, s = 0; s < n.length; s++)
      if (r = n[s].changes.mapPos(r, 1, an.TrackAfter), r == null)
        return null;
    var i = this.posFromIndex(r);
    return i.ch == 0 ? i.line : null;
  }
  releaseLineHandles() {
    this.$lineHandleChanges = void 0;
  }
  getRange(e, n) {
    var r = this.cm6.state.doc;
    return this.cm6.state.sliceDoc(fr(r, e), fr(r, n));
  }
  replaceRange(e, n, r, s) {
    r || (r = n);
    var i = this.cm6.state.doc, a = fr(i, n), o = fr(i, r);
    Oo(this, { changes: { from: a, to: o, insert: e } });
  }
  replaceSelection(e) {
    Oo(this, this.cm6.state.replaceSelection(e));
  }
  replaceSelections(e) {
    var n = this.cm6.state.selection.ranges, r = n.map((s, i) => ({ from: s.from, to: s.to, insert: e[i] || "" }));
    Oo(this, { changes: r });
  }
  getSelection() {
    return this.getSelections().join(`
`);
  }
  getSelections() {
    var e = this.cm6;
    return e.state.selection.ranges.map((n) => e.state.sliceDoc(n.from, n.to));
  }
  somethingSelected() {
    return this.cm6.state.selection.ranges.some((e) => !e.empty);
  }
  getInputField() {
    return this.cm6.contentDOM;
  }
  clipPos(e) {
    var n = this.cm6.state.doc, r = e.ch, s = e.line + 1;
    s < 1 && (s = 1, r = 0), s > n.lines && (s = n.lines, r = Number.MAX_VALUE);
    var i = n.line(s);
    return r = Math.min(Math.max(0, r), i.to - i.from), new us(s - 1, r);
  }
  getValue() {
    return this.cm6.state.doc.toString();
  }
  setValue(e) {
    var n = this.cm6;
    return n.dispatch({
      changes: { from: 0, to: n.state.doc.length, insert: e },
      selection: ne.range(0, 0)
    });
  }
  focus() {
    return this.cm6.focus();
  }
  blur() {
    return this.cm6.contentDOM.blur();
  }
  defaultTextHeight() {
    return this.cm6.defaultLineHeight;
  }
  findMatchingBracket(e, n) {
    var r = this.cm6.state, s = fr(r.doc, e), i = Br(r, s + 1, -1);
    return i && i.end ? { to: Ar(r.doc, i.end.from) } : (i = Br(r, s, 1), i && i.end ? { to: Ar(r.doc, i.end.from) } : { to: void 0 });
  }
  scanForBracket(e, n, r, s) {
    return bR(this, e, n, r, s);
  }
  indentLine(e, n) {
    n ? this.indentMore() : this.indentLess();
  }
  indentMore() {
    qo(this.cm6);
  }
  indentLess() {
    Go(this.cm6);
  }
  execCommand(e) {
    if (e == "indentAuto")
      Je.commands.indentAuto(this);
    else if (e == "goLineLeft")
      su(this.cm6);
    else if (e == "goLineRight") {
      ru(this.cm6);
      let n = this.cm6.state, r = n.selection.main.head;
      r < n.doc.length && n.sliceDoc(r, r + 1) !== `
` && YQ(this.cm6);
    } else
      console.log(e + " is not implemented");
  }
  setBookmark(e, n) {
    var r = n?.insertLeft ? 1 : -1, s = this.indexFromPos(e), i = new vR(this, s, r);
    return i;
  }
  addOverlay({ query: e }) {
    let n = new $m({
      regexp: !0,
      search: e.source,
      caseSensitive: !/i/.test(e.flags)
    });
    if (n.valid) {
      n.forVim = !0, this.cm6Query = n;
      let r = di.of(n);
      return this.cm6.dispatch({ effects: r }), n;
    }
  }
  removeOverlay(e) {
    if (!this.cm6Query)
      return;
    this.cm6Query.forVim = !1;
    let n = di.of(this.cm6Query);
    this.cm6.dispatch({ effects: n });
  }
  getSearchCursor(e, n) {
    var r = this, s = null, i = null;
    n.ch == null && (n.ch = Number.MAX_VALUE);
    var a = fr(r.cm6.state.doc, n), o = e.source.replace(/(\\.|{(?:\d+(?:,\d*)?|,\d+)})|[{}]/g, function(m, b) {
      return b || "\\" + m;
    });
    function l(m, b = 0, v = m.length) {
      return new Zm(m, o, { ignoreCase: e.ignoreCase }, b, v);
    }
    function u(m) {
      var b = r.cm6.state.doc;
      if (m > b.length)
        return null;
      let v = l(b, m).next();
      return v.done ? null : v.value;
    }
    var h = 1e4;
    function f(m, b) {
      var v = r.cm6.state.doc;
      for (let C = 1; ; C++) {
        let S = Math.max(m, b - C * h), B = l(v, S, b), $ = null;
        for (; !B.next().done; )
          $ = B.value;
        if ($ && (S == m || $.from > S + 10))
          return $;
        if (S == m)
          return null;
      }
    }
    return {
      findNext: function() {
        return this.find(!1);
      },
      findPrevious: function() {
        return this.find(!0);
      },
      find: function(m) {
        var b = r.cm6.state.doc;
        if (m) {
          let v = s ? s.from == s.to ? s.to - 1 : s.from : a;
          s = f(0, v);
        } else {
          let v = s ? s.from == s.to ? s.to + 1 : s.to : a;
          s = u(v);
        }
        return i = s && {
          from: Ar(b, s.from),
          to: Ar(b, s.to),
          match: s.match
        }, s && s.match;
      },
      from: function() {
        return i?.from;
      },
      to: function() {
        return i?.to;
      },
      replace: function(m) {
        s && (Oo(r, {
          changes: { from: s.from, to: s.to, insert: m }
        }), s.to = s.from + m.length, i && (i.to = Ar(r.cm6.state.doc, s.to)));
      }
    };
  }
  findPosV(e, n, r, s) {
    let { cm6: i } = this;
    const a = i.state.doc;
    let o = r == "page" ? i.dom.clientHeight : 0;
    const l = fr(a, e);
    let u = ne.cursor(l, 1, void 0, s), h = Math.round(Math.abs(n));
    for (let m = 0; m < h; m++)
      r == "page" ? u = i.moveVertically(u, n > 0, o) : r == "line" && (u = i.moveVertically(u, n > 0));
    let f = Ar(a, u.head);
    return (n < 0 && u.head == 0 && s != 0 && e.line == 0 && e.ch != 0 || n > 0 && u.head == a.length && f.ch != s && e.line == f.line) && (f.hitSide = !0), f;
  }
  charCoords(e, n) {
    var r = this.cm6.contentDOM.getBoundingClientRect(), s = fr(this.cm6.state.doc, e), i = this.cm6.coordsAtPos(s), a = -r.top;
    return { left: (i?.left || 0) - r.left, top: (i?.top || 0) + a, bottom: (i?.bottom || 0) + a };
  }
  coordsChar(e, n) {
    var r = this.cm6.contentDOM.getBoundingClientRect(), s = this.cm6.posAtCoords({ x: e.left + r.left, y: e.top + r.top }) || 0;
    return Ar(this.cm6.state.doc, s);
  }
  getScrollInfo() {
    var e = this.cm6.scrollDOM;
    return {
      left: e.scrollLeft,
      top: e.scrollTop,
      height: e.scrollHeight,
      width: e.scrollWidth,
      clientHeight: e.clientHeight,
      clientWidth: e.clientWidth
    };
  }
  scrollTo(e, n) {
    e != null && (this.cm6.scrollDOM.scrollLeft = e), n != null && (this.cm6.scrollDOM.scrollTop = n);
  }
  scrollIntoView(e, n) {
    if (e) {
      var r = this.indexFromPos(e);
      this.cm6.dispatch({
        effects: ye.scrollIntoView(r)
      });
    } else
      this.cm6.dispatch({ scrollIntoView: !0, userEvent: "scroll" });
  }
  getWrapperElement() {
    return this.cm6.dom;
  }
  // for tests
  getMode() {
    return { name: this.getOption("mode") };
  }
  setSize(e, n) {
    this.cm6.dom.style.width = e + 4 + "px", this.cm6.dom.style.height = n + "px", this.refresh();
  }
  refresh() {
    this.cm6.measure();
  }
  // event listeners
  destroy() {
    this.removeOverlay();
  }
  getLastEditEnd() {
    return this.posFromIndex(this.$lastChangeEndOffset);
  }
  onChange(e) {
    this.$lineHandleChanges && this.$lineHandleChanges.push(e);
    for (let r in this.marks)
      this.marks[r].update(e.changes);
    this.virtualSelection && (this.virtualSelection.ranges = this.virtualSelection.ranges.map((r) => r.map(e.changes)));
    var n = this.curOp = this.curOp || {};
    e.changes.iterChanges((r, s, i, a, o) => {
      (n.$changeStart == null || n.$changeStart > i) && (n.$changeStart = i), this.$lastChangeEndOffset = a;
      var l = { text: o.toJSON() };
      n.lastChange ? n.lastChange.next = n.lastChange = l : n.lastChange = n.change = l;
    }, !0), n.changeHandlers || (n.changeHandlers = this._handlers.change && this._handlers.change.slice());
  }
  onSelectionChange() {
    var e = this.curOp = this.curOp || {};
    e.cursorActivityHandlers || (e.cursorActivityHandlers = this._handlers.cursorActivity && this._handlers.cursorActivity.slice()), this.curOp.cursorActivity = !0;
  }
  operation(e, n) {
    this.curOp || (this.curOp = { $d: 0 }), this.curOp.$d++;
    try {
      var r = e();
    } finally {
      this.curOp && (this.curOp.$d--, this.curOp.$d || this.onBeforeEndOperation());
    }
    return r;
  }
  onBeforeEndOperation() {
    var e = this.curOp, n = !1;
    e && (e.change && Sb(e.changeHandlers, this, e.change), e && e.cursorActivity && (Sb(e.cursorActivityHandlers, this, null), e.isVimOp && (n = !0)), this.curOp = null), n && this.scrollIntoView();
  }
  moveH(e, n) {
    if (n == "char") {
      var r = this.getCursor();
      this.setCursor(r.line, r.ch + e);
    }
  }
  setOption(e, n) {
    switch (e) {
      case "keyMap":
        this.state.keyMap = n;
        break;
      case "textwidth":
        this.state.textwidth = n;
        break;
    }
  }
  getOption(e) {
    switch (e) {
      case "firstLineNumber":
        return 1;
      case "tabSize":
        return this.cm6.state.tabSize || 4;
      case "readOnly":
        return this.cm6.state.readOnly;
      case "indentWithTabs":
        return this.cm6.state.facet(Fa) == "	";
      // TODO
      case "indentUnit":
        return this.cm6.state.facet(Fa).length || 2;
      case "textwidth":
        return this.state.textwidth;
      // for tests
      case "keyMap":
        return this.state.keyMap || "vim";
    }
  }
  toggleOverwrite(e) {
    this.state.overwrite = e;
  }
  getTokenTypeAt(e) {
    var n, r = this.indexFromPos(e), s = XS(this.cm6.state, r), i = s?.resolve(r), a = ((n = i?.type) === null || n === void 0 ? void 0 : n.name) || "";
    return /comment/i.test(a) ? "comment" : /string/i.test(a) ? "string" : "";
  }
  overWriteSelection(e) {
    var n = this.cm6.state.doc, r = this.cm6.state.selection, s = r.ranges.map((i) => {
      if (i.empty) {
        var a = i.to < n.length ? n.sliceString(i.from, i.to + 1) : "";
        if (a && !/\n/.test(a))
          return ne.range(i.from, i.to + 1);
      }
      return i;
    });
    this.cm6.dispatch({
      selection: ne.create(s, r.mainIndex)
    }), this.replaceSelection(e);
  }
  /*** multiselect ****/
  isInMultiSelectMode() {
    return this.cm6.state.selection.ranges.length > 1;
  }
  virtualSelectionMode() {
    return !!this.virtualSelection;
  }
  forEachSelection(e) {
    var n = this.cm6.state.selection;
    this.virtualSelection = ne.create(n.ranges, n.mainIndex);
    for (var r = 0; r < this.virtualSelection.ranges.length; r++) {
      var s = this.virtualSelection.ranges[r];
      s && (this.cm6.dispatch({ selection: ne.create([s]) }), e(), this.virtualSelection.ranges[r] = this.cm6.state.selection.ranges[0]);
    }
    this.cm6.dispatch({ selection: this.virtualSelection }), this.virtualSelection = null;
  }
  hardWrap(e) {
    return xR(this, e);
  }
}
Je.isMac = typeof navigator < "u" && /* @__PURE__ */ /Mac/.test(navigator.platform);
Je.Pos = us;
Je.StringStream = ZT;
Je.commands = {
  cursorCharLeft: function(t) {
    Wo(t.cm6);
  },
  redo: function(t) {
    Ab(t, !1);
  },
  undo: function(t) {
    Ab(t, !0);
  },
  newlineAndIndent: function(t) {
    Uo({
      state: t.cm6.state,
      dispatch: (e) => Oo(t, e)
    });
  },
  indentAuto: function(t) {
    h5(t.cm6);
  },
  newlineAndIndentContinueComment: void 0,
  save: void 0
};
Je.isWordChar = function(t) {
  return Wf.test(t);
};
Je.keys = pR;
Je.addClass = function(t, e) {
};
Je.rmClass = function(t, e) {
};
Je.e_preventDefault = function(t) {
  t.preventDefault();
};
Je.e_stop = function(t) {
  var e, n;
  (e = t?.stopPropagation) === null || e === void 0 || e.call(t), (n = t?.preventDefault) === null || n === void 0 || n.call(t);
};
Je.lookupKey = function(e, n, r) {
  var s = Je.keys[e];
  s && r(s);
};
Je.on = Z5;
Je.off = $5;
Je.signal = L5;
Je.findMatchingTag = yR;
Je.findEnclosingTag = OR;
Je.keyName = void 0;
function I5(t, e, n) {
  var r = document.createElement("div");
  return r.appendChild(e), r;
}
function N5(t, e) {
  t.state.currentNotificationClose && t.state.currentNotificationClose(), t.state.currentNotificationClose = e;
}
function fR(t, e, n) {
  N5(t, o);
  var r = I5(t, e, n && n.bottom), s = !1, i, a = n && typeof n.duration < "u" ? n.duration : 5e3;
  function o() {
    s || (s = !0, clearTimeout(i), r.remove(), X5(t, r));
  }
  return r.onclick = function(l) {
    l.preventDefault(), o();
  }, V5(t, r), a && (i = setTimeout(o, a)), o;
}
function V5(t, e) {
  var n = t.state.dialog;
  t.state.dialog = e, e && n !== e && (n && n.contains(document.activeElement) && t.focus(), n && n.parentElement ? n.parentElement.replaceChild(e, n) : n && n.remove(), Je.signal(t, "dialog"));
}
function X5(t, e) {
  t.state.dialog == e && (t.state.dialog = null, Je.signal(t, "dialog"));
}
function dR(t, e, n, r) {
  r || (r = {}), N5(t, void 0);
  var s = I5(t, e, r.bottom), i = !1;
  V5(t, s);
  function a(l) {
    if (typeof l == "string")
      o.value = l;
    else {
      if (i)
        return;
      i = !0, X5(t, s), t.state.dialog || t.focus(), r.onClose && r.onClose(s);
    }
  }
  var o = s.getElementsByTagName("input")[0];
  return o && (r.value && (o.value = r.value, r.selectValueOnOpen !== !1 && o.select()), r.onInput && Je.on(o, "input", function(l) {
    r.onInput(l, o.value, a);
  }), r.onKeyUp && Je.on(o, "keyup", function(l) {
    r.onKeyUp(l, o.value, a);
  }), Je.on(o, "keydown", function(l) {
    r && r.onKeyDown && r.onKeyDown(l, o.value, a) || (l.keyCode == 13 && n(o.value), (l.keyCode == 27 || r.closeOnEnter !== !1 && l.keyCode == 13) && (o.blur(), Je.e_stop(l), a()));
  }), r.closeOnBlur !== !1 && Je.on(o, "blur", function() {
    setTimeout(function() {
      document.activeElement !== o && a();
    });
  }), o.focus()), a;
}
var mR = { "(": ")>", ")": "(<", "[": "]>", "]": "[<", "{": "}>", "}": "{<", "<": ">>", ">": "<<" };
function gR(t) {
  return t && t.bracketRegex || /[(){}[\]]/;
}
function bR(t, e, n, r, s) {
  for (var i = s && s.maxScanLineLength || 1e4, a = s && s.maxScanLines || 1e3, o = [], l = gR(s), u = n > 0 ? Math.min(e.line + a, t.lastLine() + 1) : Math.max(t.firstLine() - 1, e.line - a), h = e.line; h != u; h += n) {
    var f = t.getLine(h);
    if (f) {
      var m = n > 0 ? 0 : f.length - 1, b = n > 0 ? f.length : -1;
      if (!(f.length > i))
        for (h == e.line && (m = e.ch - (n < 0 ? 1 : 0)); m != b; m += n) {
          var v = f.charAt(m);
          if (l.test(v)) {
            var C = mR[v];
            if (C && C.charAt(1) == ">" == n > 0)
              o.push(v);
            else if (o.length)
              o.pop();
            else
              return { pos: new us(h, m), ch: v };
          }
        }
    }
  }
  return h - n == (n > 0 ? t.lastLine() : t.firstLine()) ? !1 : null;
}
function yR(t, e) {
}
function OR(t, e) {
  var n, r, s = t.cm6.state, i = t.indexFromPos(e);
  if (i < s.doc.length) {
    var a = s.sliceDoc(i, i + 1);
    a == "<" && i++;
  }
  for (var o = XS(s, i), l = o?.resolve(i) || null; l; ) {
    if (((n = l.firstChild) === null || n === void 0 ? void 0 : n.type.name) == "OpenTag" && ((r = l.lastChild) === null || r === void 0 ? void 0 : r.type.name) == "CloseTag")
      return {
        open: Pb(s.doc, l.firstChild),
        close: Pb(s.doc, l.lastChild)
      };
    l = l.parent;
  }
}
function Pb(t, e) {
  return {
    from: Ar(t, e.from),
    to: Ar(t, e.to)
  };
}
class vR {
  constructor(e, n, r) {
    this.cm = e, this.id = e.$mid++, this.offset = n, this.assoc = r, e.marks[this.id] = this;
  }
  clear() {
    delete this.cm.marks[this.id];
  }
  find() {
    return this.offset == null ? null : this.cm.posFromIndex(this.offset);
  }
  update(e) {
    this.offset != null && (this.offset = e.mapPos(this.offset, this.assoc, an.TrackDel));
  }
}
function xR(t, e) {
  for (var n, r = e.column || t.getOption("textwidth") || 80, s = e.allowMerge != !1, i = Math.min(e.from, e.to), a = Math.max(e.from, e.to); i <= a; ) {
    var o = t.getLine(i);
    if (o.length > r) {
      var l = v(o, r, 5);
      if (l) {
        var u = (n = /^\s*/.exec(o)) === null || n === void 0 ? void 0 : n[0];
        t.replaceRange(`
` + u, new us(i, l.start), new us(i, l.end));
      }
      a++;
    } else if (s && /\S/.test(o) && i != a) {
      var h = t.getLine(i + 1);
      if (h && /\S/.test(h)) {
        var f = o.replace(/\s+$/, ""), m = h.replace(/^\s+/, ""), b = f + " " + m, l = v(b, r, 5);
        l && l.start > f.length || b.length < r ? (t.replaceRange(" ", new us(i, f.length), new us(i + 1, h.length - m.length)), i--, a--) : f.length < o.length && t.replaceRange("", new us(i, f.length), new us(i, o.length));
      }
    }
    i++;
  }
  return i;
  function v(C, S, B) {
    if (!(C.length < S)) {
      var $ = C.slice(0, S), W = C.slice(S), _ = /^(?:(\s+)|(\S+)(\s+))/.exec(W), M = /(?:(\s+)|(\s+)(\S+))$/.exec($), Z = 0, N = 0;
      if (M && !M[2] && (Z = S - M[1].length, N = S), _ && !_[2] && (Z || (Z = S), N = S + _[1].length), Z)
        return {
          start: Z,
          end: N
        };
      if (M && M[2] && M.index > B)
        return {
          start: M.index,
          end: M.index + M[2].length
        };
      if (_ && _[2])
        return Z = S + _[2].length, {
          start: Z,
          end: Z + _[3].length
        };
    }
  }
}
let Uf = AS;
class wR {
  constructor(e, n, r, s, i, a, o, l, u, h) {
    this.left = e, this.top = n, this.height = r, this.fontFamily = s, this.fontSize = i, this.fontWeight = a, this.color = o, this.className = l, this.letter = u, this.partial = h;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", e.style.height = this.height + "px", e.style.lineHeight = this.height + "px", e.style.fontFamily = this.fontFamily, e.style.fontSize = this.fontSize, e.style.fontWeight = this.fontWeight, e.style.color = this.partial ? "transparent" : this.color, e.className = this.className, e.textContent = this.letter;
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.height == e.height && this.fontFamily == e.fontFamily && this.fontSize == e.fontSize && this.fontWeight == e.fontWeight && this.color == e.color && this.className == e.className && this.letter == e.letter;
  }
}
class kR {
  constructor(e, n) {
    this.view = e, this.rangePieces = [], this.cursors = [], this.cm = n, this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) }, this.cursorLayer = e.scrollDOM.appendChild(document.createElement("div")), this.cursorLayer.className = "cm-cursorLayer cm-vimCursorLayer", this.cursorLayer.setAttribute("aria-hidden", "true"), e.requestMeasure(this.measureReq), this.setBlinkRate();
  }
  setBlinkRate() {
    let n = Uf(this.cm.cm6.state).cursorBlinkRate;
    this.cursorLayer.style.animationDuration = n + "ms";
  }
  update(e) {
    (e.selectionSet || e.geometryChanged || e.viewportChanged) && (this.view.requestMeasure(this.measureReq), this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink"), CR(e) && this.setBlinkRate();
  }
  scheduleRedraw() {
    this.view.requestMeasure(this.measureReq);
  }
  readPos() {
    let { state: e } = this.view, n = [];
    for (let r of e.selection.ranges) {
      let s = r == e.selection.main, i = DR(this.cm, this.view, r, s);
      i && n.push(i);
    }
    return { cursors: n };
  }
  drawSel({ cursors: e }) {
    if (e.length != this.cursors.length || e.some((n, r) => !n.eq(this.cursors[r]))) {
      let n = this.cursorLayer.children;
      if (n.length !== e.length) {
        this.cursorLayer.textContent = "";
        for (const r of e)
          this.cursorLayer.appendChild(r.draw());
      } else
        e.forEach((r, s) => r.adjust(n[s]));
      this.cursors = e;
    }
  }
  destroy() {
    this.cursorLayer.remove();
  }
}
function CR(t) {
  return Uf(t.startState) != Uf(t.state);
}
const SR = {
  ".cm-vimMode .cm-line": {
    "& ::selection": { backgroundColor: "transparent !important" },
    "&::selection": { backgroundColor: "transparent !important" },
    caretColor: "transparent !important"
  },
  ".cm-fat-cursor": {
    position: "absolute",
    background: "#ff9696",
    border: "none",
    whiteSpace: "pre"
  },
  "&:not(.cm-focused) .cm-fat-cursor": {
    background: "none",
    outline: "solid 1px #ff9696",
    color: "transparent !important"
  }
}, AR = /* @__PURE__ */ lr.highest(/* @__PURE__ */ ye.theme(SR));
function PR(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Et.LTR ? e.left : e.right - t.scrollDOM.clientWidth) - t.scrollDOM.scrollLeft, top: e.top - t.scrollDOM.scrollTop };
}
function DR(t, e, n, r) {
  var s, i;
  let a = n.head, o = !1, l = 1, u = t.state.vim;
  if (u && (!u.insertMode || t.state.overwrite)) {
    if (o = !0, u.visualBlock && !r)
      return null;
    n.anchor < n.head && a--, t.state.overwrite ? l = 0.2 : u.status && (l = 0.5);
  }
  if (o) {
    let f = a < e.state.doc.length && e.state.sliceDoc(a, a + 1);
    f && /[\uDC00-\uDFFF]/.test(f) && a > 1 && (a--, f = e.state.sliceDoc(a, a + 1));
    let m = e.coordsAtPos(a, 1);
    if (!m)
      return null;
    let b = PR(e), v = e.domAtPos(a), C = v ? v.node : e.contentDOM;
    for (; v && v.node instanceof HTMLElement; )
      C = v.node, v = { node: v.node.childNodes[v.offset], offset: 0 };
    if (!(C instanceof HTMLElement)) {
      if (!C.parentNode)
        return null;
      C = C.parentNode;
    }
    let S = getComputedStyle(C), B = m.left, $ = (i = (s = e).coordsForChar) === null || i === void 0 ? void 0 : i.call(s, a);
    if ($ && (B = $.left), !f || f == `
` || f == "\r")
      f = " ";
    else if (f == "	") {
      f = " ";
      var h = e.coordsAtPos(a + 1, -1);
      h && (B = h.left - (h.left - m.left) / parseInt(S.tabSize));
    } else /[\uD800-\uDBFF]/.test(f) && a < e.state.doc.length - 1 && (f += e.state.sliceDoc(a + 1, a + 2));
    let W = m.bottom - m.top;
    return new wR(B - b.left, m.top - b.top + W * (1 - l), W * l, S.fontFamily, S.fontSize, S.fontWeight, S.color, r ? "cm-fat-cursor cm-cursor-primary" : "cm-fat-cursor cm-cursor-secondary", f, l != 1);
  } else
    return null;
}
var ER = typeof navigator < "u" && /* @__PURE__ */ /linux/i.test(navigator.platform) && /* @__PURE__ */ / Gecko\/\d+/.exec(navigator.userAgent);
const Pi = /* @__PURE__ */ hR(Je), FR = 250, BR = /* @__PURE__ */ ye.baseTheme({
  ".cm-vimMode .cm-cursorLayer:not(.cm-vimCursorLayer)": {
    display: "none"
  },
  ".cm-vim-panel": {
    padding: "0px 10px",
    fontFamily: "monospace",
    minHeight: "1.3em"
  },
  ".cm-vim-panel input": {
    border: "none",
    outline: "none",
    backgroundColor: "inherit"
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" }
}), MR = /* @__PURE__ */ qt.fromClass(class {
  constructor(t) {
    this.status = "", this.query = null, this.decorations = Be.none, this.waitForCopy = !1, this.lastKeydown = "", this.useNextTextInput = !1, this.compositionText = "", this.view = t;
    const e = this.cm = new Je(t);
    Pi.enterVimMode(this.cm), this.view.cm = this.cm, this.cm.state.vimPlugin = this, this.blockCursor = new kR(t, e), this.updateClass(), this.cm.on("vim-command-done", () => {
      e.state.vim && (e.state.vim.status = ""), this.blockCursor.scheduleRedraw(), this.updateStatus();
    }), this.cm.on("vim-mode-change", (n) => {
      e.state.vim && (e.state.vim.mode = n.mode, n.subMode && (e.state.vim.mode += " block"), e.state.vim.status = "", this.blockCursor.scheduleRedraw(), this.updateClass(), this.updateStatus());
    }), this.cm.on("dialog", () => {
      this.cm.state.statusbar ? this.updateStatus() : t.dispatch({
        effects: W5.of(!!this.cm.state.dialog)
      });
    }), this.dom = document.createElement("span"), this.dom.style.cssText = "position: absolute; right: 10px; top: 1px", this.statusButton = document.createElement("span"), this.statusButton.onclick = (n) => {
      Pi.handleKey(this.cm, "<Esc>", "user"), this.cm.focus();
    }, this.statusButton.style.cssText = "cursor: pointer";
  }
  update(t) {
    var e;
    if ((t.viewportChanged || t.docChanged) && this.query && this.highlight(this.query), t.docChanged && this.cm.onChange(t), t.selectionSet && this.cm.onSelectionChange(), t.viewportChanged, this.cm.curOp && !this.cm.curOp.isVimOp && this.cm.onBeforeEndOperation(), t.transactions) {
      for (let n of t.transactions)
        for (let r of n.effects)
          if (r.is(di))
            if (!((e = r.value) === null || e === void 0 ? void 0 : e.forVim))
              this.highlight(null);
            else {
              let i = r.value.create();
              this.highlight(i);
            }
    }
    this.blockCursor.update(t);
  }
  updateClass() {
    const t = this.cm.state;
    !t.vim || t.vim.insertMode && !t.overwrite ? this.view.scrollDOM.classList.remove("cm-vimMode") : this.view.scrollDOM.classList.add("cm-vimMode");
  }
  updateStatus() {
    let t = this.cm.state.statusbar, e = this.cm.state.vim;
    if (!t || !e)
      return;
    let n = this.cm.state.dialog;
    if (n)
      n.parentElement != t && (t.textContent = "", t.appendChild(n));
    else {
      t.textContent = "";
      var r = (e.mode || "normal").toUpperCase();
      e.insertModeReturn && (r += "(C-O)"), this.statusButton.textContent = `--${r}--`, t.appendChild(this.statusButton);
    }
    this.dom.textContent = e.status, t.appendChild(this.dom);
  }
  destroy() {
    Pi.leaveVimMode(this.cm), this.updateClass(), this.blockCursor.destroy(), delete this.view.cm;
  }
  highlight(t) {
    if (this.query = t, !t)
      return this.decorations = Be.none;
    let { view: e } = this, n = new vs();
    for (let r = 0, s = e.visibleRanges, i = s.length; r < i; r++) {
      let { from: a, to: o } = s[r];
      for (; r < i - 1 && o > s[r + 1].from - 2 * FR; )
        o = s[++r].to;
      t.highlight(e.state, a, o, (l, u) => {
        n.add(l, u, QR);
      });
    }
    return this.decorations = n.finish();
  }
  handleKey(t, e) {
    const n = this.cm;
    let r = n.state.vim;
    if (!r)
      return;
    const s = Pi.vimKeyFromEvent(t, r);
    if (Je.signal(this.cm, "inputEvent", { type: "handleKey", key: s }), !s)
      return;
    if (s == "<Esc>" && !r.insertMode && !r.visualMode && this.query) {
      const o = r.searchState_;
      o && (n.removeOverlay(o.getOverlay()), o.setOverlay(null));
    }
    if (s === "<C-c>" && !Je.isMac && n.somethingSelected())
      return this.waitForCopy = !0, !0;
    r.status = (r.status || "") + s;
    let a = Pi.multiSelectHandleKey(n, s, "user");
    return r = Pi.maybeInitVimState_(n), !a && r.insertMode && n.state.overwrite && (t.key && t.key.length == 1 && !/\n/.test(t.key) ? (a = !0, n.overWriteSelection(t.key)) : t.key == "Backspace" && (a = !0, Je.commands.cursorCharLeft(n))), a && (Je.signal(this.cm, "vim-keypress", s), t.preventDefault(), t.stopPropagation(), this.blockCursor.scheduleRedraw()), this.updateStatus(), !!a;
  }
}, {
  eventHandlers: {
    copy: function(t, e) {
      this.waitForCopy && (this.waitForCopy = !1, Promise.resolve().then(() => {
        var n = this.cm, r = n.state.vim;
        r && (r.insertMode ? n.setSelection(n.getCursor(), n.getCursor()) : n.operation(() => {
          n.curOp && (n.curOp.isVimOp = !0), Pi.handleKey(n, "<Esc>", "user");
        }));
      }));
    },
    compositionstart: function(t, e) {
      this.useNextTextInput = !0, Je.signal(this.cm, "inputEvent", t);
    },
    compositionupdate: function(t, e) {
      Je.signal(this.cm, "inputEvent", t);
    },
    compositionend: function(t, e) {
      Je.signal(this.cm, "inputEvent", t);
    },
    keypress: function(t, e) {
      Je.signal(this.cm, "inputEvent", t), this.lastKeydown == "Dead" && this.handleKey(t, e);
    },
    keydown: function(t, e) {
      Je.signal(this.cm, "inputEvent", t), this.lastKeydown = t.key, this.lastKeydown == "Unidentified" || this.lastKeydown == "Process" || this.lastKeydown == "Dead" ? this.useNextTextInput = !0 : (this.useNextTextInput = !1, this.handleKey(t, e));
    }
  },
  provide: () => [
    ye.inputHandler.of((t, e, n, r) => {
      var s, i, a = $R(t);
      if (!a)
        return !1;
      var o = (s = a.state) === null || s === void 0 ? void 0 : s.vim, l = a.state.vimPlugin;
      if (o && !o.insertMode && !(!((i = a.curOp) === null || i === void 0) && i.isVimOp)) {
        if (r === "\0\0")
          return !0;
        if (Je.signal(a, "inputEvent", {
          type: "text",
          text: r,
          from: e,
          to: n
        }), r.length == 1 && l.useNextTextInput) {
          if (o.expectLiteralNext && t.composing)
            return l.compositionText = r, !1;
          if (l.compositionText) {
            var u = l.compositionText;
            l.compositionText = "";
            var h = t.state.selection.main.head, f = t.state.sliceDoc(h - u.length, h);
            if (u === f) {
              var m = a.getCursor();
              a.replaceRange("", a.posFromIndex(h - u.length), m);
            }
          }
          return l.handleKey({
            key: r,
            preventDefault: () => {
            },
            stopPropagation: () => {
            }
          }), TR(t), !0;
        }
      }
      return !1;
    })
  ],
  decorations: (t) => t.decorations
});
function TR(t) {
  var e = t.scrollDOM.parentElement;
  if (e) {
    if (ER) {
      t.contentDOM.textContent = "\0\0", t.contentDOM.dispatchEvent(new CustomEvent("compositionend"));
      return;
    }
    var n = t.scrollDOM.nextSibling, r = window.getSelection(), s = r && {
      anchorNode: r.anchorNode,
      anchorOffset: r.anchorOffset,
      focusNode: r.focusNode,
      focusOffset: r.focusOffset
    };
    t.scrollDOM.remove(), e.insertBefore(t.scrollDOM, n);
    try {
      s && r && (r.setPosition(s.anchorNode, s.anchorOffset), s.focusNode && r.extend(s.focusNode, s.focusOffset));
    } catch (i) {
      console.error(i);
    }
    t.focus(), t.contentDOM.dispatchEvent(new CustomEvent("compositionend"));
  }
}
const QR = /* @__PURE__ */ Be.mark({ class: "cm-searchMatch" }), W5 = /* @__PURE__ */ Ze.define(), jR = /* @__PURE__ */ Vt.define({
  create: () => !1,
  update(t, e) {
    for (let n of e.effects)
      n.is(W5) && (t = n.value);
    return t;
  },
  provide: (t) => hi.from(t, (e) => e ? _R : null)
});
function _R(t) {
  let e = document.createElement("div");
  e.className = "cm-vim-panel";
  let n = t.cm;
  return n.state.dialog && e.appendChild(n.state.dialog), { top: !1, dom: e };
}
function RR(t) {
  let e = document.createElement("div");
  e.className = "cm-vim-panel";
  let n = t.cm;
  return n.state.statusbar = e, n.state.vimPlugin.updateStatus(), { dom: e };
}
function ZR(t = {}) {
  return [
    BR,
    MR,
    AR,
    t.status ? hi.of(RR) : jR
  ];
}
function $R(t) {
  return t.cm || null;
}
class Db {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.diagnostic = r;
  }
}
class Fi {
  constructor(e, n, r) {
    this.diagnostics = e, this.panel = n, this.selected = r;
  }
  static init(e, n, r) {
    let s = e, i = r.facet(Yo).markerFilter;
    i && (s = i(s, r));
    let a = e.slice().sort((f, m) => f.from - m.from || f.to - m.to), o = new vs(), l = [], u = 0;
    for (let f = 0; ; ) {
      let m = f == a.length ? null : a[f];
      if (!m && !l.length)
        break;
      let b, v;
      for (l.length ? (b = u, v = l.reduce((S, B) => Math.min(S, B.to), m && m.from > b ? m.from : 1e8)) : (b = m.from, v = m.to, l.push(m), f++); f < a.length; ) {
        let S = a[f];
        if (S.from == b && (S.to > S.from || S.to == b))
          l.push(S), f++, v = Math.min(S.to, v);
        else {
          v = Math.min(S.from, v);
          break;
        }
      }
      let C = HR(l);
      if (l.some((S) => S.from == S.to || S.from == S.to - 1 && r.doc.lineAt(S.from).to == S.from))
        o.add(b, b, Be.widget({
          widget: new qR(C),
          diagnostics: l.slice()
        }));
      else {
        let S = l.reduce((B, $) => $.markClass ? B + " " + $.markClass : B, "");
        o.add(b, v, Be.mark({
          class: "cm-lintRange cm-lintRange-" + C + S,
          diagnostics: l.slice(),
          inclusiveEnd: l.some((B) => B.to > v)
        }));
      }
      u = v;
      for (let S = 0; S < l.length; S++)
        l[S].to <= u && l.splice(S--, 1);
    }
    let h = o.finish();
    return new Fi(h, n, Ma(h));
  }
}
function Ma(t, e = null, n = 0) {
  let r = null;
  return t.between(n, 1e9, (s, i, { spec: a }) => {
    if (!(e && a.diagnostics.indexOf(e) < 0))
      if (!r)
        r = new Db(s, i, e || a.diagnostics[0]);
      else {
        if (a.diagnostics.indexOf(r.diagnostic) < 0)
          return !1;
        r = new Db(r.from, i, r.diagnostic);
      }
  }), r;
}
function LR(t, e) {
  let n = e.pos, r = e.end || n, s = t.state.facet(Yo).hideOn(t, n, r);
  if (s != null)
    return s;
  let i = t.startState.doc.lineAt(e.pos);
  return !!(t.effects.some((a) => a.is(U5)) || t.changes.touchesRange(i.from, Math.max(i.to, r)));
}
function IR(t, e) {
  return t.field(Or, !1) ? e : e.concat(Ze.appendConfig.of(KR));
}
const U5 = /* @__PURE__ */ Ze.define(), Vm = /* @__PURE__ */ Ze.define(), q5 = /* @__PURE__ */ Ze.define(), Or = /* @__PURE__ */ Vt.define({
  create() {
    return new Fi(Be.none, null, null);
  },
  update(t, e) {
    if (e.docChanged && t.diagnostics.size) {
      let n = t.diagnostics.map(e.changes), r = null, s = t.panel;
      if (t.selected) {
        let i = e.changes.mapPos(t.selected.from, 1);
        r = Ma(n, t.selected.diagnostic, i) || Ma(n, null, i);
      }
      !n.size && s && e.state.facet(Yo).autoPanel && (s = null), t = new Fi(n, s, r);
    }
    for (let n of e.effects)
      if (n.is(U5)) {
        let r = e.state.facet(Yo).autoPanel ? n.value.length ? Ho.open : null : t.panel;
        t = Fi.init(n.value, r, e.state);
      } else n.is(Vm) ? t = new Fi(t.diagnostics, n.value ? Ho.open : null, t.selected) : n.is(q5) && (t = new Fi(t.diagnostics, t.panel, n.value));
    return t;
  },
  provide: (t) => [
    hi.from(t, (e) => e.panel),
    ye.decorations.from(t, (e) => e.diagnostics)
  ]
}), NR = /* @__PURE__ */ Be.mark({ class: "cm-lintRange cm-lintRange-active" });
function VR(t, e, n) {
  let { diagnostics: r } = t.state.field(Or), s, i = -1, a = -1;
  r.between(e - (n < 0 ? 1 : 0), e + (n > 0 ? 1 : 0), (l, u, { spec: h }) => {
    if (e >= l && e <= u && (l == u || (e > l || n > 0) && (e < u || n < 0)))
      return s = h.diagnostics, i = l, a = u, !1;
  });
  let o = t.state.facet(Yo).tooltipFilter;
  return s && o && (s = o(s, t.state)), s ? {
    pos: i,
    end: a,
    above: t.state.doc.lineAt(i).to < a,
    create() {
      return { dom: XR(t, s) };
    }
  } : null;
}
function XR(t, e) {
  return _t("ul", { class: "cm-tooltip-lint" }, e.map((n) => z5(t, n, !1)));
}
const WR = (t) => {
  let e = t.state.field(Or, !1);
  (!e || !e.panel) && t.dispatch({ effects: IR(t.state, [Vm.of(!0)]) });
  let n = Lo(t, Ho.open);
  return n && n.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, Eb = (t) => {
  let e = t.state.field(Or, !1);
  return !e || !e.panel ? !1 : (t.dispatch({ effects: Vm.of(!1) }), !0);
}, UR = (t) => {
  let e = t.state.field(Or, !1);
  if (!e)
    return !1;
  let n = t.state.selection.main, r = e.diagnostics.iter(n.to + 1);
  return !r.value && (r = e.diagnostics.iter(0), !r.value || r.from == n.from && r.to == n.to) ? !1 : (t.dispatch({ selection: { anchor: r.from, head: r.to }, scrollIntoView: !0 }), !0);
}, Yo = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Object.assign({ sources: t.map((e) => e.source).filter((e) => e != null) }, Xs(t.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null,
      hideOn: () => null
    }, {
      needsRefresh: (e, n) => e ? n ? (r) => e(r) || n(r) : e : n
    }));
  }
});
function G5(t) {
  let e = [];
  if (t)
    e: for (let { name: n } of t) {
      for (let r = 0; r < n.length; r++) {
        let s = n[r];
        if (/[a-zA-Z]/.test(s) && !e.some((i) => i.toLowerCase() == s.toLowerCase())) {
          e.push(s);
          continue e;
        }
      }
      e.push("");
    }
  return e;
}
function z5(t, e, n) {
  var r;
  let s = n ? G5(e.actions) : [];
  return _t("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, _t("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage(t) : e.message), (r = e.actions) === null || r === void 0 ? void 0 : r.map((i, a) => {
    let o = !1, l = (m) => {
      if (m.preventDefault(), o)
        return;
      o = !0;
      let b = Ma(t.state.field(Or).diagnostics, e);
      b && i.apply(t, b.from, b.to);
    }, { name: u } = i, h = s[a] ? u.indexOf(s[a]) : -1, f = h < 0 ? u : [
      u.slice(0, h),
      _t("u", u.slice(h, h + 1)),
      u.slice(h + 1)
    ];
    return _t("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: l,
      onmousedown: l,
      "aria-label": ` Action: ${u}${h < 0 ? "" : ` (access key "${s[a]})"`}.`
    }, f);
  }), e.source && _t("div", { class: "cm-diagnosticSource" }, e.source));
}
class qR extends ns {
  constructor(e) {
    super(), this.sev = e;
  }
  eq(e) {
    return e.sev == this.sev;
  }
  toDOM() {
    return _t("span", { class: "cm-lintPoint cm-lintPoint-" + this.sev });
  }
}
class Fb {
  constructor(e, n) {
    this.diagnostic = n, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = z5(e, n, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class Ho {
  constructor(e) {
    this.view = e, this.items = [];
    let n = (s) => {
      if (s.keyCode == 27)
        Eb(this.view), this.view.focus();
      else if (s.keyCode == 38 || s.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (s.keyCode == 40 || s.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (s.keyCode == 36)
        this.moveSelection(0);
      else if (s.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (s.keyCode == 13)
        this.view.focus();
      else if (s.keyCode >= 65 && s.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: i } = this.items[this.selectedIndex], a = G5(i.actions);
        for (let o = 0; o < a.length; o++)
          if (a[o].toUpperCase().charCodeAt(0) == s.keyCode) {
            let l = Ma(this.view.state.field(Or).diagnostics, i);
            l && i.actions[o].apply(e, l.from, l.to);
          }
      } else
        return;
      s.preventDefault();
    }, r = (s) => {
      for (let i = 0; i < this.items.length; i++)
        this.items[i].dom.contains(s.target) && this.moveSelection(i);
    };
    this.list = _t("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: n,
      onclick: r
    }), this.dom = _t("div", { class: "cm-panel-lint" }, this.list, _t("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => Eb(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(Or).selected;
    if (!e)
      return -1;
    for (let n = 0; n < this.items.length; n++)
      if (this.items[n].diagnostic == e.diagnostic)
        return n;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: n } = this.view.state.field(Or), r = 0, s = !1, i = null, a = /* @__PURE__ */ new Set();
    for (e.between(0, this.view.state.doc.length, (o, l, { spec: u }) => {
      for (let h of u.diagnostics) {
        if (a.has(h))
          continue;
        a.add(h);
        let f = -1, m;
        for (let b = r; b < this.items.length; b++)
          if (this.items[b].diagnostic == h) {
            f = b;
            break;
          }
        f < 0 ? (m = new Fb(this.view, h), this.items.splice(r, 0, m), s = !0) : (m = this.items[f], f > r && (this.items.splice(r, f - r), s = !0)), n && m.diagnostic == n.diagnostic ? m.dom.hasAttribute("aria-selected") || (m.dom.setAttribute("aria-selected", "true"), i = m) : m.dom.hasAttribute("aria-selected") && m.dom.removeAttribute("aria-selected"), r++;
      }
    }); r < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      s = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new Fb(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), s = !0), i ? (this.list.setAttribute("aria-activedescendant", i.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: i.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: o, panel: l }) => {
        let u = l.height / this.list.offsetHeight;
        o.top < l.top ? this.list.scrollTop -= (l.top - o.top) / u : o.bottom > l.bottom && (this.list.scrollTop += (o.bottom - l.bottom) / u);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), s && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function n() {
      let r = e;
      e = r.nextSibling, r.remove();
    }
    for (let r of this.items)
      if (r.dom.parentNode == this.list) {
        for (; e != r.dom; )
          n();
        e = r.dom.nextSibling;
      } else
        this.list.insertBefore(r.dom, e);
    for (; e; )
      n();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let n = this.view.state.field(Or), r = Ma(n.diagnostics, this.items[e].diagnostic);
    r && this.view.dispatch({
      selection: { anchor: r.from, head: r.to },
      scrollIntoView: !0,
      effects: q5.of(r)
    });
  }
  static open(e) {
    return new Ho(e);
  }
}
function GR(t, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`;
}
function lc(t) {
  return GR(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const zR = /* @__PURE__ */ ye.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ lc("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ lc("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ lc("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ lc("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
});
function YR(t) {
  return t == "error" ? 4 : t == "warning" ? 3 : t == "info" ? 2 : 1;
}
function HR(t) {
  let e = "hint", n = 1;
  for (let r of t) {
    let s = YR(r.severity);
    s > n && (n = s, e = r.severity);
  }
  return e;
}
const KR = [
  Or,
  /* @__PURE__ */ ye.decorations.compute([Or], (t) => {
    let { selected: e, panel: n } = t.field(Or);
    return !e || !n || e.from == e.to ? Be.none : Be.set([
      NR.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ BS(VR, { hideOn: LR }),
  zR
], Y5 = (t) => (e) => {
  const n = t === "down";
  let r = e.state.selection;
  for (const s of r.ranges)
    r = r.addRange(e.moveVertically(s, n));
  return e.dispatch({ selection: r }), !0;
}, JR = /* @__PURE__ */ Y5("up"), eZ = /* @__PURE__ */ Y5("down"), tZ = (t) => {
  let e = null;
  for (const n of t.state.selection.ranges)
    if (!n.empty)
      for (let r = n.from; r <= n.to; ) {
        const s = t.state.doc.lineAt(r), i = Math.min(s.to, n.to);
        e ? e = e.addRange(ne.range(i, i)) : e = ne.single(i), r = s.to + 1;
      }
  return e ? (t.dispatch({ selection: e }), !0) : !1;
}, nZ = [
  { key: "Ctrl-Space", run: Ff },
  { key: "Escape", run: gA },
  { key: "ArrowDown", run: /* @__PURE__ */ ii(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ ii(!1) },
  { key: "PageDown", run: /* @__PURE__ */ ii(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ ii(!1, "page") },
  { key: "Enter", run: Ef },
  { key: "Tab", run: Ef },
  { key: "Mod-f", run: _5, scope: "editor search-panel" },
  { key: "Escape", run: R5, scope: "editor search-panel" },
  { key: "Alt-Enter", run: M5, scope: "editor search-panel" },
  { key: "Mod-Alt-Enter", run: T5, scope: "editor search-panel" },
  { key: "Ctrl-g", run: Q_ },
  { key: "Mod-d", run: Z_, preventDefault: !0 },
  { key: "Shift-Mod-l", run: U_ },
  // Enter and shift enter handled within the search panel plugin
  { key: "Enter", run: Uo, shift: Uo },
  {
    key: "ArrowLeft",
    run: Wo,
    shift: iu,
    preventDefault: !0
  },
  {
    key: "Mod-ArrowLeft",
    mac: "Alt-ArrowLeft",
    run: jA,
    shift: WA
  },
  {
    key: "ArrowRight",
    run: eu,
    shift: au,
    preventDefault: !0
  },
  {
    key: "Mod-ArrowRight",
    mac: "Alt-ArrowRight",
    run: _A,
    shift: UA
  },
  {
    key: "ArrowUp",
    run: tu,
    shift: ou,
    preventDefault: !0
  },
  {
    key: "ArrowDown",
    run: nu,
    shift: lu,
    preventDefault: !0
  },
  {
    key: "Home",
    run: su,
    shift: Tf
  },
  {
    mac: "Cmd-ArrowLeft",
    run: su,
    shift: Tf
  },
  { key: "Mod-Home", run: hu, shift: fu },
  { mac: "Cmd-ArrowUp", run: hu, shift: fu },
  { key: "PageUp", run: Ao, shift: cu },
  { mac: "Ctrl-ArrowUp", run: Ao, shift: cu },
  { key: "PageDown", run: ma, shift: uu },
  { mac: "Ctrl-ArrowDown", run: ma, shift: uu },
  {
    key: "End",
    run: ru,
    shift: Mf
  },
  {
    mac: "Cmd-ArrowRight",
    run: ru,
    shift: Mf
  },
  {
    key: "Mod-Alt-ArrowUp",
    linux: "Shift-Alt-ArrowUp",
    run: JR,
    preventDefault: !0
  },
  {
    key: "Mod-Alt-ArrowDown",
    linux: "Shift-Alt-ArrowDown",
    run: eZ,
    preventDefault: !0
  },
  {
    key: "Shift-Alt-i",
    run: tZ
  },
  { key: "Mod-End", run: pu, shift: du },
  { mac: "Cmd-ArrowDown", run: pu, shift: du },
  { key: "Mod-a", run: HA },
  { key: "Backspace", run: wA },
  { key: "Backspace", run: ga, shift: ga },
  { key: "Delete", run: mu },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: gu },
  { key: "Mod-Delete", mac: "Alt-Delete", run: t5 },
  { mac: "Mod-Backspace", run: cj },
  { mac: "Mod-Delete", run: Qf },
  {
    mac: "Ctrl-b",
    run: Wo,
    shift: iu,
    preventDefault: !0
  },
  { mac: "Ctrl-f", run: eu, shift: au },
  { mac: "Ctrl-p", run: tu, shift: ou },
  { mac: "Ctrl-n", run: nu, shift: lu },
  { mac: "Ctrl-a", run: LA, shift: zA },
  { mac: "Ctrl-e", run: IA, shift: YA },
  { mac: "Ctrl-d", run: mu },
  { mac: "Ctrl-h", run: ga },
  { mac: "Ctrl-k", run: Qf },
  { mac: "Ctrl-Alt-h", run: gu },
  { mac: "Ctrl-o", run: Bm },
  { mac: "Ctrl-t", run: n5 },
  { mac: "Ctrl-v", run: ma },
  { mac: "Alt-v", run: Ao },
  { key: "Shift-Mod-k", run: c5 },
  { key: "Alt-ArrowDown", run: i5 },
  { key: "Alt-ArrowUp", run: s5 },
  { win: "Shift-Alt-ArrowDown", mac: "Shift-Alt-ArrowDown", run: l5 },
  { win: "Shift-Alt-ArrowUp", mac: "Shift-Alt-ArrowUp", run: o5 },
  { key: "Mod-l", run: KA, preventDefault: !0 },
  { key: "Shift-Mod-\\", run: NA },
  { key: "Tab", run: qo, shift: Go, preventDefault: !0 },
  { key: "Mod-[", run: Go },
  { key: "Mod-]", run: qo },
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: nA },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: OT },
  { key: "Mod-k Mod-0", run: vT },
  { key: "Mod-k Mod-j", run: xT },
  { key: "Mod-k Mod-c", run: RQ },
  { key: "Mod-k Mod-u", run: ZQ },
  { key: "Mod-/", run: Yu },
  { key: "Shift-Alt-a", run: Pm },
  { key: "Mod-z", run: Ku, preventDefault: !0 },
  { key: "Mod-y", run: Ba, preventDefault: !0 },
  { key: "Mod-Shift-z", run: Ba, preventDefault: !0 },
  { key: "Mod-u", run: FA, preventDefault: !0 },
  { key: "Mod-Shift-m", run: WR },
  { key: "F8", run: UR }
  // Shift should go back, but previousDiagnostic is not implemented
], rZ = qt.fromClass(
  class {
    constructor() {
    }
  },
  {
    provide: () => lr.highest(Ws.of([...nZ]))
  }
), sZ = (t) => [rZ].concat(t ?? []), iZ = {
  vim: ZR,
  emacs: lR,
  codemirror: () => Ws.of(Tm),
  vscode: sZ
};
function aZ(t) {
  const e = iZ[t];
  return [e ? lr.high(e()) : []];
}
const et = ({ theme: t, settings: e, styles: n }) => {
  const r = ye.theme(
    {
      "&": {
        color: e.foreground,
        backgroundColor: e.background
      },
      ".cm-gutters": {
        backgroundColor: e.gutterBackground,
        color: e.gutterForeground
        //borderRightColor: settings.gutterBorder
      },
      ".cm-content": {
        caretColor: e.caret
      },
      ".cm-cursor, .cm-dropCursor": {
        borderLeftColor: e.caret
      },
      ".cm-activeLineGutter": {
        // color: settings.gutterActiveForeground
        backgroundColor: e.lineHighlight
      },
      ".cm-activeLine": {
        backgroundColor: e.lineHighlight
      },
      "&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection": {
        background: e.selection + " !important"
      },
      "& .cm-selectionMatch": {
        backgroundColor: e.selectionMatch
      }
    },
    { dark: t === "dark" }
  ), s = hl.define(n);
  return [r, Om(s)];
}, H5 = {
  background: "#222",
  lineBackground: "#22222299",
  foreground: "#fff",
  caret: "#ffcc00",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#036dd626",
  lineHighlight: "#00000050",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
}, oZ = et({
  theme: "dark",
  settings: H5,
  styles: [
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#89ddff" },
    { tag: c.labelName, color: "#89ddff" },
    { tag: c.keyword, color: "#c792ea" },
    { tag: c.operator, color: "#89ddff" },
    { tag: c.special(c.variableName), color: "#eeffff" },
    // { tag: t.typeName, color: '#f07178' }, // original
    { tag: c.typeName, color: "#c3e88d" },
    { tag: c.atom, color: "#f78c6c" },
    // { tag: t.number, color: '#ff5370' }, // original
    { tag: c.number, color: "#c3e88d" },
    { tag: c.definition(c.variableName), color: "#82aaff" },
    { tag: c.string, color: "#c3e88d" },
    //     { tag: t.special(t.string), color: '#f07178' }, // original
    { tag: c.special(c.string), color: "#c3e88d" },
    { tag: c.comment, color: "#7d8799" },
    // { tag: t.variableName, color: '#f07178' }, // original
    { tag: c.variableName, color: "#c792ea" },
    // { tag: t.tagName, color: '#ff5370' }, // original
    { tag: c.tagName, color: "#c3e88d" },
    { tag: c.bracket, color: "#525154" },
    // { tag: t.bracket, color: '#a2a1a4' }, // original
    { tag: c.meta, color: "#ffcb6b" },
    { tag: c.attributeName, color: "#c792ea" },
    { tag: c.propertyName, color: "#c792ea" },
    { tag: c.className, color: "#decb6b" },
    { tag: c.invalid, color: "#ffffff" },
    { tag: [c.unit, c.punctuation], color: "#82aaff" }
  ]
}), K5 = {
  background: "#051DB5",
  lineBackground: "#051DB550",
  foreground: "white",
  // whats that?
  caret: "white",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#036dd626",
  // lineHighlight: '#8a91991a', // original
  lineHighlight: "#00000050",
  gutterBackground: "transparent",
  // gutterForeground: '#8a919966',
  gutterForeground: "#8a919966"
}, lZ = et({
  theme: "dark",
  settings: K5,
  styles: [
    { tag: c.labelName, color: "inherit" },
    { tag: c.keyword, color: "inherit" },
    { tag: c.operator, color: "inherit" },
    { tag: c.special(c.variableName), color: "inherit" },
    { tag: c.typeName, color: "inherit" },
    { tag: c.atom, color: "inherit" },
    { tag: c.number, color: "inherit" },
    { tag: c.definition(c.variableName), color: "inherit" },
    { tag: c.string, color: "inherit" },
    { tag: c.special(c.string), color: "inherit" },
    { tag: c.comment, color: "inherit" },
    { tag: c.variableName, color: "inherit" },
    { tag: c.tagName, color: "inherit" },
    { tag: c.bracket, color: "inherit" },
    { tag: c.meta, color: "inherit" },
    { tag: c.attributeName, color: "inherit" },
    { tag: c.propertyName, color: "inherit" },
    { tag: c.className, color: "inherit" },
    { tag: c.invalid, color: "inherit" },
    { tag: [c.unit, c.punctuation], color: "inherit" }
  ]
}), J5 = {
  background: "black",
  foreground: "white",
  // whats that?
  caret: "white",
  selection: "#ffffff20",
  selectionMatch: "#036dd626",
  lineHighlight: "#ffffff10",
  lineBackground: "#00000050",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
}, cZ = et({
  theme: "dark",
  settings: J5,
  styles: [
    { tag: c.labelName, color: "inherit" },
    { tag: c.keyword, color: "inherit" },
    { tag: c.operator, color: "inherit" },
    { tag: c.special(c.variableName), color: "inherit" },
    { tag: c.typeName, color: "inherit" },
    { tag: c.atom, color: "inherit" },
    { tag: c.number, color: "inherit" },
    { tag: c.definition(c.variableName), color: "inherit" },
    { tag: c.string, color: "inherit" },
    { tag: c.special(c.string), color: "inherit" },
    { tag: c.comment, color: "inherit" },
    { tag: c.variableName, color: "inherit" },
    { tag: c.tagName, color: "inherit" },
    { tag: c.bracket, color: "inherit" },
    { tag: c.meta, color: "inherit" },
    { tag: c.attributeName, color: "inherit" },
    { tag: c.propertyName, color: "inherit" },
    { tag: c.className, color: "inherit" },
    { tag: c.invalid, color: "inherit" },
    { tag: [c.unit, c.punctuation], color: "inherit" }
  ]
}), e3 = {
  background: "white",
  foreground: "black",
  // whats that?
  caret: "black",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#ffffff26",
  lineHighlight: "#cccccc50",
  lineBackground: "#ffffff50",
  gutterBackground: "transparent",
  gutterForeground: "black",
  light: !0
}, uZ = et({
  theme: "light",
  settings: e3,
  styles: [
    { tag: c.labelName, color: "inherit" },
    { tag: c.keyword, color: "inherit" },
    { tag: c.operator, color: "inherit" },
    { tag: c.special(c.variableName), color: "inherit" },
    { tag: c.typeName, color: "inherit" },
    { tag: c.atom, color: "inherit" },
    { tag: c.number, color: "inherit" },
    { tag: c.definition(c.variableName), color: "inherit" },
    { tag: c.string, color: "inherit" },
    { tag: c.special(c.string), color: "inherit" },
    { tag: c.comment, color: "inherit" },
    { tag: c.variableName, color: "inherit" },
    { tag: c.tagName, color: "inherit" },
    { tag: c.bracket, color: "inherit" },
    { tag: c.meta, color: "inherit" },
    { tag: c.attributeName, color: "inherit" },
    { tag: c.propertyName, color: "inherit" },
    { tag: c.className, color: "inherit" },
    { tag: c.invalid, color: "inherit" }
  ]
});
let mr = "#6edee4", t3 = "white", n3 = "red", r3 = "#f8fc55";
const s3 = {
  background: "#000000",
  foreground: mr,
  // whats that?
  caret: n3,
  selection: r3,
  selectionMatch: mr,
  lineHighlight: "#6edee440",
  // panel bg
  lineBackground: "#00000040",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
  // customStyle: '.cm-line { line-height: 1 }',
};
let xp = r3, cc = t3;
const hZ = et({
  theme: "dark",
  settings: s3,
  styles: [
    { tag: c.labelName, color: t3 },
    { tag: c.keyword, color: mr },
    { tag: c.operator, color: cc },
    { tag: c.special(c.variableName), color: mr },
    { tag: c.typeName, color: mr },
    { tag: c.atom, color: mr },
    { tag: c.number, color: cc },
    { tag: c.definition(c.variableName), color: mr },
    { tag: c.string, color: cc },
    { tag: c.special(c.string), color: cc },
    { tag: c.comment, color: xp },
    { tag: c.variableName, color: mr },
    { tag: c.tagName, color: mr },
    { tag: c.bracket, color: xp },
    { tag: c.meta, color: mr },
    { tag: c.attributeName, color: mr },
    { tag: c.propertyName, color: mr },
    // methods
    { tag: c.className, color: mr },
    { tag: c.invalid, color: n3 },
    { tag: [c.unit, c.punctuation], color: xp }
  ]
}), pZ = {
  // https://www.deviantart.com/advancedfan2020/art/Game-Boy-Palette-Set-Color-HEX-Part-09-920495662
  "Central Florida A": ["#FFF630", "#B3AC22", "#666213", "#191905"],
  "Central Florida B": ["#38CEBA", "#279082", "#16524A", "#061513"],
  "Central Florida C": ["#FF8836", "#B35F26", "#663616", "#190E05"],
  "Central Florida D": ["#E07070", "#9D4E4E", "#5A2D2D", "#160B0B"],
  "Central Florida E": ["#7AA4CB", "#55738E", "#314251", "#0C1014"],
  "Feminine Energy A": ["#DC5686", "#9A415E", "#582536", "#16090D"],
  "Feminine Energy B": ["#D0463C", "#92312A", "#531c18", "#150706"],
  "Feminine Energy C": ["#D86918", "#974A11", "#562A0A", "#160A02"],
  "Feminine Energy D": ["#EFC54F", "#A78A36", "#604F20", "#181408"],
  "Feminine Energy E": ["#866399", "#5e456b", "#36283d", "#0d0a0f"],
  "Sour Watermelon A": ["#993366", "#6B2447", "#3D1429", "#0F050A"],
  "Sour Watermelon B": ["#996666", "#6B4747", "#3D2929", "#0F0A0A"],
  "Sour Watermelon C": ["#999966", "#686B47", "#3d3d29", "#0f0f0A"],
  "Sour Watermelon D": ["#99cc66", "#6b8f47", "#3d5229", "#0f140a"],
  "Sour Watermelon E": ["#99ff66", "#6bb347", "#3d6629", "#0f190a"],
  //https://www.deviantart.com/advancedfan2020/art/Game-Boy-Palette-Set-Color-HEX-Part-02-920073260
  "Peri Peaceful A": ["#909BE9", "#656DA3", "#3A3E5D", "#0e0f17"],
  "Peri Peaceful B": ["#68628d", "#494563", "#2a2738", "#0a0a0e"],
  // pretty dim
  "Peri Peaceful E": ["#b5a0a9", "#7f7076", "#484044", "#121011"],
  "Hichem Palette B": ["#4fa3a5", "#377273", "#204142", "#081010"],
  "Hichem Palette C": ["#Fe6f9b", "#b24e6d", "#662c3e", "#190b0f"],
  "Hichem Palette D": ["#ffbb5a", "#b3833f", "#664b24", "#191309"],
  "JSR2 A": ["#E0EFC0", "#9da786", "#5a604d", "#161813"]
}, Dn = pZ["Sour Watermelon B"], i3 = {
  background: Dn[3],
  foreground: Dn[1],
  caret: Dn[0],
  selection: Dn[0],
  selectionMatch: Dn[1],
  lineHighlight: Dn[3],
  lineBackground: Dn[3] + "90",
  //lineBackground: 'transparent',
  gutterBackground: "transparent",
  gutterForeground: Dn[0],
  light: !1
  // customStyle: '.cm-line { line-height: 1 }',
}, fZ = et({
  theme: "dark",
  settings: i3,
  styles: [
    { tag: c.comment, color: Dn[2] },
    { tag: c.string, color: Dn[1] },
    { tag: [c.atom, c.number], color: Dn[1] },
    { tag: [c.meta, c.labelName, c.variableName], color: Dn[0] },
    {
      tag: [c.keyword, c.tagName, c.arithmeticOperator],
      color: Dn[1]
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: Dn[0] },
    { tag: [c.function(c.variableName), c.propertyName], color: Dn[0] },
    { tag: c.atom, color: Dn[1] }
  ]
}), qf = "#5c019a", dZ = "#fbeffc", a3 = "#272C35", mZ = "#fee1ff", gZ = "#465063", bZ = "#9acd3f", yZ = "#97a1b7", OZ = "#f6a6fd", Gf = {
  background: "white",
  lineBackground: "transparent",
  foreground: qf,
  caret: "#797977",
  selection: dZ,
  selectionMatch: "#2B323D",
  gutterBackground: a3,
  gutterForeground: gZ,
  gutterBorder: "transparent",
  lineHighlight: mZ
}, vZ = et({
  theme: "light",
  settings: Gf,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: qf
    },
    { tag: [c.tagName, c.heading], color: Gf.foreground },
    { tag: c.comment, color: yZ },
    { tag: [c.variableName, c.propertyName, c.labelName], color: OZ },
    { tag: [c.attributeName, c.number], color: "#d19a66" },
    { tag: c.className, color: a3 },
    { tag: c.keyword, color: qf },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: bZ }
  ]
}), zr = ["#1e1e1e", "#fbde2d", "#ff1493", "#4c83ff", "#ededed", "#cccccc", "#ffffff30", "#dc2f8c"], o3 = {
  background: "#000000",
  lineBackground: "transparent",
  foreground: zr[4],
  selection: zr[6],
  gutterBackground: zr[0],
  gutterForeground: zr[5],
  gutterBorder: "transparent",
  lineHighlight: zr[0]
}, xZ = et({
  theme: "dark",
  settings: o3,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: zr[4]
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: zr[3] },
    { tag: c.comment, color: "#54636D" },
    { tag: [c.variableName, c.propertyName, c.labelName], color: zr[4] },
    { tag: [c.attributeName, c.number], color: zr[3] },
    { tag: c.keyword, color: zr[1] },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: zr[2] }
  ]
}), Hn = ["#000000", "#ff5356", "#bd312a", "#54636D", "#171717"], l3 = {
  background: Hn[0],
  lineBackground: "transparent",
  foreground: Hn[2],
  selection: Hn[4],
  selectionMatch: Hn[0],
  gutterBackground: Hn[0],
  gutterForeground: Hn[3],
  gutterBorder: "transparent",
  lineHighlight: Hn[0]
}, wZ = et({
  theme: "dark",
  settings: l3,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: Hn[2]
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: Hn[1] },
    { tag: c.comment, color: Hn[3] },
    { tag: [c.variableName, c.propertyName, c.labelName], color: Hn[2] },
    { tag: [c.attributeName, c.number], color: Hn[1] },
    { tag: c.keyword, color: Hn[2] },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: Hn[1] }
  ]
}), Kn = ["#000000", "#8ed675", "#56bd2a", "#54636D", "#171717"], c3 = {
  background: Kn[0],
  lineBackground: "transparent",
  foreground: Kn[2],
  selection: Kn[4],
  selectionMatch: Kn[0],
  gutterBackground: Kn[0],
  gutterForeground: Kn[3],
  gutterBorder: "transparent",
  lineHighlight: Kn[0]
}, kZ = et({
  theme: "dark",
  settings: c3,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: Kn[2]
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: Kn[1] },
    { tag: c.comment, color: Kn[3] },
    { tag: [c.variableName, c.propertyName, c.labelName], color: Kn[2] },
    { tag: [c.attributeName, c.number], color: Kn[1] },
    { tag: c.keyword, color: Kn[2] },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: Kn[1] }
  ]
}), Jn = ["rgb(0, 0, 0)", "rgb(82, 208, 250)", "rgba(113, 208, 250, .4)", "rgba(113, 208, 250, .15)"], u3 = {
  background: Jn[0],
  lineBackground: "transparent",
  foreground: Jn[1],
  selection: Jn[2],
  selectionMatch: Jn[0],
  gutterBackground: Jn[0],
  gutterForeground: Jn[2],
  gutterBorder: "transparent",
  lineHighlight: Jn[0]
}, CZ = et({
  theme: "dark",
  settings: u3,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: Jn[1]
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: Jn[1] },
    { tag: [c.comment, c.brace, c.bracket], color: Jn[2] },
    { tag: [c.variableName, c.propertyName, c.labelName], color: Jn[1] },
    { tag: [c.attributeName, c.number], color: Jn[1] },
    { tag: c.keyword, color: Jn[1] },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: Jn[1] }
  ]
}), Rn = [
  "rgb(84, 93, 98)",
  "rgb(255, 255, 255)",
  "rgba(255, 255, 255, .25)",
  "rgb(67, 76, 81)",
  "rgb(186, 230, 115)",
  "rgb(252, 184, 67)",
  "rgb(124, 206, 254)",
  "rgb(83, 101, 102)",
  "rgba(46, 62, 72,.5)",
  "rgb(94, 100, 108)",
  "rgb(167, 216, 177)"
], h3 = {
  background: Rn[0],
  lineBackground: "transparent",
  foreground: Rn[10],
  selection: Rn[8],
  selectionMatch: Rn[0],
  gutterBackground: Rn[3],
  gutterForeground: Rn[2],
  gutterBorder: "transparent",
  lineHighlight: Rn[3]
}, SZ = et({
  theme: "dark",
  settings: h3,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: Rn[1]
    },
    { tag: [c.bool, c.special(c.variableName)], color: Rn[1] },
    { tag: [c.comment, c.brace, c.bracket], color: Rn[2] },
    { tag: [c.variableName], color: Rn[1] },
    { tag: [c.labelName, c.propertyName, c.self, c.atom], color: Rn[5] },
    { tag: [c.attributeName, c.number], color: Rn[6] },
    { tag: c.keyword, color: Rn[5] },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: Rn[4] }
  ]
}), er = ["rgb(75, 130, 247)", "rgb(47, 108, 246)", "rgb(255, 255, 255)", "rgba(255, 255, 255,.3)"], p3 = {
  background: er[0],
  lineBackground: "transparent",
  foreground: er[2],
  selection: er[3],
  selectionMatch: er[0],
  gutterBackground: er[0],
  gutterForeground: er[2],
  gutterBorder: "transparent",
  lineHighlight: er[1]
}, AZ = et({
  theme: "dark",
  settings: p3,
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: er[2]
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: er[2] },
    { tag: [c.comment, c.bracket, c.brace, c.compareOperator], color: er[3] },
    { tag: [c.variableName, c.propertyName, c.labelName], color: er[2] },
    { tag: [c.attributeName, c.number], color: er[2] },
    { tag: c.keyword, color: er[2] },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: er[2] }
  ]
}), PZ = {
  background: "#282b2e",
  lineBackground: "#282b2e99",
  foreground: "#a9b7c6",
  caret: "#00FF00",
  selection: "#343739",
  selectionMatch: "#343739",
  lineHighlight: "#343739"
}, DZ = et({
  theme: "dark",
  settings: {
    background: "#282b2e",
    foreground: "#a9b7c6",
    caret: "#00FF00",
    selection: "#4e5254",
    selectionMatch: "#4e5254",
    gutterForeground: "#cccccc50",
    lineHighlight: "#7f85891f"
  },
  styles: [
    { tag: c.labelName, color: "inherit" },
    { tag: [c.keyword, c.deleted, c.className], color: "#a9b7c6" },
    { tag: [c.number, c.literal], color: "#6897bb" },
    //{ tag: [t.link, t.variableName], color: '#629755' },
    { tag: [c.link, c.variableName], color: "#a9b7c6" },
    { tag: [c.comment, c.quote], color: "grey" },
    { tag: [c.meta, c.documentMeta], color: "#bbb529" },
    //{ tag: [t.string, t.propertyName, t.attributeValue], color: '#6a8759' },
    { tag: [c.propertyName, c.attributeValue], color: "#a9b7c6" },
    { tag: [c.string], color: "#6a8759" },
    { tag: [c.heading, c.typeName], color: "#ffc66d" },
    { tag: [c.attributeName], color: "#a9b7c6" },
    { tag: [c.emphasis], fontStyle: "italic" }
  ]
}), EZ = {
  background: "#272C35",
  lineBackground: "#272C3599",
  foreground: "hsl(220, 14%, 71%)",
  caret: "#797977",
  selection: "#ffffff30",
  selectionMatch: "#2B323D",
  gutterBackground: "#272C35",
  gutterForeground: "#465063",
  gutterBorder: "transparent",
  lineHighlight: "#2B323D"
}, FZ = et({
  theme: "dark",
  settings: {
    background: "#272C35",
    foreground: "#9d9b97",
    caret: "#797977",
    selection: "#3d4c64",
    selectionMatch: "#3d4c64",
    gutterBackground: "#272C35",
    gutterForeground: "#465063",
    gutterBorder: "transparent",
    lineHighlight: "#2e3f5940"
  },
  styles: [
    {
      tag: [c.function(c.variableName), c.function(c.propertyName), c.url, c.processingInstruction],
      color: "hsl(207, 82%, 66%)"
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "hsl( 29, 54%, 61%)" },
    { tag: [c.tagName, c.heading], color: "#e06c75" },
    { tag: c.comment, color: "#54636D" },
    { tag: [c.variableName, c.propertyName, c.labelName], color: "hsl(220, 14%, 71%)" },
    { tag: [c.attributeName, c.number], color: "hsl( 29, 54%, 61%)" },
    { tag: c.className, color: "hsl( 39, 67%, 69%)" },
    { tag: c.keyword, color: "hsl(286, 60%, 67%)" },
    { tag: [c.string, c.regexp, c.special(c.propertyName)], color: "#98c379" }
  ]
}), BZ = {
  background: "#21202e",
  lineBackground: "#21202e99",
  foreground: "#edecee",
  caret: "#a277ff",
  selection: "#3d375e7f",
  selectionMatch: "#3d375e7f",
  gutterBackground: "#21202e",
  gutterForeground: "#edecee",
  gutterBorder: "transparent",
  lineHighlight: "#a394f033"
}, MZ = et({
  theme: "dark",
  settings: {
    background: "#21202e",
    foreground: "#edecee",
    caret: "#a277ff",
    selection: "#5a51898f",
    selectionMatch: "#5a51898f",
    gutterBackground: "#21202e",
    gutterForeground: "#edecee",
    gutterBorder: "transparent",
    lineHighlight: "#a394f033"
  },
  styles: [
    { tag: c.keyword, color: "#a277ff" },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: "#edecee" },
    { tag: [c.propertyName], color: "#ffca85" },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: "#61ffca" },
    { tag: [c.function(c.variableName), c.labelName], color: "#ffca85" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#61ffca" },
    { tag: [c.definition(c.name), c.separator], color: "#edecee" },
    { tag: [c.className], color: "#82e2ff" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#61ffca" },
    { tag: [c.typeName], color: "#82e2ff" },
    { tag: [c.operator, c.operatorKeyword], color: "#a277ff" },
    { tag: [c.url, c.escape, c.regexp, c.link], color: "#61ffca" },
    { tag: [c.meta, c.comment], color: "#6d6d6d" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: "#a277ff" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#edecee" },
    { tag: c.invalid, color: "#ff6767" },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), TZ = {
  background: "#242424",
  lineBackground: "#24242499",
  foreground: "#f8f8f2",
  caret: "#FFFFFF",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "rgba(255, 255, 255, 0.1)",
  gutterForeground: "#999",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
}, QZ = et({
  theme: "dark",
  settings: {
    background: "#242424",
    foreground: "#f8f8f2",
    caret: "#FFFFFF",
    selection: "rgba(255, 255, 255, 0.1)",
    selectionMatch: "rgba(255, 255, 255, 0.2)",
    gutterBackground: "transparent",
    gutterForeground: "#999",
    gutterBorder: "transparent",
    lineHighlight: "rgba(255, 255, 255, 0.1)"
  },
  styles: [
    { tag: c.labelName, color: "#CCCCCC" },
    { tag: [c.atom, c.number], color: "#7A9EC2" },
    { tag: [c.comment], color: "#707070" },
    { tag: [c.string], color: "#6A8759" },
    { tag: [c.variableName, c.operator], color: "#CCCCCC" },
    { tag: [c.function(c.variableName), c.propertyName], color: "#FFC66D" },
    { tag: [c.meta, c.className], color: "#FFC66D" },
    { tag: [c.propertyName], color: "#FFC66D" },
    { tag: [c.keyword], color: "#CC7832" },
    { tag: [c.tagName], color: "#ff79c6" },
    { tag: [c.typeName], color: "#ffb86c" }
  ]
}), jZ = {
  background: "#282a36",
  lineBackground: "#282a3699",
  foreground: "#f8f8f2",
  caret: "#f8f8f0",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "#282a36",
  gutterForeground: "#6272a4",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
}, _Z = "#BD93F9", RZ = et({
  theme: "dark",
  settings: {
    background: "#282a36",
    foreground: "#f8f8f2",
    caret: "#f8f8f0",
    selection: "rgba(255, 255, 255, 0.1)",
    selectionMatch: "rgba(255, 255, 255, 0.2)",
    gutterBackground: "#282a36",
    gutterForeground: "#6272a4",
    gutterBorder: "transparent",
    lineHighlight: "rgba(255, 255, 255, 0.1)"
  },
  styles: [
    { tag: c.comment, color: "#6272a4" },
    { tag: c.string, color: "#f1fa8c" },
    { tag: [c.atom, c.number], color: _Z },
    { tag: [c.meta, c.labelName, c.variableName], color: "#f8f8f2" },
    {
      tag: [c.keyword, c.tagName, c.arithmeticOperator],
      color: "#ff79c6"
    },
    { tag: [c.function(c.variableName), c.propertyName], color: "#50fa7b" },
    { tag: c.atom, color: "#bd93f9" }
  ]
}), ZZ = {
  background: "#2a2734",
  lineBackground: "#2a273499",
  foreground: "#eeebff",
  caret: "#ffad5c",
  selection: "rgba(255, 255, 255, 0.1)",
  gutterBackground: "#2a2734",
  gutterForeground: "#545167",
  lineHighlight: "#36334280"
}, $Z = et({
  theme: "dark",
  settings: {
    background: "#2a2734",
    foreground: "#6c6783",
    caret: "#ffad5c",
    selection: "#9a86fd",
    selectionMatch: "#9a86fd",
    gutterBackground: "#2a2734",
    gutterForeground: "#545167",
    lineHighlight: "#36334280"
  },
  styles: [
    { tag: [c.comment, c.bracket, c.operator], color: "#6c6783" },
    { tag: [c.atom, c.number, c.keyword, c.link, c.attributeName, c.quote], color: "#ffcc99" },
    { tag: [c.emphasis, c.heading, c.tagName, c.propertyName, c.className, c.variableName], color: "#eeebff" },
    { tag: [c.typeName, c.url], color: "#eeebff" },
    { tag: c.string, color: "#ffb870" },
    /* { tag: [t.propertyName], color: '#9a86fd' }, */
    { tag: [c.propertyName], color: "#eeebff" },
    { tag: c.labelName, color: "#eeebff" }
  ]
}), LZ = {
  light: !0,
  background: "#fff",
  lineBackground: "#ffffff99",
  foreground: "#000",
  caret: "#FFFFFF",
  selection: "#d7d4f0",
  selectionMatch: "#d7d4f0",
  gutterBackground: "#f7f7f7",
  gutterForeground: "#999",
  lineHighlight: "#e8f2ff",
  gutterBorder: "transparent"
}, IZ = et({
  theme: "light",
  settings: {
    background: "#fff",
    foreground: "#000",
    caret: "#FFFFFF",
    selection: "#d7d4f0",
    selectionMatch: "#d7d4f0",
    gutterBackground: "#f7f7f7",
    gutterForeground: "#999",
    lineHighlight: "#006fff1c",
    gutterBorder: "transparent"
  },
  styles: [
    { tag: [c.comment], color: "#3F7F5F" },
    { tag: [c.documentMeta], color: "#FF1717" },
    { tag: c.keyword, color: "#7F0055", fontWeight: "bold" },
    { tag: c.atom, color: "#00f" },
    { tag: c.number, color: "#164" },
    { tag: c.propertyName, color: "#164" },
    { tag: [c.variableName, c.definition(c.variableName)], color: "#0000C0" },
    { tag: c.function(c.variableName), color: "#0000C0" },
    { tag: c.string, color: "#2A00FF" },
    { tag: c.operator, color: "black" },
    { tag: c.tagName, color: "#170" },
    { tag: c.attributeName, color: "#00c" },
    { tag: c.link, color: "#219" }
  ]
}), NZ = {
  background: "#0d1117",
  lineBackground: "#0d111799",
  foreground: "#c9d1d9",
  caret: "#c9d1d9",
  selection: "#003d73",
  selectionMatch: "#003d73",
  lineHighlight: "#36334280"
}, VZ = et({
  theme: "dark",
  settings: {
    background: "#0d1117",
    foreground: "#c9d1d9",
    caret: "#c9d1d9",
    selection: "#003d73",
    selectionMatch: "#003d73",
    lineHighlight: "#36334280"
  },
  styles: [
    { tag: c.labelName, color: "#d2a8ff" },
    { tag: [c.standard(c.tagName), c.tagName], color: "#7ee787" },
    { tag: [c.comment, c.bracket], color: "#8b949e" },
    { tag: [c.className, c.propertyName], color: "#d2a8ff" },
    { tag: [c.variableName, c.attributeName], color: "#d2a8ff" },
    { tag: [c.number, c.operator], color: "#79c0ff" },
    { tag: [c.keyword, c.typeName, c.typeOperator, c.typeName], color: "#ff7b72" },
    { tag: [c.string, c.meta, c.regexp], color: "#a5d6ff" },
    { tag: [c.name, c.quote], color: "#7ee787" },
    { tag: [c.heading, c.strong], color: "#d2a8ff", fontWeight: "bold" },
    { tag: [c.emphasis], color: "#d2a8ff", fontStyle: "italic" },
    { tag: [c.deleted], color: "#ffdcd7", backgroundColor: "ffeef0" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#ffab70" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: c.invalid, color: "#f97583" }
  ]
}), XZ = {
  light: !0,
  background: "#fff",
  lineBackground: "#ffffff99",
  foreground: "#24292e",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#6e7781"
}, WZ = et({
  theme: "light",
  settings: {
    background: "#fff",
    foreground: "#24292e",
    selection: "#BBDFFF",
    selectionMatch: "#BBDFFF",
    gutterBackground: "#fff",
    gutterForeground: "#6e7781"
  },
  styles: [
    { tag: [c.standard(c.tagName), c.tagName], color: "#116329" },
    { tag: [c.comment, c.bracket], color: "#6a737d" },
    { tag: [c.className, c.propertyName], color: "#6f42c1" },
    { tag: [c.variableName, c.attributeName, c.number, c.operator], color: "#005cc5" },
    { tag: [c.keyword, c.typeName, c.typeOperator, c.typeName], color: "#d73a49" },
    { tag: [c.string, c.meta, c.regexp], color: "#032f62" },
    { tag: [c.name, c.quote], color: "#22863a" },
    { tag: [c.heading, c.strong], color: "#24292e", fontWeight: "bold" },
    { tag: [c.emphasis], color: "#24292e", fontStyle: "italic" },
    { tag: [c.deleted], color: "#b31d28", backgroundColor: "ffeef0" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#e36209" },
    { tag: [c.url, c.escape, c.regexp, c.link], color: "#032f62" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: c.invalid, color: "#cb2431" }
  ]
}), UZ = {
  background: "#282828",
  lineBackground: "#28282899",
  foreground: "#ebdbb2",
  caret: "#ebdbb2",
  selection: "#bdae93",
  selectionMatch: "#bdae93",
  lineHighlight: "#3c3836",
  gutterBackground: "#282828",
  gutterForeground: "#7c6f64"
}, qZ = et({
  theme: "dark",
  settings: {
    background: "#282828",
    foreground: "#ebdbb2",
    caret: "#ebdbb2",
    selection: "#b99d555c",
    selectionMatch: "#b99d555c",
    lineHighlight: "#baa1602b",
    gutterBackground: "#282828",
    gutterForeground: "#7c6f64"
  },
  styles: [
    { tag: c.keyword, color: "#fb4934" },
    { tag: [c.name, c.deleted, c.character, c.propertyName, c.macroName], color: "#8ec07c" },
    { tag: [c.variableName], color: "#83a598" },
    { tag: [c.function(c.variableName)], color: "#8ec07c", fontStyle: "bold" },
    { tag: [c.labelName], color: "#ebdbb2" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#d3869b" },
    { tag: [c.definition(c.name), c.separator], color: "#ebdbb2" },
    { tag: [c.brace], color: "#ebdbb2" },
    { tag: [c.annotation], color: "#fb4934d" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#d3869b" },
    { tag: [c.typeName, c.className], color: "#fabd2f" },
    { tag: [c.operatorKeyword], color: "#fb4934" },
    {
      tag: [c.tagName],
      color: "#8ec07c",
      fontStyle: "bold"
    },
    { tag: [c.squareBracket], color: "#fe8019" },
    { tag: [c.angleBracket], color: "#83a598" },
    { tag: [c.attributeName], color: "#8ec07c" },
    { tag: [c.regexp], color: "#8ec07c" },
    { tag: [c.quote], color: "#928374" },
    { tag: [c.string], color: "#ebdbb2" },
    {
      tag: c.link,
      color: "#a89984",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    { tag: [c.url, c.escape, c.special(c.string)], color: "#d3869b" },
    { tag: [c.meta], color: "#fabd2f" },
    { tag: [c.comment], color: "#928374", fontStyle: "italic" },
    { tag: c.strong, fontWeight: "bold", color: "#fe8019" },
    { tag: c.emphasis, fontStyle: "italic", color: "#b8bb26" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: c.heading, fontWeight: "bold", color: "#b8bb26" },
    { tag: [c.heading1, c.heading2], fontWeight: "bold", color: "#b8bb26" },
    {
      tag: [c.heading3, c.heading4],
      fontWeight: "bold",
      color: "#fabd2f"
    },
    { tag: [c.heading5, c.heading6], color: "#fabd2f" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#d3869b" },
    { tag: [c.processingInstruction, c.inserted], color: "#83a598" },
    { tag: [c.contentSeparator], color: "#fb4934" },
    { tag: c.invalid, color: "#fe8019", borderBottom: "1px dotted #fb4934d" }
  ]
}), GZ = {
  light: !0,
  background: "#fbf1c7",
  lineBackground: "#fbf1c799",
  foreground: "#3c3836",
  caret: "#af3a03",
  selection: "#ebdbb2",
  selectionMatch: "#bdae93",
  lineHighlight: "#ebdbb2",
  gutterBackground: "#ebdbb2",
  gutterForeground: "#665c54",
  gutterBorder: "transparent"
}, zZ = et({
  theme: "light",
  settings: {
    background: "#fbf1c7",
    foreground: "#3c3836",
    caret: "#af3a03",
    selection: "#bdae9391",
    selectionMatch: "#bdae9391",
    lineHighlight: "#a37f2238",
    gutterBackground: "#ebdbb2",
    gutterForeground: "#665c54",
    gutterBorder: "transparent"
  },
  styles: [
    { tag: c.keyword, color: "#9d0006" },
    {
      tag: [c.name, c.deleted, c.character, c.propertyName, c.macroName],
      color: "#427b58"
    },
    { tag: [c.variableName], color: "#076678" },
    { tag: [c.function(c.variableName)], color: "#79740e", fontStyle: "bold" },
    { tag: [c.labelName], color: "#3c3836" },
    {
      tag: [c.color, c.constant(c.name), c.standard(c.name)],
      color: "#8f3f71"
    },
    { tag: [c.definition(c.name), c.separator], color: "#3c3836" },
    { tag: [c.brace], color: "#3c3836" },
    {
      tag: [c.annotation],
      color: "#9d0006"
    },
    {
      tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace],
      color: "#8f3f71"
    },
    {
      tag: [c.typeName, c.className],
      color: "#b57614"
    },
    {
      tag: [c.operator, c.operatorKeyword],
      color: "#9d0006"
    },
    {
      tag: [c.tagName],
      color: "#427b58",
      fontStyle: "bold"
    },
    {
      tag: [c.squareBracket],
      color: "#af3a03"
    },
    {
      tag: [c.angleBracket],
      color: "#076678"
    },
    {
      tag: [c.attributeName],
      color: "#427b58"
    },
    {
      tag: [c.regexp],
      color: "#427b58"
    },
    {
      tag: [c.quote],
      color: "#928374"
    },
    { tag: [c.string], color: "#3c3836" },
    {
      tag: c.link,
      color: "#7c6f64",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    {
      tag: [c.url, c.escape, c.special(c.string)],
      color: "#8f3f71"
    },
    { tag: [c.meta], color: "#b57614" },
    { tag: [c.comment], color: "#928374", fontStyle: "italic" },
    { tag: c.strong, fontWeight: "bold", color: "#af3a03" },
    { tag: c.emphasis, fontStyle: "italic", color: "#79740e" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: c.heading, fontWeight: "bold", color: "#79740e" },
    { tag: [c.heading1, c.heading2], fontWeight: "bold", color: "#79740e" },
    {
      tag: [c.heading3, c.heading4],
      fontWeight: "bold",
      color: "#b57614"
    },
    {
      tag: [c.heading5, c.heading6],
      color: "#b57614"
    },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#8f3f71" },
    {
      tag: [c.processingInstruction, c.inserted],
      color: "#076678"
    },
    {
      tag: [c.contentSeparator],
      color: "#9d0006"
    },
    { tag: c.invalid, color: "#af3a03", borderBottom: "1px dotted #9d0006" }
  ]
}), YZ = {
  background: "#212121",
  lineBackground: "#21212199",
  foreground: "#bdbdbd",
  caret: "#a0a4ae",
  selection: "#d7d4f0",
  selectionMatch: "#d7d4f0",
  gutterBackground: "#212121",
  gutterForeground: "#999",
  gutterActiveForeground: "#4f5b66",
  lineHighlight: "#111111"
}, HZ = et({
  theme: "dark",
  settings: {
    background: "#212121",
    foreground: "#bdbdbd",
    caret: "#a0a4ae",
    selection: "#d7d4f063",
    selectionMatch: "#d7d4f063",
    gutterBackground: "#212121",
    gutterForeground: "#999",
    gutterActiveForeground: "#4f5b66",
    lineHighlight: "#333333"
  },
  styles: [
    { tag: c.keyword, color: "#cf6edf" },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: "#56c8d8" },
    { tag: [c.propertyName], color: "#82AAFF" },
    { tag: [c.variableName], color: "#bdbdbd" },
    { tag: [c.function(c.variableName)], color: "#82AAFF" },
    { tag: [c.labelName], color: "#cf6edf" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#facf4e" },
    { tag: [c.definition(c.name), c.separator], color: "#56c8d8" },
    { tag: [c.brace], color: "#cf6edf" },
    { tag: [c.annotation], color: "#f07178" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#f07178" },
    { tag: [c.typeName, c.className], color: "#f07178" },
    { tag: [c.operator, c.operatorKeyword], color: "#82AAFF" },
    { tag: [c.tagName], color: "#99d066" },
    { tag: [c.squareBracket], color: "#f07178" },
    { tag: [c.angleBracket], color: "#606f7a" },
    { tag: [c.attributeName], color: "#bdbdbd" },
    { tag: [c.regexp], color: "#f07178" },
    { tag: [c.quote], color: "#6abf69" },
    { tag: [c.string], color: "#99d066" },
    {
      tag: c.link,
      color: "#56c8d8",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    { tag: [c.url, c.escape, c.special(c.string)], color: "#facf4e" },
    { tag: [c.meta], color: "#707d8b" },
    { tag: [c.comment], color: "#707d8b", fontStyle: "italic" },
    { tag: c.monospace, color: "#bdbdbd" },
    { tag: c.strong, fontWeight: "bold", color: "#f07178" },
    { tag: c.emphasis, fontStyle: "italic", color: "#99d066" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: c.heading, fontWeight: "bold", color: "#facf4e" },
    { tag: c.heading1, fontWeight: "bold", color: "#facf4e" },
    {
      tag: [c.heading2, c.heading3, c.heading4],
      fontWeight: "bold",
      color: "#facf4e"
    },
    { tag: [c.heading5, c.heading6], color: "#facf4e" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#56c8d8" },
    { tag: [c.processingInstruction, c.inserted], color: "#f07178" },
    { tag: [c.contentSeparator], color: "#56c8d8" },
    { tag: c.invalid, color: "#606f7a", borderBottom: "1px dotted #f07178" }
  ]
}), KZ = {
  light: !0,
  background: "#FAFAFA",
  lineBackground: "#FAFAFA99",
  foreground: "#90A4AE",
  caret: "#272727",
  selection: "#80CBC440",
  selectionMatch: "#FAFAFA",
  gutterBackground: "#FAFAFA",
  gutterForeground: "#90A4AE",
  gutterBorder: "transparent",
  lineHighlight: "#CCD7DA50"
}, JZ = et({
  theme: "light",
  settings: {
    background: "#FAFAFA",
    foreground: "#90A4AE",
    caret: "#272727",
    selection: "#80CBC440",
    selectionMatch: "#80CBC440",
    gutterBackground: "#FAFAFA",
    gutterForeground: "#90A4AE",
    gutterBorder: "transparent",
    lineHighlight: "#CCD7DA50"
  },
  styles: [
    { tag: c.keyword, color: "#39ADB5" },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: "#90A4AE" },
    { tag: [c.propertyName], color: "#6182B8" },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: "#91B859" },
    { tag: [c.function(c.variableName), c.labelName], color: "#6182B8" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#39ADB5" },
    { tag: [c.definition(c.name), c.separator], color: "#90A4AE" },
    { tag: [c.className], color: "#E2931D" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#F76D47" },
    { tag: [c.typeName], color: "#E2931D", fontStyle: "#E2931D" },
    { tag: [c.operator, c.operatorKeyword], color: "#39ADB5" },
    { tag: [c.url, c.escape, c.regexp, c.link], color: "#91B859" },
    { tag: [c.meta, c.comment], color: "#90A4AE" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: "#39ADB5" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#90A4AE" },
    { tag: c.invalid, color: "#E5393570" },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), e$ = {
  background: "#2e3440",
  lineBackground: "#2e344099",
  foreground: "#FFFFFF",
  caret: "#FFFFFF",
  selection: "#3b4252",
  selectionMatch: "#e5e9f0",
  gutterBackground: "#2e3440",
  gutterForeground: "#4c566a",
  gutterActiveForeground: "#d8dee9",
  lineHighlight: "#4c566a"
}, t$ = et({
  theme: "dark",
  settings: {
    background: "#2e3440",
    foreground: "#FFFFFF",
    caret: "#FFFFFF",
    selection: "#00000073",
    selectionMatch: "#00000073",
    gutterBackground: "#2e3440",
    gutterForeground: "#4c566a",
    gutterActiveForeground: "#d8dee9",
    lineHighlight: "#4c566a29"
  },
  styles: [
    { tag: c.keyword, color: "#5e81ac" },
    { tag: [c.name, c.deleted, c.character, c.propertyName, c.macroName], color: "#88c0d0" },
    { tag: [c.variableName], color: "#8fbcbb" },
    { tag: [c.function(c.variableName)], color: "#8fbcbb" },
    { tag: [c.labelName], color: "#81a1c1" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#5e81ac" },
    { tag: [c.definition(c.name), c.separator], color: "#a3be8c" },
    { tag: [c.brace], color: "#8fbcbb" },
    { tag: [c.annotation], color: "#d30102" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#b48ead" },
    { tag: [c.typeName, c.className], color: "#ebcb8b" },
    { tag: [c.operator, c.operatorKeyword], color: "#a3be8c" },
    { tag: [c.tagName], color: "#b48ead" },
    { tag: [c.squareBracket], color: "#bf616a" },
    { tag: [c.angleBracket], color: "#d08770" },
    { tag: [c.attributeName], color: "#ebcb8b" },
    { tag: [c.regexp], color: "#5e81ac" },
    { tag: [c.quote], color: "#b48ead" },
    { tag: [c.string], color: "#a3be8c" },
    {
      tag: c.link,
      color: "#a3be8c",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    { tag: [c.url, c.escape, c.special(c.string)], color: "#8fbcbb" },
    { tag: [c.meta], color: "#88c0d0" },
    { tag: [c.monospace], color: "#d8dee9", fontStyle: "italic" },
    { tag: [c.comment], color: "#4c566a", fontStyle: "italic" },
    { tag: c.strong, fontWeight: "bold", color: "#5e81ac" },
    { tag: c.emphasis, fontStyle: "italic", color: "#5e81ac" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: c.heading, fontWeight: "bold", color: "#5e81ac" },
    { tag: c.special(c.heading1), fontWeight: "bold", color: "#5e81ac" },
    { tag: c.heading1, fontWeight: "bold", color: "#5e81ac" },
    {
      tag: [c.heading2, c.heading3, c.heading4],
      fontWeight: "bold",
      color: "#5e81ac"
    },
    { tag: [c.heading5, c.heading6], color: "#5e81ac" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#d08770" },
    { tag: [c.processingInstruction, c.inserted], color: "#8fbcbb" },
    { tag: [c.contentSeparator], color: "#ebcb8b" },
    { tag: c.invalid, color: "#434c5e", borderBottom: "1px dotted #d30102" }
  ]
}), n$ = {
  background: "#272822",
  lineBackground: "#27282299",
  foreground: "#FFFFFF",
  caret: "#FFFFFF",
  selection: "#49483E",
  selectionMatch: "#49483E",
  gutterBackground: "#272822",
  gutterForeground: "#FFFFFF70",
  lineHighlight: "#00000059"
}, r$ = et({
  theme: "dark",
  settings: {
    background: "#272822",
    foreground: "#FFFFFF",
    caret: "#FFFFFF",
    selection: "#49483E",
    selectionMatch: "#49483E",
    gutterBackground: "#272822",
    gutterForeground: "#FFFFFF70",
    lineHighlight: "#0000003b"
  },
  styles: [
    { tag: c.labelName, color: "#bababa" },
    { tag: [c.comment, c.documentMeta], color: "#8292a2" },
    { tag: [c.number, c.bool, c.null, c.atom], color: "#ae81ff" },
    { tag: [c.attributeValue, c.className, c.name], color: "#e6db74" },
    { tag: [c.propertyName, c.attributeName], color: "#a6e22e" },
    { tag: [c.variableName], color: "#9effff" },
    { tag: [c.squareBracket], color: "#bababa" },
    { tag: [c.string, c.special(c.brace)], color: "#e6db74" },
    { tag: [c.regexp, c.className, c.typeName, c.definition(c.typeName)], color: "#66d9ef" },
    {
      tag: [c.definition(c.variableName), c.definition(c.propertyName), c.function(c.variableName)],
      color: "#a6e22e"
    },
    // { tag: t.keyword, color: '#f92672' },
    { tag: [c.keyword, c.definitionKeyword, c.modifier, c.tagName, c.angleBracket], color: "#f92672" }
  ]
}), s$ = {
  background: "#002b36",
  lineBackground: "#002b3699",
  foreground: "#93a1a1",
  caret: "#839496",
  selection: "#173541",
  selectionMatch: "#aafe661a",
  gutterBackground: "#00252f",
  gutterForeground: "#839496",
  lineHighlight: "#173541"
}, Qt = {
  background: "#002B36",
  foreground: "#839496",
  selection: "#004454AA",
  selectionMatch: "#005A6FAA",
  cursor: "#D30102",
  dropdownBackground: "#00212B",
  dropdownBorder: "#2AA19899",
  activeLine: "#00cafe11",
  matchingBracket: "#073642",
  keyword: "#859900",
  storage: "#93A1A1",
  variable: "#268BD2",
  parameter: "#268BD2",
  function: "#268BD2",
  string: "#2AA198",
  constant: "#CB4B16",
  type: "#859900",
  class: "#268BD2",
  number: "#D33682",
  comment: "#586E75",
  heading: "#268BD2",
  invalid: "#DC322F",
  regexp: "#DC322F",
  tag: "#268BD2"
}, i$ = et({
  theme: "dark",
  settings: {
    background: Qt.background,
    foreground: Qt.foreground,
    caret: Qt.cursor,
    selection: Qt.selection,
    selectionMatch: Qt.selection,
    gutterBackground: Qt.background,
    gutterForeground: Qt.foreground,
    gutterBorder: "transparent",
    lineHighlight: Qt.activeLine
  },
  styles: [
    { tag: c.keyword, color: Qt.keyword },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: Qt.variable },
    { tag: [c.propertyName], color: Qt.function },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: Qt.string },
    { tag: [c.function(c.variableName), c.labelName], color: Qt.function },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: Qt.constant },
    { tag: [c.definition(c.name), c.separator], color: Qt.variable },
    { tag: [c.className], color: Qt.class },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: Qt.number },
    { tag: [c.typeName], color: Qt.type, fontStyle: Qt.type },
    { tag: [c.operator, c.operatorKeyword], color: Qt.keyword },
    { tag: [c.url, c.escape, c.regexp, c.link], color: Qt.regexp },
    { tag: [c.meta, c.comment], color: Qt.comment },
    { tag: c.tagName, color: Qt.tag },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: Qt.heading },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: Qt.variable },
    { tag: c.invalid, color: Qt.invalid },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), a$ = {
  light: !0,
  background: "#fdf6e3",
  lineBackground: "#fdf6e399",
  foreground: "#657b83",
  caret: "#586e75",
  selection: "#dfd9c8",
  selectionMatch: "#dfd9c8",
  gutterBackground: "#00000010",
  gutterForeground: "#657b83",
  lineHighlight: "#dfd9c8"
}, jt = {
  background: "#FDF6E3",
  foreground: "#657B83",
  selection: "#EEE8D5",
  selectionMatch: "#EEE8D5",
  cursor: "#657B83",
  dropdownBackground: "#EEE8D5",
  dropdownBorder: "#D3AF86",
  activeLine: "#3d392d11",
  matchingBracket: "#EEE8D5",
  keyword: "#859900",
  storage: "#586E75",
  variable: "#268BD2",
  parameter: "#268BD2",
  function: "#268BD2",
  string: "#2AA198",
  constant: "#CB4B16",
  type: "#859900",
  class: "#268BD2",
  number: "#D33682",
  comment: "#93A1A1",
  heading: "#268BD2",
  invalid: "#DC322F",
  regexp: "#DC322F",
  tag: "#268BD2"
}, o$ = et({
  theme: "light",
  settings: {
    background: jt.background,
    foreground: jt.foreground,
    caret: jt.cursor,
    selection: jt.selection,
    selectionMatch: jt.selectionMatch,
    gutterBackground: jt.background,
    gutterForeground: jt.foreground,
    gutterBorder: "transparent",
    lineHighlight: jt.activeLine
  },
  styles: [
    { tag: c.keyword, color: jt.keyword },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: jt.variable },
    { tag: [c.propertyName], color: jt.function },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: jt.string },
    { tag: [c.function(c.variableName), c.labelName], color: jt.function },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: jt.constant },
    { tag: [c.definition(c.name), c.separator], color: jt.variable },
    { tag: [c.className], color: jt.class },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: jt.number },
    { tag: [c.typeName], color: jt.type, fontStyle: jt.type },
    { tag: [c.operator, c.operatorKeyword], color: jt.keyword },
    { tag: [c.url, c.escape, c.regexp, c.link], color: jt.regexp },
    { tag: [c.meta, c.comment], color: jt.comment },
    { tag: c.tagName, color: jt.tag },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: jt.heading },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: jt.variable },
    { tag: c.invalid, color: jt.invalid },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), l$ = {
  background: "#303841",
  lineBackground: "#30384199",
  foreground: "#FFFFFF",
  caret: "#FBAC52",
  selection: "#4C5964",
  selectionMatch: "#3A546E",
  gutterBackground: "#303841",
  gutterForeground: "#FFFFFF70",
  lineHighlight: "#00000059"
}, c$ = et({
  theme: "dark",
  settings: {
    background: "#303841",
    foreground: "#FFFFFF",
    caret: "#FBAC52",
    selection: "#4C5964",
    selectionMatch: "#3A546E",
    gutterBackground: "#303841",
    gutterForeground: "#FFFFFF70",
    lineHighlight: "#00000059"
  },
  styles: [
    { tag: c.labelName, color: "#A2A9B5" },
    { tag: [c.meta, c.comment], color: "#A2A9B5" },
    { tag: [c.attributeName, c.keyword], color: "#B78FBA" },
    { tag: c.function(c.variableName), color: "#5AB0B0" },
    { tag: [c.string, c.regexp, c.attributeValue], color: "#99C592" },
    { tag: c.operator, color: "#f47954" },
    // { tag: t.moduleKeyword, color: 'red' },
    { tag: [c.tagName, c.modifier], color: "#E35F63" },
    { tag: [c.number, c.definition(c.tagName), c.className, c.definition(c.variableName)], color: "#fbac52" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#E35F63" },
    { tag: c.variableName, color: "#539ac4" },
    { tag: [c.propertyName, c.typeName], color: "#629ccd" },
    { tag: c.propertyName, color: "#36b7b5" }
  ]
}), u$ = {
  background: "#1a1b26",
  lineBackground: "#1a1b2699",
  foreground: "#787c99",
  caret: "#c0caf5",
  selection: "#515c7e40",
  selectionMatch: "#16161e",
  gutterBackground: "#1a1b26",
  gutterForeground: "#787c99",
  gutterBorder: "transparent",
  lineHighlight: "#1e202e"
}, h$ = et({
  theme: "dark",
  settings: {
    background: "#1a1b26",
    foreground: "#787c99",
    caret: "#c0caf5",
    selection: "#515c7e40",
    selectionMatch: "#16161e",
    gutterBackground: "#1a1b26",
    gutterForeground: "#787c99",
    gutterBorder: "transparent",
    lineHighlight: "#474b6611"
  },
  styles: [
    { tag: c.keyword, color: "#bb9af7" },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: "#c0caf5" },
    { tag: [c.propertyName], color: "#7aa2f7" },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: "#9ece6a" },
    { tag: [c.function(c.variableName), c.labelName], color: "#7aa2f7" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#bb9af7" },
    { tag: [c.definition(c.name), c.separator], color: "#c0caf5" },
    { tag: [c.className], color: "#c0caf5" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#ff9e64" },
    { tag: [c.typeName], color: "#0db9d7" },
    { tag: [c.operator, c.operatorKeyword], color: "#bb9af7" },
    { tag: [c.url, c.escape, c.regexp, c.link], color: "#b4f9f8" },
    { tag: [c.meta, c.comment], color: "#444b6a" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: "#89ddff" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#c0caf5" },
    { tag: c.invalid, color: "#ff5370" },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), p$ = {
  background: "#24283b",
  lineBackground: "#24283b99",
  foreground: "#7982a9",
  caret: "#c0caf5",
  selection: "#6f7bb630",
  selectionMatch: "#1f2335",
  gutterBackground: "#24283b",
  gutterForeground: "#7982a9",
  gutterBorder: "transparent",
  lineHighlight: "#292e42"
}, f$ = et({
  theme: "dark",
  settings: {
    background: "#24283b",
    foreground: "#7982a9",
    caret: "#c0caf5",
    selection: "#6f7bb630",
    selectionMatch: "#343b5f",
    gutterBackground: "#24283b",
    gutterForeground: "#7982a9",
    gutterBorder: "transparent",
    lineHighlight: "#292e427a"
  },
  styles: [
    { tag: c.keyword, color: "#bb9af7" },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: "#c0caf5" },
    { tag: [c.propertyName], color: "#7aa2f7" },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: "#9ece6a" },
    { tag: [c.function(c.variableName), c.labelName], color: "#7aa2f7" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#bb9af7" },
    { tag: [c.definition(c.name), c.separator], color: "#c0caf5" },
    { tag: [c.className], color: "#c0caf5" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#ff9e64" },
    { tag: [c.typeName], color: "#2ac3de", fontStyle: "#2ac3de" },
    { tag: [c.operator, c.operatorKeyword], color: "#bb9af7" },
    { tag: [c.url, c.escape, c.regexp, c.link], color: "#b4f9f8" },
    { tag: [c.meta, c.comment], color: "#565f89" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: "#89ddff" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#c0caf5" },
    { tag: c.invalid, color: "#ff5370" },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), d$ = {
  light: !0,
  background: "#e1e2e7",
  lineBackground: "#e1e2e799",
  foreground: "#3760bf",
  caret: "#3760bf",
  selection: "#99a7df",
  selectionMatch: "#99a7df",
  gutterBackground: "#e1e2e7",
  gutterForeground: "#3760bf",
  gutterBorder: "transparent",
  lineHighlight: "#5f5faf11"
}, m$ = et({
  theme: "light",
  settings: {
    background: "#e1e2e7",
    foreground: "#3760bf",
    caret: "#3760bf",
    selection: "#99a7df",
    selectionMatch: "#99a7df",
    gutterBackground: "#e1e2e7",
    gutterForeground: "#3760bf",
    gutterBorder: "transparent",
    lineHighlight: "#5f5faf11"
  },
  styles: [
    { tag: c.keyword, color: "#007197" },
    { tag: [c.name, c.deleted, c.character, c.macroName], color: "#3760bf" },
    { tag: [c.propertyName], color: "#3760bf" },
    { tag: [c.processingInstruction, c.string, c.inserted, c.special(c.string)], color: "#587539" },
    { tag: [c.function(c.variableName), c.labelName], color: "#3760bf" },
    { tag: [c.color, c.constant(c.name), c.standard(c.name)], color: "#3760bf" },
    { tag: [c.definition(c.name), c.separator], color: "#3760bf" },
    { tag: [c.className], color: "#3760bf" },
    { tag: [c.number, c.changed, c.annotation, c.modifier, c.self, c.namespace], color: "#b15c00" },
    { tag: [c.typeName], color: "#007197", fontStyle: "#007197" },
    { tag: [c.operator, c.operatorKeyword], color: "#007197" },
    { tag: [c.url, c.escape, c.regexp, c.link], color: "#587539" },
    { tag: [c.meta, c.comment], color: "#848cb5" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.link, textDecoration: "underline" },
    { tag: c.heading, fontWeight: "bold", color: "#b15c00" },
    { tag: [c.atom, c.bool, c.special(c.variableName)], color: "#3760bf" },
    { tag: c.invalid, color: "#f52a65" },
    { tag: c.strikethrough, textDecoration: "line-through" }
  ]
}), g$ = {
  background: "#1e1e1e",
  lineBackground: "#1e1e1e99",
  foreground: "#fff",
  caret: "#c6c6c6",
  selection: "#6199ff2f",
  selectionMatch: "#72a1ff59",
  lineHighlight: "#ffffff0f",
  gutterBackground: "#1e1e1e",
  gutterForeground: "#838383",
  gutterActiveForeground: "#fff"
}, b$ = et({
  theme: "dark",
  settings: {
    background: "#1e1e1e",
    foreground: "#fff",
    caret: "#c6c6c6",
    selection: "#6199ff2f",
    selectionMatch: "#72a1ff59",
    lineHighlight: "#ffffff0f",
    gutterBackground: "#1e1e1e",
    gutterForeground: "#838383",
    gutterActiveForeground: "#fff",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
  },
  styles: [
    {
      tag: [
        c.keyword,
        c.operatorKeyword,
        c.modifier,
        c.color,
        c.constant(c.name),
        c.standard(c.name),
        c.standard(c.tagName),
        c.special(c.brace),
        c.atom,
        c.bool,
        c.special(c.variableName)
      ],
      color: "#569cd6"
    },
    { tag: [c.controlKeyword, c.moduleKeyword], color: "#c586c0" },
    {
      tag: [
        c.name,
        c.deleted,
        c.character,
        c.macroName,
        c.propertyName,
        c.variableName,
        c.labelName,
        c.definition(c.name)
      ],
      color: "#9cdcfe"
    },
    { tag: c.heading, fontWeight: "bold", color: "#9cdcfe" },
    {
      tag: [c.typeName, c.className, c.tagName, c.number, c.changed, c.annotation, c.self, c.namespace],
      color: "#4ec9b0"
    },
    { tag: [c.function(c.variableName), c.function(c.propertyName)], color: "#dcdcaa" },
    { tag: [c.number], color: "#b5cea8" },
    { tag: [c.operator, c.punctuation, c.separator, c.url, c.escape, c.regexp], color: "#d4d4d4" },
    { tag: [c.regexp], color: "#d16969" },
    { tag: [c.special(c.string), c.processingInstruction, c.string, c.inserted], color: "#ce9178" },
    { tag: [c.angleBracket], color: "#808080" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: [c.meta, c.comment], color: "#6a9955" },
    { tag: c.link, color: "#6a9955", textDecoration: "underline" },
    { tag: c.invalid, color: "#ff0000" }
  ]
}), y$ = {
  background: "#ffffff",
  lineBackground: "#ffffff50",
  foreground: "#383a42",
  caret: "#000",
  selection: "#add6ff",
  selectionMatch: "#a8ac94",
  lineHighlight: "#99999926",
  gutterBackground: "#fff",
  gutterForeground: "#237893",
  gutterActiveForeground: "#0b216f",
  fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
}, O$ = et({
  theme: "light",
  settings: {
    background: "#ffffff",
    foreground: "#383a42",
    caret: "#000",
    selection: "#add6ff",
    selectionMatch: "#a8ac94",
    lineHighlight: "#99999926",
    gutterBackground: "#fff",
    gutterForeground: "#237893",
    gutterActiveForeground: "#0b216f",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
  },
  styles: [
    {
      tag: [
        c.keyword,
        c.operatorKeyword,
        c.modifier,
        c.color,
        c.constant(c.name),
        c.standard(c.name),
        c.standard(c.tagName),
        c.special(c.brace),
        c.atom,
        c.bool,
        c.special(c.variableName)
      ],
      color: "#0000ff"
    },
    { tag: [c.moduleKeyword, c.controlKeyword], color: "#af00db" },
    {
      tag: [
        c.name,
        c.deleted,
        c.character,
        c.macroName,
        c.propertyName,
        c.variableName,
        c.labelName,
        c.definition(c.name)
      ],
      color: "#0070c1"
    },
    { tag: c.heading, fontWeight: "bold", color: "#0070c1" },
    {
      tag: [c.typeName, c.className, c.tagName, c.number, c.changed, c.annotation, c.self, c.namespace],
      color: "#267f99"
    },
    { tag: [c.function(c.variableName), c.function(c.propertyName)], color: "#795e26" },
    { tag: [c.number], color: "#098658" },
    { tag: [c.operator, c.punctuation, c.separator, c.url, c.escape, c.regexp], color: "#383a42" },
    { tag: [c.regexp], color: "#af00db" },
    { tag: [c.special(c.string), c.processingInstruction, c.string, c.inserted], color: "#a31515" },
    { tag: [c.angleBracket], color: "#383a42" },
    { tag: c.strong, fontWeight: "bold" },
    { tag: c.emphasis, fontStyle: "italic" },
    { tag: c.strikethrough, textDecoration: "line-through" },
    { tag: [c.meta, c.comment], color: "#008000" },
    { tag: c.link, color: "#4078f2", textDecoration: "underline" },
    { tag: c.invalid, color: "#e45649" }
  ]
}), v$ = {
  light: !0,
  background: "#fff",
  lineBackground: "#ffffff99",
  foreground: "#3D3D3D",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#AFAFAF",
  lineHighlight: "#EDF4FF"
}, x$ = et({
  theme: "light",
  settings: {
    background: "#fff",
    foreground: "#3D3D3D",
    selection: "#BBDFFF",
    selectionMatch: "#BBDFFF",
    gutterBackground: "#fff",
    gutterForeground: "#AFAFAF",
    lineHighlight: "#d5e6ff69"
  },
  styles: [
    { tag: [c.comment, c.quote], color: "#707F8D" },
    { tag: [c.typeName, c.typeOperator], color: "#aa0d91" },
    { tag: [c.keyword], color: "#aa0d91", fontWeight: "bold" },
    { tag: [c.string, c.meta], color: "#D23423" },
    { tag: [c.name], color: "#032f62" },
    { tag: [c.typeName], color: "#522BB2" },
    { tag: [c.variableName], color: "#23575C" },
    { tag: [c.definition(c.variableName)], color: "#327A9E" },
    { tag: [c.regexp, c.link], color: "#0e0eff" }
  ]
}), w$ = {
  light: !0,
  background: "#FFFFFF",
  lineBackground: "#FFFFFF99",
  foreground: "#000000",
  caret: "#FBAC52",
  selection: "#FFD420",
  selectionMatch: "#FFD420",
  gutterBackground: "#f5f5f5",
  gutterForeground: "#4D4D4C",
  gutterBorder: "transparent",
  lineHighlight: "#00000012"
}, k$ = et({
  theme: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#000000",
    caret: "#FBAC52",
    selection: "#FFD420",
    selectionMatch: "#FFD420",
    gutterBackground: "#f5f5f5",
    gutterForeground: "#4D4D4C",
    gutterBorder: "transparent",
    lineHighlight: "#00000012"
  },
  styles: [
    { tag: [c.meta, c.comment], color: "#804000" },
    { tag: [c.keyword, c.strong], color: "#0000FF" },
    { tag: [c.number], color: "#FF0080" },
    { tag: [c.string], color: "#FF0080" },
    { tag: [c.variableName], color: "#006600" },
    { tag: [c.escape], color: "#33CC33" },
    { tag: [c.tagName], color: "#1C02FF" },
    { tag: [c.heading], color: "#0C07FF" },
    { tag: [c.quote], color: "#000000" },
    { tag: [c.list], color: "#B90690" },
    { tag: [c.documentMeta], color: "#888888" },
    { tag: [c.function(c.variableName)], color: "#0000A2" },
    { tag: [c.definition(c.typeName), c.typeName], color: "#6D79DE" }
  ]
}), C$ = {
  light: !0,
  background: "#f2f1f8",
  lineBackground: "#f2f1f899",
  foreground: "#0c006b",
  caret: "#5c49e9",
  selection: "#d5d1f2",
  selectionMatch: "#d5d1f2",
  gutterBackground: "#f2f1f8",
  gutterForeground: "#0c006b70",
  lineHighlight: "#e1def3"
}, S$ = et({
  theme: "light",
  settings: {
    background: "#f2f1f8",
    foreground: "#0c006b",
    caret: "#5c49e9",
    selection: "#d5d1f2",
    selectionMatch: "#d5d1f2",
    gutterBackground: "#f2f1f8",
    gutterForeground: "#0c006b70",
    lineHighlight: "#16067911"
  },
  styles: [
    { tag: c.comment, color: "#9995b7" },
    {
      tag: c.keyword,
      color: "#ff5792",
      fontWeight: "bold"
    },
    { tag: [c.definitionKeyword, c.modifier], color: "#ff5792" },
    { tag: [c.className, c.tagName, c.definition(c.typeName)], color: "#0094f0" },
    { tag: [c.number, c.bool, c.null, c.special(c.brace)], color: "#5842ff" },
    { tag: [c.definition(c.propertyName), c.function(c.variableName)], color: "#0095a8" },
    { tag: c.typeName, color: "#b3694d" },
    { tag: [c.propertyName, c.variableName], color: "#fa8900" },
    { tag: c.operator, color: "#ff5792" },
    { tag: c.self, color: "#e64100" },
    { tag: [c.string, c.regexp], color: "#00b368" },
    { tag: [c.paren, c.bracket], color: "#0431fa" },
    { tag: c.labelName, color: "#00bdd6" },
    { tag: c.attributeName, color: "#e64100" },
    { tag: c.angleBracket, color: "#9995b7" }
  ]
}), zf = {
  strudelTheme: oZ,
  algoboy: fZ,
  archBtw: CZ,
  androidstudio: DZ,
  atomone: FZ,
  aura: MZ,
  bbedit: k$,
  blackscreen: cZ,
  bluescreen: lZ,
  bluescreenlight: AZ,
  CutiePi: vZ,
  darcula: QZ,
  dracula: RZ,
  duotoneDark: $Z,
  eclipse: IZ,
  fruitDaw: SZ,
  githubDark: VZ,
  githubLight: WZ,
  greenText: kZ,
  gruvboxDark: qZ,
  gruvboxLight: zZ,
  sonicPink: xZ,
  materialDark: HZ,
  materialLight: JZ,
  monokai: r$,
  noctisLilac: S$,
  nord: t$,
  redText: wZ,
  solarizedDark: i$,
  solarizedLight: o$,
  sublime: c$,
  teletext: hZ,
  tokyoNight: h$,
  tokyoNightDay: m$,
  tokyoNightStorm: f$,
  vscodeDark: b$,
  vscodeLight: O$,
  whitescreen: uZ,
  xcodeLight: x$
}, Cc = {
  strudelTheme: H5,
  bluescreen: K5,
  bluescreenlight: p3,
  blackscreen: J5,
  whitescreen: e3,
  teletext: s3,
  algoboy: i3,
  archBtw: u3,
  androidstudio: PZ,
  atomone: EZ,
  aura: BZ,
  bbedit: w$,
  darcula: TZ,
  dracula: jZ,
  duotoneDark: ZZ,
  eclipse: LZ,
  CutiePi: Gf,
  sonicPink: o3,
  fruitDaw: h3,
  githubLight: XZ,
  githubDark: NZ,
  greenText: c3,
  gruvboxDark: UZ,
  gruvboxLight: GZ,
  materialDark: YZ,
  materialLight: KZ,
  noctisLilac: C$,
  nord: e$,
  monokai: n$,
  redText: l3,
  solarizedLight: a$,
  solarizedDark: s$,
  sublime: l$,
  tokyoNight: u$,
  tokyoNightStorm: p$,
  vscodeDark: g$,
  vscodeLight: y$,
  xcodeLight: v$,
  tokyoNightDay: d$
};
function A$(t) {
  const e = /#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})/g, n = [];
  let r;
  for (; (r = e.exec(t)) !== null; ) {
    const s = r[0];
    n.includes(s) || n.push(s);
  }
  return n;
}
function P$(t) {
  return A$(E$(t));
}
function D$() {
  const t = /* @__PURE__ */ new WeakSet();
  return (e, n) => {
    if (typeof n == "object" && n !== null) {
      if (t.has(n))
        return;
      t.add(n);
    }
    return n;
  };
}
function E$(t) {
  return JSON.stringify(t, D$());
}
const f3 = (t) => zf[t] || zf.strudelTheme;
function d3(t) {
  const e = document.createElement("style");
  document.head.appendChild(e);
  const n = e.sheet, r = n.insertRule(t, 0);
  return () => n.deleteRule(r);
}
let Bb, wp, Sc, Mb = "strudel-theme-vars";
function m3(t) {
  document.getElementById(Mb) || (Sc = document.createElement("style"), Sc.id = Mb, document.head.append(Sc)), Xm(t);
}
function Xm(t) {
  if (Bb === t)
    return;
  Bb = t, Cc[t] || console.warn("theme", t, "has no settings.. defaulting to strudelTheme settings");
  const e = Cc[t] || Cc.strudelTheme;
  Sc.innerHTML = `:root {
      ${Object.entries(e).map(([n, r]) => `--${n}: ${r} !important;`).join(`
`)}
    }`, U9(e), e.light ? document.documentElement.classList.remove("dark") : document.documentElement.classList.add("dark"), wp?.(), wp = void 0, e.customStyle && (wp = d3(e.customStyle));
}
let Oa = {};
const F$ = (t) => `slider_${t}`;
class g3 extends ns {
  constructor(e, n, r, s, i, a, o) {
    super(), this.value = e, this.min = n, this.max = r, this.from = s, this.originalFrom = s, this.to = i, this.step = a, this.view = o;
  }
  eq() {
    return !1;
  }
  toDOM() {
    let e = document.createElement("span");
    e.setAttribute("aria-hidden", "true"), e.className = "cm-slider";
    let n = e.appendChild(document.createElement("input"));
    return n.type = "range", n.min = this.min, n.max = this.max, n.step = this.step ?? (this.max - this.min) / 1e3, n.originalValue = this.value, n.value = n.originalValue, n.from = this.from, n.originalFrom = this.originalFrom, n.to = this.to, n.style = "width:64px;margin-right:4px;transform:translateY(4px)", this.slider = n, n.addEventListener("input", (r) => {
      const s = r.target.value;
      let i = s;
      const a = n.from + n.originalValue.length;
      let o = { from: n.from, to: a, insert: i };
      n.originalValue = i, n.value = i, this.view.dispatch({ changes: o });
      const l = F$(n.originalFrom);
      window.postMessage({ type: "cm-slider", value: Number(s), id: l });
    }), e;
  }
  ignoreEvent(e) {
    return !0;
  }
}
const Wm = Ze.define(), b3 = (t, e) => {
  t.dispatch({ effects: Wm.of(e) });
};
function B$(t, e) {
  return t.filter((n) => n.type === "slider").map(({ from: n, to: r, value: s, min: i, max: a, step: o }) => Be.widget({
    widget: new g3(s, i, a, n, r, o, e),
    side: 0
  }).range(
    n
    /* , to */
  ));
}
const y3 = qt.fromClass(
  class {
    decorations;
    //: DecorationSet
    constructor(t) {
      this.decorations = Be.set([]);
    }
    update(t) {
      t.transactions.forEach((e) => {
        if (e.docChanged) {
          this.decorations = this.decorations.map(e.changes);
          const n = this.decorations.iter();
          for (; n.value; )
            n.value?.widget?.slider && (n.value.widget.slider.from = n.from, n.value.widget.slider.to = n.to), n.next();
        }
        for (let n of e.effects)
          n.is(Wm) && (this.decorations = Be.set(B$(n.value, t.view)));
      });
    }
  },
  {
    decorations: (t) => t.decorations
  }
);
let M$ = (t) => (console.warn("slider will only work when the transpiler is used... passing value as is"), dn(t)), T$ = (t, e, n, r) => (Oa[t] = e, ky(() => Oa[t]));
typeof window < "u" && window.addEventListener("message", (t) => {
  t.data.type === "cm-slider" && (Oa[t.data.id] !== void 0 ? Oa[t.data.id] = t.data.value : console.warn(`slider with id "${t.data.id}" is not registered. Only ${Object.keys(Oa)}`));
});
const Um = Ze.define({
  map: ({ from: t, to: e }, n) => ({ from: n.mapPos(t), to: n.mapPos(e) })
}), O3 = (t, e) => {
  t.dispatch({ effects: Um.of(e) });
};
function Q$(t) {
  return t.sort((e, n) => e.to - n.to).map((e) => Be.widget({
    widget: new w3(e),
    side: 0,
    block: !0
  }).range(e.to));
}
const j$ = Vt.define(
  /* <DecorationSet> */
  {
    create() {
      return Be.none;
    },
    update(t, e) {
      t = t.map(e.changes);
      for (let n of e.effects)
        if (n.is(Um))
          try {
            t = t.update({
              filter: () => !1,
              add: Q$(n.value)
            });
          } catch (r) {
            console.log("err", r);
          }
      return t;
    },
    provide: (t) => ye.decorations.from(t)
  }
), v3 = {};
function x3(t, e) {
  v3[t] = e, e.id = t;
}
class w3 extends ns {
  constructor(e) {
    super(), this.widgetConfig = e;
  }
  eq() {
    return !0;
  }
  toDOM() {
    const e = y2(this.widgetConfig);
    return v3[e];
  }
  ignoreEvent(e) {
    return !0;
  }
}
const k3 = [j$];
function Wi(t, e) {
  P4(t), e && (me.prototype[t] = function(n, r = { fold: 1 }) {
    return e(n, r, this);
  });
}
function Wa(t, e = {}) {
  const { width: n = 500, height: r = 60, pixelRatio: s = window.devicePixelRatio } = e;
  let i = document.getElementById(t) || document.createElement("canvas");
  return i.width = n * s, i.height = r * s, i.style.width = n + "px", i.style.height = r + "px", x3(t, i), i;
}
Wi("_pianoroll", (t, e = {}, n) => {
  const r = Wa(t, e).getContext("2d");
  return n.tag(t).pianoroll({ fold: 1, ...e, ctx: r, id: t });
});
Wi("_punchcard", (t, e = {}, n) => {
  const r = Wa(t, e).getContext("2d");
  return n.tag(t).punchcard({ fold: 1, ...e, ctx: r, id: t });
});
Wi("_spiral", (t, e = {}, n) => {
  let r = e.size || 275;
  e = { width: r, height: r, ...e, size: r / 5 };
  const s = Wa(t, e).getContext("2d");
  return n.tag(t).spiral({ ...e, ctx: s, id: t });
});
Wi("_scope", (t, e = {}, n) => {
  e = { width: 500, height: 60, pos: 0.5, scale: 1, ...e };
  const r = Wa(t, e).getContext("2d");
  return n.tag(t).scope({ ...e, ctx: r, id: t });
});
Wi("_pitchwheel", (t, e = {}, n) => {
  let r = e.size || 200;
  e = { width: r, height: r, ...e, size: r / 5 };
  const s = Wa(t, e).getContext("2d");
  return n.pitchwheel({ ...e, ctx: s, id: t });
});
Wi("_spectrum", (t, e = {}, n) => {
  let r = e.size || 200;
  e = { width: r, height: r, ...e, size: r / 5 };
  const s = Wa(t, e).getContext("2d");
  return n.spectrum({ ...e, ctx: s, id: t });
});
let Tb = (t) => t, na = {}, Yf = { addEventListener() {
}, removeEventListener() {
} };
function _$() {
  try {
    return typeof localStorage < "u";
  } catch {
    return !1;
  }
}
_$() && (na = localStorage);
let R$ = {
  addEventListener(t, e, n) {
    window.addEventListener("storage", e), window.addEventListener("pageshow", n);
  },
  removeEventListener(t, e, n) {
    window.removeEventListener("storage", e), window.removeEventListener("pageshow", n);
  }
};
typeof window < "u" && (Yf = R$);
function Z$(t, e = void 0, n = {}) {
  let r = n.encode || Tb, s = n.decode || Tb, i = A2(e), a = i.set;
  i.set = (u) => {
    typeof u > "u" ? delete na[t] : na[t] = r(u), a(u);
  };
  function o(u) {
    u.key === t ? u.newValue === null ? a(void 0) : a(s(u.newValue)) : na[t] || a(void 0);
  }
  function l() {
    i.set(na[t] ? s(na[t]) : e);
  }
  return o8(i, () => {
    if (l(), n.listen !== !1)
      return Yf.addEventListener(t, o, l), () => {
        Yf.removeEventListener(t, o, l);
      };
  }), i;
}
const $$ = [
  //   lineNumbers(),
  //   highlightActiveLineGutter(),
  ES(),
  EA(),
  // foldGutter(),
  // drawSelection(),
  JM(),
  // EditorState.allowMultipleSelections.of(true),
  // indentOnInput(),
  // syntaxHighlighting(defaultHighlightStyle, { fallback: true }),
  // autocompletion(),
  g7(),
  O7(),
  // highlightActiveLine(),
  // highlightSelectionMatches(),
  Ws.of([
    ...AQ,
    ...Tm,
    // ...searchKeymap,
    ...TA
    // ...foldKeymap,
    // ...completionKeymap,
  ])
];
[
  ES(),
  EA(),
  SS(),
  Om(oA, { fallback: !0 }),
  Ws.of([...Tm, ...TA])
];
const oa = {
  isLineWrappingEnabled: (t) => t ? ye.lineWrapping : [],
  isBracketMatchingEnabled: (t) => t ? QT({ brackets: "()[]{}<>" }) : [],
  isBracketClosingEnabled: (t) => t ? kQ() : [],
  isLineNumbersDisplayed: (t) => t ? _7() : [],
  theme: f3,
  isAutoCompletionEnabled: D_,
  isTooltipEnabled: B_,
  isPatternHighlightingEnabled: P5,
  isActiveLineHighlighted: (t) => t ? [u7(), $7()] : [],
  isFlashEnabled: C5,
  keybindings: aZ,
  isTabIndentationEnabled: (t) => t ? Ws.of([bj]) : [],
  isMultiCursorEnabled: (t) => t ? [
    ft.allowMultipleSelections.of(!0),
    ye.clickAddsSelectionRange.of((e) => e.metaKey || e.ctrlKey)
  ] : []
}, Hf = Object.fromEntries(Object.keys(oa).map((t) => [t, new al()])), C3 = {
  keybindings: "codemirror",
  isBracketMatchingEnabled: !1,
  isBracketClosingEnabled: !0,
  isLineNumbersDisplayed: !0,
  isActiveLineHighlighted: !1,
  isAutoCompletionEnabled: !1,
  isPatternHighlightingEnabled: !0,
  isFlashEnabled: !0,
  isTooltipEnabled: !1,
  isLineWrappingEnabled: !1,
  isTabIndentationEnabled: !1,
  isMultiCursorEnabled: !1,
  theme: "strudelTheme",
  fontFamily: "monospace",
  fontSize: 18
}, va = Z$("codemirror-settings", C3, {
  encode: JSON.stringify,
  decode: JSON.parse
});
function S3({ initialCode: t = "", onChange: e, onEvaluate: n, onStop: r, root: s, mondo: i }) {
  const a = va.get(), o = Object.keys(Hf).map(
    (u) => Hf[u].of(oa[u](P3(a[u])))
  );
  m3(a.theme);
  let l = ft.create({
    doc: t,
    extensions: [
      /* search(),
      highlightSelectionMatches(), */
      ...o,
      $$,
      i ? [] : p_(),
      ai.data.of({
        closeBrackets: { brackets: ["(", "[", "{", "'", '"', "<"] },
        bracketMatching: { brackets: ["(", "[", "{", "'", '"', "<"] }
      }),
      y3,
      k3,
      // indentOnInput(), // works without. already brought with javascript extension?
      // bracketMatching(), // does not do anything
      Om(oA),
      ye.updateListener.of((u) => e(u)),
      SS({ cursorBlinkRate: 0 }),
      lr.highest(
        Ws.of([
          {
            key: "Ctrl-Enter",
            run: () => n?.()
          },
          {
            key: "Alt-Enter",
            run: () => n?.()
          },
          {
            key: "Ctrl-.",
            run: () => r?.()
          },
          {
            key: "Alt-.",
            preventDefault: !0,
            run: () => r?.()
          }
          /* {
            key: 'Ctrl-Shift-.',
            run: () => (onPanic ? onPanic() : onStop?.()),
          },
          {
            key: 'Ctrl-Shift-Enter',
            run: () => (onReEvaluate ? onReEvaluate() : onEvaluate?.()),
          }, */
        ])
      )
    ]
  });
  return new ye({
    state: l,
    parent: s
  });
}
class A3 {
  constructor(e) {
    const {
      root: n,
      id: r,
      initialCode: s = "",
      onDraw: i,
      drawContext: a,
      drawTime: o = [0, 0],
      autodraw: l,
      prebake: u,
      bgFill: h = !0,
      solo: f = !0,
      ...m
    } = e;
    this.code = s, this.root = n, this.miniLocations = [], this.widgets = [], this.drawTime = o, this.drawContext = a, this.onDraw = i || this.draw, this.id = r || L$(), this.solo = f, this.drawer = new W9((C, S, B, $) => {
      const W = C.filter((_) => _.isActive(S));
      this.highlight(W, S), this.onDraw(C, S, $);
    }, o), this.prebaked = u(), l && this.drawFirstFrame(), this.repl = xk({
      ...m,
      id: r,
      onToggle: (C) => {
        m?.onToggle?.(C), C ? (this.drawer.start(this.repl.scheduler), this.solo && document.dispatchEvent(
          new CustomEvent("start-repl", {
            detail: this.id
          })
        )) : (this.drawer.stop(), xu(this.editor, []), Km(!0, r));
      },
      beforeEval: async () => {
        Km(!0, r), await this.prebaked, await m?.beforeEval?.();
      },
      afterEval: (C) => {
        this.miniLocations = C.meta?.miniLocations, this.widgets = C.meta?.widgets;
        const S = this.widgets.filter((W) => W.type === "slider");
        b3(this.editor, S);
        const B = this.widgets.filter((W) => W.type !== "slider");
        O3(this.editor, B), xu(this.editor, this.miniLocations), m?.afterEval?.(C);
        const $ = C.pattern.getPainters().length ? this.drawTime : [0, 0];
        this.drawer.setDrawTime($), this.drawer.invalidate(this.repl.scheduler);
      }
    }), this.editor = S3({
      root: n,
      initialCode: s,
      onChange: (C) => {
        C.docChanged && (this.code = C.state.doc.toString(), this.repl.setCode?.(this.code));
      },
      onEvaluate: () => this.evaluate(),
      onStop: () => this.stop(),
      mondo: m.mondo
    });
    const b = this.root.querySelector(".cm-editor");
    b && (this.root.style.display = "block", h && (this.root.style.backgroundColor = "var(--background)"), b.style.backgroundColor = "transparent");
    const v = va.get();
    this.setFontSize(v.fontSize), this.setFontFamily(v.fontFamily), this.onStartRepl = (C) => {
      this.solo && C.detail !== this.id && this.stop();
    }, document.addEventListener("start-repl", this.onStartRepl);
  }
  draw(e, n, r) {
    r?.forEach((s) => s(this.drawContext, n, e, this.drawTime));
  }
  async drawFirstFrame() {
    if (this.onDraw) {
      await this.prebaked;
      try {
        await this.repl.evaluate(this.code, !1), this.drawer.invalidate(this.repl.scheduler, -1e-3), this.onDraw?.(this.drawer.visibleHaps, -1e-3, this.drawer.painters);
      } catch {
        console.warn("first frame could not be painted");
      }
    }
  }
  async evaluate() {
    this.flash(), await this.repl.evaluate(this.code);
  }
  async stop() {
    this.repl.scheduler.stop();
  }
  async toggle() {
    this.repl.scheduler.started ? this.repl.stop() : this.evaluate();
  }
  flash(e) {
    k5(this.editor, e);
  }
  highlight(e, n) {
    S5(this.editor, n, e);
  }
  setFontSize(e) {
    this.root.style.fontSize = e + "px";
  }
  setFontFamily(e) {
    this.root.style.fontFamily = e;
    const n = this.root.querySelector(".cm-scroller");
    n && (n.style.fontFamily = e);
  }
  reconfigureExtension(e, n) {
    if (!oa[e]) {
      console.warn(`extension ${e} is not known`);
      return;
    }
    n = P3(n);
    const r = oa[e](n, this);
    this.editor.dispatch({
      effects: Hf[e].reconfigure(r)
    }), e === "theme" && Xm(n);
  }
  setLineWrappingEnabled(e) {
    this.reconfigureExtension("isLineWrappingEnabled", e);
  }
  setBracketMatchingEnabled(e) {
    this.reconfigureExtension("isBracketMatchingEnabled", e);
  }
  setLineNumbersDisplayed(e) {
    this.reconfigureExtension("isLineNumbersDisplayed", e);
  }
  setBracketClosingEnabled(e) {
    this.reconfigureExtension("isBracketClosingEnabled", e);
  }
  setTheme(e) {
    this.reconfigureExtension("theme", e);
  }
  setAutocompletionEnabled(e) {
    this.reconfigureExtension("isAutoCompletionEnabled", e);
  }
  updateSettings(e) {
    this.setFontSize(e.fontSize), this.setFontFamily(e.fontFamily);
    for (let r in oa)
      this.reconfigureExtension(r, e[r]);
    const n = { ...va.get(), ...e };
    va.set(n);
  }
  changeSetting(e, n) {
    if (oa[e]) {
      this.reconfigureExtension(e, n);
      return;
    } else e === "fontFamily" ? this.setFontFamily(n) : e === "fontSize" && this.setFontSize(n);
  }
  setCode(e) {
    const n = { from: 0, to: this.editor.state.doc.length, insert: e };
    this.editor.dispatch({ changes: n });
  }
  clear() {
    this.onStartRepl && document.removeEventListener("start-repl", this.onStartRepl);
  }
  getCursorLocation() {
    return this.editor.state.selection.main.head;
  }
  setCursorLocation(e) {
    return this.editor.dispatch({ selection: { anchor: e } });
  }
  appendCode(e) {
    const n = this.getCursorLocation();
    this.setCode(this.code + e), this.setCursorLocation(n);
  }
}
function P3(t) {
  return { true: !0, false: !1 }[t] ?? t;
}
function L$() {
  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
}
const I$ = X("markcss"), N$ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BlockWidget: w3,
  SliderWidget: g3,
  StrudelMirror: A3,
  activateTheme: Xm,
  addWidget: Um,
  codemirrorSettings: va,
  defaultSettings: C3,
  flash: k5,
  flashField: w5,
  highlightExtension: A5,
  highlightMiniLocations: S5,
  initEditor: S3,
  initTheme: m3,
  injectStyle: d3,
  isFlashEnabled: C5,
  isPatternHighlightingEnabled: P5,
  markcss: I$,
  registerWidget: Wi,
  setFlash: vu,
  setMiniLocations: jm,
  setSliderWidgets: Wm,
  setWidget: x3,
  settings: Cc,
  showMiniLocations: _m,
  slider: M$,
  sliderPlugin: y3,
  sliderValues: Oa,
  sliderWithID: T$,
  theme: f3,
  themeColors: P$,
  themes: zf,
  toggleBlockComment: Pm,
  toggleBlockCommentByLine: SA,
  toggleComment: Yu,
  toggleLineComment: CA,
  updateMiniLocations: xu,
  updateSliderWidgets: b3,
  updateWidgets: O3,
  widgetPlugin: k3
}, Symbol.toStringTag, { value: "Module" }));
async function V$() {
  const t = Pd(
    // import('@strudel/core'),
    kk,
    import("./index-BlL7NNdw.js"),
    Promise.resolve().then(() => iB),
    import("./index-Dey5jBuS.js"),
    Promise.resolve().then(() => U8),
    Promise.resolve().then(() => N$),
    import("./hydra-DKOnazUo.js"),
    import("./index-A_ER2EO_.js"),
    import("./index-CGsTjduW.js")
    // import('@strudel/xen'),
    // import('@strudel/serial'),
    // import('@strudel/csound'),
    // import('@strudel/osc'),
  ), e = "https://raw.githubusercontent.com/felixroos/dough-samples/main/", n = "https://raw.githubusercontent.com/todepond/samples/main/";
  await Promise.all([
    t,
    z2(),
    J2(),
    //registerSoundfonts(),
    // need dynamic import here, because importing @strudel/soundfonts fails on server:
    // => getting "window is not defined", as soon as "@strudel/soundfonts" is imported statically
    // seems to be a problem with soundfont2
    import("./index-A_ER2EO_.js").then(({ registerSoundfonts: r }) => r()),
    Hs(`${e}/tidal-drum-machines.json`),
    Hs(`${e}/piano.json`),
    Hs(`${e}/Dirt-Samples.json`),
    Hs(`${e}/uzu-drumkit.json`),
    Hs(`${e}/vcsl.json`),
    Hs(`${e}/mridangam.json`)
  ]), I2(`${n}/tidal-drum-machines-alias.json`);
}
const X$ = Xi("C8"), W$ = (t, e) => t * e + (1 - e) / 2;
me.prototype.piano = function() {
  return this.fmap((t) => ({ ...t, clip: t.clip ?? 1 })).s("piano").release(0.1).fmap((t) => {
    const e = jb(t), n = W$(Math.min(Math.round(e) / X$, 1), 0.5);
    return { ...t, pan: (t.pan || 1) * n };
  });
};
if (typeof HTMLElement < "u") {
  class t extends HTMLElement {
    static observedAttributes = ["code"];
    settings = va.get();
    editor = null;
    sync = !1;
    solo = !0;
    constructor() {
      super();
    }
    attributeChangedCallback(n, r, s) {
      n === "code" && (this.code = s, this.editor?.setCode(s));
    }
    connectedCallback() {
      setTimeout(() => {
        const i = (this.innerHTML + "").replace("<!--", "").replace("-->", "").trim();
        i && this.setAttribute("code", i);
      });
      const n = document.createElement("div");
      this.parentElement.insertBefore(n, this.nextSibling);
      const r = Is(), s = [-2, 2];
      this.editor = new A3({
        defaultOutput: zd,
        getTime: () => ot().currentTime,
        transpiler: D4,
        root: n,
        initialCode: "// LOADING",
        pattern: Pt,
        drawTime: s,
        drawContext: r,
        prebake: V$,
        onUpdateState: (i) => {
          const a = new CustomEvent("update", {
            detail: i
          });
          this.dispatchEvent(a);
        },
        solo: this.solo,
        sync: this.sync
      }), this.editor.updateSettings(this.settings), this.editor.setCode(this.code);
    }
    // Element functionality written in here
  }
  customElements.define("strudel-editor", t);
}
export {
  Ln as A,
  md as B,
  Xi as C,
  W9 as D,
  rP as E,
  X9 as F,
  ky as G,
  Fs as H,
  ps as I,
  aP as J,
  ot as K,
  hs as L,
  To as M,
  Mo as N,
  td as O,
  me as P,
  oP as Q,
  Ko as R,
  re as S,
  Au as T,
  dn as U,
  Pt as V,
  aL as W,
  qB as X,
  Wt as Y,
  V$ as Z,
  Dd as _,
  H$ as a,
  tL as b,
  Km as c,
  q$ as d,
  js as e,
  J$ as f,
  Is as g,
  Y$ as h,
  U9 as i,
  Pk as j,
  q9 as k,
  iL as l,
  nL as m,
  H9 as n,
  fd as o,
  sL as p,
  gx as q,
  K$ as r,
  eL as s,
  be as t,
  Fp as u,
  Eu as v,
  z$ as w,
  Ak as x,
  G$ as y,
  rL as z
};
